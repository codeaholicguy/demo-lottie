{"version":3,"sources":["webpack:///component---src-pages-index-js-f94f25c95891da2962dd.js","webpack:///./~/create-react-class/factory.js","webpack:///./~/hoist-non-react-statics/index.js","webpack:///./~/lottie-web/build/player/lottie.js","webpack:///./~/object-assign/index.js","webpack:///./src/pages/index.js","webpack:///./src/static/animation.json"],"names":["webpackJsonp","96","module","exports","__webpack_require__","identity","fn","factory","ReactComponent","isValidElement","ReactNoopUpdateQueue","validateMethodOverride","isAlreadyDefined","name","specPolicy","ReactClassInterface","hasOwnProperty","ReactClassMixin","_invariant","mixSpecIntoComponent","Constructor","spec","proto","prototype","autoBindPairs","__reactAutoBindPairs","MIXINS_KEY","RESERVED_SPEC_KEYS","mixins","property","isReactClassMethod","isFunction","shouldAutoBind","autobind","push","createMergedResultFunction","createChainedFunction","mixStaticSpecIntoComponent","statics","isReserved","ReactClassStaticInterface","mergeIntoWithNoDuplicateKeys","one","two","key","undefined","a","apply","this","arguments","b","c","bindAutoBindMethod","component","method","boundMethod","bind","bindAutoBindMethods","pairs","i","length","autoBindKey","createClass","props","context","updater","refs","emptyObject","state","initialState","getInitialState","Array","isArray","displayName","ReactClassComponent","constructor","injectedMixins","forEach","IsMountedPreMixin","IsMountedPostMixin","getDefaultProps","defaultProps","render","methodName","propTypes","contextTypes","childContextTypes","getChildContext","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","updateComponent","getDerivedStateFromProps","_assign","__isMounted","replaceState","newState","callback","enqueueReplaceState","isMounted","ReactPropTypeLocationNames","158","global","REACT_STATICS","type","KNOWN_STATICS","caller","callee","arity","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","descriptor","e","320","__WEBPACK_AMD_DEFINE_RESULT__","root","call","window","ProjectInterface","roundValues","flag","bm_rnd","Math","round","val","styleDiv","element","style","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","n","t","d","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","randomString","chars","result","random","HSVtoRGB","h","s","v","r","g","p","q","floor","RGBtoHSV","max","min","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","BaseEvent","createSizedArray","len","createNS","document","createElementNS","svgNS","createTag","createElement","addDynamicProperty","prop","dynamicProperties","indexOf","container","extendPrototype","sources","destination","sourcePrototype","attr","getDescriptor","object","createProxyFunction","ProxyFunction","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","sqrt","pow","dist2","dist3","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","newElement","closed","pathV","pathO","o","pathI","_length","lengths","totalLength","getBezierLength","addedLength","BezierData","segmentLength","points","PointData","partial","point","partialLength","getDistancePerc","perc","bezierData","percents","initPos","bm_floor","lengthPos","lPerc","dir","getPointInSegment","pt1","pt2","pt3","pt4","percent","t1","u1","ptX","ptY","getNewSegment","startPerc","endPerc","t0","u0","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","bezier_segment_points","k","ptCoord","ptDistance","curveSegments","defaultCurveSegments","lastPoint","lengthData","bezier_length_pool","bm_pow","bm_sqrt","buildBezierData","storedData","keyData","to","ti","bezierName","replace","createTypedArray","dataFunctionManager","completeLayers","layers","comps","fontManager","layerData","animArray","lastFrame","j","jLen","kLen","completed","tt","td","hasMask","maskProps","masksProperties","pt","convertPathsToAbsoluteValues","ty","findCompLayers","refId","completeShapes","shapes","completeText","id","__used","JSON","parse","stringify","arr","hasPaths","ks","it","path","checkVersion","minimum","animVersionString","animVersion","split","completeData","animationData","__complete","checkColors","checkText","checkChars","checkShapes","assets","data","singleShape","updateTextLayer","textLayer","documentData","iterateLayers","minimumVersion","pathData","paths","__converted","iterateShapes","cl","moduleOb","ShapePath","_maxLength","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","DashProperty","elem","renderer","frameId","dataProps","_mdf","dashStr","dashArray","dashoffset","PropertyFactory","getProp","getValue","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","TextAnimatorProperty","textData","renderType","_isFirstFrame","_hasMaskedPath","_frameId","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","propType","textAnimator_animatables","degToRads","rx","ry","sk","sa","sw","sc","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","m","TextProperty","initialDefaultFrame","pv","kf","keysIndex","canResize","minimumFontSize","currentData","ascent","boxWidth","fStyle","fWeight","justifyOffset","l","lh","lineWidths","ls","of","tr","sz","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","searchProperty","BaseRenderer","SVGRenderer","animationItem","config","renderedFrame","svgElement","maskElement","appendChild","layerElement","defs","renderConfig","preserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","className","globalData","frameNum","compSize","w","FontManager","elements","pendingElements","destroyed","MaskElement","viewData","solidPath","rect","expansor","feMorph","x","properties","count","currentMasks","layerId","maskType","maskRef","mode","inv","setAttribute","comp","filterID","expan","lastPath","lastOperator","filterId","lastRadius","mask","locationHref","createLayerSolidPath","op","ShapePropertyFactory","getShapeProp","invRect","drawPath","maskedElement","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","pos","SVGStyleData","level","lvl","pElem","msElem","SVGShapeData","transformers","shape","caches","styles","lStr","sh","SVGTransformData","mProps","transform","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","BaseElement","NullElement","initFrame","initBaseData","initTransform","initHierarchy","SVGBaseElement","IShapeElement","ITextElement","ICompElement","IImageElement","assetData","getAssetData","initElement","ISolidElement","SVGCompElement","supports3d","tm","frameRate","_placeholder","SVGTextElement","textSpans","SVGShapeElement","shapesData","stylesList","shapeModifiers","itemsData","processedElements","SVGTintFilter","filter","filterManager","feColorMatrix","matrixFilter","effectElements","feMerge","feMergeNode","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","SVGMatte3Effect","filterElem","matteElement","transformedElement","baseElement","SVGEffects","ef","filId","fil","filtersFactory","createFilter","filters","effectsManager","EffectsManager","CanvasRenderer","clearCanvas","dpr","wrapper","devicePixelRatio","contextData","CVContextData","transformMat","Matrix","HybridRenderer","threeDElements","camera","saved","cArrPos","cTr","cO","savedOp","CVBaseElement","CVImageElement","failed","img","Image","addPendingElement","CVCompElement","CVMaskElement","hasMasks","CVShapeElement","CVSolidElement","CVTextElement","stroke","fill","currentRender","values","sWidth","fValue","CVEffects","HBaseElement","HSolidElement","HCompElement","HShapeElement","shapesContainer","currentBBox","y","HTextElement","textPaths","isMasked","HImageElement","HCameraElement","pe","px","py","pz","z","or","rz","mat","_prevMat","HEffects","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","effects","effectItem","GroupEffect","init","setLocationHref","href","play","animation","animationManager","pause","togglePause","setSpeed","value","setDirection","stop","searchAnimations","standalone","registerAnimation","resize","goToAndStop","isFrame","setSubframeRendering","subframeEnabled","loadAnimation","params","destroy","setQuality","isNaN","inBrowser","navigator","installPlugin","plugin","expressionsPlugin","getFactory","checkReady","readyState","clearInterval","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","isSafari","test","userAgent","cachedColors","bm_rounder","bm_abs","abs","bm_max","bm_min","blitter","BMMath","propertyNames","tOfVal","absArr","PI","roundCorner","rgbToHex","hex","colorMap","toString","triggerEvent","eventName","args","_cbs","addEventListener","removeEventListener","splice","createRegularArray","Float32Array","Int16Array","Uint8ClampedArray","reset","rotate","angle","mCos","_cos","mSin","_sin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","_tan","skewFromAxis","scale","setTransform","translate","tx","tz","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","applyToX","applyToY","applyToZ","inversePoint","determinant","inversePoints","pts","retPts","applyToTriplePoints","p0","p4","p5","p12","p13","applyToPointArray","applyToPointStringified","toCSS","cssValue","_rnd","to2dCSS","cos","sin","tan","pool","math","seedrandom","seed","options","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","chunks","startdenom","significance","width","overflow","int32","quick","double","S","pass","is_math_call","copy","rngname","keylen","me","slice","obj","depth","typ","smear","stringseed","charCodeAt","nodecrypto","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","String","fromCharCode","digits","BezierFactory","getBezierEasing","nm","str","beziers","bezEasing","BezierEasing","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","_mSampleValues","float32ArraySupported","kSplineTableSize","_precomputed","get","ob","NEWTON_MIN_SLOPE","kSampleStepSize","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","setTimeout","clearTimeout","bez","dataManager","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","body","offsetWidth","parent","checkLoadedFonts","fonts","loadedCount","loaded","fOrigin","origin","Typekit","load","typekitLoaded","async","active","monoCase","sansCase","removeChild","now","initTime","maxWaitingTime","createHelper","def","fontData","tHelper","fFamily","textContent","fClass","tCanvasHelper","getContext","addFonts","list","fontArr","fPath","rel","helper","addChars","found","ch","getCharData","char","console","warn","emptyChar","measureText","fontName","size","getFontByName","fName","getCombinedCharacterCodes","combinedCharacters","Font","interpolateValue","caching","newValue","offsetTime","nextKeyData","iterationIndex","lastIndex","keyframes","fnc","ind","_lastBezierData","__fnct","segmentPerc","distanceInLine","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","quatStart","createQuaternion","quatEnd","time","quaternionToEuler","slerp","omega","cosom","sinom","scale0","scale1","az","aw","bx","by","bz","bw","acos","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","c3","s1","s2","s3","getValueAtCurrentTime","endTime","_caching","renderResult","setVValue","multipliedValue","mult","processEffectsSequence","effectsSequence","lock","finalValue","addEffect","effectFunction","ValueProperty","vel","MultiDimensionalProperty","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","arrLen","TransformPropertyFactory","searchDynamicProperties","applyToMatrix","processKeys","forceRender","autoOriented","getValueAtTime","v1","v2","setInverted","inverted","iv","autoOrient","TransformProperty","getTransformProperty","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","cnt","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","getShapeValue","resetShape","localShapeCollection","shapesEqual","shape1","shape2","shape_pool","releaseShapes","addShape","ShapeProperty","shapeCollection_pool","newShapeCollection","KeyframedShapeProperty","dataProp","RectShapeProperty","EllShapeProperty","StarShapeProperty","getConstructorFunction","getKeyframedConstructorFunction","convertEllToPath","cPoint","s0","_cw","_v","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","os","rad","roundness","perimSegment","numPts","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","convertRectToPath","v0","ShapeModifiers","registerModifier","modifiers","getModifier","initModifierProperties","addShapeToModifier","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","_s","shapePaths","totalShapeLength","edges","newShapesData","addShapes","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","index","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","cont","unshift","resetElements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","comparePoints","diff","ImagePreloader","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","getAssetsPath","assetsPath","imagePath","u","loadImage","src","loadAssets","cb","totalAssets","setPath","setAssetsPath","featureSupport","createAlphaToLuminanceFilter","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","lineLength","letterM","letterP","defaultPropsArray","animatorJustifyOffset","animatorFirstCharOffset","justifyOffsetMult","isNewLine","getMult","anIndexes","totalChars","line","extra","an","animatorOffset","add","rot","atan","update","updated","setCurrentData","_forceRender","textDocumentData","textKeys","completeTextData","buildFinalText","text","charactersArray","charAt","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styleName","toLowerCase","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","finalS","finalE","xe","ne","easer","tot","newCharsFlag","textProperty","divisor","pool_factory","initialLength","_create","_release","_clone","pooling","create","cloned","shapeCollection","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","Error","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","searchExtraCompositions","xt","initExpressions","registerComposition","configAnimation","animData","height","fr","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","insertBefore","hide","show","finalMat","finalTransform","mProp","getMaskelement","pathNodes","pathString","pathShapeValue","_isParent","prepareProperties","isVisible","_matMdf","_opMdf","ao","renderTransform","globalToLocal","transforms","ptNew","initRenderable","isInRange","hidden","isTransparent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","renderableEffectsManager","sourceRectAtTime","getLayerSize","_prototype","initRendererElement","createContainerElements","addMasks","createContent","hd","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","opFill","ms","ost","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","content","textInterface","TextExpressionInterface","blendModeEnums","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","getBlendMode","bm","setBlendMode","blendModeValue","sr","getType","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","alphaRect","ln","cp","clipId","cpGroup","addShapeToModifiers","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","buildShapeString","shapeString","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","usesGlyphs","tSpan","cachedSpansLength","tElement","justify","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","createStyleElement","elementData","gradientConstructor","lc","lj","ml","createGroupElement","createTransformElement","createShapeElement","ownTransformers","shapeProperty","setElementStyles","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","renderFill","renderGradient","renderStroke","renderPath","itemData","pathStringTransformed","redraw","iterations","lLen","styleData","styleElem","hasOpacity","attr1","attr2","cValues","oValues","ang","colorBlack","colorWhite","opacity","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","units","color1","color2","color3","tableR","tableG","tableB","feFunc","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","join","col","_svgMatteSymbols","_svgMatteMaskCounter","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","removeElement","ev","animItem","registeredAnimations","isPaused","subtractPlayingCount","AnimationItem","setupAnimation","setData","addPlayingCount","playingAnimationsNum","activate","idled","setParams","resume","nowTime","elapsedTime","advanceTime","_stopped","first","animElements","getElementsByClassName","getElementsByTagName","div","isLoaded","currentRawFrame","frameMult","playSpeed","playDirection","playCount","autoplay","loop","animationID","timeCompleted","segmentPos","_idle","self","animType","rendererSettings","parseInt","autoloadSegments","substr","xhr","XMLHttpRequest","lastIndexOf","fileName","open","send","onreadystatechange","status","responseText","response","err","wrapperAttributes","attributes","getNamedItem","prerender","tf","loadNextSegment","trigger","shift","segmentPath","loadSegments","_this","imagePreloader","updaFrameModifier","waitForFontsLoaded","checkLoaded","checkFontsLoaded","elementLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","remove","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getAssets","ctxTransform","canvasContext","cProps","trProps","ctxOpacity","globalAlpha","restore","save","actionFlag","duplicate","blendMode","popped","mozTransformOrigin","isDashed","compWidth","compHeight","transformCanvas","elementWidth","elementHeight","offsetHeight","canvas","elementRel","animationRel","par","fillType","beginPath","closePath","clip","clearRect","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","tmpDOMElement","getThreeDContainerByPos","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","resizerElem","threeDContainerData","build3dContainers","lastThreeDContainerData","svg","setup","cWidth","cHeight","perspective","webkitPerspective","floatingContainer","newLength","currentSavedOp","set","createElements","globalCompositeOperation","hideElement","showElement","widthCrop","heightCrop","ctx","imgW","imgH","imgRel","canvasRel","drawImage","imageFailed","parentMatrix","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","co","wi","da","do","nodes","trNodes","hasStrokes","hasFills","fl","ownArrays","renderShapeTransform","parentTransform","groupTransform","groupMatrix","drawLayer","currentStyle","coOp","strokeStyle","lineCap","lineJoin","miterLimit","fillStyle","setLineDash","lineDashOffset","isMain","groupTransformMat","fillRect","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","checkBlendMode","tg","backgroundColor","_createBaseContainerElements","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","item","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","changed","compW","compH","innerElemStyle","strokeWidth","lineHeight","tParent","tCont","textPath","margin","imageElem","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","m_rotationX","m_rotationY","Expressions","ExpressionManager","duplicatePropertyValue","Number","isTypeOfArray","$bm_neg","tOfA","lenA","retArr","sum","tOfB","lenB","sub","mul","mod","clamp","mm","radiansToDegrees","degreesToRadians","arr1","arr2","helperLengthArray","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","rnd","rndm","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","loopInDuration","duration","loopIn","loopOutDuration","loopOut","lookAt","elem1","elem2","fVec","pitch","yaw","easeOut","val1","val2","easeIn","nearestKey","keyTime","framesToTime","frames","fps","timeToFrames","seedRandom","randSeed","executeExpression","_value","_needsRandom","frameExpressionId","textIndex","textTotal","selectorValue","thisLayer","thisComp","toWorld","fromWorld","fromComp","fromCompToSurface","anchorPoint","elemType","effect","hasParent","needsVelocity","velocity","velocityAtTime","expression_function","scoped_bm_rt","thisProperty","frameDuration","inPoint","outPoint","loop_in","loop_out","valueAtTime","eval","numKeys","wiggle","freq","amp","addedAmps","periods","getVelocityAtTime","radians_to_degrees","degrees_to_radians","getStaticValueAtTime","durationFlag","lastKeyFrame","cycleDuration","firstKeyFrame","ret","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","_cachingAtTime","delta","setGroupProperty","propertyGroup","searchExpressions","getTransformValueAtTime","getTransformStaticValueAtTime","getShapeValueAtTime","shapeValue","ShapeExpressions","TextExpressionSelectorProp","getValueProxy","total","propertyGetProp","propertyIndex","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","unitVector","tangentOnPath","normalOnPath","propertyGetShapeProp","trims","propertyGetTextProp","getPreValue","calculateExpression","getExpressionValue","iterateElements","view","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","pathInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","contentsInterfaceFactory","interfaces","interfaceFunction","_name","mn","numProperties","cix","transformInterface","transformInterfaceFactory","np","defineProperties","ExpressionValue","_propertyGroup","_dashPropertyGroup","dashOb","addPropertyToDashOb","dash","start","rotation","skewAxis","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","_thisLayerFunction","_prevValue","_sourceText","stringValue","toWorldMat","_registerMaskInterface","MaskManagerInterface","_registerEffectsInterface","toComp","TransformExpressionInterface","anchorPointDescriptor","anchor_point","startTime","source","pixelAspect","_thisFunction","xRotation","yRotation","xPosition","yPosition","zPosition","compositions","_thisProjectFunction","effectsData","createGroupInterface","groupInterface","createValueInterface","en","MaskInterface","_mask","_data","MaskManager","_masksInterfaces","maskFunction","elementProp","expressionValue","arrValue","eff","lottiejs","__getFactory","version","scripts","myScript","setInterval","toObject","TypeError","shouldUseNative","assign","test1","test2","order2","map","test3","letter","propIsEnumerable","propertyIsEnumerable","from","symbols","202","_interopRequireDefault","__esModule","default","_classCallCheck","instance","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_gatsbyLink","_lottieWeb","_lottieWeb2","_animation","_animation2","IndexPage","_React$Component","_click","setState","_el","_this2","cursor","onClick","ref","el","Component","319"],"mappings":"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","file":"component---src-pages-index-js-f94f25c95891da2962dd.js","sourcesContent":["webpackJsonp([35783957827783],{\n\n/***/ 96:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar emptyObject = __webpack_require__(34);\n\tvar _invariant = __webpack_require__(1);\n\t\n\tif (false) {\n\t  var warning = require('fbjs/lib/warning');\n\t}\n\t\n\tvar MIXINS_KEY = 'mixins';\n\t\n\t// Helper function to allow the creation of anonymous functions which do not\n\t// have .name set to the name of the variable being assigned to.\n\tfunction identity(fn) {\n\t  return fn;\n\t}\n\t\n\tvar ReactPropTypeLocationNames;\n\tif (false) {\n\t  ReactPropTypeLocationNames = {\n\t    prop: 'prop',\n\t    context: 'context',\n\t    childContext: 'child context'\n\t  };\n\t} else {\n\t  ReactPropTypeLocationNames = {};\n\t}\n\t\n\tfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n\t  /**\n\t   * Policies that describe methods in `ReactClassInterface`.\n\t   */\n\t\n\t  var injectedMixins = [];\n\t\n\t  /**\n\t   * Composite components are higher-level components that compose other composite\n\t   * or host components.\n\t   *\n\t   * To create a new type of `ReactClass`, pass a specification of\n\t   * your new class to `React.createClass`. The only requirement of your class\n\t   * specification is that you implement a `render` method.\n\t   *\n\t   *   var MyComponent = React.createClass({\n\t   *     render: function() {\n\t   *       return <div>Hello World</div>;\n\t   *     }\n\t   *   });\n\t   *\n\t   * The class specification supports a specific protocol of methods that have\n\t   * special meaning (e.g. `render`). See `ReactClassInterface` for\n\t   * more the comprehensive protocol. Any other properties and methods in the\n\t   * class specification will be available on the prototype.\n\t   *\n\t   * @interface ReactClassInterface\n\t   * @internal\n\t   */\n\t  var ReactClassInterface = {\n\t    /**\n\t     * An array of Mixin objects to include when defining your component.\n\t     *\n\t     * @type {array}\n\t     * @optional\n\t     */\n\t    mixins: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * An object containing properties and methods that should be defined on\n\t     * the component's constructor instead of its prototype (static methods).\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    statics: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Definition of prop types for this component.\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    propTypes: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Definition of context types for this component.\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    contextTypes: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Definition of context types this component sets for its children.\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    childContextTypes: 'DEFINE_MANY',\n\t\n\t    // ==== Definition methods ====\n\t\n\t    /**\n\t     * Invoked when the component is mounted. Values in the mapping will be set on\n\t     * `this.props` if that prop is not specified (i.e. using an `in` check).\n\t     *\n\t     * This method is invoked before `getInitialState` and therefore cannot rely\n\t     * on `this.state` or use `this.setState`.\n\t     *\n\t     * @return {object}\n\t     * @optional\n\t     */\n\t    getDefaultProps: 'DEFINE_MANY_MERGED',\n\t\n\t    /**\n\t     * Invoked once before the component is mounted. The return value will be used\n\t     * as the initial value of `this.state`.\n\t     *\n\t     *   getInitialState: function() {\n\t     *     return {\n\t     *       isOn: false,\n\t     *       fooBaz: new BazFoo()\n\t     *     }\n\t     *   }\n\t     *\n\t     * @return {object}\n\t     * @optional\n\t     */\n\t    getInitialState: 'DEFINE_MANY_MERGED',\n\t\n\t    /**\n\t     * @return {object}\n\t     * @optional\n\t     */\n\t    getChildContext: 'DEFINE_MANY_MERGED',\n\t\n\t    /**\n\t     * Uses props from `this.props` and state from `this.state` to render the\n\t     * structure of the component.\n\t     *\n\t     * No guarantees are made about when or how often this method is invoked, so\n\t     * it must not have side effects.\n\t     *\n\t     *   render: function() {\n\t     *     var name = this.props.name;\n\t     *     return <div>Hello, {name}!</div>;\n\t     *   }\n\t     *\n\t     * @return {ReactComponent}\n\t     * @required\n\t     */\n\t    render: 'DEFINE_ONCE',\n\t\n\t    // ==== Delegate methods ====\n\t\n\t    /**\n\t     * Invoked when the component is initially created and about to be mounted.\n\t     * This may have side effects, but any external subscriptions or data created\n\t     * by this method must be cleaned up in `componentWillUnmount`.\n\t     *\n\t     * @optional\n\t     */\n\t    componentWillMount: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked when the component has been mounted and has a DOM representation.\n\t     * However, there is no guarantee that the DOM node is in the document.\n\t     *\n\t     * Use this as an opportunity to operate on the DOM when the component has\n\t     * been mounted (initialized and rendered) for the first time.\n\t     *\n\t     * @param {DOMElement} rootNode DOM element representing the component.\n\t     * @optional\n\t     */\n\t    componentDidMount: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked before the component receives new props.\n\t     *\n\t     * Use this as an opportunity to react to a prop transition by updating the\n\t     * state using `this.setState`. Current props are accessed via `this.props`.\n\t     *\n\t     *   componentWillReceiveProps: function(nextProps, nextContext) {\n\t     *     this.setState({\n\t     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n\t     *     });\n\t     *   }\n\t     *\n\t     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n\t     * transition may cause a state change, but the opposite is not true. If you\n\t     * need it, you are probably looking for `componentWillUpdate`.\n\t     *\n\t     * @param {object} nextProps\n\t     * @optional\n\t     */\n\t    componentWillReceiveProps: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked while deciding if the component should be updated as a result of\n\t     * receiving new props, state and/or context.\n\t     *\n\t     * Use this as an opportunity to `return false` when you're certain that the\n\t     * transition to the new props/state/context will not require a component\n\t     * update.\n\t     *\n\t     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n\t     *     return !equal(nextProps, this.props) ||\n\t     *       !equal(nextState, this.state) ||\n\t     *       !equal(nextContext, this.context);\n\t     *   }\n\t     *\n\t     * @param {object} nextProps\n\t     * @param {?object} nextState\n\t     * @param {?object} nextContext\n\t     * @return {boolean} True if the component should update.\n\t     * @optional\n\t     */\n\t    shouldComponentUpdate: 'DEFINE_ONCE',\n\t\n\t    /**\n\t     * Invoked when the component is about to update due to a transition from\n\t     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n\t     * and `nextContext`.\n\t     *\n\t     * Use this as an opportunity to perform preparation before an update occurs.\n\t     *\n\t     * NOTE: You **cannot** use `this.setState()` in this method.\n\t     *\n\t     * @param {object} nextProps\n\t     * @param {?object} nextState\n\t     * @param {?object} nextContext\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @optional\n\t     */\n\t    componentWillUpdate: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked when the component's DOM representation has been updated.\n\t     *\n\t     * Use this as an opportunity to operate on the DOM when the component has\n\t     * been updated.\n\t     *\n\t     * @param {object} prevProps\n\t     * @param {?object} prevState\n\t     * @param {?object} prevContext\n\t     * @param {DOMElement} rootNode DOM element representing the component.\n\t     * @optional\n\t     */\n\t    componentDidUpdate: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked when the component is about to be removed from its parent and have\n\t     * its DOM representation destroyed.\n\t     *\n\t     * Use this as an opportunity to deallocate any external resources.\n\t     *\n\t     * NOTE: There is no `componentDidUnmount` since your component will have been\n\t     * destroyed by that point.\n\t     *\n\t     * @optional\n\t     */\n\t    componentWillUnmount: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Replacement for (deprecated) `componentWillMount`.\n\t     *\n\t     * @optional\n\t     */\n\t    UNSAFE_componentWillMount: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Replacement for (deprecated) `componentWillReceiveProps`.\n\t     *\n\t     * @optional\n\t     */\n\t    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Replacement for (deprecated) `componentWillUpdate`.\n\t     *\n\t     * @optional\n\t     */\n\t    UNSAFE_componentWillUpdate: 'DEFINE_MANY',\n\t\n\t    // ==== Advanced methods ====\n\t\n\t    /**\n\t     * Updates the component's currently mounted DOM representation.\n\t     *\n\t     * By default, this implements React's rendering and reconciliation algorithm.\n\t     * Sophisticated clients may wish to override this.\n\t     *\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @internal\n\t     * @overridable\n\t     */\n\t    updateComponent: 'OVERRIDE_BASE'\n\t  };\n\t\n\t  /**\n\t   * Similar to ReactClassInterface but for static methods.\n\t   */\n\t  var ReactClassStaticInterface = {\n\t    /**\n\t     * This method is invoked after a component is instantiated and when it\n\t     * receives new props. Return an object to update state in response to\n\t     * prop changes. Return null to indicate no change to state.\n\t     *\n\t     * If an object is returned, its keys will be merged into the existing state.\n\t     *\n\t     * @return {object || null}\n\t     * @optional\n\t     */\n\t    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'\n\t  };\n\t\n\t  /**\n\t   * Mapping from class specification keys to special processing functions.\n\t   *\n\t   * Although these are declared like instance properties in the specification\n\t   * when defining classes using `React.createClass`, they are actually static\n\t   * and are accessible on the constructor instead of the prototype. Despite\n\t   * being static, they must be defined outside of the \"statics\" key under\n\t   * which all other static methods are defined.\n\t   */\n\t  var RESERVED_SPEC_KEYS = {\n\t    displayName: function(Constructor, displayName) {\n\t      Constructor.displayName = displayName;\n\t    },\n\t    mixins: function(Constructor, mixins) {\n\t      if (mixins) {\n\t        for (var i = 0; i < mixins.length; i++) {\n\t          mixSpecIntoComponent(Constructor, mixins[i]);\n\t        }\n\t      }\n\t    },\n\t    childContextTypes: function(Constructor, childContextTypes) {\n\t      if (false) {\n\t        validateTypeDef(Constructor, childContextTypes, 'childContext');\n\t      }\n\t      Constructor.childContextTypes = _assign(\n\t        {},\n\t        Constructor.childContextTypes,\n\t        childContextTypes\n\t      );\n\t    },\n\t    contextTypes: function(Constructor, contextTypes) {\n\t      if (false) {\n\t        validateTypeDef(Constructor, contextTypes, 'context');\n\t      }\n\t      Constructor.contextTypes = _assign(\n\t        {},\n\t        Constructor.contextTypes,\n\t        contextTypes\n\t      );\n\t    },\n\t    /**\n\t     * Special case getDefaultProps which should move into statics but requires\n\t     * automatic merging.\n\t     */\n\t    getDefaultProps: function(Constructor, getDefaultProps) {\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps = createMergedResultFunction(\n\t          Constructor.getDefaultProps,\n\t          getDefaultProps\n\t        );\n\t      } else {\n\t        Constructor.getDefaultProps = getDefaultProps;\n\t      }\n\t    },\n\t    propTypes: function(Constructor, propTypes) {\n\t      if (false) {\n\t        validateTypeDef(Constructor, propTypes, 'prop');\n\t      }\n\t      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n\t    },\n\t    statics: function(Constructor, statics) {\n\t      mixStaticSpecIntoComponent(Constructor, statics);\n\t    },\n\t    autobind: function() {}\n\t  };\n\t\n\t  function validateTypeDef(Constructor, typeDef, location) {\n\t    for (var propName in typeDef) {\n\t      if (typeDef.hasOwnProperty(propName)) {\n\t        // use a warning instead of an _invariant so components\n\t        // don't show up in prod but only in __DEV__\n\t        if (false) {\n\t          warning(\n\t            typeof typeDef[propName] === 'function',\n\t            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n\t              'React.PropTypes.',\n\t            Constructor.displayName || 'ReactClass',\n\t            ReactPropTypeLocationNames[location],\n\t            propName\n\t          );\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function validateMethodOverride(isAlreadyDefined, name) {\n\t    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n\t      ? ReactClassInterface[name]\n\t      : null;\n\t\n\t    // Disallow overriding of base class methods unless explicitly allowed.\n\t    if (ReactClassMixin.hasOwnProperty(name)) {\n\t      _invariant(\n\t        specPolicy === 'OVERRIDE_BASE',\n\t        'ReactClassInterface: You are attempting to override ' +\n\t          '`%s` from your class specification. Ensure that your method names ' +\n\t          'do not overlap with React methods.',\n\t        name\n\t      );\n\t    }\n\t\n\t    // Disallow defining methods more than once unless explicitly allowed.\n\t    if (isAlreadyDefined) {\n\t      _invariant(\n\t        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n\t        'ReactClassInterface: You are attempting to define ' +\n\t          '`%s` on your component more than once. This conflict may be due ' +\n\t          'to a mixin.',\n\t        name\n\t      );\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Mixin helper which handles policy validation and reserved\n\t   * specification keys when building React classes.\n\t   */\n\t  function mixSpecIntoComponent(Constructor, spec) {\n\t    if (!spec) {\n\t      if (false) {\n\t        var typeofSpec = typeof spec;\n\t        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\t\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          warning(\n\t            isMixinValid,\n\t            \"%s: You're attempting to include a mixin that is either null \" +\n\t              'or not an object. Check the mixins included by the component, ' +\n\t              'as well as any mixins they include themselves. ' +\n\t              'Expected object but got %s.',\n\t            Constructor.displayName || 'ReactClass',\n\t            spec === null ? null : typeofSpec\n\t          );\n\t        }\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    _invariant(\n\t      typeof spec !== 'function',\n\t      \"ReactClass: You're attempting to \" +\n\t        'use a component class or function as a mixin. Instead, just use a ' +\n\t        'regular object.'\n\t    );\n\t    _invariant(\n\t      !isValidElement(spec),\n\t      \"ReactClass: You're attempting to \" +\n\t        'use a component as a mixin. Instead, just use a regular object.'\n\t    );\n\t\n\t    var proto = Constructor.prototype;\n\t    var autoBindPairs = proto.__reactAutoBindPairs;\n\t\n\t    // By handling mixins before any other properties, we ensure the same\n\t    // chaining order is applied to methods with DEFINE_MANY policy, whether\n\t    // mixins are listed before or after these methods in the spec.\n\t    if (spec.hasOwnProperty(MIXINS_KEY)) {\n\t      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n\t    }\n\t\n\t    for (var name in spec) {\n\t      if (!spec.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t\n\t      if (name === MIXINS_KEY) {\n\t        // We have already handled mixins in a special case above.\n\t        continue;\n\t      }\n\t\n\t      var property = spec[name];\n\t      var isAlreadyDefined = proto.hasOwnProperty(name);\n\t      validateMethodOverride(isAlreadyDefined, name);\n\t\n\t      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n\t        RESERVED_SPEC_KEYS[name](Constructor, property);\n\t      } else {\n\t        // Setup methods on prototype:\n\t        // The following member methods should not be automatically bound:\n\t        // 1. Expected ReactClass methods (in the \"interface\").\n\t        // 2. Overridden methods (that were mixed in).\n\t        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n\t        var isFunction = typeof property === 'function';\n\t        var shouldAutoBind =\n\t          isFunction &&\n\t          !isReactClassMethod &&\n\t          !isAlreadyDefined &&\n\t          spec.autobind !== false;\n\t\n\t        if (shouldAutoBind) {\n\t          autoBindPairs.push(name, property);\n\t          proto[name] = property;\n\t        } else {\n\t          if (isAlreadyDefined) {\n\t            var specPolicy = ReactClassInterface[name];\n\t\n\t            // These cases should already be caught by validateMethodOverride.\n\t            _invariant(\n\t              isReactClassMethod &&\n\t                (specPolicy === 'DEFINE_MANY_MERGED' ||\n\t                  specPolicy === 'DEFINE_MANY'),\n\t              'ReactClass: Unexpected spec policy %s for key %s ' +\n\t                'when mixing in component specs.',\n\t              specPolicy,\n\t              name\n\t            );\n\t\n\t            // For methods which are defined more than once, call the existing\n\t            // methods before calling the new property, merging if appropriate.\n\t            if (specPolicy === 'DEFINE_MANY_MERGED') {\n\t              proto[name] = createMergedResultFunction(proto[name], property);\n\t            } else if (specPolicy === 'DEFINE_MANY') {\n\t              proto[name] = createChainedFunction(proto[name], property);\n\t            }\n\t          } else {\n\t            proto[name] = property;\n\t            if (false) {\n\t              // Add verbose displayName to the function, which helps when looking\n\t              // at profiling tools.\n\t              if (typeof property === 'function' && spec.displayName) {\n\t                proto[name].displayName = spec.displayName + '_' + name;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function mixStaticSpecIntoComponent(Constructor, statics) {\n\t    if (!statics) {\n\t      return;\n\t    }\n\t\n\t    for (var name in statics) {\n\t      var property = statics[name];\n\t      if (!statics.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t\n\t      var isReserved = name in RESERVED_SPEC_KEYS;\n\t      _invariant(\n\t        !isReserved,\n\t        'ReactClass: You are attempting to define a reserved ' +\n\t          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n\t          'as an instance property instead; it will still be accessible on the ' +\n\t          'constructor.',\n\t        name\n\t      );\n\t\n\t      var isAlreadyDefined = name in Constructor;\n\t      if (isAlreadyDefined) {\n\t        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)\n\t          ? ReactClassStaticInterface[name]\n\t          : null;\n\t\n\t        _invariant(\n\t          specPolicy === 'DEFINE_MANY_MERGED',\n\t          'ReactClass: You are attempting to define ' +\n\t            '`%s` on your component more than once. This conflict may be ' +\n\t            'due to a mixin.',\n\t          name\n\t        );\n\t\n\t        Constructor[name] = createMergedResultFunction(Constructor[name], property);\n\t\n\t        return;\n\t      }\n\t\n\t      Constructor[name] = property;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Merge two objects, but throw if both contain the same key.\n\t   *\n\t   * @param {object} one The first object, which is mutated.\n\t   * @param {object} two The second object\n\t   * @return {object} one after it has been mutated to contain everything in two.\n\t   */\n\t  function mergeIntoWithNoDuplicateKeys(one, two) {\n\t    _invariant(\n\t      one && two && typeof one === 'object' && typeof two === 'object',\n\t      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n\t    );\n\t\n\t    for (var key in two) {\n\t      if (two.hasOwnProperty(key)) {\n\t        _invariant(\n\t          one[key] === undefined,\n\t          'mergeIntoWithNoDuplicateKeys(): ' +\n\t            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n\t            'may be due to a mixin; in particular, this may be caused by two ' +\n\t            'getInitialState() or getDefaultProps() methods returning objects ' +\n\t            'with clashing keys.',\n\t          key\n\t        );\n\t        one[key] = two[key];\n\t      }\n\t    }\n\t    return one;\n\t  }\n\t\n\t  /**\n\t   * Creates a function that invokes two functions and merges their return values.\n\t   *\n\t   * @param {function} one Function to invoke first.\n\t   * @param {function} two Function to invoke second.\n\t   * @return {function} Function that invokes the two argument functions.\n\t   * @private\n\t   */\n\t  function createMergedResultFunction(one, two) {\n\t    return function mergedResult() {\n\t      var a = one.apply(this, arguments);\n\t      var b = two.apply(this, arguments);\n\t      if (a == null) {\n\t        return b;\n\t      } else if (b == null) {\n\t        return a;\n\t      }\n\t      var c = {};\n\t      mergeIntoWithNoDuplicateKeys(c, a);\n\t      mergeIntoWithNoDuplicateKeys(c, b);\n\t      return c;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates a function that invokes two functions and ignores their return vales.\n\t   *\n\t   * @param {function} one Function to invoke first.\n\t   * @param {function} two Function to invoke second.\n\t   * @return {function} Function that invokes the two argument functions.\n\t   * @private\n\t   */\n\t  function createChainedFunction(one, two) {\n\t    return function chainedFunction() {\n\t      one.apply(this, arguments);\n\t      two.apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Binds a method to the component.\n\t   *\n\t   * @param {object} component Component whose method is going to be bound.\n\t   * @param {function} method Method to be bound.\n\t   * @return {function} The bound method.\n\t   */\n\t  function bindAutoBindMethod(component, method) {\n\t    var boundMethod = method.bind(component);\n\t    if (false) {\n\t      boundMethod.__reactBoundContext = component;\n\t      boundMethod.__reactBoundMethod = method;\n\t      boundMethod.__reactBoundArguments = null;\n\t      var componentName = component.constructor.displayName;\n\t      var _bind = boundMethod.bind;\n\t      boundMethod.bind = function(newThis) {\n\t        for (\n\t          var _len = arguments.length,\n\t            args = Array(_len > 1 ? _len - 1 : 0),\n\t            _key = 1;\n\t          _key < _len;\n\t          _key++\n\t        ) {\n\t          args[_key - 1] = arguments[_key];\n\t        }\n\t\n\t        // User is trying to bind() an autobound method; we effectively will\n\t        // ignore the value of \"this\" that the user is trying to use, so\n\t        // let's warn.\n\t        if (newThis !== component && newThis !== null) {\n\t          if (process.env.NODE_ENV !== 'production') {\n\t            warning(\n\t              false,\n\t              'bind(): React component methods may only be bound to the ' +\n\t                'component instance. See %s',\n\t              componentName\n\t            );\n\t          }\n\t        } else if (!args.length) {\n\t          if (process.env.NODE_ENV !== 'production') {\n\t            warning(\n\t              false,\n\t              'bind(): You are binding a component method to the component. ' +\n\t                'React does this for you automatically in a high-performance ' +\n\t                'way, so you can safely remove this call. See %s',\n\t              componentName\n\t            );\n\t          }\n\t          return boundMethod;\n\t        }\n\t        var reboundMethod = _bind.apply(boundMethod, arguments);\n\t        reboundMethod.__reactBoundContext = component;\n\t        reboundMethod.__reactBoundMethod = method;\n\t        reboundMethod.__reactBoundArguments = args;\n\t        return reboundMethod;\n\t      };\n\t    }\n\t    return boundMethod;\n\t  }\n\t\n\t  /**\n\t   * Binds all auto-bound methods in a component.\n\t   *\n\t   * @param {object} component Component whose method is going to be bound.\n\t   */\n\t  function bindAutoBindMethods(component) {\n\t    var pairs = component.__reactAutoBindPairs;\n\t    for (var i = 0; i < pairs.length; i += 2) {\n\t      var autoBindKey = pairs[i];\n\t      var method = pairs[i + 1];\n\t      component[autoBindKey] = bindAutoBindMethod(component, method);\n\t    }\n\t  }\n\t\n\t  var IsMountedPreMixin = {\n\t    componentDidMount: function() {\n\t      this.__isMounted = true;\n\t    }\n\t  };\n\t\n\t  var IsMountedPostMixin = {\n\t    componentWillUnmount: function() {\n\t      this.__isMounted = false;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Add more to the ReactClass base class. These are all legacy features and\n\t   * therefore not already part of the modern ReactComponent.\n\t   */\n\t  var ReactClassMixin = {\n\t    /**\n\t     * TODO: This will be deprecated because state should always keep a consistent\n\t     * type signature and the only use case for this, is to avoid that.\n\t     */\n\t    replaceState: function(newState, callback) {\n\t      this.updater.enqueueReplaceState(this, newState, callback);\n\t    },\n\t\n\t    /**\n\t     * Checks whether or not this composite component is mounted.\n\t     * @return {boolean} True if mounted, false otherwise.\n\t     * @protected\n\t     * @final\n\t     */\n\t    isMounted: function() {\n\t      if (false) {\n\t        warning(\n\t          this.__didWarnIsMounted,\n\t          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n\t            'subscriptions and pending requests in componentWillUnmount to ' +\n\t            'prevent memory leaks.',\n\t          (this.constructor && this.constructor.displayName) ||\n\t            this.name ||\n\t            'Component'\n\t        );\n\t        this.__didWarnIsMounted = true;\n\t      }\n\t      return !!this.__isMounted;\n\t    }\n\t  };\n\t\n\t  var ReactClassComponent = function() {};\n\t  _assign(\n\t    ReactClassComponent.prototype,\n\t    ReactComponent.prototype,\n\t    ReactClassMixin\n\t  );\n\t\n\t  /**\n\t   * Creates a composite component class given a class specification.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n\t   *\n\t   * @param {object} spec Class specification (which must define `render`).\n\t   * @return {function} Component constructor function.\n\t   * @public\n\t   */\n\t  function createClass(spec) {\n\t    // To keep our warnings more understandable, we'll use a little hack here to\n\t    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n\t    // unnecessarily identify a class without displayName as 'Constructor'.\n\t    var Constructor = identity(function(props, context, updater) {\n\t      // This constructor gets overridden by mocks. The argument is used\n\t      // by mocks to assert on what gets mounted.\n\t\n\t      if (false) {\n\t        warning(\n\t          this instanceof Constructor,\n\t          'Something is calling a React component directly. Use a factory or ' +\n\t            'JSX instead. See: https://fb.me/react-legacyfactory'\n\t        );\n\t      }\n\t\n\t      // Wire up auto-binding\n\t      if (this.__reactAutoBindPairs.length) {\n\t        bindAutoBindMethods(this);\n\t      }\n\t\n\t      this.props = props;\n\t      this.context = context;\n\t      this.refs = emptyObject;\n\t      this.updater = updater || ReactNoopUpdateQueue;\n\t\n\t      this.state = null;\n\t\n\t      // ReactClasses doesn't have constructors. Instead, they use the\n\t      // getInitialState and componentWillMount methods for initialization.\n\t\n\t      var initialState = this.getInitialState ? this.getInitialState() : null;\n\t      if (false) {\n\t        // We allow auto-mocks to proceed as if they're returning null.\n\t        if (\n\t          initialState === undefined &&\n\t          this.getInitialState._isMockFunction\n\t        ) {\n\t          // This is probably bad practice. Consider warning here and\n\t          // deprecating this convenience.\n\t          initialState = null;\n\t        }\n\t      }\n\t      _invariant(\n\t        typeof initialState === 'object' && !Array.isArray(initialState),\n\t        '%s.getInitialState(): must return an object or null',\n\t        Constructor.displayName || 'ReactCompositeComponent'\n\t      );\n\t\n\t      this.state = initialState;\n\t    });\n\t    Constructor.prototype = new ReactClassComponent();\n\t    Constructor.prototype.constructor = Constructor;\n\t    Constructor.prototype.__reactAutoBindPairs = [];\n\t\n\t    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\t\n\t    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n\t    mixSpecIntoComponent(Constructor, spec);\n\t    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\t\n\t    // Initialize the defaultProps property after all mixins have been merged.\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.defaultProps = Constructor.getDefaultProps();\n\t    }\n\t\n\t    if (false) {\n\t      // This is a tag to indicate that the use of these method names is ok,\n\t      // since it's used with createClass. If it's not, then it's likely a\n\t      // mistake so we'll warn you to use the static property, property\n\t      // initializer or constructor respectively.\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps.isReactClassApproved = {};\n\t      }\n\t      if (Constructor.prototype.getInitialState) {\n\t        Constructor.prototype.getInitialState.isReactClassApproved = {};\n\t      }\n\t    }\n\t\n\t    _invariant(\n\t      Constructor.prototype.render,\n\t      'createClass(...): Class specification must implement a `render` method.'\n\t    );\n\t\n\t    if (false) {\n\t      warning(\n\t        !Constructor.prototype.componentShouldUpdate,\n\t        '%s has a method called ' +\n\t          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n\t          'The name is phrased as a question because the function is ' +\n\t          'expected to return a value.',\n\t        spec.displayName || 'A component'\n\t      );\n\t      warning(\n\t        !Constructor.prototype.componentWillRecieveProps,\n\t        '%s has a method called ' +\n\t          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n\t        spec.displayName || 'A component'\n\t      );\n\t      warning(\n\t        !Constructor.prototype.UNSAFE_componentWillRecieveProps,\n\t        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +\n\t          'Did you mean UNSAFE_componentWillReceiveProps()?',\n\t        spec.displayName || 'A component'\n\t      );\n\t    }\n\t\n\t    // Reduce time spent doing lookups by setting these on the prototype.\n\t    for (var methodName in ReactClassInterface) {\n\t      if (!Constructor.prototype[methodName]) {\n\t        Constructor.prototype[methodName] = null;\n\t      }\n\t    }\n\t\n\t    return Constructor;\n\t  }\n\t\n\t  return createClass;\n\t}\n\t\n\tmodule.exports = factory;\n\n\n/***/ }),\n\n/***/ 158:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015, Yahoo! Inc.\n\t * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n\t */\n\t(function (global, factory) {\n\t     true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    (global.hoistNonReactStatics = factory());\n\t}(this, (function () {\n\t    'use strict';\n\t    \n\t    var REACT_STATICS = {\n\t        childContextTypes: true,\n\t        contextTypes: true,\n\t        defaultProps: true,\n\t        displayName: true,\n\t        getDefaultProps: true,\n\t        getDerivedStateFromProps: true,\n\t        mixins: true,\n\t        propTypes: true,\n\t        type: true\n\t    };\n\t    \n\t    var KNOWN_STATICS = {\n\t        name: true,\n\t        length: true,\n\t        prototype: true,\n\t        caller: true,\n\t        callee: true,\n\t        arguments: true,\n\t        arity: true\n\t    };\n\t    \n\t    var defineProperty = Object.defineProperty;\n\t    var getOwnPropertyNames = Object.getOwnPropertyNames;\n\t    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\t    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\t    var getPrototypeOf = Object.getPrototypeOf;\n\t    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\t    \n\t    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n\t        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\t            \n\t            if (objectPrototype) {\n\t                var inheritedComponent = getPrototypeOf(sourceComponent);\n\t                if (inheritedComponent && inheritedComponent !== objectPrototype) {\n\t                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n\t                }\n\t            }\n\t            \n\t            var keys = getOwnPropertyNames(sourceComponent);\n\t            \n\t            if (getOwnPropertySymbols) {\n\t                keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n\t            }\n\t            \n\t            for (var i = 0; i < keys.length; ++i) {\n\t                var key = keys[i];\n\t                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n\t                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\t                    try { // Avoid failures from read-only properties\n\t                        defineProperty(targetComponent, key, descriptor);\n\t                    } catch (e) {}\n\t                }\n\t            }\n\t            \n\t            return targetComponent;\n\t        }\n\t        \n\t        return targetComponent;\n\t    };\n\t})));\n\n\n/***/ }),\n\n/***/ 320:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\r\n\t    if (true) {\r\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n\t            return factory(root);\r\n\t        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t    } else if (typeof module === \"object\" && module.exports) {\r\n\t        module.exports = factory(root);\r\n\t    } else {\r\n\t        root.lottie = factory(root);\r\n\t        root.bodymovin = root.lottie;\r\n\t    }\r\n\t}((window || {}), function(window) {\r\n\t    \"use strict\";\r\n\t    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\t\r\n\tvar locationHref = '';\r\n\t\r\n\tvar initialDefaultFrame = -999999;\r\n\t\n\tvar subframeEnabled = true;\r\n\tvar expressionsPlugin;\r\n\tvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\tvar cachedColors = {};\r\n\tvar bm_rounder = Math.round;\r\n\tvar bm_rnd;\r\n\tvar bm_pow = Math.pow;\r\n\tvar bm_sqrt = Math.sqrt;\r\n\tvar bm_abs = Math.abs;\r\n\tvar bm_floor = Math.floor;\r\n\tvar bm_max = Math.max;\r\n\tvar bm_min = Math.min;\r\n\tvar blitter = 10;\r\n\t\r\n\tvar BMMath = {};\r\n\t(function(){\r\n\t    var propertyNames = Object.getOwnPropertyNames(Math);\r\n\t    var i, len = propertyNames.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n\t    }\r\n\t}());\r\n\t\r\n\tfunction ProjectInterface(){return {};}\r\n\t\r\n\tBMMath.random = Math.random;\r\n\tBMMath.abs = function(val){\r\n\t    var tOfVal = typeof val;\r\n\t    if(tOfVal === 'object' && val.length){\r\n\t        var absArr = createSizedArray(val.length);\r\n\t        var i, len = val.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            absArr[i] = Math.abs(val[i]);\r\n\t        }\r\n\t        return absArr;\r\n\t    }\r\n\t    return Math.abs(val);\r\n\t\r\n\t};\r\n\tvar defaultCurveSegments = 150;\r\n\tvar degToRads = Math.PI/180;\r\n\tvar roundCorner = 0.5519;\r\n\t\r\n\tfunction roundValues(flag){\r\n\t    if(flag){\r\n\t        bm_rnd = Math.round;\r\n\t    }else{\r\n\t        bm_rnd = function(val){\r\n\t            return val;\r\n\t        };\r\n\t    }\r\n\t}\r\n\troundValues(false);\r\n\t\r\n\tfunction styleDiv(element){\r\n\t    element.style.position = 'absolute';\r\n\t    element.style.top = 0;\r\n\t    element.style.left = 0;\r\n\t    element.style.display = 'block';\r\n\t    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n\t    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n\t    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n\t}\r\n\t\r\n\tfunction BMEnterFrameEvent(n,c,t,d){\r\n\t    this.type = n;\r\n\t    this.currentTime = c;\r\n\t    this.totalTime = t;\r\n\t    this.direction = d < 0 ? -1:1;\r\n\t}\r\n\t\r\n\tfunction BMCompleteEvent(n,d){\r\n\t    this.type = n;\r\n\t    this.direction = d < 0 ? -1:1;\r\n\t}\r\n\t\r\n\tfunction BMCompleteLoopEvent(n,c,t,d){\r\n\t    this.type = n;\r\n\t    this.currentLoop = t;\r\n\t    this.totalLoops = c;\r\n\t    this.direction = d < 0 ? -1:1;\r\n\t}\r\n\t\r\n\tfunction BMSegmentStartEvent(n,f,t){\r\n\t    this.type = n;\r\n\t    this.firstFrame = f;\r\n\t    this.totalFrames = t;\r\n\t}\r\n\t\r\n\tfunction BMDestroyEvent(n,t){\r\n\t    this.type = n;\r\n\t    this.target = t;\r\n\t}\r\n\t\r\n\tfunction randomString(length, chars){\r\n\t    if(chars === undefined){\r\n\t        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n\t    }\r\n\t    var i;\r\n\t    var result = '';\r\n\t    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n\t    return result;\r\n\t}\r\n\t\r\n\tfunction HSVtoRGB(h, s, v) {\r\n\t    var r, g, b, i, f, p, q, t;\r\n\t    i = Math.floor(h * 6);\r\n\t    f = h * 6 - i;\r\n\t    p = v * (1 - s);\r\n\t    q = v * (1 - f * s);\r\n\t    t = v * (1 - (1 - f) * s);\r\n\t    switch (i % 6) {\r\n\t        case 0: r = v; g = t; b = p; break;\r\n\t        case 1: r = q; g = v; b = p; break;\r\n\t        case 2: r = p; g = v; b = t; break;\r\n\t        case 3: r = p; g = q; b = v; break;\r\n\t        case 4: r = t; g = p; b = v; break;\r\n\t        case 5: r = v; g = p; b = q; break;\r\n\t    }\r\n\t    return [ r,\r\n\t        g,\r\n\t         b ];\r\n\t}\r\n\t\r\n\tfunction RGBtoHSV(r, g, b) {\r\n\t    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n\t        d = max - min,\r\n\t        h,\r\n\t        s = (max === 0 ? 0 : d / max),\r\n\t        v = max / 255;\r\n\t\r\n\t    switch (max) {\r\n\t        case min: h = 0; break;\r\n\t        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n\t        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n\t        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n\t    }\r\n\t\r\n\t    return [\r\n\t         h,\r\n\t         s,\r\n\t         v\r\n\t    ];\r\n\t}\r\n\t\r\n\tfunction addSaturationToRGB(color,offset){\r\n\t    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n\t    hsv[1] += offset;\r\n\t    if (hsv[1] > 1) {\r\n\t        hsv[1] = 1;\r\n\t    }\r\n\t    else if (hsv[1] <= 0) {\r\n\t        hsv[1] = 0;\r\n\t    }\r\n\t    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n\t}\r\n\t\r\n\tfunction addBrightnessToRGB(color,offset){\r\n\t    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n\t    hsv[2] += offset;\r\n\t    if (hsv[2] > 1) {\r\n\t        hsv[2] = 1;\r\n\t    }\r\n\t    else if (hsv[2] < 0) {\r\n\t        hsv[2] = 0;\r\n\t    }\r\n\t    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n\t}\r\n\t\r\n\tfunction addHueToRGB(color,offset) {\r\n\t    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n\t    hsv[0] += offset/360;\r\n\t    if (hsv[0] > 1) {\r\n\t        hsv[0] -= 1;\r\n\t    }\r\n\t    else if (hsv[0] < 0) {\r\n\t        hsv[0] += 1;\r\n\t    }\r\n\t    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n\t}\r\n\t\r\n\tvar rgbToHex = (function(){\r\n\t    var colorMap = [];\r\n\t    var i;\r\n\t    var hex;\r\n\t    for(i=0;i<256;i+=1){\r\n\t        hex = i.toString(16);\r\n\t        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n\t    }\r\n\t\r\n\t    return function(r, g, b) {\r\n\t        if(r<0){\r\n\t            r = 0;\r\n\t        }\r\n\t        if(g<0){\r\n\t            g = 0;\r\n\t        }\r\n\t        if(b<0){\r\n\t            b = 0;\r\n\t        }\r\n\t        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n\t    };\r\n\t}());\n\tfunction BaseEvent(){}\r\n\tBaseEvent.prototype = {\r\n\t\ttriggerEvent: function (eventName, args) {\r\n\t\t    if (this._cbs[eventName]) {\r\n\t\t        var len = this._cbs[eventName].length;\r\n\t\t        for (var i = 0; i < len; i++){\r\n\t\t            this._cbs[eventName][i](args);\r\n\t\t        }\r\n\t\t    }\r\n\t\t},\r\n\t\taddEventListener: function (eventName, callback) {\r\n\t\t    if (!this._cbs[eventName]){\r\n\t\t        this._cbs[eventName] = [];\r\n\t\t    }\r\n\t\t    this._cbs[eventName].push(callback);\r\n\t\r\n\t\t\treturn function() {\r\n\t\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t\t}.bind(this);\r\n\t\t},\r\n\t\tremoveEventListener: function (eventName,callback){\r\n\t\t    if (!callback){\r\n\t\t        this._cbs[eventName] = null;\r\n\t\t    }else if(this._cbs[eventName]){\r\n\t\t        var i = 0, len = this._cbs[eventName].length;\r\n\t\t        while(i<len){\r\n\t\t            if(this._cbs[eventName][i] === callback){\r\n\t\t                this._cbs[eventName].splice(i,1);\r\n\t\t                i -=1;\r\n\t\t                len -= 1;\r\n\t\t            }\r\n\t\t            i += 1;\r\n\t\t        }\r\n\t\t        if(!this._cbs[eventName].length){\r\n\t\t            this._cbs[eventName] = null;\r\n\t\t        }\r\n\t\t    }\r\n\t\t}\r\n\t};\n\tvar createTypedArray = (function(){\r\n\t\tfunction createRegularArray(type, len){\r\n\t\t\tvar i = 0, arr = [], value;\r\n\t\t\tswitch(type) {\r\n\t\t\t\tcase 'int16':\r\n\t\t\t\tcase 'uint8c':\r\n\t\t\t\t\tvalue = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvalue = 1.1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t\tarr.push(value);\r\n\t\t\t}\r\n\t\t\treturn arr;\r\n\t\t}\r\n\t\tfunction createTypedArray(type, len){\r\n\t\t\tif(type === 'float32') {\r\n\t\t\t\treturn new Float32Array(len);\r\n\t\t\t} else if(type === 'int16') {\r\n\t\t\t\treturn new Int16Array(len);\r\n\t\t\t} else if(type === 'uint8c') {\r\n\t\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\t\treturn createTypedArray;\r\n\t\t} else {\r\n\t\t\treturn createRegularArray;\r\n\t\t}\r\n\t}());\r\n\t\r\n\tfunction createSizedArray(len) {\r\n\t\treturn Array.apply(null,{length:len});\r\n\t}\n\tfunction createNS(type) {\r\n\t\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\t\treturn document.createElementNS(svgNS, type);\r\n\t}\n\tfunction createTag(type) {\r\n\t\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\t\treturn document.createElement(type);\r\n\t}\n\tfunction addDynamicProperty(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    }\r\n\t}\n\t/*!\r\n\t Transformation Matrix v2.0\r\n\t (c) Epistemex 2014-2015\r\n\t www.epistemex.com\r\n\t By Ken Fyrstenberg\r\n\t Contributions by leeoniya.\r\n\t License: MIT, header required.\r\n\t */\r\n\t\r\n\t/**\r\n\t * 2D transformation matrix object initialized with identity matrix.\r\n\t *\r\n\t * The matrix can synchronize a canvas context by supplying the context\r\n\t * as an argument, or later apply current absolute transform to an\r\n\t * existing context.\r\n\t *\r\n\t * All values are handled as floating point values.\r\n\t *\r\n\t * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n\t * @prop {number} a - scale x\r\n\t * @prop {number} b - shear y\r\n\t * @prop {number} c - shear x\r\n\t * @prop {number} d - scale y\r\n\t * @prop {number} e - translate x\r\n\t * @prop {number} f - translate y\r\n\t * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n\t * @constructor\r\n\t */\r\n\t\r\n\tvar Matrix = (function(){\r\n\t\r\n\t    var _cos = Math.cos;\r\n\t    var _sin = Math.sin;\r\n\t    var _tan = Math.tan;\r\n\t    var _rnd = Math.round;\r\n\t\r\n\t    function reset(){\r\n\t        this.props[0] = 1;\r\n\t        this.props[1] = 0;\r\n\t        this.props[2] = 0;\r\n\t        this.props[3] = 0;\r\n\t        this.props[4] = 0;\r\n\t        this.props[5] = 1;\r\n\t        this.props[6] = 0;\r\n\t        this.props[7] = 0;\r\n\t        this.props[8] = 0;\r\n\t        this.props[9] = 0;\r\n\t        this.props[10] = 1;\r\n\t        this.props[11] = 0;\r\n\t        this.props[12] = 0;\r\n\t        this.props[13] = 0;\r\n\t        this.props[14] = 0;\r\n\t        this.props[15] = 1;\r\n\t        return this;\r\n\t    }\r\n\t\r\n\t    function rotate(angle) {\r\n\t        if(angle === 0){\r\n\t            return this;\r\n\t        }\r\n\t        var mCos = _cos(angle);\r\n\t        var mSin = _sin(angle);\r\n\t        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n\t    }\r\n\t\r\n\t    function rotateX(angle){\r\n\t        if(angle === 0){\r\n\t            return this;\r\n\t        }\r\n\t        var mCos = _cos(angle);\r\n\t        var mSin = _sin(angle);\r\n\t        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n\t    }\r\n\t\r\n\t    function rotateY(angle){\r\n\t        if(angle === 0){\r\n\t            return this;\r\n\t        }\r\n\t        var mCos = _cos(angle);\r\n\t        var mSin = _sin(angle);\r\n\t        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n\t    }\r\n\t\r\n\t    function rotateZ(angle){\r\n\t        if(angle === 0){\r\n\t            return this;\r\n\t        }\r\n\t        var mCos = _cos(angle);\r\n\t        var mSin = _sin(angle);\r\n\t        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n\t    }\r\n\t\r\n\t    function shear(sx,sy){\r\n\t        return this._t(1, sy, sx, 1, 0, 0);\r\n\t    }\r\n\t\r\n\t    function skew(ax, ay){\r\n\t        return this.shear(_tan(ax), _tan(ay));\r\n\t    }\r\n\t\r\n\t    function skewFromAxis(ax, angle){\r\n\t        var mCos = _cos(angle);\r\n\t        var mSin = _sin(angle);\r\n\t        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n\t            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n\t            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n\t        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n\t    }\r\n\t\r\n\t    function scale(sx, sy, sz) {\r\n\t        sz = isNaN(sz) ? 1 : sz;\r\n\t        if(sx == 1 && sy == 1 && sz == 1){\r\n\t            return this;\r\n\t        }\r\n\t        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n\t    }\r\n\t\r\n\t    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n\t        this.props[0] = a;\r\n\t        this.props[1] = b;\r\n\t        this.props[2] = c;\r\n\t        this.props[3] = d;\r\n\t        this.props[4] = e;\r\n\t        this.props[5] = f;\r\n\t        this.props[6] = g;\r\n\t        this.props[7] = h;\r\n\t        this.props[8] = i;\r\n\t        this.props[9] = j;\r\n\t        this.props[10] = k;\r\n\t        this.props[11] = l;\r\n\t        this.props[12] = m;\r\n\t        this.props[13] = n;\r\n\t        this.props[14] = o;\r\n\t        this.props[15] = p;\r\n\t        return this;\r\n\t    }\r\n\t\r\n\t    function translate(tx, ty, tz) {\r\n\t        tz = tz || 0;\r\n\t        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n\t            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n\t        }\r\n\t        return this;\r\n\t    }\r\n\t\r\n\t    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\t\r\n\t        var _p = this.props;\r\n\t\r\n\t        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n\t            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n\t            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n\t                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n\t                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n\t                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n\t                _p[15] = _p[15] * p2;\r\n\t            //}\r\n\t            this._identityCalculated = false;\r\n\t            return this;\r\n\t        }\r\n\t\r\n\t        var a1 = _p[0];\r\n\t        var b1 = _p[1];\r\n\t        var c1 = _p[2];\r\n\t        var d1 = _p[3];\r\n\t        var e1 = _p[4];\r\n\t        var f1 = _p[5];\r\n\t        var g1 = _p[6];\r\n\t        var h1 = _p[7];\r\n\t        var i1 = _p[8];\r\n\t        var j1 = _p[9];\r\n\t        var k1 = _p[10];\r\n\t        var l1 = _p[11];\r\n\t        var m1 = _p[12];\r\n\t        var n1 = _p[13];\r\n\t        var o1 = _p[14];\r\n\t        var p1 = _p[15];\r\n\t\r\n\t        /* matrix order (canvas compatible):\r\n\t         * ace\r\n\t         * bdf\r\n\t         * 001\r\n\t         */\r\n\t        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n\t        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n\t        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n\t        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\t\r\n\t        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n\t        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n\t        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n\t        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\t\r\n\t        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n\t        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n\t        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n\t        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\t\r\n\t        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n\t        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n\t        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n\t        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\t\r\n\t        this._identityCalculated = false;\r\n\t        return this;\r\n\t    }\r\n\t\r\n\t    function isIdentity() {\r\n\t        if(!this._identityCalculated){\r\n\t            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n\t            this._identityCalculated = true;\r\n\t        }\r\n\t        return this._identity;\r\n\t    }\r\n\t\r\n\t    function equals(matr){\r\n\t        var i = 0;\r\n\t        while (i < 16) {\r\n\t            if(matr.props[i] !== this.props[i]) {\r\n\t                return false;\r\n\t            }\r\n\t            i+=1;\r\n\t        }\r\n\t        return true;\r\n\t    }\r\n\t\r\n\t    function clone(matr){\r\n\t        var i;\r\n\t        for(i=0;i<16;i+=1){\r\n\t            matr.props[i] = this.props[i];\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function cloneFromProps(props){\r\n\t        var i;\r\n\t        for(i=0;i<16;i+=1){\r\n\t            this.props[i] = props[i];\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function applyToPoint(x, y, z) {\r\n\t\r\n\t        return {\r\n\t            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n\t            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n\t            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n\t        };\r\n\t        /*return {\r\n\t         x: x * me.a + y * me.c + me.e,\r\n\t         y: x * me.b + y * me.d + me.f\r\n\t         };*/\r\n\t    }\r\n\t    function applyToX(x, y, z) {\r\n\t        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n\t    }\r\n\t    function applyToY(x, y, z) {\r\n\t        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n\t    }\r\n\t    function applyToZ(x, y, z) {\r\n\t        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n\t    }\r\n\t\r\n\t    function inversePoint(pt) {\r\n\t        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n\t        var a = this.props[5]/determinant;\r\n\t        var b = - this.props[1]/determinant;\r\n\t        var c = - this.props[4]/determinant;\r\n\t        var d = this.props[0]/determinant;\r\n\t        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n\t        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n\t        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n\t    }\r\n\t\r\n\t    function inversePoints(pts){\r\n\t        var i, len = pts.length, retPts = [];\r\n\t        for(i=0;i<len;i+=1){\r\n\t            retPts[i] = inversePoint(pts[i]);\r\n\t        }\r\n\t        return retPts;\r\n\t    }\r\n\t\r\n\t    function applyToTriplePoints(pt1, pt2, pt3) {\r\n\t        var arr = createTypedArray('float32', 6);\r\n\t        if(this.isIdentity()) {\r\n\t            arr[0] = pt1[0];\r\n\t            arr[1] = pt1[1];\r\n\t            arr[2] = pt2[0];\r\n\t            arr[3] = pt2[1];\r\n\t            arr[4] = pt3[0];\r\n\t            arr[5] = pt3[1];\r\n\t        } else {\r\n\t            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n\t            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n\t            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n\t            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n\t            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n\t            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n\t            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n\t        }\r\n\t        return arr;\r\n\t    }\r\n\t\r\n\t    function applyToPointArray(x,y,z){\r\n\t        var arr;\r\n\t        if(this.isIdentity()) {\r\n\t            arr = [x,y,z];\r\n\t        } else {\r\n\t            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n\t        }\r\n\t        return arr;\r\n\t    }\r\n\t\r\n\t    function applyToPointStringified(x, y) {\r\n\t        if(this.isIdentity()) {\r\n\t            return x + ',' + y;\r\n\t        }\r\n\t        return (x * this.props[0] + y * this.props[4] + this.props[12])+','+(x * this.props[1] + y * this.props[5] + this.props[13]);\r\n\t    }\r\n\t\r\n\t    function toCSS() {\r\n\t        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n\t        /*if(this.isIdentity()) {\r\n\t            return '';\r\n\t        }*/\r\n\t        var i = 0;\r\n\t        var props = this.props;\r\n\t        var cssValue = 'matrix3d(';\r\n\t        var v = 10000;\r\n\t        while(i<16){\r\n\t            cssValue += _rnd(props[i]*v)/v;\r\n\t            cssValue += i === 15 ? ')':',';\r\n\t            i += 1;\r\n\t        }\r\n\t        return cssValue;\r\n\t    }\r\n\t\r\n\t    function to2dCSS() {\r\n\t        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n\t        /*if(this.isIdentity()) {\r\n\t            return '';\r\n\t        }*/\r\n\t        var v = 10000;\r\n\t        var props = this.props;\r\n\t        return \"matrix(\" + _rnd(props[0]*v)/v + ',' + _rnd(props[1]*v)/v + ',' + _rnd(props[4]*v)/v + ',' + _rnd(props[5]*v)/v + ',' + _rnd(props[12]*v)/v + ',' + _rnd(props[13]*v)/v + \")\";\r\n\t    }\r\n\t\r\n\t    return function(){\r\n\t        this.reset = reset;\r\n\t        this.rotate = rotate;\r\n\t        this.rotateX = rotateX;\r\n\t        this.rotateY = rotateY;\r\n\t        this.rotateZ = rotateZ;\r\n\t        this.skew = skew;\r\n\t        this.skewFromAxis = skewFromAxis;\r\n\t        this.shear = shear;\r\n\t        this.scale = scale;\r\n\t        this.setTransform = setTransform;\r\n\t        this.translate = translate;\r\n\t        this.transform = transform;\r\n\t        this.applyToPoint = applyToPoint;\r\n\t        this.applyToX = applyToX;\r\n\t        this.applyToY = applyToY;\r\n\t        this.applyToZ = applyToZ;\r\n\t        this.applyToPointArray = applyToPointArray;\r\n\t        this.applyToTriplePoints = applyToTriplePoints;\r\n\t        this.applyToPointStringified = applyToPointStringified;\r\n\t        this.toCSS = toCSS;\r\n\t        this.to2dCSS = to2dCSS;\r\n\t        this.clone = clone;\r\n\t        this.cloneFromProps = cloneFromProps;\r\n\t        this.equals = equals;\r\n\t        this.inversePoints = inversePoints;\r\n\t        this.inversePoint = inversePoint;\r\n\t        this._t = this.transform;\r\n\t        this.isIdentity = isIdentity;\r\n\t        this._identity = true;\r\n\t        this._identityCalculated = false;\r\n\t\r\n\t        this.props = createTypedArray('float32', 16);\r\n\t        this.reset();\r\n\t    };\r\n\t}());\r\n\t\n\t/*\r\n\t Copyright 2014 David Bau.\r\n\t\r\n\t Permission is hereby granted, free of charge, to any person obtaining\r\n\t a copy of this software and associated documentation files (the\r\n\t \"Software\"), to deal in the Software without restriction, including\r\n\t without limitation the rights to use, copy, modify, merge, publish,\r\n\t distribute, sublicense, and/or sell copies of the Software, and to\r\n\t permit persons to whom the Software is furnished to do so, subject to\r\n\t the following conditions:\r\n\t\r\n\t The above copyright notice and this permission notice shall be\r\n\t included in all copies or substantial portions of the Software.\r\n\t\r\n\t THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n\t EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n\t MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n\t IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n\t CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n\t TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n\t SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\t\r\n\t */\r\n\t\r\n\t(function (pool, math) {\r\n\t//\r\n\t// The following constants are related to IEEE 754 limits.\r\n\t//\r\n\t    var global = this,\r\n\t        width = 256,        // each RC4 output is 0 <= x < 256\r\n\t        chunks = 6,         // at least six RC4 outputs for each double\r\n\t        digits = 52,        // there are 52 significant digits in a double\r\n\t        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n\t        startdenom = math.pow(width, chunks),\r\n\t        significance = math.pow(2, digits),\r\n\t        overflow = significance * 2,\r\n\t        mask = width - 1,\r\n\t        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\t\r\n\t//\r\n\t// seedrandom()\r\n\t// This is the seedrandom function described above.\r\n\t//\r\n\t    function seedrandom(seed, options, callback) {\r\n\t        var key = [];\r\n\t        options = (options === true) ? { entropy: true } : (options || {});\r\n\t\r\n\t        // Flatten the seed string or build one from local entropy if needed.\r\n\t        var shortseed = mixkey(flatten(\r\n\t            options.entropy ? [seed, tostring(pool)] :\r\n\t                (seed === null) ? autoseed() : seed, 3), key);\r\n\t\r\n\t        // Use the seed to initialize an ARC4 generator.\r\n\t        var arc4 = new ARC4(key);\r\n\t\r\n\t        // This function returns a random double in [0, 1) that contains\r\n\t        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n\t        var prng = function() {\r\n\t            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n\t                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n\t                x = 0;                          //   and no 'extra last byte'.\r\n\t            while (n < significance) {          // Fill up all significant digits by\r\n\t                n = (n + x) * width;              //   shifting numerator and\r\n\t                d *= width;                       //   denominator and generating a\r\n\t                x = arc4.g(1);                    //   new least-significant-byte.\r\n\t            }\r\n\t            while (n >= overflow) {             // To avoid rounding up, before adding\r\n\t                n /= 2;                           //   last byte, shift everything\r\n\t                d /= 2;                           //   right using integer math until\r\n\t                x >>>= 1;                         //   we have exactly the desired bits.\r\n\t            }\r\n\t            return (n + x) / d;                 // Form the number within [0, 1).\r\n\t        };\r\n\t\r\n\t        prng.int32 = function() { return arc4.g(4) | 0; };\r\n\t        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n\t        prng.double = prng;\r\n\t\r\n\t        // Mix the randomness into accumulated entropy.\r\n\t        mixkey(tostring(arc4.S), pool);\r\n\t\r\n\t        // Calling convention: what to return as a function of prng, seed, is_math.\r\n\t        return (options.pass || callback ||\r\n\t        function(prng, seed, is_math_call, state) {\r\n\t            if (state) {\r\n\t                // Load the arc4 state from the given state if it has an S array.\r\n\t                if (state.S) { copy(state, arc4); }\r\n\t                // Only provide the .state method if requested via options.state.\r\n\t                prng.state = function() { return copy(arc4, {}); };\r\n\t            }\r\n\t\r\n\t            // If called as a method of Math (Math.seedrandom()), mutate\r\n\t            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n\t            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\t\r\n\t            // Otherwise, it is a newer calling convention, so return the\r\n\t            // prng directly.\r\n\t            else return prng;\r\n\t        })(\r\n\t            prng,\r\n\t            shortseed,\r\n\t            'global' in options ? options.global : (this == math),\r\n\t            options.state);\r\n\t    }\r\n\t    math['seed' + rngname] = seedrandom;\r\n\t\r\n\t//\r\n\t// ARC4\r\n\t//\r\n\t// An ARC4 implementation.  The constructor takes a key in the form of\r\n\t// an array of at most (width) integers that should be 0 <= x < (width).\r\n\t//\r\n\t// The g(count) method returns a pseudorandom integer that concatenates\r\n\t// the next (count) outputs from ARC4.  Its return value is a number x\r\n\t// that is in the range 0 <= x < (width ^ count).\r\n\t//\r\n\t    function ARC4(key) {\r\n\t        var t, keylen = key.length,\r\n\t            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\t\r\n\t        // The empty key [] is treated as [0].\r\n\t        if (!keylen) { key = [keylen++]; }\r\n\t\r\n\t        // Set up S using the standard key scheduling algorithm.\r\n\t        while (i < width) {\r\n\t            s[i] = i++;\r\n\t        }\r\n\t        for (i = 0; i < width; i++) {\r\n\t            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n\t            s[j] = t;\r\n\t        }\r\n\t\r\n\t        // The \"g\" method returns the next (count) outputs as one number.\r\n\t        me.g = function(count) {\r\n\t            // Using instance members instead of closure state nearly doubles speed.\r\n\t            var t, r = 0,\r\n\t                i = me.i, j = me.j, s = me.S;\r\n\t            while (count--) {\r\n\t                t = s[i = mask & (i + 1)];\r\n\t                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n\t            }\r\n\t            me.i = i; me.j = j;\r\n\t            return r;\r\n\t            // For robust unpredictability, the function call below automatically\r\n\t            // discards an initial batch of values.  This is called RC4-drop[256].\r\n\t            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n\t        };\r\n\t    }\r\n\t\r\n\t//\r\n\t// copy()\r\n\t// Copies internal state of ARC4 to or from a plain object.\r\n\t//\r\n\t    function copy(f, t) {\r\n\t        t.i = f.i;\r\n\t        t.j = f.j;\r\n\t        t.S = f.S.slice();\r\n\t        return t;\r\n\t    }\r\n\t\r\n\t//\r\n\t// flatten()\r\n\t// Converts an object tree to nested arrays of strings.\r\n\t//\r\n\t    function flatten(obj, depth) {\r\n\t        var result = [], typ = (typeof obj), prop;\r\n\t        if (depth && typ == 'object') {\r\n\t            for (prop in obj) {\r\n\t                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n\t            }\r\n\t        }\r\n\t        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n\t    }\r\n\t\r\n\t//\r\n\t// mixkey()\r\n\t// Mixes a string seed into a key that is an array of integers, and\r\n\t// returns a shortened string seed that is equivalent to the result key.\r\n\t//\r\n\t    function mixkey(seed, key) {\r\n\t        var stringseed = seed + '', smear, j = 0;\r\n\t        while (j < stringseed.length) {\r\n\t            key[mask & j] =\r\n\t                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n\t        }\r\n\t        return tostring(key);\r\n\t    }\r\n\t\r\n\t//\r\n\t// autoseed()\r\n\t// Returns an object for autoseeding, using window.crypto and Node crypto\r\n\t// module if available.\r\n\t//\r\n\t    function autoseed() {\r\n\t        try {\r\n\t            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n\t            var out = new Uint8Array(width);\r\n\t            (global.crypto || global.msCrypto).getRandomValues(out);\r\n\t            return tostring(out);\r\n\t        } catch (e) {\r\n\t            var browser = global.navigator,\r\n\t                plugins = browser && browser.plugins;\r\n\t            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n\t        }\r\n\t    }\r\n\t\r\n\t//\r\n\t// tostring()\r\n\t// Converts an array of charcodes to a string\r\n\t//\r\n\t    function tostring(a) {\r\n\t        return String.fromCharCode.apply(0, a);\r\n\t    }\r\n\t\r\n\t//\r\n\t// When seedrandom.js is loaded, we immediately mix a few bits\r\n\t// from the built-in RNG into the entropy pool.  Because we do\r\n\t// not want to interfere with deterministic PRNG state later,\r\n\t// seedrandom will not call math.random on its own again after\r\n\t// initialization.\r\n\t//\r\n\t    mixkey(math.random(), pool);\r\n\t\r\n\t//\r\n\t// Nodejs and AMD support: export the implementation as a module using\r\n\t// either convention.\r\n\t//\r\n\t\r\n\t// End anonymous scope, and pass initial values.\r\n\t})(\r\n\t    [],     // pool: entropy pool starts empty\r\n\t    BMMath    // math: package containing random, pow, and seedrandom\r\n\t);\n\tvar BezierFactory = (function(){\r\n\t    /**\r\n\t     * BezierEasing - use bezier curve for transition easing function\r\n\t     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n\t     *\r\n\t     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n\t     * Usage:\r\n\t     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n\t     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n\t     *\r\n\t     */\r\n\t\r\n\t        var ob = {};\r\n\t    ob.getBezierEasing = getBezierEasing;\r\n\t    var beziers = {};\r\n\t\r\n\t    function getBezierEasing(a,b,c,d,nm){\r\n\t        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n\t        if(beziers[str]){\r\n\t            return beziers[str];\r\n\t        }\r\n\t        var bezEasing = new BezierEasing([a,b,c,d]);\r\n\t        beziers[str] = bezEasing;\r\n\t        return bezEasing;\r\n\t    }\r\n\t\r\n\t// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n\t    var NEWTON_ITERATIONS = 4;\r\n\t    var NEWTON_MIN_SLOPE = 0.001;\r\n\t    var SUBDIVISION_PRECISION = 0.0000001;\r\n\t    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\t\r\n\t    var kSplineTableSize = 11;\r\n\t    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\t\r\n\t    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\t\r\n\t    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n\t    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n\t    function C (aA1)      { return 3.0 * aA1; }\r\n\t\r\n\t// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n\t    function calcBezier (aT, aA1, aA2) {\r\n\t        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n\t    }\r\n\t\r\n\t// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n\t    function getSlope (aT, aA1, aA2) {\r\n\t        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n\t    }\r\n\t\r\n\t    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n\t        var currentX, currentT, i = 0;\r\n\t        do {\r\n\t            currentT = aA + (aB - aA) / 2.0;\r\n\t            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n\t            if (currentX > 0.0) {\r\n\t                aB = currentT;\r\n\t            } else {\r\n\t                aA = currentT;\r\n\t            }\r\n\t        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n\t        return currentT;\r\n\t    }\r\n\t\r\n\t    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n\t        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n\t            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n\t            if (currentSlope === 0.0) return aGuessT;\r\n\t            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n\t            aGuessT -= currentX / currentSlope;\r\n\t        }\r\n\t        return aGuessT;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n\t     */\r\n\t    function BezierEasing (points) {\r\n\t        this._p = points;\r\n\t        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n\t        this._precomputed = false;\r\n\t\r\n\t        this.get = this.get.bind(this);\r\n\t    }\r\n\t\r\n\t    BezierEasing.prototype = {\r\n\t\r\n\t        get: function (x) {\r\n\t            var mX1 = this._p[0],\r\n\t                mY1 = this._p[1],\r\n\t                mX2 = this._p[2],\r\n\t                mY2 = this._p[3];\r\n\t            if (!this._precomputed) this._precompute();\r\n\t            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n\t            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n\t            if (x === 0) return 0;\r\n\t            if (x === 1) return 1;\r\n\t            return calcBezier(this._getTForX(x), mY1, mY2);\r\n\t        },\r\n\t\r\n\t        // Private part\r\n\t\r\n\t        _precompute: function () {\r\n\t            var mX1 = this._p[0],\r\n\t                mY1 = this._p[1],\r\n\t                mX2 = this._p[2],\r\n\t                mY2 = this._p[3];\r\n\t            this._precomputed = true;\r\n\t            if (mX1 !== mY1 || mX2 !== mY2)\r\n\t                this._calcSampleValues();\r\n\t        },\r\n\t\r\n\t        _calcSampleValues: function () {\r\n\t            var mX1 = this._p[0],\r\n\t                mX2 = this._p[2];\r\n\t            for (var i = 0; i < kSplineTableSize; ++i) {\r\n\t                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n\t            }\r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n\t         */\r\n\t        _getTForX: function (aX) {\r\n\t            var mX1 = this._p[0],\r\n\t                mX2 = this._p[2],\r\n\t                mSampleValues = this._mSampleValues;\r\n\t\r\n\t            var intervalStart = 0.0;\r\n\t            var currentSample = 1;\r\n\t            var lastSample = kSplineTableSize - 1;\r\n\t\r\n\t            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n\t                intervalStart += kSampleStepSize;\r\n\t            }\r\n\t            --currentSample;\r\n\t\r\n\t            // Interpolate to provide an initial guess for t\r\n\t            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n\t            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\t\r\n\t            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n\t            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n\t                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n\t            } else if (initialSlope === 0.0) {\r\n\t                return guessForT;\r\n\t            } else {\r\n\t                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    return ob;\r\n\t\r\n\t}());\n\t(function () {\r\n\t    var lastTime = 0;\r\n\t    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n\t    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n\t        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n\t        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n\t    }\r\n\t    if(!window.requestAnimationFrame)\r\n\t        window.requestAnimationFrame = function (callback, element) {\r\n\t            var currTime = new Date().getTime();\r\n\t            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n\t            var id = setTimeout(function () {\r\n\t                    callback(currTime + timeToCall);\r\n\t                },\r\n\t                timeToCall);\r\n\t            lastTime = currTime + timeToCall;\r\n\t            return id;\r\n\t        };\r\n\t    if(!window.cancelAnimationFrame)\r\n\t        window.cancelAnimationFrame = function (id) {\r\n\t            clearTimeout(id);\r\n\t        };\r\n\t}());\r\n\t\n\tfunction extendPrototype(sources,destination){\r\n\t    var i, len = sources.length, sourcePrototype;\r\n\t    for (i = 0;i < len;i += 1) {\r\n\t        sourcePrototype = sources[i].prototype;\r\n\t        for (var attr in sourcePrototype) {\r\n\t            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction getDescriptor(object, prop) {\r\n\t    return Object.getOwnPropertyDescriptor(object, prop);\r\n\t}\r\n\t\r\n\tfunction createProxyFunction(prototype) {\r\n\t\tfunction ProxyFunction(){}\r\n\t\tProxyFunction.prototype = prototype;\r\n\t\treturn ProxyFunction;\r\n\t}\n\tfunction bezFunction(){\r\n\t\r\n\t    var easingFunctions = [];\r\n\t    var math = Math;\r\n\t\r\n\t    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n\t        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n\t        return det1 > -0.001 && det1 < 0.001;\r\n\t    }\r\n\t\r\n\t    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n\t        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n\t            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n\t        }\r\n\t        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n\t        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n\t        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n\t        var diffDist;\r\n\t        if(dist1 > dist2){\r\n\t            if(dist1 > dist3){\r\n\t                diffDist = dist1 - dist2 - dist3;\r\n\t            } else {\r\n\t                diffDist = dist3 - dist2 - dist1;\r\n\t            }\r\n\t        } else if(dist3 > dist2){\r\n\t            diffDist = dist3 - dist2 - dist1;\r\n\t        } else {\r\n\t            diffDist = dist2 - dist1 - dist3;\r\n\t        }\r\n\t        return diffDist > -0.0001 && diffDist < 0.0001;\r\n\t    }\r\n\t\r\n\t    var getBezierLength = (function(){\r\n\t\r\n\t        return function(pt1,pt2,pt3,pt4){\r\n\t            var curveSegments = defaultCurveSegments;\r\n\t            var k;\r\n\t            var i, len;\r\n\t            var ptCoord,perc,addedLength = 0;\r\n\t            var ptDistance;\r\n\t            var point = [],lastPoint = [];\r\n\t            var lengthData = bezier_length_pool.newElement();\r\n\t            len = pt3.length;\r\n\t            for(k=0;k<curveSegments;k+=1){\r\n\t                perc = k/(curveSegments-1);\r\n\t                ptDistance = 0;\r\n\t                for(i=0;i<len;i+=1){\r\n\t                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n\t                    point[i] = ptCoord;\r\n\t                    if(lastPoint[i] !== null){\r\n\t                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n\t                    }\r\n\t                    lastPoint[i] = point[i];\r\n\t                }\r\n\t                if(ptDistance){\r\n\t                    ptDistance = bm_sqrt(ptDistance);\r\n\t                    addedLength += ptDistance;\r\n\t                }\r\n\t                lengthData.percents[k] = perc;\r\n\t                lengthData.lengths[k] = addedLength;\r\n\t            }\r\n\t            lengthData.addedLength = addedLength;\r\n\t            return lengthData;\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    function getSegmentsLength(shapeData) {\r\n\t        var segmentsLength = segments_length_pool.newElement();\r\n\t        var closed = shapeData.c;\r\n\t        var pathV = shapeData.v;\r\n\t        var pathO = shapeData.o;\r\n\t        var pathI = shapeData.i;\r\n\t        var i, len = shapeData._length;\r\n\t        var lengths = segmentsLength.lengths;\r\n\t        var totalLength = 0;\r\n\t        for(i=0;i<len-1;i+=1){\r\n\t            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n\t            totalLength += lengths[i].addedLength;\r\n\t        }\r\n\t        if(closed){\r\n\t            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n\t            totalLength += lengths[i].addedLength;\r\n\t        }\r\n\t        segmentsLength.totalLength = totalLength;\r\n\t        return segmentsLength;\r\n\t    }\r\n\t\r\n\t    function BezierData(length){\r\n\t        this.segmentLength = 0;\r\n\t        this.points = new Array(length);\r\n\t    }\r\n\t\r\n\t    function PointData(partial,point){\r\n\t        this.partialLength = partial;\r\n\t        this.point = point;\r\n\t    }\r\n\t\r\n\t    var buildBezierData = (function(){\r\n\t\r\n\t        var storedData = {};\r\n\t\r\n\t        return function (keyData){\r\n\t            var pt1 = keyData.s;\r\n\t            var pt2 = keyData.e;\r\n\t            var pt3 = keyData.to;\r\n\t            var pt4 = keyData.ti;\r\n\t            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n\t            if(storedData[bezierName]){\r\n\t                keyData.bezierData = storedData[bezierName];\r\n\t                return;\r\n\t            }\r\n\t            var curveSegments = defaultCurveSegments;\r\n\t            var k, i, len;\r\n\t            var ptCoord,perc,addedLength = 0;\r\n\t            var ptDistance;\r\n\t            var point,lastPoint = null;\r\n\t            if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n\t                curveSegments = 2;\r\n\t            }\r\n\t            var bezierData = new BezierData(curveSegments);\r\n\t            len = pt3.length;\r\n\t            for (k = 0; k < curveSegments; k += 1) {\r\n\t                point = createSizedArray(len);\r\n\t                perc = k / (curveSegments - 1);\r\n\t                ptDistance = 0;\r\n\t                for (i = 0; i < len; i += 1){\r\n\t                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n\t                    point[i] = ptCoord;\r\n\t                    if(lastPoint !== null){\r\n\t                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n\t                    }\r\n\t                }\r\n\t                ptDistance = bm_sqrt(ptDistance);\r\n\t                addedLength += ptDistance;\r\n\t                bezierData.points[k] = new PointData(ptDistance, point);\r\n\t                lastPoint = point;\r\n\t            }\r\n\t            bezierData.segmentLength = addedLength;\r\n\t            keyData.bezierData = bezierData;\r\n\t            storedData[bezierName] = bezierData;\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    function getDistancePerc(perc,bezierData){\r\n\t        var percents = bezierData.percents;\r\n\t        var lengths = bezierData.lengths;\r\n\t        var len = percents.length;\r\n\t        var initPos = bm_floor((len-1)*perc);\r\n\t        var lengthPos = perc*bezierData.addedLength;\r\n\t        var lPerc = 0;\r\n\t        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n\t            return percents[initPos];\r\n\t        }else{\r\n\t            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n\t            var flag = true;\r\n\t            while(flag){\r\n\t                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n\t                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n\t                    flag = false;\r\n\t                }else{\r\n\t                    initPos += dir;\r\n\t                }\r\n\t                if(initPos < 0 || initPos >= len - 1){\r\n\t                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n\t                    if(initPos === len - 1) {\r\n\t                        return percents[initPos];\r\n\t                    }\r\n\t                    flag = false;\r\n\t                }\r\n\t            }\r\n\t            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n\t        var t1 = getDistancePerc(percent,bezierData);\r\n\t        var u0 = 1;\r\n\t        var u1 = 1 - t1;\r\n\t        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n\t        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n\t        return [ptX, ptY];\r\n\t    }\r\n\t\r\n\t    function getSegmentArray() {\r\n\t\r\n\t    }\r\n\t\r\n\t    var bezier_segment_points = createTypedArray('float32', 8);\r\n\t\r\n\t    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\t\r\n\t        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n\t        var t0 = getDistancePerc(startPerc,bezierData);\r\n\t        endPerc = endPerc > 1 ? 1 : endPerc;\r\n\t        var t1 = getDistancePerc(endPerc,bezierData);\r\n\t        var i, len = pt1.length;\r\n\t        var u0 = 1 - t0;\r\n\t        var u1 = 1 - t1;\r\n\t        var u0u0u0 = u0*u0*u0;\r\n\t        var t0u0u0_3 = t0*u0*u0*3; // t0*u0*u0 + u0*t0*u0 + u0*u0*t0\r\n\t        var t0t0u0_3 = t0*t0*u0*3; // t0*t0*u0 + u0*t0*t0 + t0*u0*t0\r\n\t        var t0t0t0 = t0*t0*t0;\r\n\t        //\r\n\t        var u0u0u1 = u0*u0*u1;\r\n\t        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n\t        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n\t        var t0t0t1 = t0*t0*t1;\r\n\t        //\r\n\t        var u0u1u1 = u0*u1*u1;\r\n\t        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n\t        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n\t        var t0t1t1 = t0*t1*t1;\r\n\t        //\r\n\t        var u1u1u1 = u1*u1*u1;\r\n\t        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n\t        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n\t        var t1t1t1 = t1*t1*t1;\r\n\t        //Math.round(num * 100) / 100\r\n\t        for(i=0;i<len;i+=1){\r\n\t            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n\t            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n\t            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n\t            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n\t            // pts.pt1[i] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n\t            // pts.pt3[i] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n\t            // pts.pt4[i] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n\t            // pts.pt2[i] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n\t            // pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n\t            // pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n\t            // pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n\t            // pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n\t        }\r\n\t\r\n\t        return bezier_segment_points;\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        //getEasingCurve : getEasingCurve,\r\n\t        getSegmentsLength : getSegmentsLength,\r\n\t        getNewSegment : getNewSegment,\r\n\t        getPointInSegment : getPointInSegment,\r\n\t        buildBezierData : buildBezierData,\r\n\t        pointOnLine2D : pointOnLine2D,\r\n\t        pointOnLine3D : pointOnLine3D\r\n\t    };\r\n\t}\r\n\t\r\n\tvar bez = bezFunction();\n\tfunction dataFunctionManager(){\r\n\t\r\n\t    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\t\r\n\t    function completeLayers(layers, comps, fontManager){\r\n\t        var layerData;\r\n\t        var animArray, lastFrame;\r\n\t        var i, len = layers.length;\r\n\t        var j, jLen, k, kLen;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            layerData = layers[i];\r\n\t            if(!('ks' in layerData) || layerData.completed){\r\n\t                continue;\r\n\t            }\r\n\t            layerData.completed = true;\r\n\t            if(layerData.tt){\r\n\t                layers[i-1].td = layerData.tt;\r\n\t            }\r\n\t            animArray = [];\r\n\t            lastFrame = -1;\r\n\t            if(layerData.hasMask){\r\n\t                var maskProps = layerData.masksProperties;\r\n\t                jLen = maskProps.length;\r\n\t                for(j=0;j<jLen;j+=1){\r\n\t                    if(maskProps[j].pt.k.i){\r\n\t                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n\t                    }else{\r\n\t                        kLen = maskProps[j].pt.k.length;\r\n\t                        for(k=0;k<kLen;k+=1){\r\n\t                            if(maskProps[j].pt.k[k].s){\r\n\t                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n\t                            }\r\n\t                            if(maskProps[j].pt.k[k].e){\r\n\t                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            if(layerData.ty===0){\r\n\t                layerData.layers = findCompLayers(layerData.refId, comps);\r\n\t                completeLayers(layerData.layers,comps, fontManager);\r\n\t            }else if(layerData.ty === 4){\r\n\t                completeShapes(layerData.shapes);\r\n\t            }else if(layerData.ty == 5){\r\n\t                completeText(layerData, fontManager);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function findCompLayers(id,comps){\r\n\t        var i = 0, len = comps.length;\r\n\t        while(i<len){\r\n\t            if(comps[i].id === id){\r\n\t                if(!comps[i].layers.__used) {\r\n\t                    comps[i].layers.__used = true;\r\n\t                    return comps[i].layers;\r\n\t                }\r\n\t                return JSON.parse(JSON.stringify(comps[i].layers));\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function completeShapes(arr){\r\n\t        var i, len = arr.length;\r\n\t        var j, jLen;\r\n\t        var hasPaths = false;\r\n\t        for(i=len-1;i>=0;i-=1){\r\n\t            if(arr[i].ty == 'sh'){\r\n\t                if(arr[i].ks.k.i){\r\n\t                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n\t                }else{\r\n\t                    jLen = arr[i].ks.k.length;\r\n\t                    for(j=0;j<jLen;j+=1){\r\n\t                        if(arr[i].ks.k[j].s){\r\n\t                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n\t                        }\r\n\t                        if(arr[i].ks.k[j].e){\r\n\t                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                hasPaths = true;\r\n\t            }else if(arr[i].ty == 'gr'){\r\n\t                completeShapes(arr[i].it);\r\n\t            }\r\n\t        }\r\n\t        /*if(hasPaths){\r\n\t            //mx: distance\r\n\t            //ss: sensitivity\r\n\t            //dc: decay\r\n\t            arr.splice(arr.length-1,0,{\r\n\t                \"ty\": \"ms\",\r\n\t                \"mx\":20,\r\n\t                \"ss\":10,\r\n\t                 \"dc\":0.001,\r\n\t                \"maxDist\":200\r\n\t            });\r\n\t        }*/\r\n\t    }\r\n\t\r\n\t    function convertPathsToAbsoluteValues(path){\r\n\t        var i, len = path.i.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            path.i[i][0] += path.v[i][0];\r\n\t            path.i[i][1] += path.v[i][1];\r\n\t            path.o[i][0] += path.v[i][0];\r\n\t            path.o[i][1] += path.v[i][1];\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function checkVersion(minimum,animVersionString){\r\n\t        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n\t        if(minimum[0]>animVersion[0]){\r\n\t            return true;\r\n\t        } else if(animVersion[0] > minimum[0]){\r\n\t            return false;\r\n\t        }\r\n\t        if(minimum[1]>animVersion[1]){\r\n\t            return true;\r\n\t        } else if(animVersion[1] > minimum[1]){\r\n\t            return false;\r\n\t        }\r\n\t        if(minimum[2]>animVersion[2]){\r\n\t            return true;\r\n\t        } else if(animVersion[2] > minimum[2]){\r\n\t            return false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    var checkText = (function(){\r\n\t        var minimumVersion = [4,4,14];\r\n\t\r\n\t        function updateTextLayer(textLayer){\r\n\t            var documentData = textLayer.t.d;\r\n\t            textLayer.t.d = {\r\n\t                k: [\r\n\t                    {\r\n\t                        s:documentData,\r\n\t                        t:0\r\n\t                    }\r\n\t                ]\r\n\t            };\r\n\t        }\r\n\t\r\n\t        function iterateLayers(layers){\r\n\t            var i, len = layers.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                if(layers[i].ty === 5){\r\n\t                    updateTextLayer(layers[i]);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return function (animationData){\r\n\t            if(checkVersion(minimumVersion,animationData.v)){\r\n\t                iterateLayers(animationData.layers);\r\n\t                if(animationData.assets){\r\n\t                    var i, len = animationData.assets.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        if(animationData.assets[i].layers){\r\n\t                            iterateLayers(animationData.assets[i].layers);\r\n\t\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    var checkChars = (function() {\r\n\t        var minimumVersion = [4,7,99];\r\n\t        return function (animationData){\r\n\t            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n\t                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n\t                var pathData, paths;\r\n\t                for(i = 0; i < len; i += 1) {\r\n\t                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n\t                        paths = animationData.chars[i].data.shapes[0].it;\r\n\t                        jLen = paths.length;\r\n\t\r\n\t                        for(j = 0; j < jLen; j += 1) {\r\n\t                            pathData = paths[j].ks.k;\r\n\t                            if(!pathData.__converted) {\r\n\t                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n\t                                pathData.__converted = true;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    var checkColors = (function(){\r\n\t        var minimumVersion = [4,1,9];\r\n\t\r\n\t        function iterateShapes(shapes){\r\n\t            var i, len = shapes.length;\r\n\t            var j, jLen;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                if(shapes[i].ty === 'gr'){\r\n\t                    iterateShapes(shapes[i].it);\r\n\t                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n\t                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n\t                        jLen = shapes[i].c.k.length;\r\n\t                        for(j=0;j<jLen;j+=1){\r\n\t                            if(shapes[i].c.k[j].s){\r\n\t                                shapes[i].c.k[j].s[0] /= 255;\r\n\t                                shapes[i].c.k[j].s[1] /= 255;\r\n\t                                shapes[i].c.k[j].s[2] /= 255;\r\n\t                                shapes[i].c.k[j].s[3] /= 255;\r\n\t                            }\r\n\t                            if(shapes[i].c.k[j].e){\r\n\t                                shapes[i].c.k[j].e[0] /= 255;\r\n\t                                shapes[i].c.k[j].e[1] /= 255;\r\n\t                                shapes[i].c.k[j].e[2] /= 255;\r\n\t                                shapes[i].c.k[j].e[3] /= 255;\r\n\t                            }\r\n\t                        }\r\n\t                    } else {\r\n\t                        shapes[i].c.k[0] /= 255;\r\n\t                        shapes[i].c.k[1] /= 255;\r\n\t                        shapes[i].c.k[2] /= 255;\r\n\t                        shapes[i].c.k[3] /= 255;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        function iterateLayers(layers){\r\n\t            var i, len = layers.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                if(layers[i].ty === 4){\r\n\t                    iterateShapes(layers[i].shapes);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return function (animationData){\r\n\t            if(checkVersion(minimumVersion,animationData.v)){\r\n\t                iterateLayers(animationData.layers);\r\n\t                if(animationData.assets){\r\n\t                    var i, len = animationData.assets.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        if(animationData.assets[i].layers){\r\n\t                            iterateLayers(animationData.assets[i].layers);\r\n\t\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    var checkShapes = (function(){\r\n\t        var minimumVersion = [4,4,18];\r\n\t\r\n\t\r\n\t\r\n\t        function completeShapes(arr){\r\n\t            var i, len = arr.length;\r\n\t            var j, jLen;\r\n\t            var hasPaths = false;\r\n\t            for(i=len-1;i>=0;i-=1){\r\n\t                if(arr[i].ty == 'sh'){\r\n\t                    if(arr[i].ks.k.i){\r\n\t                        arr[i].ks.k.c = arr[i].closed;\r\n\t                    }else{\r\n\t                        jLen = arr[i].ks.k.length;\r\n\t                        for(j=0;j<jLen;j+=1){\r\n\t                            if(arr[i].ks.k[j].s){\r\n\t                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n\t                            }\r\n\t                            if(arr[i].ks.k[j].e){\r\n\t                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                    hasPaths = true;\r\n\t                }else if(arr[i].ty == 'gr'){\r\n\t                    completeShapes(arr[i].it);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        function iterateLayers(layers){\r\n\t            var layerData;\r\n\t            var i, len = layers.length;\r\n\t            var j, jLen, k, kLen;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                layerData = layers[i];\r\n\t                if(layerData.hasMask){\r\n\t                    var maskProps = layerData.masksProperties;\r\n\t                    jLen = maskProps.length;\r\n\t                    for(j=0;j<jLen;j+=1){\r\n\t                        if(maskProps[j].pt.k.i){\r\n\t                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n\t                        }else{\r\n\t                            kLen = maskProps[j].pt.k.length;\r\n\t                            for(k=0;k<kLen;k+=1){\r\n\t                                if(maskProps[j].pt.k[k].s){\r\n\t                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n\t                                }\r\n\t                                if(maskProps[j].pt.k[k].e){\r\n\t                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n\t                                }\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                if(layerData.ty === 4){\r\n\t                    completeShapes(layerData.shapes);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return function (animationData){\r\n\t            if(checkVersion(minimumVersion,animationData.v)){\r\n\t                iterateLayers(animationData.layers);\r\n\t                if(animationData.assets){\r\n\t                    var i, len = animationData.assets.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        if(animationData.assets[i].layers){\r\n\t                            iterateLayers(animationData.assets[i].layers);\r\n\t\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    /*function blitPaths(path){\r\n\t        var i, len = path.i.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            path.i[i][0] /= blitter;\r\n\t            path.i[i][1] /= blitter;\r\n\t            path.o[i][0] /= blitter;\r\n\t            path.o[i][1] /= blitter;\r\n\t            path.v[i][0] /= blitter;\r\n\t            path.v[i][1] /= blitter;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function blitShapes(arr){\r\n\t        var i, len = arr.length;\r\n\t        var j, jLen;\r\n\t        var hasPaths = false;\r\n\t        for(i=len-1;i>=0;i-=1){\r\n\t            if(arr[i].ty == 'sh'){\r\n\t                if(arr[i].ks.k.i){\r\n\t                    blitPaths(arr[i].ks.k);\r\n\t                }else{\r\n\t                    jLen = arr[i].ks.k.length;\r\n\t                    for(j=0;j<jLen;j+=1){\r\n\t                        if(arr[i].ks.k[j].s){\r\n\t                            blitPaths(arr[i].ks.k[j].s[0]);\r\n\t                        }\r\n\t                        if(arr[i].ks.k[j].e){\r\n\t                            blitPaths(arr[i].ks.k[j].e[0]);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                hasPaths = true;\r\n\t            }else if(arr[i].ty == 'gr'){\r\n\t                blitShapes(arr[i].it);\r\n\t            }else if(arr[i].ty == 'rc'){\r\n\t                blitProperty(arr[i].p);\r\n\t                blitProperty(arr[i].s);\r\n\t            }else if(arr[i].ty == 'st'){\r\n\t                blitProperty(arr[i].w);\r\n\t            }else if(arr[i].ty == 'tr'){\r\n\t                blitProperty(arr[i].p);\r\n\t                blitProperty(arr[i].sk);\r\n\t                blitProperty(arr[i].a);\r\n\t            }else if(arr[i].ty == 'el'){\r\n\t                blitProperty(arr[i].p);\r\n\t                blitProperty(arr[i].s);\r\n\t            }else if(arr[i].ty == 'rd'){\r\n\t                blitProperty(arr[i].r);\r\n\t            }else{\r\n\t\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function blitText(data, fontManager){\r\n\t\r\n\t    }\r\n\t\r\n\t    function blitValue(val){\r\n\t        if(typeof(val) === 'number'){\r\n\t            val /= blitter;\r\n\t        } else {\r\n\t            var i = val.length-1;\r\n\t            while(i>=0){\r\n\t                val[i] /= blitter;\r\n\t                i-=1;\r\n\t            }\r\n\t        }\r\n\t        return val;\r\n\t    }\r\n\t\r\n\t    function blitProperty(data){\r\n\t        if(!data.k.length){\r\n\t            data.k = blitValue(data.k);\r\n\t        }else if(typeof(data.k[0]) === 'number'){\r\n\t            data.k = blitValue(data.k);\r\n\t        } else {\r\n\t            var i, len = data.k.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                if(data.k[i].s){\r\n\t                    data.k[i].s = blitValue(data.k[i].s);\r\n\t                }\r\n\t                if(data.k[i].e){\r\n\t                    data.k[i].e = blitValue(data.k[i].e);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function blitLayers(layers,comps, fontManager){\r\n\t        var layerData;\r\n\t        var animArray, lastFrame;\r\n\t        var i, len = layers.length;\r\n\t        var j, jLen, k, kLen;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            layerData = layers[i];\r\n\t            if(!('ks' in layerData)){\r\n\t                continue;\r\n\t            }\r\n\t            blitProperty(layerData.ks.a);\r\n\t            blitProperty(layerData.ks.p);\r\n\t            layerData.completed = true;\r\n\t            if(layerData.tt){\r\n\t                layers[i-1].td = layerData.tt;\r\n\t            }\r\n\t            animArray = [];\r\n\t            lastFrame = -1;\r\n\t            if(layerData.hasMask){\r\n\t                var maskProps = layerData.masksProperties;\r\n\t                jLen = maskProps.length;\r\n\t                for(j=0;j<jLen;j+=1){\r\n\t                    if(maskProps[j].pt.k.i){\r\n\t                        blitPaths(maskProps[j].pt.k);\r\n\t                    }else{\r\n\t                        kLen = maskProps[j].pt.k.length;\r\n\t                        for(k=0;k<kLen;k+=1){\r\n\t                            if(maskProps[j].pt.k[k].s){\r\n\t                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n\t                            }\r\n\t                            if(maskProps[j].pt.k[k].e){\r\n\t                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            if(layerData.ty===0){\r\n\t                layerData.w = Math.round(layerData.w/blitter);\r\n\t                layerData.h = Math.round(layerData.h/blitter);\r\n\t                blitLayers(layerData.layers,comps, fontManager);\r\n\t            }else if(layerData.ty === 4){\r\n\t                blitShapes(layerData.shapes);\r\n\t            }else if(layerData.ty == 5){\r\n\t                blitText(layerData, fontManager);\r\n\t            }else if(layerData.ty == 1){\r\n\t                layerData.sh /= blitter;\r\n\t                layerData.sw /= blitter;\r\n\t            } else {\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function blitAnimation(animationData,comps, fontManager){\r\n\t        blitLayers(animationData.layers,comps, fontManager);\r\n\t    }*/\r\n\t\r\n\t    function completeData(animationData, fontManager){\r\n\t        if(animationData.__complete){\r\n\t            return;\r\n\t        }\r\n\t        checkColors(animationData);\r\n\t        checkText(animationData);\r\n\t        checkChars(animationData);\r\n\t        checkShapes(animationData);\r\n\t        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n\t        animationData.__complete = true;\r\n\t        //blitAnimation(animationData, animationData.assets, fontManager);\r\n\t    }\r\n\t\r\n\t    function completeText(data, fontManager){\r\n\t        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n\t            data.singleShape = true;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    var moduleOb = {};\r\n\t    moduleOb.completeData = completeData;\r\n\t\r\n\t    return moduleOb;\r\n\t}\r\n\t\r\n\tvar dataManager = dataFunctionManager();\n\tvar FontManager = (function(){\r\n\t\r\n\t    var maxWaitingTime = 5000;\r\n\t    var emptyChar = {\r\n\t        w: 0,\r\n\t        size:0,\r\n\t        shapes:[]\r\n\t    };\r\n\t    var combinedCharacters = [];\r\n\t    //Hindi characters\r\n\t    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n\t    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n\t    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\t\r\n\t    function setUpNode(font, family){\r\n\t        var parentNode = createTag('span');\r\n\t        parentNode.style.fontFamily    = family;\r\n\t        var node = createTag('span');\r\n\t        // Characters that vary significantly among different fonts\r\n\t        node.innerHTML = 'giItT1WQy@!-/#';\r\n\t        // Visible - so we can measure it - but not on the screen\r\n\t        parentNode.style.position      = 'absolute';\r\n\t        parentNode.style.left          = '-10000px';\r\n\t        parentNode.style.top           = '-10000px';\r\n\t        // Large font size makes even subtle changes obvious\r\n\t        parentNode.style.fontSize      = '300px';\r\n\t        // Reset any font properties\r\n\t        parentNode.style.fontVariant   = 'normal';\r\n\t        parentNode.style.fontStyle     = 'normal';\r\n\t        parentNode.style.fontWeight    = 'normal';\r\n\t        parentNode.style.letterSpacing = '0';\r\n\t        parentNode.appendChild(node);\r\n\t        document.body.appendChild(parentNode);\r\n\t\r\n\t        // Remember width with no applied web font\r\n\t        var width = node.offsetWidth;\r\n\t        node.style.fontFamily = font + ', '+family;\r\n\t        return {node:node, w:width, parent:parentNode};\r\n\t    }\r\n\t\r\n\t    function checkLoadedFonts() {\r\n\t        var i, len = this.fonts.length;\r\n\t        var node, w;\r\n\t        var loadedCount = len;\r\n\t        for(i=0;i<len; i+= 1){\r\n\t            if(this.fonts[i].loaded){\r\n\t                loadedCount -= 1;\r\n\t                continue;\r\n\t            }\r\n\t            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n\t                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n\t                    this.typekitLoaded = 1;\r\n\t                    try{window.Typekit.load({\r\n\t                        async: true,\r\n\t                        active: function() {\r\n\t                            this.typekitLoaded = 2;\r\n\t                        }.bind(this)\r\n\t                    });}catch(e){}\r\n\t                }\r\n\t                if(this.typekitLoaded === 2) {\r\n\t                    this.fonts[i].loaded = true;\r\n\t                }\r\n\t            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n\t                this.fonts[i].loaded = true;\r\n\t            } else{\r\n\t                node = this.fonts[i].monoCase.node;\r\n\t                w = this.fonts[i].monoCase.w;\r\n\t                if(node.offsetWidth !== w){\r\n\t                    loadedCount -= 1;\r\n\t                    this.fonts[i].loaded = true;\r\n\t                }else{\r\n\t                    node = this.fonts[i].sansCase.node;\r\n\t                    w = this.fonts[i].sansCase.w;\r\n\t                    if(node.offsetWidth !== w){\r\n\t                        loadedCount -= 1;\r\n\t                        this.fonts[i].loaded = true;\r\n\t                    }\r\n\t                }\r\n\t                if(this.fonts[i].loaded){\r\n\t                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n\t                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n\t            setTimeout(checkLoadedFonts.bind(this),20);\r\n\t        }else{\r\n\t            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\t\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function createHelper(def, fontData){\r\n\t        var tHelper = createNS('text');\r\n\t        tHelper.style.fontSize = '100px';\r\n\t        tHelper.style.fontFamily = fontData.fFamily;\r\n\t        tHelper.textContent = '1';\r\n\t        if(fontData.fClass){\r\n\t            tHelper.style.fontFamily = 'inherit';\r\n\t            tHelper.className = fontData.fClass;\r\n\t        } else {\r\n\t            tHelper.style.fontFamily = fontData.fFamily;\r\n\t        }\r\n\t        def.appendChild(tHelper);\r\n\t        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\t        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n\t        return tCanvasHelper;\r\n\t    }\r\n\t\r\n\t    function addFonts(fontData, defs){\r\n\t        if(!fontData){\r\n\t            this.loaded = true;\r\n\t            return;\r\n\t        }\r\n\t        if(this.chars){\r\n\t            this.loaded = true;\r\n\t            this.fonts = fontData.list;\r\n\t            return;\r\n\t        }\r\n\t\r\n\t\r\n\t        var fontArr = fontData.list;\r\n\t        var i, len = fontArr.length;\r\n\t        for(i=0; i<len; i+= 1){\r\n\t            fontArr[i].loaded = false;\r\n\t            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n\t            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n\t            if(!fontArr[i].fPath) {\r\n\t                fontArr[i].loaded = true;\r\n\t            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n\t                var s = createTag('style');\r\n\t                s.type = \"text/css\";\r\n\t                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n\t                defs.appendChild(s);\r\n\t            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n\t                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n\t                var l = createTag('link');\r\n\t                l.type = \"text/css\";\r\n\t                l.rel = \"stylesheet\";\r\n\t                l.href = fontArr[i].fPath;\r\n\t                defs.appendChild(l);\r\n\t            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n\t                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n\t                var sc = createTag('script');\r\n\t                sc.setAttribute('src',fontArr[i].fPath);\r\n\t                defs.appendChild(sc);\r\n\t            }\r\n\t            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n\t            this.fonts.push(fontArr[i]);\r\n\t        }\r\n\t        //On some cases the font even if it is loaded, it won't load correctly when measuring text on canvas.\r\n\t        //Adding this timeout seems to fix it\r\n\t        setTimeout(function() {\r\n\t            checkLoadedFonts.bind(this)();\r\n\t        }.bind(this), 100);\r\n\t    }\r\n\t\r\n\t    function addChars(chars){\r\n\t        if(!chars){\r\n\t            return;\r\n\t        }\r\n\t        if(!this.chars){\r\n\t            this.chars = [];\r\n\t        }\r\n\t        var i, len = chars.length;\r\n\t        var j, jLen = this.chars.length, found;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            j = 0;\r\n\t            found = false;\r\n\t            while(j<jLen){\r\n\t                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n\t                    found = true;\r\n\t                }\r\n\t                j += 1;\r\n\t            }\r\n\t            if(!found){\r\n\t                this.chars.push(chars[i]);\r\n\t                jLen += 1;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getCharData(char, style, font){\r\n\t        var i = 0, len = this.chars.length;\r\n\t        while( i < len) {\r\n\t            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n\t                return this.chars[i];\r\n\t            }\r\n\t            i+= 1;\r\n\t        }\r\n\t        if(console && console.warn) {\r\n\t            console.warn('Missing character from exported characters list: ', char, style, font);\r\n\t        }\r\n\t        return emptyChar;\r\n\t    }\r\n\t\r\n\t    function measureText(char, fontName, size){\r\n\t        var fontData = this.getFontByName(fontName);\r\n\t        var tHelper = fontData.helper;\r\n\t        //tHelper.textContent = char;\r\n\t        return tHelper.measureText(char).width*size/100;\r\n\t        //return tHelper.getComputedTextLength()*size/100;\r\n\t    }\r\n\t\r\n\t    function getFontByName(name){\r\n\t        var i = 0, len = this.fonts.length;\r\n\t        while(i<len){\r\n\t            if(this.fonts[i].fName === name) {\r\n\t                return this.fonts[i];\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        return 'sans-serif';\r\n\t    }\r\n\t\r\n\t    function getCombinedCharacterCodes() {\r\n\t        return combinedCharacters;\r\n\t    }\r\n\t\r\n\t    var Font = function(){\r\n\t        this.fonts = [];\r\n\t        this.chars = null;\r\n\t        this.typekitLoaded = 0;\r\n\t        this.loaded = false;\r\n\t        this.initTime = Date.now();\r\n\t    };\r\n\t    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n\t    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\t\r\n\t    Font.prototype.addChars = addChars;\r\n\t    Font.prototype.addFonts = addFonts;\r\n\t    Font.prototype.getCharData = getCharData;\r\n\t    Font.prototype.getFontByName = getFontByName;\r\n\t    Font.prototype.measureText = measureText;\r\n\t\r\n\t    return Font;\r\n\t\r\n\t}());\n\tvar PropertyFactory = (function(){\r\n\t\r\n\t    var initFrame = initialDefaultFrame;\r\n\t\r\n\t    function interpolateValue(frameNum, caching){\r\n\t        var offsetTime = this.offsetTime;\r\n\t        var newValue;\r\n\t        if(this.propType === 'multidimensional') {\r\n\t            newValue = createTypedArray('float32', this.pv.length);\r\n\t        }\r\n\t        var iterationIndex = caching.lastIndex;\r\n\t        var i = iterationIndex;\r\n\t        var len = this.keyframes.length- 1,flag = true;\r\n\t        var keyData, nextKeyData;\r\n\t\r\n\t        while(flag){\r\n\t            keyData = this.keyframes[i];\r\n\t            nextKeyData = this.keyframes[i+1];\r\n\t            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n\t                if(keyData.h){\r\n\t                    keyData = nextKeyData;\r\n\t                }\r\n\t                iterationIndex = 0;\r\n\t                break;\r\n\t            }\r\n\t            if((nextKeyData.t - offsetTime) > frameNum){\r\n\t                iterationIndex = i;\r\n\t                break;\r\n\t            }\r\n\t            if(i < len - 1){\r\n\t                i += 1;\r\n\t            }else{\r\n\t                iterationIndex = 0;\r\n\t                flag = false;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        var k, kLen,perc,jLen, j, fnc;\r\n\t        if(keyData.to){\r\n\t\r\n\t            if(!keyData.bezierData){\r\n\t                bez.buildBezierData(keyData);\r\n\t            }\r\n\t            var bezierData = keyData.bezierData;\r\n\t            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n\t                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n\t                kLen = bezierData.points[ind].point.length;\r\n\t                for(k = 0; k < kLen; k += 1){\r\n\t                    newValue[k] = bezierData.points[ind].point[k];\r\n\t                }\r\n\t                caching._lastBezierData = null;\r\n\t            }else{\r\n\t                if(keyData.__fnct){\r\n\t                    fnc = keyData.__fnct;\r\n\t                }else{\r\n\t                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n\t                    keyData.__fnct = fnc;\r\n\t                }\r\n\t                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n\t                var distanceInLine = bezierData.segmentLength*perc;\r\n\t\r\n\t                var segmentPerc;\r\n\t                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n\t                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n\t                flag = true;\r\n\t                jLen = bezierData.points.length;\r\n\t                while(flag){\r\n\t                    addedLength +=bezierData.points[j].partialLength;\r\n\t                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n\t                        kLen = bezierData.points[j].point.length;\r\n\t                        for(k=0;k<kLen;k+=1){\r\n\t                            newValue[k] = bezierData.points[j].point[k];\r\n\t                        }\r\n\t                        break;\r\n\t                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n\t                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n\t                        kLen = bezierData.points[j].point.length;\r\n\t                        for(k=0;k<kLen;k+=1){\r\n\t                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n\t                        }\r\n\t                        break;\r\n\t                    }\r\n\t                    if(j < jLen - 1){\r\n\t                        j += 1;\r\n\t                    }else{\r\n\t                        flag = false;\r\n\t                    }\r\n\t                }\r\n\t                caching._lastPoint = j;\r\n\t                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n\t                caching._lastBezierData = bezierData;\r\n\t            }\r\n\t        }else{\r\n\t            var outX,outY,inX,inY, keyValue;\r\n\t            len = keyData.s.length;\r\n\t            if(this.sh && keyData.h !== 1) {\r\n\t                if(frameNum >= nextKeyData.t-offsetTime){\r\n\t                    newValue[0] = keyData.e[0];\r\n\t                    newValue[1] = keyData.e[1];\r\n\t                    newValue[2] = keyData.e[2];\r\n\t                }else if(frameNum <= keyData.t-offsetTime){\r\n\t                    newValue[0] = keyData.s[0];\r\n\t                    newValue[1] = keyData.s[1];\r\n\t                    newValue[2] = keyData.s[2];\r\n\t                }else{\r\n\t                    var quatStart = createQuaternion(keyData.s);\r\n\t                    var quatEnd = createQuaternion(keyData.e);\r\n\t                    var time = (frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime));\r\n\t                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n\t                }\r\n\t                \r\n\t            } else {\r\n\t                for(i=0;i<len;i+=1){\r\n\t                    if(keyData.h !== 1){\r\n\t                        if(frameNum >= nextKeyData.t-offsetTime){\r\n\t                            perc = 1;\r\n\t                        }else if(frameNum < keyData.t-offsetTime){\r\n\t                            perc = 0;\r\n\t                        }else{\r\n\t                            if(keyData.o.x.constructor === Array){\r\n\t                                if(!keyData.__fnct){\r\n\t                                    keyData.__fnct = [];\r\n\t                                }\r\n\t                                if (!keyData.__fnct[i]) {\r\n\t                                    outX = keyData.o.x[i] || keyData.o.x[0];\r\n\t                                    outY = keyData.o.y[i] || keyData.o.y[0];\r\n\t                                    inX = keyData.i.x[i] || keyData.i.x[0];\r\n\t                                    inY = keyData.i.y[i] || keyData.i.y[0];\r\n\t                                    fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n\t                                    keyData.__fnct[i] = fnc;\r\n\t                                } else {\r\n\t                                    fnc = keyData.__fnct[i];\r\n\t                                }\r\n\t                            } else {\r\n\t                                if (!keyData.__fnct) {\r\n\t                                    outX = keyData.o.x;\r\n\t                                    outY = keyData.o.y;\r\n\t                                    inX = keyData.i.x;\r\n\t                                    inY = keyData.i.y;\r\n\t                                    fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n\t                                    keyData.__fnct = fnc;\r\n\t                                } else{\r\n\t                                    fnc = keyData.__fnct;\r\n\t                                }\r\n\t                            }\r\n\t                            perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n\t\r\n\t                    if(len === 1){\r\n\t                        newValue = keyValue;\r\n\t                    }else{\r\n\t                        newValue[i] = keyValue;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        caching.lastIndex = iterationIndex;\r\n\t        return newValue;\r\n\t    }\r\n\t\r\n\t    //based on @Toji's https://github.com/toji/gl-matrix/\r\n\t    function slerp(a, b, t) {\r\n\t        var out = [];\r\n\t        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n\t        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\t\r\n\t        var omega, cosom, sinom, scale0, scale1;\r\n\t\r\n\t        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n\t        if (cosom < 0.0) {\r\n\t            cosom = -cosom;\r\n\t            bx = -bx;\r\n\t            by = -by;\r\n\t            bz = -bz;\r\n\t            bw = -bw;\r\n\t        }\r\n\t        if ((1.0 - cosom) > 0.000001) {\r\n\t            omega = Math.acos(cosom);\r\n\t            sinom = Math.sin(omega);\r\n\t            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n\t            scale1 = Math.sin(t * omega) / sinom;\r\n\t        } else {\r\n\t            scale0 = 1.0 - t;\r\n\t            scale1 = t;\r\n\t        }\r\n\t        out[0] = scale0 * ax + scale1 * bx;\r\n\t        out[1] = scale0 * ay + scale1 * by;\r\n\t        out[2] = scale0 * az + scale1 * bz;\r\n\t        out[3] = scale0 * aw + scale1 * bw;\r\n\t\r\n\t        return out;\r\n\t    }\r\n\t\r\n\t    function quaternionToEuler(out, quat) {\r\n\t        var qx = quat[0];\r\n\t        var qy = quat[1];\r\n\t        var qz = quat[2];\r\n\t        var qw = quat[3];\r\n\t        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n\t        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n\t        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n\t        out[0] = heading/degToRads;\r\n\t        out[1] = attitude/degToRads;\r\n\t        out[2] = bank/degToRads;\r\n\t    }\r\n\t\r\n\t    function createQuaternion(values) {\r\n\t        var heading = values[0] * degToRads;\r\n\t        var attitude = values[1] * degToRads;\r\n\t        var bank = values[2] * degToRads;\r\n\t        var c1 = Math.cos(heading / 2);\r\n\t        var c2 = Math.cos(attitude / 2);\r\n\t        var c3 = Math.cos(bank / 2);\r\n\t        var s1 = Math.sin(heading / 2);\r\n\t        var s2 = Math.sin(attitude / 2);\r\n\t        var s3 = Math.sin(bank / 2);\r\n\t        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n\t        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\r\n\t        return [x,y,z,w];\r\n\t    }\r\n\t\r\n\t    function getValueAtCurrentTime(){\r\n\t        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n\t        var initTime = this.keyframes[0].t - this.offsetTime;\r\n\t        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n\t        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n\t            this._caching.lastIndex = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n\t            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n\t            this.pv = renderResult;\r\n\t        }\r\n\t        this._caching.lastFrame = frameNum;\r\n\t        return this.pv;\r\n\t    }\r\n\t\r\n\t    function getNoValue(){\r\n\t        this._mdf = false;\r\n\t    }\r\n\t\r\n\t    function setVValue(val) {\r\n\t        var multipliedValue;\r\n\t        if(this.propType === 'unidimensional') {\r\n\t            multipliedValue = val * this.mult;\r\n\t            if(Math.abs(this.v - multipliedValue) > 0.00001) {\r\n\t                this.v = multipliedValue;\r\n\t                this._mdf = true;\r\n\t            }\r\n\t        } else {\r\n\t            var i = 0, len = this.v.length;\r\n\t            while (i < len) {\r\n\t                multipliedValue = val[i] * this.mult;\r\n\t                if (Math.abs(this.v[i] - multipliedValue) > 0.00001) {\r\n\t                    this.v[i] = multipliedValue;\r\n\t                    this._mdf = true;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function processEffectsSequence() {\r\n\t        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n\t            return;\r\n\t        }        \r\n\t        if(this.lock) {\r\n\t            this.setVValue(this.pv);\r\n\t            return;\r\n\t        }\r\n\t        this.lock = true;\r\n\t        this._mdf = this._isFirstFrame;\r\n\t        var multipliedValue;\r\n\t        var i, len = this.effectsSequence.length;\r\n\t        var finalValue = this.kf ? this.pv : this.data.k;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            finalValue = this.effectsSequence[i](finalValue);\r\n\t        }\r\n\t        this.setVValue(finalValue);\r\n\t        this._isFirstFrame = false;\r\n\t        this.lock = false;\r\n\t        this.frameId = this.elem.globalData.frameId;\r\n\t    }\r\n\t\r\n\t    function addEffect(effectFunction) {\r\n\t        this.effectsSequence.push(effectFunction);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    }\r\n\t\r\n\t    function ValueProperty(elem, data, mult, container){\r\n\t        this.propType = 'unidimensional';\r\n\t        this.mult = mult || 1;\r\n\t        this.data = data;\r\n\t        this.v = mult ? data.k * mult : data.k;\r\n\t        this.pv = data.k;\r\n\t        this._mdf = false;\r\n\t        this.elem = elem;\r\n\t        this.container = container;\r\n\t        this.comp = elem.comp;\r\n\t        this.k = false;\r\n\t        this.kf = false;\r\n\t        this.vel = 0;\r\n\t        this.effectsSequence = [];\r\n\t        this._isFirstFrame = true;\r\n\t        this.getValue = processEffectsSequence;\r\n\t        this.setVValue = setVValue;\r\n\t        this.addEffect = addEffect;\r\n\t    }\r\n\t\r\n\t    function MultiDimensionalProperty(elem, data, mult, container) {\r\n\t        this.propType = 'multidimensional';\r\n\t        this.mult = mult || 1;\r\n\t        this.data = data;\r\n\t        this._mdf = false;\r\n\t        this.elem = elem;\r\n\t        this.container = container;\r\n\t        this.comp = elem.comp;\r\n\t        this.k = false;\r\n\t        this.kf = false;\r\n\t        this.frameId = -1;\r\n\t        var i, len = data.k.length;\r\n\t        this.v = createTypedArray('float32', len);\r\n\t        this.pv = createTypedArray('float32', len);\r\n\t        var arr = createTypedArray('float32', len);\r\n\t        this.vel = createTypedArray('float32', len);\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            this.v[i] = data.k[i] * this.mult;\r\n\t            this.pv[i] = data.k[i];\r\n\t        }\r\n\t        this._isFirstFrame = true;\r\n\t        this.effectsSequence = [];\r\n\t        this.getValue = processEffectsSequence;\r\n\t        this.setVValue = setVValue;\r\n\t        this.addEffect = addEffect;\r\n\t    }\r\n\t\r\n\t    function KeyframedValueProperty(elem, data, mult, container) {\r\n\t        this.propType = 'unidimensional';\r\n\t        this.keyframes = data.k;\r\n\t        this.offsetTime = elem.data.st;\r\n\t        this.frameId = -1;\r\n\t        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0};\r\n\t        this.k = true;\r\n\t        this.kf = true;\r\n\t        this.data = data;\r\n\t        this.mult = mult || 1;\r\n\t        this.elem = elem;\r\n\t        this.container = container;\r\n\t        this.comp = elem.comp;\r\n\t        this.v = initFrame;\r\n\t        this.pv = initFrame;\r\n\t        this._isFirstFrame = true;\r\n\t        this.getValue = processEffectsSequence;\r\n\t        this.setVValue = setVValue;\r\n\t        this.interpolateValue = interpolateValue;\r\n\t        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n\t        this.addEffect = addEffect;\r\n\t    }\r\n\t\r\n\t    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n\t        this.propType = 'multidimensional';\r\n\t        var i, len = data.k.length;\r\n\t        var s, e,to,ti;\r\n\t        for (i = 0; i < len - 1; i += 1) {\r\n\t            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n\t                s = data.k[i].s;\r\n\t                e = data.k[i].e;\r\n\t                to = data.k[i].to;\r\n\t                ti = data.k[i].ti;\r\n\t                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n\t                    data.k[i].to = null;\r\n\t                    data.k[i].ti = null;\r\n\t                }\r\n\t                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n\t                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n\t                        data.k[i].to = null;\r\n\t                        data.k[i].ti = null;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n\t        this.keyframes = data.k;\r\n\t        this.offsetTime = elem.data.st;\r\n\t        this.k = true;\r\n\t        this.kf = true;\r\n\t        this._isFirstFrame = true;\r\n\t        this.mult = mult || 1;\r\n\t        this.elem = elem;\r\n\t        this.container = container;\r\n\t        this.comp = elem.comp;\r\n\t        this.getValue = processEffectsSequence;\r\n\t        this.setVValue = setVValue;\r\n\t        this.interpolateValue = interpolateValue;\r\n\t        this.frameId = -1;\r\n\t        var arrLen = data.k[0].s.length;\r\n\t        this.v = createTypedArray('float32', arrLen);\r\n\t        this.pv = createTypedArray('float32', arrLen);\r\n\t        for (i = 0; i < arrLen; i += 1) {\r\n\t            this.v[i] = initFrame;\r\n\t            this.pv[i] = initFrame;\r\n\t        }\r\n\t        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n\t        this.addEffect = addEffect;\r\n\t    }\r\n\t\r\n\t    function getProp(elem,data,type, mult, container) {\r\n\t        var p;\r\n\t        if(data.a === 0){\r\n\t            if(type === 0) {\r\n\t                p = new ValueProperty(elem,data,mult, container);\r\n\t            } else {\r\n\t                p = new MultiDimensionalProperty(elem,data, mult, container);\r\n\t            }\r\n\t        } else if(data.a === 1){\r\n\t            if(type === 0) {\r\n\t                p = new KeyframedValueProperty(elem,data,mult, container);\r\n\t            } else {\r\n\t                p = new KeyframedMultidimensionalProperty(elem,data, mult, container);\r\n\t            }\r\n\t        } else if(!data.k.length){\r\n\t            p = new ValueProperty(elem,data, mult, container);\r\n\t        }else if(typeof(data.k[0]) === 'number'){\r\n\t            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n\t        }else{\r\n\t            switch(type){\r\n\t                case 0:\r\n\t                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n\t                    break;\r\n\t                case 1:\r\n\t                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        if(p.effectsSequence.length){\r\n\t            container.addDynamicProperty(p);\r\n\t        }\r\n\t        return p;\r\n\t    }\r\n\t\r\n\t    var ob = {\r\n\t        getProp: getProp\r\n\t    };\r\n\t    return ob;\r\n\t}());\n\tvar TransformPropertyFactory = (function() {\r\n\t\r\n\t    function searchDynamicProperties() {\r\n\t        var i, len = this.dynamicProperties.length;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            this.dynamicProperties[i].getValue();\r\n\t            if (this.dynamicProperties[i]._mdf) {\r\n\t                this._mdf = true;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function applyToMatrix(mat) {\r\n\t        this.searchDynamicProperties();\r\n\t        if (this.a) {\r\n\t            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n\t        }\r\n\t        if (this.s) {\r\n\t            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n\t        }\r\n\t        if (this.sk) {\r\n\t            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n\t        }\r\n\t        if (this.r) {\r\n\t            mat.rotate(-this.r.v);\r\n\t        } else {\r\n\t            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n\t        }\r\n\t        if (this.data.p.s) {\r\n\t            if (this.data.p.z) {\r\n\t                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n\t            } else {\r\n\t                mat.translate(this.px.v, this.py.v, 0);\r\n\t            }\r\n\t        } else {\r\n\t            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n\t        }\r\n\t    }\r\n\t    function processKeys(forceRender){\r\n\t        if (this.elem.globalData.frameId === this.frameId) {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        this._mdf = false;\r\n\t        this.searchDynamicProperties();\r\n\t\r\n\t        if (this._mdf || forceRender) {\r\n\t            this.v.reset();\r\n\t            if (this.a) {\r\n\t                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n\t            }\r\n\t            if(this.s) {\r\n\t                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n\t            }\r\n\t            if (this.sk) {\r\n\t                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n\t            }\r\n\t            if (this.r) {\r\n\t                this.v.rotate(-this.r.v);\r\n\t            } else {\r\n\t                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n\t            }\r\n\t            if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n\t                var v1,v2;\r\n\t                if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n\t                    v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n\t                    v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n\t                } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n\t                    v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n\t                    v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n\t                } else {\r\n\t                    v1 = this.p.pv;\r\n\t                    v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n\t                }\r\n\t                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n\t            }\r\n\t            if(this.data.p.s){\r\n\t                if(this.data.p.z) {\r\n\t                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n\t                } else {\r\n\t                    this.v.translate(this.px.v, this.py.v, 0);\r\n\t                }\r\n\t            }else{\r\n\t                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n\t            }\r\n\t        }\r\n\t        this.frameId = this.elem.globalData.frameId;\r\n\t    }\r\n\t\r\n\t    function setInverted(){\r\n\t        this.inverted = true;\r\n\t        this.iv = new Matrix();\r\n\t        if(!this.k){\r\n\t            if(this.data.p.s){\r\n\t                this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n\t            }else{\r\n\t                this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n\t            }\r\n\t            if(this.r){\r\n\t                this.iv.rotate(-this.r.v);\r\n\t            }else{\r\n\t                this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n\t            }\r\n\t            if(this.s){\r\n\t                this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n\t            }\r\n\t            if(this.a){\r\n\t                this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function autoOrient(){\r\n\t        //\r\n\t        //var prevP = this.getValueAtTime();\r\n\t    }\r\n\t\r\n\t    function TransformProperty(elem,data,container){\r\n\t        this.elem = elem;\r\n\t        this.frameId = -1;\r\n\t        this.propType = 'transform';\r\n\t        this.container = container || elem;\r\n\t        this.dynamicProperties = [];\r\n\t        this._mdf = false;\r\n\t        this.data = data;\r\n\t        this.v = new Matrix();\r\n\t        if(data.p.s){\r\n\t            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n\t            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n\t            if(data.p.z){\r\n\t                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n\t            }\r\n\t        }else{\r\n\t            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n\t        }\r\n\t        if(data.r) {\r\n\t            this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\r\n\t        } else if(data.rx) {\r\n\t            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n\t            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n\t            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n\t            if(data.or.k[0].ti) {\r\n\t                var i, len = data.or.k.length;\r\n\t                for(i=0;i<len;i+=1) {\r\n\t                    data.or.k[i].to = data.or.k[i].ti = null;\r\n\t                }\r\n\t            }\r\n\t            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n\t            //sh Indicates it needs to be capped between -180 and 180\r\n\t            this.or.sh = true;\r\n\t        }\r\n\t        if(data.sk){\r\n\t            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n\t            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n\t        }\r\n\t        if(data.a) {\r\n\t            this.a = PropertyFactory.getProp(elem,data.a,1,0,this);\r\n\t        }\r\n\t        if(data.s) {\r\n\t            this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this);\r\n\t        }\r\n\t        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n\t        if(data.o){\r\n\t            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n\t        } else {\r\n\t            this.o = {_mdf:false,v:1};\r\n\t        }\r\n\t        if(!this.dynamicProperties.length){\r\n\t            this.getValue(true);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    TransformProperty.prototype = {\r\n\t        applyToMatrix: applyToMatrix,\r\n\t        searchDynamicProperties: searchDynamicProperties,\r\n\t        getValue: processKeys,\r\n\t        setInverted: setInverted,\r\n\t        autoOrient: autoOrient,\r\n\t        addDynamicProperty: addDynamicProperty\r\n\t    }\r\n\t\r\n\t    function getTransformProperty(elem,data,container){\r\n\t        return new TransformProperty(elem,data,container);\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        getTransformProperty: getTransformProperty\r\n\t    };\r\n\t\r\n\t}());\n\tfunction ShapePath(){\r\n\t\tthis.c = false;\r\n\t\tthis._length = 0;\r\n\t\tthis._maxLength = 8;\r\n\t\tthis.v = createSizedArray(this._maxLength);\r\n\t\tthis.o = createSizedArray(this._maxLength);\r\n\t\tthis.i = createSizedArray(this._maxLength);\r\n\t}\r\n\t\r\n\tShapePath.prototype.setPathData = function(closed, len) {\r\n\t\tthis.c = closed;\r\n\t\tthis.setLength(len);\r\n\t\tvar i = 0;\r\n\t\twhile(i < len){\r\n\t\t\tthis.v[i] = point_pool.newElement();\r\n\t\t\tthis.o[i] = point_pool.newElement();\r\n\t\t\tthis.i[i] = point_pool.newElement();\r\n\t\t\ti += 1;\r\n\t\t}\r\n\t};\r\n\t\r\n\tShapePath.prototype.setLength = function(len) {\r\n\t\twhile(this._maxLength < len) {\r\n\t\t\tthis.doubleArrayLength();\r\n\t\t}\r\n\t\tthis._length = len;\r\n\t};\r\n\t\r\n\tShapePath.prototype.doubleArrayLength = function() {\r\n\t\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\t\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\t\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t};\r\n\t\r\n\tShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\t\tvar arr;\r\n\t\tthis._length = Math.max(this._length, pos + 1);\r\n\t\tif(this._length >= this._maxLength) {\r\n\t\t\tthis.doubleArrayLength();\r\n\t\t}\r\n\t\tswitch(type){\r\n\t\t\tcase 'v':\r\n\t\t\t\tarr = this.v;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'i':\r\n\t\t\t\tarr = this.i;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'o':\r\n\t\t\t\tarr = this.o;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\t\tarr[pos] = point_pool.newElement();\r\n\t\t}\r\n\t\tarr[pos][0] = x;\r\n\t\tarr[pos][1] = y;\r\n\t};\r\n\t\r\n\tShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\t\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\t\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\t\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n\t};\r\n\t\r\n\tShapePath.prototype.reverse = function() {\r\n\t\tvar newPath = new ShapePath();\r\n\t\tnewPath.setPathData(this.c, this._length);\r\n\t\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\t\tvar init = 0;\r\n\t\tif (this.c) {\r\n\t\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n\t        init = 1;\r\n\t    }\r\n\t    var cnt = this._length - 1;\r\n\t    var len = this._length;\r\n\t\r\n\t    var i;\r\n\t    for (i = init; i < len; i += 1) {\r\n\t    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n\t        cnt -= 1;\r\n\t    }\r\n\t    return newPath;\r\n\t};\n\tvar ShapePropertyFactory = (function(){\r\n\t\r\n\t    var initFrame = -999999;\r\n\t\r\n\t    function interpolateShape(frameNum, previousValue, caching) {\r\n\t        var iterationIndex = caching.lastIndex;\r\n\t        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n\t        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n\t            keyPropS = this.keyframes[0].s[0];\r\n\t            isHold = true;\r\n\t            iterationIndex = 0;\r\n\t        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n\t            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n\t                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n\t            }else{\r\n\t                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n\t            }\r\n\t            isHold = true;\r\n\t        }else{\r\n\t            var i = iterationIndex;\r\n\t            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData;\r\n\t            while(flag){\r\n\t                keyData = this.keyframes[i];\r\n\t                nextKeyData = this.keyframes[i+1];\r\n\t                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n\t                    break;\r\n\t                }\r\n\t                if(i < len - 1){\r\n\t                    i += 1;\r\n\t                }else{\r\n\t                    flag = false;\r\n\t                }\r\n\t            }\r\n\t            isHold = keyData.h === 1;\r\n\t            iterationIndex = i;\r\n\t            if(!isHold){\r\n\t                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n\t                    perc = 1;\r\n\t                }else if(frameNum < keyData.t-this.offsetTime){\r\n\t                    perc = 0;\r\n\t                }else{\r\n\t                    var fnc;\r\n\t                    if(keyData.__fnct){\r\n\t                        fnc = keyData.__fnct;\r\n\t                    }else{\r\n\t                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n\t                        keyData.__fnct = fnc;\r\n\t                    }\r\n\t                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n\t                }\r\n\t                keyPropE = keyData.e[0];\r\n\t            }\r\n\t            keyPropS = keyData.s[0];\r\n\t        }\r\n\t        jLen = previousValue._length;\r\n\t        kLen = keyPropS.i[0].length;\r\n\t        caching.lastIndex = iterationIndex;\r\n\t\r\n\t        for(j=0;j<jLen;j+=1){\r\n\t            for(k=0;k<kLen;k+=1){\r\n\t                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n\t                previousValue.i[j][k] = vertexValue;\r\n\t                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n\t                previousValue.o[j][k] = vertexValue;\r\n\t                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n\t                previousValue.v[j][k] = vertexValue;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function interpolateShapeCurrentTime(){\r\n\t        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n\t        var initTime = this.keyframes[0].t - this.offsetTime;\r\n\t        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n\t        var lastFrame = this._caching.lastFrame;\r\n\t        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n\t            ////\r\n\t            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n\t            this.interpolateShape(frameNum, this.pv, this._caching);\r\n\t            ////\r\n\t        }\r\n\t        this._caching.lastFrame = frameNum;\r\n\t        return this.pv;\r\n\t    }\r\n\t\r\n\t    function getShapeValue(){\r\n\t        return this.v;\r\n\t    }\r\n\t\r\n\t    function resetShape(){\r\n\t        this.paths = this.localShapeCollection;\r\n\t    }\r\n\t\r\n\t    function shapesEqual(shape1, shape2) {\r\n\t        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n\t            return false;\r\n\t        }\r\n\t        var i, len = shape1._length;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            if(shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]){\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    }\r\n\t\r\n\t    function processEffectsSequence() {\r\n\t        if(this.lock || this.elem.globalData.frameId === this.frameId) {\r\n\t            return;\r\n\t        }\r\n\t        this.lock = true;\r\n\t        this.frameId = this.elem.globalData.frameId;\r\n\t        this._mdf = false;\r\n\t        var finalValue = this.kf ? this.pv : this.data.k;\r\n\t        var i, len = this.effectsSequence.length;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            finalValue = this.effectsSequence[i](finalValue);\r\n\t        }\r\n\t        if(!shapesEqual(this.v, finalValue)) {\r\n\t            this.v = shape_pool.clone(finalValue);\r\n\t            this.localShapeCollection.releaseShapes();\r\n\t            this.localShapeCollection.addShape(this.v);\r\n\t            this._mdf = true;\r\n\t            this.paths = this.localShapeCollection;\r\n\t        }\r\n\t        this.lock = false;\r\n\t    };\r\n\t\r\n\t    function ShapeProperty(elem, data, type){\r\n\t        this.propType = 'shape';\r\n\t        this.comp = elem.comp;\r\n\t        this.container = elem;\r\n\t        this.elem = elem;\r\n\t        this.data = data;\r\n\t        this.k = false;\r\n\t        this.kf = false;\r\n\t        this._mdf = false;\r\n\t        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n\t        this.v = shape_pool.clone(pathData);\r\n\t        this.pv = shape_pool.clone(this.v);\r\n\t        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n\t        this.paths = this.localShapeCollection;\r\n\t        this.paths.addShape(this.v);\r\n\t        this.reset = resetShape;\r\n\t        this.effectsSequence = [getShapeValue.bind(this)];\r\n\t    }\r\n\t\r\n\t    function addEffect(effectFunction) {\r\n\t        this.effectsSequence.push(effectFunction);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    }\r\n\t\r\n\t    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\t    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n\t    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n\t    ShapeProperty.prototype.addEffect = addEffect;\r\n\t\r\n\t    function KeyframedShapeProperty(elem,data,type){\r\n\t        this.propType = 'shape';\r\n\t        this.comp = elem.comp;\r\n\t        this.elem = elem;\r\n\t        this.container = elem;\r\n\t        this.offsetTime = elem.data.st;\r\n\t        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n\t        this.k = true;\r\n\t        this.kf = true;\r\n\t        var i, len = this.keyframes[0].s[0].i.length;\r\n\t        var jLen = this.keyframes[0].s[0].i[0].length;\r\n\t        this.v = shape_pool.newElement();\r\n\t        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n\t        this.pv = shape_pool.clone(this.v);\r\n\t        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n\t        this.paths = this.localShapeCollection;\r\n\t        this.paths.addShape(this.v);\r\n\t        this.lastFrame = initFrame;\r\n\t        this.reset = resetShape;\r\n\t        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n\t        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n\t    }\r\n\t    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n\t    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\t    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\t\r\n\t    var EllShapeProperty = (function(){\r\n\t\r\n\t        var cPoint = roundCorner;\r\n\t\r\n\t        function EllShapeProperty(elem,data) {\r\n\t            /*this.v = {\r\n\t                v: createSizedArray(4),\r\n\t                i: createSizedArray(4),\r\n\t                o: createSizedArray(4),\r\n\t                c: true\r\n\t            };*/\r\n\t            this.v = shape_pool.newElement();\r\n\t            this.v.setPathData(true, 4);\r\n\t            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n\t            this.paths = this.localShapeCollection;\r\n\t            this.localShapeCollection.addShape(this.v);\r\n\t            this.d = data.d;\r\n\t            this.dynamicProperties = [];\r\n\t            this.elem = elem;\r\n\t            this.container = elem;\r\n\t            this.comp = elem.comp;\r\n\t            this.frameId = -1;\r\n\t            this._mdf = false;\r\n\t            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n\t            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n\t            if(this.dynamicProperties.length){\r\n\t                this.k = true;\r\n\t            }else{\r\n\t                this.convertEllToPath();\r\n\t            }\r\n\t        };\r\n\t\r\n\t        EllShapeProperty.prototype = {\r\n\t            reset: resetShape,\r\n\t            getValue: function (frameNum){\r\n\t                var i, len = this.dynamicProperties.length;\r\n\t                if(this.elem.globalData.frameId === this.frameId){\r\n\t                    return;\r\n\t                }\r\n\t                this._mdf = false;\r\n\t                this.frameId = this.elem.globalData.frameId;\r\n\t\r\n\t                for(i=0;i<len;i+=1){\r\n\t                    this.dynamicProperties[i].getValue(frameNum);\r\n\t                    if(this.dynamicProperties[i]._mdf){\r\n\t                        this._mdf = true;\r\n\t                    }\r\n\t                }\r\n\t                if(this._mdf){\r\n\t                    this.convertEllToPath();\r\n\t                }\r\n\t            },\r\n\t            addDynamicProperty: addDynamicProperty,\r\n\t            convertEllToPath: function() {\r\n\t                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n\t                var _cw = this.d !== 3;\r\n\t                var _v = this.v;\r\n\t                _v.v[0][0] = p0;\r\n\t                _v.v[0][1] = p1 - s1;\r\n\t                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n\t                _v.v[1][1] = p1;\r\n\t                _v.v[2][0] = p0;\r\n\t                _v.v[2][1] = p1 + s1;\r\n\t                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n\t                _v.v[3][1] = p1;\r\n\t                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n\t                _v.i[0][1] = p1 - s1;\r\n\t                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n\t                _v.i[1][1] = p1 - s1 * cPoint;\r\n\t                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n\t                _v.i[2][1] = p1 + s1;\r\n\t                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n\t                _v.i[3][1] = p1 + s1 * cPoint;\r\n\t                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n\t                _v.o[0][1] = p1 - s1;\r\n\t                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n\t                _v.o[1][1] = p1 + s1 * cPoint;\r\n\t                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n\t                _v.o[2][1] = p1 + s1;\r\n\t                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n\t                _v.o[3][1] = p1 - s1 * cPoint;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return EllShapeProperty;\r\n\t    }());\r\n\t\r\n\t    var StarShapeProperty = (function() {\r\n\t\r\n\t        function StarShapeProperty(elem,data) {\r\n\t            /*this.v = {\r\n\t                v: [],\r\n\t                i: [],\r\n\t                o: [],\r\n\t                c: true\r\n\t            };*/\r\n\t            this.v = shape_pool.newElement();\r\n\t            this.v.setPathData(true, 0);\r\n\t            this.elem = elem;\r\n\t            this.container = elem;\r\n\t            this.comp = elem.comp;\r\n\t            this.data = data;\r\n\t            this.frameId = -1;\r\n\t            this.d = data.d;\r\n\t            this.dynamicProperties = [];\r\n\t            this._mdf = false;\r\n\t            if(data.sy === 1){\r\n\t                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n\t                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n\t                this.convertToPath = this.convertStarToPath;\r\n\t            } else {\r\n\t                this.convertToPath = this.convertPolygonToPath;\r\n\t            }\r\n\t            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n\t            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n\t            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n\t            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n\t            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n\t            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n\t            this.localShapeCollection.addShape(this.v);\r\n\t            this.paths = this.localShapeCollection;\r\n\t            if(this.dynamicProperties.length){\r\n\t                this.k = true;\r\n\t            }else{\r\n\t                this.convertToPath();\r\n\t            }\r\n\t        };\r\n\t\r\n\t        StarShapeProperty.prototype = {\r\n\t            addDynamicProperty: addDynamicProperty,\r\n\t            reset: resetShape,\r\n\t            getValue: function() {\r\n\t                if(this.elem.globalData.frameId === this.frameId){\r\n\t                    return;\r\n\t                }\r\n\t                this._mdf = false;\r\n\t                this.frameId = this.elem.globalData.frameId;\r\n\t                var i, len = this.dynamicProperties.length;\r\n\t\r\n\t                for(i=0;i<len;i+=1){\r\n\t                    this.dynamicProperties[i].getValue();\r\n\t                    if(this.dynamicProperties[i]._mdf){\r\n\t                        this._mdf = true;\r\n\t                    }\r\n\t                }\r\n\t                if(this._mdf){\r\n\t                    this.convertToPath();\r\n\t                }\r\n\t            },\r\n\t            convertStarToPath: function() {\r\n\t                var numPts = Math.floor(this.pt.v)*2;\r\n\t                var angle = Math.PI*2/numPts;\r\n\t                /*this.v.v.length = numPts;\r\n\t                this.v.i.length = numPts;\r\n\t                this.v.o.length = numPts;*/\r\n\t                var longFlag = true;\r\n\t                var longRad = this.or.v;\r\n\t                var shortRad = this.ir.v;\r\n\t                var longRound = this.os.v;\r\n\t                var shortRound = this.is.v;\r\n\t                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n\t                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n\t                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n\t                currentAng += this.r.v;\r\n\t                var dir = this.data.d === 3 ? -1 : 1;\r\n\t                this.v._length = 0;\r\n\t                for(i=0;i<numPts;i+=1){\r\n\t                    rad = longFlag ? longRad : shortRad;\r\n\t                    roundness = longFlag ? longRound : shortRound;\r\n\t                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n\t                    var x = rad * Math.cos(currentAng);\r\n\t                    var y = rad * Math.sin(currentAng);\r\n\t                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n\t                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n\t                    x +=  + this.p.v[0];\r\n\t                    y +=  + this.p.v[1];\r\n\t                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\t\r\n\t                    /*this.v.v[i] = [x,y];\r\n\t                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n\t                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n\t                    this.v._length = numPts;*/\r\n\t                    longFlag = !longFlag;\r\n\t                    currentAng += angle*dir;\r\n\t                }\r\n\t            },\r\n\t            convertPolygonToPath: function() {\r\n\t                var numPts = Math.floor(this.pt.v);\r\n\t                var angle = Math.PI*2/numPts;\r\n\t                var rad = this.or.v;\r\n\t                var roundness = this.os.v;\r\n\t                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n\t                var i, currentAng = -Math.PI/ 2;\r\n\t                var dir = this.data.d === 3 ? -1 : 1;\r\n\t                currentAng += this.r.v;\r\n\t                this.v._length = 0;\r\n\t                for(i=0;i<numPts;i+=1){\r\n\t                    var x = rad * Math.cos(currentAng);\r\n\t                    var y = rad * Math.sin(currentAng);\r\n\t                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n\t                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n\t                    x +=  + this.p.v[0];\r\n\t                    y +=  + this.p.v[1];\r\n\t                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\t                    currentAng += angle*dir;\r\n\t                }\r\n\t                this.paths.length = 0;\r\n\t                this.paths[0] = this.v;\r\n\t            }\r\n\t\r\n\t        }\r\n\t\r\n\t        return StarShapeProperty;\r\n\t    }());\r\n\t\r\n\t    var RectShapeProperty = (function() {\r\n\t\r\n\t         function RectShapeProperty(elem,data) {\r\n\t            this.v = shape_pool.newElement();\r\n\t            this.v.c = true;\r\n\t            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n\t            this.localShapeCollection.addShape(this.v);\r\n\t            this.paths = this.localShapeCollection;\r\n\t            this.elem = elem;\r\n\t            this.container = elem;\r\n\t            this.comp = elem.comp;\r\n\t            this.frameId = -1;\r\n\t            this.d = data.d;\r\n\t            this.dynamicProperties = [];\r\n\t            this._mdf = false;\r\n\t            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n\t            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n\t            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n\t            if(this.dynamicProperties.length){\r\n\t                this.k = true;\r\n\t            }else{\r\n\t                this.convertRectToPath();\r\n\t            }\r\n\t        };\r\n\t\r\n\t        RectShapeProperty.prototype = {\r\n\t            convertRectToPath: function (){\r\n\t                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n\t                var round = bm_min(v0,v1,this.r.v);\r\n\t                var cPoint = round*(1-roundCorner);\r\n\t                this.v._length = 0;\r\n\t\r\n\t                if(this.d === 2 || this.d === 1) {\r\n\t                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n\t                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n\t                    if(round!== 0){\r\n\t                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n\t                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n\t                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n\t                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n\t                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n\t                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n\t                    } else {\r\n\t                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n\t                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n\t                    }\r\n\t                }else{\r\n\t                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n\t                    if(round!== 0){\r\n\t                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n\t                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n\t                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n\t                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n\t                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n\t                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n\t                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n\t                    } else {\r\n\t                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n\t                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n\t                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\t\r\n\t                    }\r\n\t                }\r\n\t            },\r\n\t            getValue: function(frameNum){\r\n\t                if(this.elem.globalData.frameId === this.frameId){\r\n\t                    return;\r\n\t                }\r\n\t                this._mdf = false;\r\n\t                this.frameId = this.elem.globalData.frameId;\r\n\t                var i, len = this.dynamicProperties.length;\r\n\t\r\n\t                for(i=0;i<len;i+=1){\r\n\t                    this.dynamicProperties[i].getValue(frameNum);\r\n\t                    if(this.dynamicProperties[i]._mdf){\r\n\t                        this._mdf = true;\r\n\t                    }\r\n\t                }\r\n\t                if(this._mdf){\r\n\t                    this.convertRectToPath();\r\n\t                }\r\n\t\r\n\t            },\r\n\t            addDynamicProperty: addDynamicProperty,\r\n\t            reset: resetShape\r\n\t        }\r\n\t\r\n\t        return RectShapeProperty;\r\n\t    }());\r\n\t\r\n\t    function getShapeProp(elem,data,type){\r\n\t        var prop;\r\n\t        if(type === 3 || type === 4){\r\n\t            var dataProp = type === 3 ? data.pt : data.ks;\r\n\t            var keys = dataProp.k;\r\n\t            if(dataProp.a === 1 || keys.length){\r\n\t                prop = new KeyframedShapeProperty(elem, data, type);\r\n\t            }else{\r\n\t                prop = new ShapeProperty(elem, data, type);\r\n\t            }\r\n\t        }else if(type === 5){\r\n\t            prop = new RectShapeProperty(elem, data);\r\n\t        }else if(type === 6){\r\n\t            prop = new EllShapeProperty(elem, data);\r\n\t        }else if(type === 7){\r\n\t            prop = new StarShapeProperty(elem, data);\r\n\t        }\r\n\t        if(prop.k){\r\n\t            elem.addDynamicProperty(prop);\r\n\t        }\r\n\t        return prop;\r\n\t    }\r\n\t\r\n\t    function getConstructorFunction() {\r\n\t        return ShapeProperty;\r\n\t    }\r\n\t\r\n\t    function getKeyframedConstructorFunction() {\r\n\t        return KeyframedShapeProperty;\r\n\t    }\r\n\t\r\n\t    var ob = {};\r\n\t    ob.getShapeProp = getShapeProp;\r\n\t    ob.getConstructorFunction = getConstructorFunction;\r\n\t    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n\t    return ob;\r\n\t}());\n\tvar ShapeModifiers = (function(){\r\n\t    var ob = {};\r\n\t    var modifiers = {};\r\n\t    ob.registerModifier = registerModifier;\r\n\t    ob.getModifier = getModifier;\r\n\t\r\n\t    function registerModifier(nm,factory){\r\n\t        if(!modifiers[nm]){\r\n\t            modifiers[nm] = factory;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getModifier(nm,elem, data){\r\n\t        return new modifiers[nm](elem, data);\r\n\t    }\r\n\t\r\n\t    return ob;\r\n\t}());\r\n\t\r\n\tfunction ShapeModifier(){}\r\n\tShapeModifier.prototype.initModifierProperties = function(){};\r\n\tShapeModifier.prototype.addShapeToModifier = function(){};\r\n\tShapeModifier.prototype.addShape = function(data){\r\n\t    if(!this.closed){\r\n\t        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n\t        this.shapes.push(shapeData);\r\n\t        this.addShapeToModifier(shapeData);\r\n\t    }\r\n\t};\r\n\tShapeModifier.prototype.init = function(elem,data){\r\n\t    this.dynamicProperties = [];\r\n\t    this.shapes = [];\r\n\t    this.elem = elem;\r\n\t    this.container = elem;\r\n\t    this.initModifierProperties(elem,data);\r\n\t    this.frameId = initialDefaultFrame;\r\n\t    this._mdf = false;\r\n\t    this.closed = false;\r\n\t    this.k = false;\r\n\t    if(this.dynamicProperties.length){\r\n\t        this.k = true;\r\n\t    }else{\r\n\t        this.getValue(true);\r\n\t    }\r\n\t};\r\n\tShapeModifier.prototype.processKeys = function(){\r\n\t    if(this.elem.globalData.frameId === this.frameId){\r\n\t        return;\r\n\t    }\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf){\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t    this.frameId = this.elem.globalData.frameId;\r\n\t};\r\n\t\r\n\tShapeModifier.prototype.addDynamicProperty = addDynamicProperty;\n\tfunction TrimModifier(){\r\n\t}\r\n\textendPrototype([ShapeModifier], TrimModifier);\r\n\tTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n\t    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n\t    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n\t    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n\t    this.sValue = 0;\r\n\t    this.eValue = 0;\r\n\t    this.getValue = this.processKeys;\r\n\t    this.m = data.m;\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n\t    shapeData.pathsData = [];\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n\t    var segments = [];\r\n\t    if (e <= 1) {\r\n\t        segments.push({\r\n\t            s: s,\r\n\t            e: e\r\n\t        });\r\n\t    } else if (s >= 1) {\r\n\t        segments.push({\r\n\t            s: s - 1,\r\n\t            e: e - 1\r\n\t        });\r\n\t    } else {\r\n\t        segments.push({\r\n\t            s: s,\r\n\t            e: 1\r\n\t        });\r\n\t        segments.push({\r\n\t            s: 0,\r\n\t            e: e - 1\r\n\t        });\r\n\t    }\r\n\t    var shapeSegments = [];\r\n\t    var i, len = segments.length, segmentOb;\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        segmentOb = segments[i];\r\n\t        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n\t            \r\n\t        } else {\r\n\t            var shapeS, shapeE;\r\n\t            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n\t                shapeS = 0;\r\n\t            } else {\r\n\t                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n\t            }\r\n\t            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n\t                shapeE = 1;\r\n\t            } else {\r\n\t                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n\t            }\r\n\t            shapeSegments.push([shapeS, shapeE]);\r\n\t        }\r\n\t    }\r\n\t    if (!shapeSegments.length) {\r\n\t        shapeSegments.push([0, 0]);\r\n\t    }\r\n\t    return shapeSegments;\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n\t    var i, len = pathsData.length;\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        segments_length_pool.release(pathsData[i]);\r\n\t    }\r\n\t    pathsData.length = 0;\r\n\t    return pathsData;\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n\t    var s, e;\r\n\t    if (this._mdf || _isFirstFrame) {\r\n\t        var o = (this.o.v % 360) / 360;\r\n\t        if (o < 0) {\r\n\t            o += 1;\r\n\t        }\r\n\t        s = this.s.v + o;\r\n\t        e = this.e.v + o;\r\n\t        if (s === e) {\r\n\t\r\n\t        }\r\n\t        if (s > e) {\r\n\t            var _s = s;\r\n\t            s = e;\r\n\t            e = _s;\r\n\t        }\r\n\t        this.sValue = s;\r\n\t        this.eValue = e;\r\n\t    } else {\r\n\t        s = this.sValue;\r\n\t        e = this.eValue;\r\n\t    }\r\n\t    var shapePaths;\r\n\t    var i, len = this.shapes.length, j, jLen;\r\n\t    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\t\r\n\t    if (e === s) {\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            this.shapes[i].localShapeCollection.releaseShapes();\r\n\t            this.shapes[i].shape._mdf = true;\r\n\t            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n\t        }\r\n\t    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n\t        var segments = [], shapeData, localShapeCollection;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            shapeData = this.shapes[i];\r\n\t            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n\t            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n\t                shapeData.shape.paths = shapeData.localShapeCollection;\r\n\t            } else {\r\n\t                shapePaths = shapeData.shape.paths;\r\n\t                jLen = shapePaths._length;\r\n\t                totalShapeLength = 0;\r\n\t                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n\t                    totalShapeLength = shapeData.totalShapeLength;\r\n\t                } else {\r\n\t                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n\t                    for (j = 0; j < jLen; j += 1) {\r\n\t                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n\t                        pathsData.push(pathData);\r\n\t                        totalShapeLength += pathData.totalLength;\r\n\t                    }\r\n\t                    shapeData.totalShapeLength = totalShapeLength;\r\n\t                    shapeData.pathsData = pathsData;\r\n\t                }\r\n\t\r\n\t                totalModifierLength += totalShapeLength;\r\n\t                shapeData.shape._mdf = true;\r\n\t            }\r\n\t        }\r\n\t        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n\t        for (i = len - 1; i >= 0; i -= 1) {\r\n\t            shapeData = this.shapes[i];\r\n\t            if (shapeData.shape._mdf) {\r\n\t                localShapeCollection = shapeData.localShapeCollection;\r\n\t                localShapeCollection.releaseShapes();\r\n\t                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n\t                if (this.m === 2 && len > 1) {\r\n\t                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n\t                    addedLength += shapeData.totalShapeLength;\r\n\t                } else {\r\n\t                    edges = [[shapeS, shapeE]];\r\n\t                }\r\n\t                jLen = edges.length;\r\n\t                for (j = 0; j < jLen; j += 1) {\r\n\t                    shapeS = edges[j][0];\r\n\t                    shapeE = edges[j][1];\r\n\t                    segments.length = 0;\r\n\t                    if (shapeE <= 1) {\r\n\t                        segments.push({\r\n\t                            s:shapeData.totalShapeLength * shapeS,\r\n\t                            e:shapeData.totalShapeLength * shapeE\r\n\t                        });\r\n\t                    } else if (shapeS >= 1) {\r\n\t                        segments.push({\r\n\t                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n\t                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n\t                        });\r\n\t                    } else {\r\n\t                        segments.push({\r\n\t                            s:shapeData.totalShapeLength * shapeS,\r\n\t                            e:shapeData.totalShapeLength\r\n\t                        });\r\n\t                        segments.push({\r\n\t                            s:0,\r\n\t                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n\t                        });\r\n\t                    }\r\n\t                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n\t                    if (segments[0].s !== segments[0].e) {\r\n\t                        if (segments.length > 1) {\r\n\t                            if (shapeData.shape.v.c) {\r\n\t                                var lastShape = newShapesData.pop();\r\n\t                                this.addPaths(newShapesData, localShapeCollection);\r\n\t                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n\t                            } else {\r\n\t                                this.addPaths(newShapesData, localShapeCollection);\r\n\t                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n\t                            }\r\n\t                        } \r\n\t                        this.addPaths(newShapesData, localShapeCollection);\r\n\t                    }\r\n\t                    \r\n\t                }\r\n\t                shapeData.shape.paths = localShapeCollection;\r\n\t            }\r\n\t        }\r\n\t    } else if (this._mdf) {\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            this.shapes[i].shape._mdf = true;\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n\t    var i, len = newPaths.length;\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        localShapeCollection.addShape(newPaths[i]);\r\n\t    }\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n\t    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n\t    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n\t    if(newShape){\r\n\t        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n\t    }\r\n\t    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n\t    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n\t    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n\t    if(newShape){\r\n\t        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n\t    }\r\n\t    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n\t    var pathsData = shapeData.pathsData;\r\n\t    var shapePaths = shapeData.shape.paths.shapes;\r\n\t    var i, len = shapeData.shape.paths._length, j, jLen;\r\n\t    var addedLength = 0;\r\n\t    var currentLengthData,segmentCount;\r\n\t    var lengths;\r\n\t    var segment;\r\n\t    var shapes = [];\r\n\t    var initPos;\r\n\t    var newShape = true;\r\n\t    if (!shapePath) {\r\n\t        shapePath = shape_pool.newElement();\r\n\t        segmentCount = 0;\r\n\t        initPos = 0;\r\n\t    } else {\r\n\t        segmentCount = shapePath._length;\r\n\t        initPos = shapePath._length;\r\n\t    }\r\n\t    shapes.push(shapePath);\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        lengths = pathsData[i].lengths;\r\n\t        shapePath.c = shapePaths[i].c;\r\n\t        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n\t        for (j = 1; j < jLen; j +=1) {\r\n\t            currentLengthData = lengths[j-1];\r\n\t            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n\t                addedLength += currentLengthData.addedLength;\r\n\t                shapePath.c = false;\r\n\t            } else if(addedLength > shapeSegment.e) {\r\n\t                shapePath.c = false;\r\n\t                break;\r\n\t            } else {\r\n\t                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n\t                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n\t                    newShape = false;\r\n\t                } else {\r\n\t                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n\t                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n\t                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n\t                    newShape = false;\r\n\t                    shapePath.c = false;\r\n\t                }\r\n\t                addedLength += currentLengthData.addedLength;\r\n\t                segmentCount += 1;\r\n\t            }\r\n\t        }\r\n\t        if (shapePaths[i].c) {\r\n\t            currentLengthData = lengths[j - 1];\r\n\t            if (addedLength <= shapeSegment.e) {\r\n\t                var segmentLength = lengths[j - 1].addedLength;\r\n\t                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n\t                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n\t                    newShape = false;\r\n\t                } else {\r\n\t                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n\t                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n\t                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n\t                    newShape = false;\r\n\t                    shapePath.c = false;\r\n\t                }\r\n\t            } else {\r\n\t                shapePath.c = false;\r\n\t            }\r\n\t            addedLength += currentLengthData.addedLength;\r\n\t            segmentCount += 1;\r\n\t        }\r\n\t        if (shapePath._length) {\r\n\t            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n\t            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n\t        }\r\n\t        if (addedLength > shapeSegment.e) {\r\n\t            break;\r\n\t        }\r\n\t        if (i < len - 1) {\r\n\t            shapePath = shape_pool.newElement();\r\n\t            newShape = true;\r\n\t            shapes.push(shapePath);\r\n\t            segmentCount = 0;\r\n\t        }\r\n\t    }\r\n\t    return shapes;\r\n\t};\r\n\t\r\n\t\r\n\tShapeModifiers.registerModifier('tm', TrimModifier);\n\tfunction RoundCornersModifier(){}\r\n\textendPrototype([ShapeModifier],RoundCornersModifier);\r\n\tRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n\t    this.getValue = this.processKeys;\r\n\t    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n\t};\r\n\t\r\n\tRoundCornersModifier.prototype.processPath = function(path, round){\r\n\t    var cloned_path = shape_pool.newElement();\r\n\t    cloned_path.c = path.c;\r\n\t    var i, len = path._length;\r\n\t    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n\t    var vX,vY,oX,oY,iX,iY;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        currentV = path.v[i];\r\n\t        currentO = path.o[i];\r\n\t        currentI = path.i[i];\r\n\t        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n\t            if((i===0 || i === len - 1) && !path.c){\r\n\t                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n\t                /*cloned_path.v[index] = currentV;\r\n\t                cloned_path.o[index] = currentO;\r\n\t                cloned_path.i[index] = currentI;*/\r\n\t                index += 1;\r\n\t            } else {\r\n\t                if(i===0){\r\n\t                    closerV = path.v[len-1];\r\n\t                } else {\r\n\t                    closerV = path.v[i-1];\r\n\t                }\r\n\t                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n\t                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n\t                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n\t                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n\t                oX = vX-(vX-currentV[0])*roundCorner;\r\n\t                oY = vY-(vY-currentV[1])*roundCorner;\r\n\t                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n\t                index += 1;\r\n\t\r\n\t                if(i === len - 1){\r\n\t                    closerV = path.v[0];\r\n\t                } else {\r\n\t                    closerV = path.v[i+1];\r\n\t                }\r\n\t                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n\t                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n\t                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n\t                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n\t                iX = vX-(vX-currentV[0])*roundCorner;\r\n\t                iY = vY-(vY-currentV[1])*roundCorner;\r\n\t                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n\t                index += 1;\r\n\t            }\r\n\t        } else {\r\n\t            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n\t            index += 1;\r\n\t        }\r\n\t    }\r\n\t    return cloned_path;\r\n\t};\r\n\t\r\n\tRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n\t    var shapePaths;\r\n\t    var i, len = this.shapes.length;\r\n\t    var j, jLen;\r\n\t    var rd = this.rd.v;\r\n\t\r\n\t    if(rd !== 0){\r\n\t        var shapeData, newPaths, localShapeCollection;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            shapeData = this.shapes[i];\r\n\t            newPaths = shapeData.shape.paths;\r\n\t            localShapeCollection = shapeData.localShapeCollection;\r\n\t            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n\t                localShapeCollection.releaseShapes();\r\n\t                shapeData.shape._mdf = true;\r\n\t                shapePaths = shapeData.shape.paths.shapes;\r\n\t                jLen = shapeData.shape.paths._length;\r\n\t                for(j=0;j<jLen;j+=1){\r\n\t                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n\t                }\r\n\t            }\r\n\t            shapeData.shape.paths = shapeData.localShapeCollection;\r\n\t        }\r\n\t\r\n\t    }\r\n\t    if(!this.dynamicProperties.length){\r\n\t        this._mdf = false;\r\n\t    }\r\n\t};\r\n\t\r\n\tShapeModifiers.registerModifier('rd',RoundCornersModifier);\n\tfunction RepeaterModifier(){}\r\n\textendPrototype([ShapeModifier], RepeaterModifier);\r\n\t\r\n\tRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n\t    this.getValue = this.processKeys;\r\n\t    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n\t    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n\t    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n\t    this.data = data;\r\n\t    if(!this.dynamicProperties.length){\r\n\t        this.getValue(true);\r\n\t    }\r\n\t    this.pMatrix = new Matrix();\r\n\t    this.rMatrix = new Matrix();\r\n\t    this.sMatrix = new Matrix();\r\n\t    this.tMatrix = new Matrix();\r\n\t    this.matrix = new Matrix();\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n\t    var dir = inv ? -1 : 1;\r\n\t    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n\t    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n\t    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n\t    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n\t    rMatrix.rotate(-transform.r.v * dir * perc);\r\n\t    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n\t    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n\t    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n\t    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n\t    this.elem = elem;\r\n\t    this.container = elem;\r\n\t    this.arr = arr;\r\n\t    this.pos = pos;\r\n\t    this.elemsData = elemsData;\r\n\t    this._currentCopies = 0;\r\n\t    this._elements = [];\r\n\t    this._groups = [];\r\n\t    this.dynamicProperties = [];\r\n\t    this.frameId = -1;\r\n\t    this.initModifierProperties(elem,arr[pos]);\r\n\t    var cont = 0;\r\n\t    while(pos>0){\r\n\t        pos -= 1;\r\n\t        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n\t        this._elements.unshift(arr[pos]);\r\n\t        cont += 1;\r\n\t    }\r\n\t    if(this.dynamicProperties.length){\r\n\t        this.k = true;\r\n\t    }else{\r\n\t        this.getValue(true);\r\n\t    }\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.resetElements = function(elements){\r\n\t    var i, len = elements.length;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        elements[i]._processed = false;\r\n\t        if(elements[i].ty === 'gr'){\r\n\t            this.resetElements(elements[i].it);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.cloneElements = function(elements){\r\n\t    var i, len = elements.length;\r\n\t    var newElements = JSON.parse(JSON.stringify(elements));\r\n\t    this.resetElements(newElements);\r\n\t    return newElements;\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n\t    var i, len = elements.length;\r\n\t    for(i = 0; i < len ; i += 1) {\r\n\t        elements[i]._render = renderFlag;\r\n\t        if(elements[i].ty === 'gr') {\r\n\t            this.changeGroupRender(elements[i].it, renderFlag);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n\t    var items, itemsTransform, i, dir, cont;\r\n\t    if(this._mdf || _isFirstFrame){\r\n\t        var copies = Math.ceil(this.c.v);\r\n\t        if(this._groups.length < copies){\r\n\t            while(this._groups.length < copies){\r\n\t                var group = {\r\n\t                    it:this.cloneElements(this._elements),\r\n\t                    ty:'gr'\r\n\t                };\r\n\t                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n\t                \r\n\t                this.arr.splice(0,0,group);\r\n\t                this._groups.splice(0,0,group);\r\n\t                this._currentCopies += 1;\r\n\t            }\r\n\t            this.elem.reloadShapes();\r\n\t        }\r\n\t        cont = 0;\r\n\t        var renderFlag;\r\n\t        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n\t            renderFlag = cont < copies;\r\n\t            this._groups[i]._render = renderFlag;\r\n\t            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n\t            cont += 1;\r\n\t        }\r\n\t        \r\n\t        this._currentCopies = copies;\r\n\t        ////\r\n\t\r\n\t        var offset = this.o.v;\r\n\t        var offsetModulo = offset%1;\r\n\t        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n\t        var k;\r\n\t        var tMat = this.tr.v.props;\r\n\t        var pProps = this.pMatrix.props;\r\n\t        var rProps = this.rMatrix.props;\r\n\t        var sProps = this.sMatrix.props;\r\n\t        this.pMatrix.reset();\r\n\t        this.rMatrix.reset();\r\n\t        this.sMatrix.reset();\r\n\t        this.tMatrix.reset();\r\n\t        this.matrix.reset();\r\n\t        var iteration = 0;\r\n\t\r\n\t        if(offset > 0) {\r\n\t            while(iteration<roundOffset){\r\n\t                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n\t                iteration += 1;\r\n\t            }\r\n\t            if(offsetModulo){\r\n\t                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n\t                iteration += offsetModulo;\r\n\t            }\r\n\t        } else if(offset < 0) {\r\n\t            while(iteration>roundOffset){\r\n\t                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n\t                iteration -= 1;\r\n\t            }\r\n\t            if(offsetModulo){\r\n\t                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n\t                iteration -= offsetModulo;\r\n\t            }\r\n\t        }\r\n\t        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n\t        dir = this.data.m === 1 ? 1 : -1;\r\n\t        cont = this._currentCopies;\r\n\t        var j, jLen;\r\n\t        while(cont){\r\n\t            items = this.elemsData[i].it;\r\n\t            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n\t            jLen = itemsTransform.length;\r\n\t            items[items.length - 1].transform.mProps._mdf = true;\r\n\t            items[items.length - 1].transform.op._mdf = true;\r\n\t            if(iteration !== 0){\r\n\t                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n\t                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n\t                }\r\n\t                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n\t                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n\t                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n\t                \r\n\t                for(j=0;j<jLen;j+=1) {\r\n\t                    itemsTransform[j] = this.matrix.props[j];\r\n\t                }\r\n\t                this.matrix.reset();\r\n\t            } else {\r\n\t                this.matrix.reset();\r\n\t                for(j=0;j<jLen;j+=1) {\r\n\t                    itemsTransform[j] = this.matrix.props[j];\r\n\t                }\r\n\t            }\r\n\t            iteration += 1;\r\n\t            cont -= 1;\r\n\t            i += dir;\r\n\t        }\r\n\t    } else {\r\n\t        cont = this._currentCopies;\r\n\t        i = 0;\r\n\t        dir = 1;\r\n\t        while(cont){\r\n\t            items = this.elemsData[i].it;\r\n\t            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n\t            items[items.length - 1].transform.mProps._mdf = false;\r\n\t            items[items.length - 1].transform.op._mdf = false;\r\n\t            cont -= 1;\r\n\t            i += dir;\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.addShape = function(){};\r\n\t\r\n\tShapeModifiers.registerModifier('rp',RepeaterModifier);\n\tfunction ShapeCollection(){\r\n\t\tthis._length = 0;\r\n\t\tthis._maxLength = 4;\r\n\t\tthis.shapes = createSizedArray(this._maxLength);\r\n\t}\r\n\t\r\n\tShapeCollection.prototype.addShape = function(shapeData){\r\n\t\tif(this._length === this._maxLength){\r\n\t\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\t\tthis._maxLength *= 2;\r\n\t\t}\r\n\t\tthis.shapes[this._length] = shapeData;\r\n\t\tthis._length += 1;\r\n\t};\r\n\t\r\n\tShapeCollection.prototype.releaseShapes = function(){\r\n\t\tvar i;\r\n\t\tfor(i = 0; i < this._length; i += 1) {\r\n\t\t\tshape_pool.release(this.shapes[i]);\r\n\t\t}\r\n\t\tthis._length = 0;\r\n\t};\n\tfunction DashProperty(elem, data, renderer) {\r\n\t    this.elem = elem;\r\n\t    this.container = elem;\r\n\t    this.frameId = -1;\r\n\t    this.dataProps = createSizedArray(data.length);\r\n\t    this.renderer = renderer;\r\n\t    this._mdf = false;\r\n\t    this.k = false;\r\n\t    this.dynamicProperties = [];\r\n\t    this.dashStr = '';\r\n\t    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n\t    this.dashoffset = createTypedArray('float32',  1);\r\n\t    var i, len = data.length || 0, prop;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n\t        this.k = prop.k ? true : this.k;\r\n\t        this.dataProps[i] = {n:data[i].n,p:prop};\r\n\t    }\r\n\t    if(!this.k){\r\n\t        this.getValue(true);\r\n\t    }\r\n\t}\r\n\t\r\n\tDashProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n\t\r\n\tDashProperty.prototype.getValue = function(forceRender) {\r\n\t    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n\t        return;\r\n\t    }\r\n\t    var i = 0, len = this.dataProps.length;\r\n\t    this._mdf = forceRender;\r\n\t    this.frameId = this.elem.globalData.frameId;\r\n\t    while(i<len){\r\n\t        this.dataProps[i].p.getValue();\r\n\t        if(this.dataProps[i].p._mdf){\r\n\t            this._mdf = true;\r\n\t        }\r\n\t        i+=1;\r\n\t    }\r\n\t    if (this._mdf) {\r\n\t        if(this.renderer === 'svg') {\r\n\t            this.dashStr = '';\r\n\t        }\r\n\t        for(i=0;i<len;i+=1){\r\n\t            if(this.dataProps[i].n != 'o'){\r\n\t                if(this.renderer === 'svg') {\r\n\t                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n\t                }else{\r\n\t                    this.dashArray[i] = this.dataProps[i].p.v;\r\n\t                }\r\n\t            }else{\r\n\t                this.dashoffset[0] = this.dataProps[i].p.v;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction GradientProperty(elem,data){\r\n\t    this.container = elem;\r\n\t    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n\t    this.data = data;\r\n\t    this.k = this.prop.k;\r\n\t    this.c = createTypedArray('uint8c', data.p*4);\r\n\t    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n\t    this.o = createTypedArray('float32', cLength);\r\n\t    this._cmdf = false;\r\n\t    this._omdf = false;\r\n\t    this._collapsable = this.checkCollapsable();\r\n\t    this._hasOpacity = cLength;\r\n\t    this._mdf = false;\r\n\t    this.getValue(true);\r\n\t}\r\n\t\r\n\tGradientProperty.prototype.addDynamicProperty = function(prop) {\r\n\t    this.container.addDynamicProperty(this);\r\n\t}\r\n\t\r\n\tGradientProperty.prototype.comparePoints = function(values, points) {\r\n\t    var i = 0, len = this.o.length/2, diff;\r\n\t    while(i < len) {\r\n\t        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n\t        if(diff > 0.01){\r\n\t            return false;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    return true;\r\n\t};\r\n\t\r\n\tGradientProperty.prototype.checkCollapsable = function() {\r\n\t    if (this.o.length/2 !== this.c.length/4) {\r\n\t        return false;\r\n\t    }\r\n\t    if (this.data.k.k[0].s) {\r\n\t        var i = 0, len = this.data.k.k.length;\r\n\t        while (i < len) {\r\n\t            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n\t                return false;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n\t        return false;\r\n\t    }\r\n\t    return true;\r\n\t};\r\n\t\r\n\tGradientProperty.prototype.getValue = function(forceRender){\r\n\t    this.prop.getValue();\r\n\t    this._mdf = false;\r\n\t    this._cmdf = false;\r\n\t    this._omdf = false;\r\n\t    if(this.prop._mdf || forceRender){\r\n\t        var i, len = this.data.p*4;\r\n\t        var mult, val;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            mult = i%4 === 0 ? 100 : 255;\r\n\t            val = Math.round(this.prop.v[i]*mult);\r\n\t            if(this.c[i] !== val){\r\n\t                this.c[i] = val;\r\n\t                this._cmdf = !forceRender;\r\n\t            }\r\n\t        }\r\n\t        if(this.o.length){\r\n\t            len = this.prop.v.length;\r\n\t            for(i=this.data.p*4;i<len;i+=1){\r\n\t                mult = i%2 === 0 ? 100 : 1;\r\n\t                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n\t                if(this.o[i-this.data.p*4] !== val){\r\n\t                    this.o[i-this.data.p*4] = val;\r\n\t                    this._omdf = !forceRender;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this._mdf = !forceRender;\r\n\t    }\r\n\t};\n\tvar ImagePreloader = (function(){\r\n\t\r\n\t    function imageLoaded(){\r\n\t        this.loadedAssets += 1;\r\n\t        if(this.loadedAssets === this.totalImages){\r\n\t            if(this.imagesLoadedCb) {\r\n\t                this.imagesLoadedCb(null);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getAssetsPath(assetData){\r\n\t        var path = '';\r\n\t        if(this.assetsPath){\r\n\t            var imagePath = assetData.p;\r\n\t            if(imagePath.indexOf('images/') !== -1){\r\n\t                imagePath = imagePath.split('/')[1];\r\n\t            }\r\n\t            path = this.assetsPath + imagePath;\r\n\t        } else {\r\n\t            path = this.path;\r\n\t            path += assetData.u ? assetData.u : '';\r\n\t            path += assetData.p;\r\n\t        }\r\n\t        return path;\r\n\t    }\r\n\t\r\n\t    function loadImage(path){\r\n\t        var img = createTag('img');\r\n\t        img.addEventListener('load', imageLoaded.bind(this), false);\r\n\t        img.addEventListener('error', imageLoaded.bind(this), false);\r\n\t        img.src = path;\r\n\t    }\r\n\t    function loadAssets(assets, cb){\r\n\t        this.imagesLoadedCb = cb;\r\n\t        this.totalAssets = assets.length;\r\n\t        var i;\r\n\t        for(i=0;i<this.totalAssets;i+=1){\r\n\t            if(!assets[i].layers){\r\n\t                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n\t                this.totalImages += 1;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function setPath(path){\r\n\t        this.path = path || '';\r\n\t    }\r\n\t\r\n\t    function setAssetsPath(path){\r\n\t        this.assetsPath = path || '';\r\n\t    }\r\n\t\r\n\t    function destroy() {\r\n\t        this.imagesLoadedCb = null;\r\n\t    }\r\n\t\r\n\t    return function ImagePreloader(){\r\n\t        this.loadAssets = loadAssets;\r\n\t        this.setAssetsPath = setAssetsPath;\r\n\t        this.setPath = setPath;\r\n\t        this.destroy = destroy;\r\n\t        this.assetsPath = '';\r\n\t        this.path = '';\r\n\t        this.totalAssets = 0;\r\n\t        this.totalImages = 0;\r\n\t        this.loadedAssets = 0;\r\n\t        this.imagesLoadedCb = null;\r\n\t    };\r\n\t}());\n\tvar featureSupport = (function(){\r\n\t\tvar ob = {\r\n\t\t\tmaskType: true\r\n\t\t};\r\n\t\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t\t   ob.maskType = false;\r\n\t\t}\r\n\t\treturn ob;\r\n\t}());\n\tvar filtersFactory = (function(){\r\n\t\tvar ob = {};\r\n\t\tob.createFilter = createFilter;\r\n\t\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\t\r\n\t\tfunction createFilter(filId){\r\n\t        \tvar fil = createNS('filter');\r\n\t        \tfil.setAttribute('id',filId);\r\n\t                fil.setAttribute('filterUnits','objectBoundingBox');\r\n\t                fil.setAttribute('x','0%');\r\n\t                fil.setAttribute('y','0%');\r\n\t                fil.setAttribute('width','100%');\r\n\t                fil.setAttribute('height','100%');\r\n\t                return fil;\r\n\t\t}\r\n\t\r\n\t\tfunction createAlphaToLuminanceFilter(){\r\n\t                var feColorMatrix = createNS('feColorMatrix');\r\n\t                feColorMatrix.setAttribute('type','matrix');\r\n\t                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n\t                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n\t                return feColorMatrix;\r\n\t\t}\r\n\t\r\n\t\treturn ob;\r\n\t}());\n\tfunction TextAnimatorProperty(textData, renderType, elem){\r\n\t    this._mdf = false;\r\n\t    this._isFirstFrame = true;\r\n\t\tthis._hasMaskedPath = false;\r\n\t\tthis._frameId = -1;\r\n\t\tthis.dynamicProperties = [];\r\n\t\tthis._textData = textData;\r\n\t\tthis._renderType = renderType;\r\n\t    this._elem = elem;\r\n\t\tthis.container = elem;\r\n\t\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\t\tthis._pathData = {};\r\n\t\tthis._moreOptions = {\r\n\t\t\talignment: {}\r\n\t\t};\r\n\t\tthis.renderedLetters = [];\r\n\t    this.lettersChangedFlag = false;\r\n\t\r\n\t}\r\n\t\r\n\tTextAnimatorProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n\t\r\n\tTextAnimatorProperty.prototype.searchProperties = function(){\r\n\t    var i, len = this._textData.a.length, animatorProps;\r\n\t    var getProp = PropertyFactory.getProp;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        animatorProps = this._textData.a[i];\r\n\t        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n\t    }\r\n\t    if(this._textData.p && 'm' in this._textData.p){\r\n\t        this._pathData = {\r\n\t            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n\t            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n\t            r: this._textData.p.r,\r\n\t            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n\t        };\r\n\t        this._hasMaskedPath = true;\r\n\t    } else {\r\n\t        this._hasMaskedPath = false;\r\n\t    }\r\n\t    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n\t};\r\n\t\r\n\tTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n\t    this.lettersChangedFlag = lettersChangedFlag;\r\n\t    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n\t        return;\r\n\t    }\r\n\t    this._isFirstFrame = false;\r\n\t    var alignment = this._moreOptions.alignment.v;\r\n\t    var animators = this._animatorsData;\r\n\t    var textData = this._textData;\r\n\t    var matrixHelper = this.mHelper;\r\n\t    var renderType = this._renderType;\r\n\t    var renderedLettersCount = this.renderedLetters.length;\r\n\t    var data = this.data;\r\n\t    var xPos,yPos;\r\n\t    var i, len;\r\n\t    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n\t    if(this._hasMaskedPath) {\r\n\t        mask = this._pathData.m;\r\n\t        if(!this._pathData.n || this._pathData._mdf){\r\n\t            var paths = mask.v;\r\n\t            if(this._pathData.r){\r\n\t                paths = paths.reverse();\r\n\t            }\r\n\t            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n\t            pathInfo = {\r\n\t                tLength: 0,\r\n\t                segments: []\r\n\t            };\r\n\t            len = paths._length - 1;\r\n\t            var pathData;\r\n\t            totalLength = 0;\r\n\t            for (i = 0; i < len; i += 1) {\r\n\t                pathData = {\r\n\t                    s: paths.v[i],\r\n\t                    e: paths.v[i + 1],\r\n\t                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n\t                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n\t                };\r\n\t                bez.buildBezierData(pathData);\r\n\t                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n\t                pathInfo.segments.push(pathData);\r\n\t                totalLength += pathData.bezierData.segmentLength;\r\n\t            }\r\n\t            i = len;\r\n\t            if (mask.v.c) {\r\n\t                pathData = {\r\n\t                    s: paths.v[i],\r\n\t                    e: paths.v[0],\r\n\t                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n\t                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n\t                };\r\n\t                bez.buildBezierData(pathData);\r\n\t                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n\t                pathInfo.segments.push(pathData);\r\n\t                totalLength += pathData.bezierData.segmentLength;\r\n\t            }\r\n\t            this._pathData.pi = pathInfo;\r\n\t        }\r\n\t        pathInfo = this._pathData.pi;\r\n\t\r\n\t        currentLength = this._pathData.f.v;\r\n\t        segmentInd = 0;\r\n\t        pointInd = 1;\r\n\t        segmentLength = 0;\r\n\t        flag = true;\r\n\t        segments = pathInfo.segments;\r\n\t        if (currentLength < 0 && mask.v.c) {\r\n\t            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n\t                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n\t            }\r\n\t            segmentInd = segments.length - 1;\r\n\t            points = segments[segmentInd].bezierData.points;\r\n\t            pointInd = points.length - 1;\r\n\t            while (currentLength < 0) {\r\n\t                currentLength += points[pointInd].partialLength;\r\n\t                pointInd -= 1;\r\n\t                if (pointInd < 0) {\r\n\t                    segmentInd -= 1;\r\n\t                    points = segments[segmentInd].bezierData.points;\r\n\t                    pointInd = points.length - 1;\r\n\t                }\r\n\t            }\r\n\t\r\n\t        }\r\n\t        points = segments[segmentInd].bezierData.points;\r\n\t        prevPoint = points[pointInd - 1];\r\n\t        currentPoint = points[pointInd];\r\n\t        partialLength = currentPoint.partialLength;\r\n\t    }\r\n\t\r\n\t\r\n\t    len = letters.length;\r\n\t    xPos = 0;\r\n\t    yPos = 0;\r\n\t    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n\t    var firstLine = true;\r\n\t    var animatorProps, animatorSelector;\r\n\t    var j, jLen;\r\n\t    var letterValue;\r\n\t\r\n\t    jLen = animators.length;\r\n\t    var lastLetter;\r\n\t\r\n\t    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n\t    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n\t    var elemOpacity;\r\n\t    var sc,sw,fc,k;\r\n\t    var lineLength = 0;\r\n\t    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\t\r\n\t    //\r\n\t    if(documentData.j === 2 || documentData.j === 1) {\r\n\t        var animatorJustifyOffset = 0;\r\n\t        var animatorFirstCharOffset = 0;\r\n\t        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n\t        var lastIndex = 0;\r\n\t        var isNewLine = true;\r\n\t\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            if (letters[i].n) {\r\n\t                if(animatorJustifyOffset) {\r\n\t                    animatorJustifyOffset += animatorFirstCharOffset;\r\n\t                }\r\n\t                while (lastIndex < i) {\r\n\t                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n\t                    lastIndex += 1;\r\n\t                }\r\n\t                animatorJustifyOffset = 0;\r\n\t                isNewLine = true;\r\n\t            } else {\r\n\t                for (j = 0; j < jLen; j += 1) {\r\n\t                    animatorProps = animators[j].a;\r\n\t                    if (animatorProps.t.propType) {\r\n\t                        if (isNewLine && documentData.j === 2) {\r\n\t                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n\t                        }\r\n\t                        animatorSelector = animators[j].s;\r\n\t                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n\t                        if (mult.length) {\r\n\t                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n\t                        } else {\r\n\t                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                isNewLine = false;\r\n\t            }\r\n\t        }\r\n\t        if(animatorJustifyOffset) {\r\n\t            animatorJustifyOffset += animatorFirstCharOffset;\r\n\t        }\r\n\t        while(lastIndex < i) {\r\n\t            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n\t            lastIndex += 1;\r\n\t        }\r\n\t    }\r\n\t    //\r\n\t\r\n\t    for( i = 0; i < len; i += 1) {\r\n\t\r\n\t        matrixHelper.reset();\r\n\t        elemOpacity = 1;\r\n\t        if(letters[i].n) {\r\n\t            xPos = 0;\r\n\t            yPos += documentData.yOffset;\r\n\t            yPos += firstLine ? 1 : 0;\r\n\t            currentLength = initPathPos ;\r\n\t            firstLine = false;\r\n\t            lineLength = 0;\r\n\t            if(this._hasMaskedPath) {\r\n\t                segmentInd = initSegmentInd;\r\n\t                pointInd = initPointInd;\r\n\t                points = segments[segmentInd].bezierData.points;\r\n\t                prevPoint = points[pointInd - 1];\r\n\t                currentPoint = points[pointInd];\r\n\t                partialLength = currentPoint.partialLength;\r\n\t                segmentLength = 0;\r\n\t            }\r\n\t            letterO = letterSw = letterFc = letterM = '';\r\n\t            letterP = this.defaultPropsArray;\r\n\t        }else{\r\n\t            if(this._hasMaskedPath) {\r\n\t                if(currentLine !== letters[i].line){\r\n\t                    switch(documentData.j){\r\n\t                        case 1:\r\n\t                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n\t                            break;\r\n\t                        case 2:\r\n\t                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n\t                            break;\r\n\t                    }\r\n\t                    currentLine = letters[i].line;\r\n\t                }\r\n\t                if (ind !== letters[i].ind) {\r\n\t                    if (letters[ind]) {\r\n\t                        currentLength += letters[ind].extra;\r\n\t                    }\r\n\t                    currentLength += letters[i].an / 2;\r\n\t                    ind = letters[i].ind;\r\n\t                }\r\n\t                currentLength += alignment[0] * letters[i].an / 200;\r\n\t                var animatorOffset = 0;\r\n\t                for (j = 0; j < jLen; j += 1) {\r\n\t                    animatorProps = animators[j].a;\r\n\t                    if (animatorProps.p.propType) {\r\n\t                        animatorSelector = animators[j].s;\r\n\t                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                        if(mult.length){\r\n\t                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n\t                        } else{\r\n\t                            animatorOffset += animatorProps.p.v[0] * mult;\r\n\t                        }\r\n\t\r\n\t                    }\r\n\t                    if (animatorProps.a.propType) {\r\n\t                        animatorSelector = animators[j].s;\r\n\t                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                        if(mult.length){\r\n\t                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n\t                        } else{\r\n\t                            animatorOffset += animatorProps.a.v[0] * mult;\r\n\t                        }\r\n\t\r\n\t                    }\r\n\t                }\r\n\t                flag = true;\r\n\t                while (flag) {\r\n\t                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n\t                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n\t                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n\t                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n\t                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n\t                        flag = false;\r\n\t                    } else if (points) {\r\n\t                        segmentLength += currentPoint.partialLength;\r\n\t                        pointInd += 1;\r\n\t                        if (pointInd >= points.length) {\r\n\t                            pointInd = 0;\r\n\t                            segmentInd += 1;\r\n\t                            if (!segments[segmentInd]) {\r\n\t                                if (mask.v.c) {\r\n\t                                    pointInd = 0;\r\n\t                                    segmentInd = 0;\r\n\t                                    points = segments[segmentInd].bezierData.points;\r\n\t                                } else {\r\n\t                                    segmentLength -= currentPoint.partialLength;\r\n\t                                    points = null;\r\n\t                                }\r\n\t                            } else {\r\n\t                                points = segments[segmentInd].bezierData.points;\r\n\t                            }\r\n\t                        }\r\n\t                        if (points) {\r\n\t                            prevPoint = currentPoint;\r\n\t                            currentPoint = points[pointInd];\r\n\t                            partialLength = currentPoint.partialLength;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                offf = letters[i].an / 2 - letters[i].add;\r\n\t                matrixHelper.translate(-offf, 0, 0);\r\n\t            } else {\r\n\t                offf = letters[i].an/2 - letters[i].add;\r\n\t                matrixHelper.translate(-offf,0,0);\r\n\t\r\n\t                // Grouping alignment\r\n\t                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n\t            }\r\n\t\r\n\t            lineLength += letters[i].l/2;\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                animatorProps = animators[j].a;\r\n\t                if (animatorProps.t.propType) {\r\n\t                    animatorSelector = animators[j].s;\r\n\t                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n\t                    if(xPos !== 0 || documentData.j !== 0) {\r\n\t                        if(this._hasMaskedPath) {\r\n\t                            if(mult.length) {\r\n\t                                currentLength += animatorProps.t.v*mult[0];\r\n\t                            } else {\r\n\t                                currentLength += animatorProps.t.v*mult;\r\n\t                            }\r\n\t                        }else{\r\n\t                            if(mult.length) {\r\n\t                                xPos += animatorProps.t.v*mult[0];\r\n\t                            } else {\r\n\t                                xPos += animatorProps.t.v*mult;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            lineLength += letters[i].l/2;\r\n\t            if(documentData.strokeWidthAnim) {\r\n\t                sw = documentData.sw || 0;\r\n\t            }\r\n\t            if(documentData.strokeColorAnim) {\r\n\t                if(documentData.sc){\r\n\t                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n\t                }else{\r\n\t                    sc = [0,0,0];\r\n\t                }\r\n\t            }\r\n\t            if(documentData.fillColorAnim && documentData.fc) {\r\n\t                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n\t            }\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                animatorProps = animators[j].a;\r\n\t                if (animatorProps.a.propType) {\r\n\t                    animatorSelector = animators[j].s;\r\n\t                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t\r\n\t                    if(mult.length){\r\n\t                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n\t                    } else {\r\n\t                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                animatorProps = animators[j].a;\r\n\t                if (animatorProps.s.propType) {\r\n\t                    animatorSelector = animators[j].s;\r\n\t                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                    if(mult.length){\r\n\t                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n\t                    } else {\r\n\t                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            for(j=0;j<jLen;j+=1) {\r\n\t                animatorProps = animators[j].a;\r\n\t                animatorSelector = animators[j].s;\r\n\t                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                if (animatorProps.sk.propType) {\r\n\t                    if(mult.length) {\r\n\t                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n\t                    } else {\r\n\t                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n\t                    }\r\n\t                }\r\n\t                if (animatorProps.r.propType) {\r\n\t                    if(mult.length) {\r\n\t                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n\t                    } else {\r\n\t                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n\t                    }\r\n\t                }\r\n\t                if (animatorProps.ry.propType) {\r\n\t\r\n\t                    if(mult.length) {\r\n\t                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n\t                    }else{\r\n\t                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n\t                    }\r\n\t                }\r\n\t                if (animatorProps.rx.propType) {\r\n\t                    if(mult.length) {\r\n\t                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n\t                    } else {\r\n\t                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n\t                    }\r\n\t                }\r\n\t                if (animatorProps.o.propType) {\r\n\t                    if(mult.length) {\r\n\t                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n\t                    } else {\r\n\t                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n\t                    }\r\n\t                }\r\n\t                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n\t                    if(mult.length) {\r\n\t                        sw += animatorProps.sw.v*mult[0];\r\n\t                    } else {\r\n\t                        sw += animatorProps.sw.v*mult;\r\n\t                    }\r\n\t                }\r\n\t                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n\t                    for(k=0;k<3;k+=1){\r\n\t                        if(mult.length) {\r\n\t                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n\t                        } else {\r\n\t                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                if (documentData.fillColorAnim && documentData.fc) {\r\n\t                    if(animatorProps.fc.propType){\r\n\t                        for(k=0;k<3;k+=1){\r\n\t                            if(mult.length) {\r\n\t                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n\t                            } else {\r\n\t                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                    if(animatorProps.fh.propType){\r\n\t                        if(mult.length) {\r\n\t                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n\t                        } else {\r\n\t                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n\t                        }\r\n\t                    }\r\n\t                    if(animatorProps.fs.propType){\r\n\t                        if(mult.length) {\r\n\t                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n\t                        } else {\r\n\t                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n\t                        }\r\n\t                    }\r\n\t                    if(animatorProps.fb.propType){\r\n\t                        if(mult.length) {\r\n\t                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n\t                        } else {\r\n\t                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                animatorProps = animators[j].a;\r\n\t\r\n\t                if (animatorProps.p.propType) {\r\n\t                    animatorSelector = animators[j].s;\r\n\t                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                    if(this._hasMaskedPath) {\r\n\t                        if(mult.length) {\r\n\t                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n\t                        } else {\r\n\t                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n\t                        }\r\n\t                    }else{\r\n\t                        if(mult.length) {\r\n\t                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n\t                        } else {\r\n\t                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            if(documentData.strokeWidthAnim){\r\n\t                letterSw = sw < 0 ? 0 : sw;\r\n\t            }\r\n\t            if(documentData.strokeColorAnim){\r\n\t                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n\t            }\r\n\t            if(documentData.fillColorAnim && documentData.fc){\r\n\t                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n\t            }\r\n\t\r\n\t            if(this._hasMaskedPath) {\r\n\t                matrixHelper.translate(0,-documentData.ls);\r\n\t\r\n\t                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n\t                if (textData.p.p) {\r\n\t                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n\t                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n\t                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n\t                        rot += 180;\r\n\t                    }\r\n\t                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n\t                }\r\n\t                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n\t                currentLength -= alignment[0]*letters[i].an/200;\r\n\t                if(letters[i+1] && ind !== letters[i+1].ind){\r\n\t                    currentLength += letters[i].an / 2;\r\n\t                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n\t                }\r\n\t            }else{\r\n\t\r\n\t                matrixHelper.translate(xPos,yPos,0);\r\n\t\r\n\t                if(documentData.ps){\r\n\t                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n\t                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n\t                }\r\n\t                switch(documentData.j){\r\n\t                    case 1:\r\n\t                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n\t                        break;\r\n\t                    case 2:\r\n\t                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n\t                        break;\r\n\t                }\r\n\t                matrixHelper.translate(0,-documentData.ls);\r\n\t                matrixHelper.translate(offf,0,0);\r\n\t                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n\t                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n\t            }\r\n\t            if(renderType === 'html'){\r\n\t                letterM = matrixHelper.toCSS();\r\n\t            }else if(renderType === 'svg'){\r\n\t                letterM = matrixHelper.to2dCSS();\r\n\t            }else{\r\n\t                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n\t            }\r\n\t            letterO = elemOpacity;\r\n\t        }\r\n\t\r\n\t        if(renderedLettersCount <= i) {\r\n\t            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n\t            this.renderedLetters.push(letterValue);\r\n\t            renderedLettersCount += 1;\r\n\t            this.lettersChangedFlag = true;\r\n\t        } else {\r\n\t            letterValue = this.renderedLetters[i];\r\n\t            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tTextAnimatorProperty.prototype.getValue = function(){\r\n\t\tif(this._elem.globalData.frameId === this._frameId){\r\n\t        return;\r\n\t    }\r\n\t    this._frameId = this._elem.globalData.frameId;\r\n\t\tvar i, len = this.dynamicProperties.length;\r\n\t    this._mdf = false;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tthis.dynamicProperties[i].getValue();\r\n\t        this._mdf = this.dynamicProperties[i]._mdf || this._mdf;\r\n\t\t}\r\n\t};\r\n\t\r\n\tTextAnimatorProperty.prototype.mHelper = new Matrix();\r\n\tTextAnimatorProperty.prototype.defaultPropsArray = [];\n\tfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\t\tvar defaultData = {propType:false};\r\n\t\tvar getProp = PropertyFactory.getProp;\r\n\t\tvar textAnimator_animatables = animatorProps.a;\r\n\t\tthis.a = {\r\n\t\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t\t};\r\n\t\r\n\t\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n\t    this.s.t = animatorProps.s.t;\r\n\t}\n\tfunction LetterProps(o, sw, sc, fc, m, p){\r\n\t    this.o = o;\r\n\t    this.sw = sw;\r\n\t    this.sc = sc;\r\n\t    this.fc = fc;\r\n\t    this.m = m;\r\n\t    this.p = p;\r\n\t    this._mdf = {\r\n\t    \to: true,\r\n\t    \tsw: !!sw,\r\n\t    \tsc: !!sc,\r\n\t    \tfc: !!fc,\r\n\t    \tm: true,\r\n\t    \tp: true\r\n\t    };\r\n\t}\r\n\t\r\n\tLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\t\tthis._mdf.o = false;\r\n\t\tthis._mdf.sw = false;\r\n\t\tthis._mdf.sc = false;\r\n\t\tthis._mdf.fc = false;\r\n\t\tthis._mdf.m = false;\r\n\t\tthis._mdf.p = false;\r\n\t\tvar updated = false;\r\n\t\r\n\t\tif(this.o !== o) {\r\n\t\t\tthis.o = o;\r\n\t\t\tthis._mdf.o = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif(this.sw !== sw) {\r\n\t\t\tthis.sw = sw;\r\n\t\t\tthis._mdf.sw = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif(this.sc !== sc) {\r\n\t\t\tthis.sc = sc;\r\n\t\t\tthis._mdf.sc = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif(this.fc !== fc) {\r\n\t\t\tthis.fc = fc;\r\n\t\t\tthis._mdf.fc = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif(this.m !== m) {\r\n\t\t\tthis.m = m;\r\n\t\t\tthis._mdf.m = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\t\tthis.p = p;\r\n\t\t\tthis._mdf.p = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\treturn updated;\r\n\t};\n\tfunction TextProperty(elem, data){\r\n\t\tthis._frameId = initialDefaultFrame;\r\n\t\tthis.pv = '';\r\n\t\tthis.v = '';\r\n\t\tthis.kf = false;\r\n\t\tthis._isFirstFrame = true;\r\n\t\tthis._mdf = true;\r\n\t\tthis.data = data;\r\n\t\tthis.elem = elem;\r\n\t\tthis.keysIndex = -1;\r\n\t    this.canResize = false;\r\n\t    this.minimumFontSize = 1;\r\n\t\tthis.currentData = {\r\n\t\t\tascent: 0,\r\n\t        boxWidth: [0,0],\r\n\t        f: '',\r\n\t        fStyle: '',\r\n\t        fWeight: '',\r\n\t        fc: '',\r\n\t        j: '',\r\n\t        justifyOffset: '',\r\n\t        l: [],\r\n\t        lh: 0,\r\n\t        lineWidths: [],\r\n\t        ls: '',\r\n\t        of: '',\r\n\t        s: '',\r\n\t        sc: '',\r\n\t        sw: 0,\r\n\t        t: 0,\r\n\t        tr: 0,\r\n\t        sz:0,\r\n\t        ps:[0,0],\r\n\t        fillColorAnim: false,\r\n\t        strokeColorAnim: false,\r\n\t        strokeWidthAnim: false,\r\n\t        yOffset: 0,\r\n\t        __complete: false,\r\n\t        finalSize:0,\r\n\t        finalText:[],\r\n\t        finalLineHeight: 0\r\n\t\r\n\t\t};\r\n\t\tif(this.searchProperty()) {\r\n\t        elem.addDynamicProperty(this);\r\n\t\t} else {\r\n\t\t\tthis.getValue(true);\r\n\t\t}\r\n\t}\r\n\t\r\n\tTextProperty.prototype.setCurrentData = function(data){\r\n\t\t\tvar currentData = this.currentData;\r\n\t        currentData.ascent = data.ascent;\r\n\t        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n\t        currentData.f = data.f;\r\n\t        currentData.fStyle = data.fStyle;\r\n\t        currentData.fWeight = data.fWeight;\r\n\t        currentData.fc = data.fc;\r\n\t        currentData.j = data.j;\r\n\t        currentData.justifyOffset = data.justifyOffset;\r\n\t        currentData.l = data.l;\r\n\t        currentData.lh = data.lh;\r\n\t        currentData.lineWidths = data.lineWidths;\r\n\t        currentData.ls = data.ls;\r\n\t        currentData.of = data.of;\r\n\t        currentData.s = data.s;\r\n\t        currentData.sc = data.sc;\r\n\t        currentData.sw = data.sw;\r\n\t        currentData.sz = data.sz;\r\n\t        currentData.ps = data.ps;\r\n\t        currentData.t = data.t;\r\n\t        currentData.tr = data.tr;\r\n\t        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n\t        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n\t        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n\t        currentData.yOffset = data.yOffset;\r\n\t        currentData.finalSize = data.finalSize;\r\n\t        currentData.finalLineHeight = data.finalLineHeight;\r\n\t        currentData.finalText = data.finalText;\r\n\t        currentData.__complete = false;\r\n\t};\r\n\t\r\n\tTextProperty.prototype.searchProperty = function() {\r\n\t\tthis.kf = this.data.d.k.length > 1;\r\n\t\treturn this.kf;\r\n\t};\r\n\t\r\n\tTextProperty.prototype.getValue = function(_forceRender) {\r\n\t\tthis._mdf = false;\r\n\t\tvar frameId = this.elem.globalData.frameId;\r\n\t\tif((frameId === this._frameId || !this.kf) && !this._isFirstFrame && !_forceRender) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t    var textKeys = this.data.d.k, textDocumentData;\r\n\t    var frameNum = this.elem.comp.renderedFrame;\r\n\t    var i = 0, len = textKeys.length;\r\n\t    while(i <= len - 1) {\r\n\t        textDocumentData = textKeys[i].s;\r\n\t        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n\t            break;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    if(this.keysIndex !== i) {\r\n\t    \tif(!textDocumentData.__complete) {\r\n\t            this.completeTextData(textDocumentData);\r\n\t        }\r\n\t        this.setCurrentData(textDocumentData);\r\n\t        this._mdf = !this._isFirstFrame;\r\n\t        this.pv = this.v = this.currentData.t;\r\n\t        this.keysIndex = i;\r\n\t    }\r\n\t\tthis._frameId = frameId;\r\n\t};\r\n\t\r\n\tTextProperty.prototype.buildFinalText = function(text) {\r\n\t    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n\t    var charactersArray = [];\r\n\t    var i = 0, len = text.length;\r\n\t    while (i < len) {\r\n\t        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n\t            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n\t        } else {\r\n\t            charactersArray.push(text.charAt(i));\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    return charactersArray;\r\n\t}\r\n\t\r\n\tTextProperty.prototype.completeTextData = function(documentData) {\r\n\t    documentData.__complete = true;\r\n\t    var fontManager = this.elem.globalData.fontManager;\r\n\t    var data = this.data;\r\n\t    var letters = [];\r\n\t    var i, len;\r\n\t    var newLineFlag, index = 0, val;\r\n\t    var anchorGrouping = data.m.g;\r\n\t    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n\t    var lineWidth = 0;\r\n\t    var maxLineWidth = 0;\r\n\t    var j, jLen;\r\n\t    var fontData = fontManager.getFontByName(documentData.f);\r\n\t    var charData, cLength = 0;\r\n\t    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\t\r\n\t    var fWeight = 'normal', fStyle = 'normal';\r\n\t    len = styles.length;\r\n\t    var styleName;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        styleName = styles[i].toLowerCase();\r\n\t        switch(styleName) {\r\n\t            case 'italic':\r\n\t            fStyle = 'italic';\r\n\t            break;\r\n\t            case 'bold':\r\n\t            fWeight = '700';\r\n\t            break;\r\n\t            case 'black':\r\n\t            fWeight = '900';\r\n\t            break;\r\n\t            case 'medium':\r\n\t            fWeight = '500';\r\n\t            break;\r\n\t            case 'regular':\r\n\t            case 'normal':\r\n\t            fWeight = '400';\r\n\t            break;\r\n\t            case 'light':\r\n\t            case 'thin':\r\n\t            fWeight = '200';\r\n\t            break;\r\n\t        }\r\n\t    }\r\n\t    documentData.fWeight = fontData.fWeight || fWeight;\r\n\t    documentData.fStyle = fStyle;\r\n\t    len = documentData.t.length;\r\n\t    documentData.finalSize = documentData.s;\r\n\t    documentData.finalText = this.buildFinalText(documentData.t);\r\n\t    documentData.finalLineHeight = documentData.lh;\r\n\t    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n\t    if(documentData.sz){\r\n\t        var flag = true;\r\n\t        var boxWidth = documentData.sz[0];\r\n\t        var boxHeight = documentData.sz[1];\r\n\t        var currentHeight, finalText;\r\n\t        while(flag) {\r\n\t            finalText = this.buildFinalText(documentData.t);\r\n\t            currentHeight = 0;\r\n\t            lineWidth = 0;\r\n\t            len = finalText.length;\r\n\t            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n\t            var lastSpaceIndex = -1;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                newLineFlag = false;\r\n\t                if(finalText[i] === ' '){\r\n\t                    lastSpaceIndex = i;\r\n\t                }else if(finalText[i].charCodeAt(0) === 13){\r\n\t                    lineWidth = 0;\r\n\t                    newLineFlag = true;\r\n\t                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n\t                }\r\n\t                if(fontManager.chars){\r\n\t                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n\t                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n\t                }else{\r\n\t                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n\t                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n\t                }\r\n\t                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n\t                    if(lastSpaceIndex === -1){\r\n\t                        len += 1;\r\n\t                    } else {\r\n\t                        i = lastSpaceIndex;\r\n\t                    }\r\n\t                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n\t                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n\t                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n\t                    lastSpaceIndex = -1;\r\n\t                    lineWidth = 0;\r\n\t                }else {\r\n\t                    lineWidth += cLength;\r\n\t                    lineWidth += trackingOffset;\r\n\t                }\r\n\t            }\r\n\t            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n\t            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n\t                documentData.finalSize -= 1;\r\n\t                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n\t            } else {\r\n\t                documentData.finalText = finalText;\r\n\t                len = documentData.finalText.length;\r\n\t                flag = false;\r\n\t            }\r\n\t        }\r\n\t\r\n\t    }\r\n\t    lineWidth = - trackingOffset;\r\n\t    cLength = 0;\r\n\t    var uncollapsedSpaces = 0;\r\n\t    var currentChar;\r\n\t    for (i = 0;i < len ;i += 1) {\r\n\t        newLineFlag = false;\r\n\t        currentChar = documentData.finalText[i];\r\n\t        if(currentChar === ' '){\r\n\t            val = '\\u00A0';\r\n\t        }else if(currentChar.charCodeAt(0) === 13){\r\n\t            uncollapsedSpaces = 0;\r\n\t            lineWidths.push(lineWidth);\r\n\t            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n\t            lineWidth = - 2 * trackingOffset;\r\n\t            val = '';\r\n\t            newLineFlag = true;\r\n\t            currentLine += 1;\r\n\t        }else{\r\n\t            val = documentData.finalText[i];\r\n\t        }\r\n\t        if(fontManager.chars){\r\n\t            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n\t            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n\t        }else{\r\n\t            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n\t            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n\t            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n\t        }\r\n\t\r\n\t        //\r\n\t        if(currentChar === ' '){\r\n\t            uncollapsedSpaces += cLength + trackingOffset;\r\n\t        } else {\r\n\t            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n\t            uncollapsedSpaces = 0;\r\n\t        }\r\n\t        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n\t        if(anchorGrouping == 2){\r\n\t            currentSize += cLength;\r\n\t            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n\t                if(val === '' || val === '\\u00A0'){\r\n\t                    currentSize -= cLength;\r\n\t                }\r\n\t                while(currentPos<=i){\r\n\t                    letters[currentPos].an = currentSize;\r\n\t                    letters[currentPos].ind = index;\r\n\t                    letters[currentPos].extra = cLength;\r\n\t                    currentPos += 1;\r\n\t                }\r\n\t                index += 1;\r\n\t                currentSize = 0;\r\n\t            }\r\n\t        }else if(anchorGrouping == 3){\r\n\t            currentSize += cLength;\r\n\t            if(val === '' || i === len - 1){\r\n\t                if(val === ''){\r\n\t                    currentSize -= cLength;\r\n\t                }\r\n\t                while(currentPos<=i){\r\n\t                    letters[currentPos].an = currentSize;\r\n\t                    letters[currentPos].ind = index;\r\n\t                    letters[currentPos].extra = cLength;\r\n\t                    currentPos += 1;\r\n\t                }\r\n\t                currentSize = 0;\r\n\t                index += 1;\r\n\t            }\r\n\t        }else{\r\n\t            letters[index].ind = index;\r\n\t            letters[index].extra = 0;\r\n\t            index += 1;\r\n\t        }\r\n\t    }\r\n\t    documentData.l = letters;\r\n\t    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n\t    lineWidths.push(lineWidth);\r\n\t    if(documentData.sz){\r\n\t        documentData.boxWidth = documentData.sz[0];\r\n\t        documentData.justifyOffset = 0;\r\n\t    }else{\r\n\t        documentData.boxWidth = maxLineWidth;\r\n\t        switch(documentData.j){\r\n\t            case 1:\r\n\t                documentData.justifyOffset = - documentData.boxWidth;\r\n\t                break;\r\n\t            case 2:\r\n\t                documentData.justifyOffset = - documentData.boxWidth/2;\r\n\t                break;\r\n\t            default:\r\n\t                documentData.justifyOffset = 0;\r\n\t        }\r\n\t    }\r\n\t    documentData.lineWidths = lineWidths;\r\n\t\r\n\t    var animators = data.a, animatorData, letterData;\r\n\t    jLen = animators.length;\r\n\t    var based, ind, indexes = [];\r\n\t    for(j=0;j<jLen;j+=1){\r\n\t        animatorData = animators[j];\r\n\t        if(animatorData.a.sc){\r\n\t            documentData.strokeColorAnim = true;\r\n\t        }\r\n\t        if(animatorData.a.sw){\r\n\t            documentData.strokeWidthAnim = true;\r\n\t        }\r\n\t        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n\t            documentData.fillColorAnim = true;\r\n\t        }\r\n\t        ind = 0;\r\n\t        based = animatorData.s.b;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            letterData = letters[i];\r\n\t            letterData.anIndexes[j] = ind;\r\n\t            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n\t                if(animatorData.s.rn === 1){\r\n\t                    indexes.push(ind);\r\n\t                }\r\n\t                ind += 1;\r\n\t            }\r\n\t        }\r\n\t        data.a[j].s.totalChars = ind;\r\n\t        var currentInd = -1, newInd;\r\n\t        if(animatorData.s.rn === 1){\r\n\t            for(i = 0; i < len; i += 1){\r\n\t                letterData = letters[i];\r\n\t                if(currentInd != letterData.anIndexes[j]){\r\n\t                    currentInd = letterData.anIndexes[j];\r\n\t                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n\t                }\r\n\t                letterData.anIndexes[j] = newInd;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n\t    documentData.ls = documentData.ls || 0;\r\n\t    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n\t};\r\n\t\r\n\tTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\t\tindex = index === undefined ? this.keysIndex : index;\r\n\t    var dData = this.data.d.k[index].s;\r\n\t    for(var s in newData) {\r\n\t        dData[s] = newData[s];\r\n\t    }\r\n\t    this.recalculate(index);\r\n\t};\r\n\t\r\n\tTextProperty.prototype.recalculate = function(index) {\r\n\t    var dData = this.data.d.k[index].s;\r\n\t    dData.__complete = false;\r\n\t    this.keysIndex = -1;\r\n\t    this._isFirstFrame = true;\r\n\t    this.getValue(true);\r\n\t}\r\n\t\r\n\tTextProperty.prototype.canResizeFont = function(_canResize) {\r\n\t    this.canResize = _canResize;\r\n\t    this.recalculate(this.keysIndex);\r\n\t};\r\n\t\r\n\tTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n\t    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n\t    this.recalculate(this.keysIndex);\r\n\t};\r\n\t\n\tvar TextSelectorProp = (function(){\r\n\t    var max = Math.max;\r\n\t    var min = Math.min;\r\n\t    var floor = Math.floor;\r\n\t\r\n\t    function TextSelectorProp(elem,data){\r\n\t        this._mdf = false;\r\n\t        this.k = false;\r\n\t        this.data = data;\r\n\t        this.dynamicProperties = [];\r\n\t        this.elem = elem;\r\n\t        this.container = elem;\r\n\t        this.comp = elem.comp;\r\n\t        this.finalS = 0;\r\n\t        this.finalE = 0;\r\n\t        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n\t        if('e' in data){\r\n\t            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n\t        }else{\r\n\t            this.e = {v:100};\r\n\t        }\r\n\t        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n\t        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n\t        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n\t        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n\t        if(!this.dynamicProperties.length){\r\n\t            this.getValue();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    TextSelectorProp.prototype = {\r\n\t        addDynamicProperty: addDynamicProperty,\r\n\t        getMult: function(ind) {\r\n\t            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n\t            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n\t            var mult = 0;\r\n\t            var s = this.finalS;\r\n\t            var e = this.finalE;\r\n\t            var type = this.data.sh;\r\n\t            if(type == 2){\r\n\t                if(e === s){\r\n\t                    mult = ind >= e ? 1 : 0;\r\n\t                }else{\r\n\t                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n\t                }\r\n\t                mult = easer(mult);\r\n\t            }else if(type == 3){\r\n\t                if(e === s){\r\n\t                    mult = ind >= e ? 0 : 1;\r\n\t                }else{\r\n\t                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n\t                }\r\n\t\r\n\t                mult = easer(mult);\r\n\t            }else if(type == 4){\r\n\t                if(e === s){\r\n\t                    mult = 0;\r\n\t                }else{\r\n\t                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n\t                    if(mult<0.5){\r\n\t                        mult *= 2;\r\n\t                    }else{\r\n\t                        mult = 1 - 2*(mult-0.5);\r\n\t                    }\r\n\t                }\r\n\t                mult = easer(mult);\r\n\t            }else if(type == 5){\r\n\t                if(e === s){\r\n\t                    mult = 0;\r\n\t                }else{\r\n\t                    var tot = e - s;\r\n\t                    /*ind += 0.5;\r\n\t                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n\t                    ind = min(max(0,ind+0.5-s),e-s);\r\n\t                    var x = -tot/2+ind;\r\n\t                    var a = tot/2;\r\n\t                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n\t                }\r\n\t                mult = easer(mult);\r\n\t            }else if(type == 6){\r\n\t                if(e === s){\r\n\t                    mult = 0;\r\n\t                }else{\r\n\t                    ind = min(max(0,ind+0.5-s),e-s);\r\n\t                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n\t                    /*\r\n\t                     ind = Math.min(Math.max(s,ind),e-1);\r\n\t                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n\t                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n\t                }\r\n\t                mult = easer(mult);\r\n\t            }else {\r\n\t                if(ind >= floor(s)){\r\n\t                    if(ind-s < 0){\r\n\t                        mult = 1 - (s - ind);\r\n\t                    }else{\r\n\t                        mult = max(0,min(e-ind,1));\r\n\t                    }\r\n\t                }\r\n\t                mult = easer(mult);\r\n\t            }\r\n\t            return mult*this.a.v;\r\n\t        },\r\n\t        getValue: function(newCharsFlag) {\r\n\t            this._mdf = newCharsFlag || false;\r\n\t            if(this.dynamicProperties.length){\r\n\t                var i, len = this.dynamicProperties.length;\r\n\t                for(i=0;i<len;i+=1){\r\n\t                    this.dynamicProperties[i].getValue();\r\n\t                    if(this.dynamicProperties[i]._mdf){\r\n\t                        this._mdf = true;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            var totalChars = this.data.totalChars || this.elem.textProperty.currentData.l.length || 0;\r\n\t            if(newCharsFlag && this.data.r === 2) {\r\n\t                this.e.v = totalChars;\r\n\t            }\r\n\t            var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n\t            var o = this.o.v/divisor;\r\n\t            var s = this.s.v/divisor + o;\r\n\t            var e = (this.e.v/divisor) + o;\r\n\t            if(s>e){\r\n\t                var _s = s;\r\n\t                s = e;\r\n\t                e = _s;\r\n\t            }\r\n\t            this.finalS = s;\r\n\t            this.finalE = e;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getTextSelectorProp(elem, data,arr) {\r\n\t        return new TextSelectorProp(elem, data, arr);\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        getTextSelectorProp: getTextSelectorProp\r\n\t    };\r\n\t}());\r\n\t\r\n\t    \n\tvar pool_factory = (function() {\r\n\t\treturn function(initialLength, _create, _release, _clone) {\r\n\t\r\n\t\t\tvar _length = 0;\r\n\t\t\tvar _maxLength = initialLength;\r\n\t\t\tvar pool = createSizedArray(_maxLength);\r\n\t\r\n\t\t\tvar ob = {\r\n\t\t\t\tnewElement: newElement,\r\n\t\t\t\trelease: release\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction newElement(){\r\n\t\t\t\tvar element;\r\n\t\t\t\tif(_length){\r\n\t\t\t\t\t_length -= 1;\r\n\t\t\t\t\telement = pool[_length];\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement = _create();\r\n\t\t\t\t}\r\n\t\t\t\treturn element;\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction release(element) {\r\n\t\t\t\tif(_length === _maxLength) {\r\n\t\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t\t}\r\n\t\t\t\tif (_release) {\r\n\t\t\t\t\t_release(element);\r\n\t\t\t\t}\r\n\t\t\t\tpool[_length] = element;\r\n\t\t\t\t_length += 1;\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction clone() {\r\n\t\t\t\tvar clonedElement = newElement();\r\n\t\t\t\treturn _clone(clonedElement);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn ob;\r\n\t\t};\r\n\t}());\r\n\t\n\tvar pooling = (function(){\r\n\t\r\n\t\tfunction double(arr){\r\n\t\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t\t}\r\n\t\r\n\t\treturn {\r\n\t\t\tdouble: double\r\n\t\t};\r\n\t}());\n\tvar point_pool = (function(){\r\n\t\r\n\t\tfunction create() {\r\n\t\t\treturn createTypedArray('float32', 2);\r\n\t\t}\r\n\t\treturn pool_factory(8, create);\r\n\t}());\n\tvar shape_pool = (function(){\r\n\t\r\n\t\tfunction create() {\r\n\t\t\treturn new ShapePath();\r\n\t\t}\r\n\t\r\n\t\tfunction release(shapePath) {\r\n\t\t\tvar len = shapePath._length, i;\r\n\t\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\t\tshapePath.v[i] = null;\r\n\t\t\t\tshapePath.i[i] = null;\r\n\t\t\t\tshapePath.o[i] = null;\r\n\t\t\t}\r\n\t\t\tshapePath._length = 0;\r\n\t\t\tshapePath.c = false;\r\n\t\t}\r\n\t\r\n\t\tfunction clone(shape) {\r\n\t\t\tvar cloned = factory.newElement();\r\n\t\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\t\tcloned.setLength(len);\r\n\t\t\tcloned.c = shape.c;\r\n\t\t\tvar pt;\r\n\t\t\t\r\n\t\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t\t}\r\n\t\t\treturn cloned;\r\n\t\t}\r\n\t\r\n\t\tvar factory = pool_factory(4, create, release);\r\n\t\tfactory.clone = clone;\r\n\t\r\n\t\treturn factory;\r\n\t}());\n\tvar shapeCollection_pool = (function(){\r\n\t\tvar ob = {\r\n\t\t\tnewShapeCollection: newShapeCollection,\r\n\t\t\trelease: release\r\n\t\t};\r\n\t\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = 4;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\t\r\n\t\tfunction newShapeCollection(){\r\n\t\t\tvar shapeCollection;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\tshapeCollection = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t\t}\r\n\t\t\treturn shapeCollection;\r\n\t\t}\r\n\t\r\n\t\tfunction release(shapeCollection) {\r\n\t\t\tvar i, len = shapeCollection._length;\r\n\t\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t\t}\r\n\t\t\tshapeCollection._length = 0;\r\n\t\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tpool[_length] = shapeCollection;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\t\r\n\t\treturn ob;\r\n\t}());\n\tvar segments_length_pool = (function(){\r\n\t\r\n\t\tfunction create() {\r\n\t\t\treturn {\r\n\t\t\t\tlengths: [],\r\n\t\t\t\ttotalLength: 0\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tfunction release(element) {\r\n\t\t\tvar i, len = element.lengths.length;\r\n\t\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t\t}\r\n\t\t\telement.lengths.length = 0;\r\n\t\t}\r\n\t\r\n\t\treturn pool_factory(8, create, release);\r\n\t}());\n\tvar bezier_length_pool = (function(){\r\n\t\r\n\t\tfunction create() {\r\n\t\t\treturn {\r\n\t            addedLength: 0,\r\n\t            percents: createTypedArray('float32', defaultCurveSegments),\r\n\t            lengths: createTypedArray('float32', defaultCurveSegments),\r\n\t        };\r\n\t\t}\r\n\t\treturn pool_factory(8, create);\r\n\t}());\n\tfunction BaseRenderer(){}\r\n\tBaseRenderer.prototype.checkLayers = function(num){\r\n\t    var i, len = this.layers.length, data;\r\n\t    this.completeLayers = true;\r\n\t    for (i = len - 1; i >= 0; i--) {\r\n\t        if (!this.elements[i]) {\r\n\t            data = this.layers[i];\r\n\t            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n\t            {\r\n\t                this.buildItem(i);\r\n\t            }\r\n\t        }\r\n\t        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n\t    }\r\n\t    this.checkPendingElements();\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.createItem = function(layer){\r\n\t    switch(layer.ty){\r\n\t        case 2:\r\n\t            return this.createImage(layer);\r\n\t        case 0:\r\n\t            return this.createComp(layer);\r\n\t        case 1:\r\n\t            return this.createSolid(layer);\r\n\t        case 3:\r\n\t            return this.createNull(layer);\r\n\t        case 4:\r\n\t            return this.createShape(layer);\r\n\t        case 5:\r\n\t            return this.createText(layer);\r\n\t        case 13:\r\n\t            return this.createCamera(layer);\r\n\t    }\r\n\t    return this.createNull(layer);\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.createCamera = function(){\r\n\t    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.buildAllItems = function(){\r\n\t    var i, len = this.layers.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.buildItem(i);\r\n\t    }\r\n\t    this.checkPendingElements();\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.includeLayers = function(newLayers){\r\n\t    this.completeLayers = false;\r\n\t    var i, len = newLayers.length;\r\n\t    var j, jLen = this.layers.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        j = 0;\r\n\t        while(j<jLen){\r\n\t            if(this.layers[j].id == newLayers[i].id){\r\n\t                this.layers[j] = newLayers[i];\r\n\t                break;\r\n\t            }\r\n\t            j += 1;\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n\t    this.globalData.projectInterface = pInterface;\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.initItems = function(){\r\n\t    if(!this.globalData.progressiveLoad){\r\n\t        this.buildAllItems();\r\n\t    }\r\n\t};\r\n\tBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n\t    var elements = this.elements;\r\n\t    var layers = this.layers;\r\n\t    var i=0, len = layers.length;\r\n\t    while (i < len) {\r\n\t        if (layers[i].ind == parentName) {\r\n\t            if (!elements[i] || elements[i] === true) {\r\n\t                this.buildItem(i);\r\n\t                this.addPendingElement(element);\r\n\t            } else {\r\n\t                hierarchy.push(elements[i]);\r\n\t                elements[i].setAsParent();\r\n\t                if(layers[i].parent !== undefined) {\r\n\t                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n\t                } else {\r\n\t                    element.setHierarchy(hierarchy);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.addPendingElement = function(element){\r\n\t    this.pendingElements.push(element);\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n\t    var i, len = assets.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(assets[i].xt){\r\n\t            var comp = this.createComp(assets[i]);\r\n\t            comp.initExpressions();\r\n\t            this.globalData.projectInterface.registerComposition(comp);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\n\tfunction SVGRenderer(animationItem, config){\r\n\t    this.animationItem = animationItem;\r\n\t    this.layers = null;\r\n\t    this.renderedFrame = -1;\r\n\t    this.svgElement = createNS('svg');\r\n\t    var maskElement = createNS('g');\r\n\t    this.svgElement.appendChild(maskElement);\r\n\t    this.layerElement = maskElement;\r\n\t    var defs = createNS( 'defs');\r\n\t    this.svgElement.appendChild(defs);\r\n\t    this.renderConfig = {\r\n\t        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n\t        progressiveLoad: (config && config.progressiveLoad) || false,\r\n\t        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n\t        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n\t        viewBoxSize: (config && config.viewBoxSize) || false,\r\n\t        className: (config && config.className) || ''\r\n\t    };\r\n\t    this.globalData = {\r\n\t        _mdf: false,\r\n\t        frameNum: -1,\r\n\t        defs: defs,\r\n\t        frameId: 0,\r\n\t        compSize: {w:0,h:0},\r\n\t        renderConfig: this.renderConfig,\r\n\t        fontManager: new FontManager()\r\n\t    };\r\n\t    this.elements = [];\r\n\t    this.pendingElements = [];\r\n\t    this.destroyed = false;\r\n\t\r\n\t}\r\n\t\r\n\textendPrototype([BaseRenderer],SVGRenderer);\r\n\t\r\n\tSVGRenderer.prototype.createNull = function (data) {\r\n\t    return new NullElement(data,this.globalData,this);\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.createShape = function (data) {\r\n\t    return new SVGShapeElement(data,this.globalData,this);\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.createText = function (data) {\r\n\t    return new SVGTextElement(data,this.globalData,this);\r\n\t\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.createImage = function (data) {\r\n\t    return new IImageElement(data,this.globalData,this);\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.createComp = function (data) {\r\n\t    return new SVGCompElement(data,this.globalData,this);\r\n\t\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.createSolid = function (data) {\r\n\t    return new ISolidElement(data,this.globalData,this);\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.configAnimation = function(animData){\r\n\t    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n\t    if(this.renderConfig.viewBoxSize) {\r\n\t        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n\t    } else {\r\n\t        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n\t    }\r\n\t\r\n\t    if(!this.renderConfig.viewBoxOnly) {\r\n\t        this.svgElement.setAttribute('width',animData.w);\r\n\t        this.svgElement.setAttribute('height',animData.h);\r\n\t        this.svgElement.style.width = '100%';\r\n\t        this.svgElement.style.height = '100%';\r\n\t    }\r\n\t    if(this.renderConfig.className) {\r\n\t        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n\t    }\r\n\t    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n\t    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n\t    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n\t    this.animationItem.wrapper.appendChild(this.svgElement);\r\n\t    //Mask animation\r\n\t    var defs = this.globalData.defs;\r\n\t\r\n\t    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n\t    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n\t    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n\t    this.globalData.nm = animData.nm;\r\n\t    this.globalData.compSize.w = animData.w;\r\n\t    this.globalData.compSize.h = animData.h;\r\n\t    this.globalData.frameRate = animData.fr;\r\n\t    this.data = animData;\r\n\t\r\n\t    var maskElement = createNS( 'clipPath');\r\n\t    var rect = createNS('rect');\r\n\t    rect.setAttribute('width',animData.w);\r\n\t    rect.setAttribute('height',animData.h);\r\n\t    rect.setAttribute('x',0);\r\n\t    rect.setAttribute('y',0);\r\n\t    var maskId = 'animationMask_'+randomString(10);\r\n\t    maskElement.setAttribute('id', maskId);\r\n\t    maskElement.appendChild(rect);\r\n\t    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\t\r\n\t    defs.appendChild(maskElement);\r\n\t    this.layers = animData.layers;\r\n\t    this.globalData.fontManager.addChars(animData.chars);\r\n\t    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n\t    this.elements = createSizedArray(animData.layers.length);\r\n\t};\r\n\t\r\n\t\r\n\tSVGRenderer.prototype.destroy = function () {\r\n\t    this.animationItem.wrapper.innerHTML = '';\r\n\t    this.layerElement = null;\r\n\t    this.globalData.defs = null;\r\n\t    var i, len = this.layers ? this.layers.length : 0;\r\n\t    for (i = 0; i < len; i++) {\r\n\t        if(this.elements[i]){\r\n\t            this.elements[i].destroy();\r\n\t        }\r\n\t    }\r\n\t    this.elements.length = 0;\r\n\t    this.destroyed = true;\r\n\t    this.animationItem = null;\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.updateContainerSize = function () {\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.buildItem  = function(pos){\r\n\t    var elements = this.elements;\r\n\t    if(elements[pos] || this.layers[pos].ty == 99){\r\n\t        return;\r\n\t    }\r\n\t    elements[pos] = true;\r\n\t    var element = this.createItem(this.layers[pos]);\r\n\t\r\n\t    elements[pos] = element;\r\n\t    if(expressionsPlugin){\r\n\t        if(this.layers[pos].ty === 0){\r\n\t            this.globalData.projectInterface.registerComposition(element);\r\n\t        }\r\n\t        element.initExpressions();\r\n\t    }\r\n\t    this.appendElementInPos(element,pos);\r\n\t    if(this.layers[pos].tt){\r\n\t        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n\t            this.buildItem(pos - 1);\r\n\t            this.addPendingElement(element);\r\n\t        } else {\r\n\t            element.setMatte(elements[pos - 1].layerId);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.checkPendingElements  = function(){\r\n\t    while(this.pendingElements.length){\r\n\t        var element = this.pendingElements.pop();\r\n\t        element.checkParenting();\r\n\t        if(element.data.tt){\r\n\t            var i = 0, len = this.elements.length;\r\n\t            while(i<len){\r\n\t                if(this.elements[i] === element){\r\n\t                    element.setMatte(this.elements[i - 1].layerId);\r\n\t                    break;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.renderFrame = function(num){\r\n\t    if(this.renderedFrame === num || this.destroyed){\r\n\t        return;\r\n\t    }\r\n\t    if(num === null){\r\n\t        num = this.renderedFrame;\r\n\t    }else{\r\n\t        this.renderedFrame = num;\r\n\t    }\r\n\t    // console.log('-------');\r\n\t    // console.log('FRAME ',num);\r\n\t    this.globalData.frameNum = num;\r\n\t    this.globalData.frameId += 1;\r\n\t    this.globalData.projectInterface.currentFrame = num;\r\n\t    this.globalData._mdf = false;\r\n\t    var i, len = this.layers.length;\r\n\t    if(!this.completeLayers){\r\n\t        this.checkLayers(num);\r\n\t    }\r\n\t    for (i = len - 1; i >= 0; i--) {\r\n\t        if(this.completeLayers || this.elements[i]){\r\n\t            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n\t        }\r\n\t    }\r\n\t    if(this.globalData._mdf) {\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            if(this.completeLayers || this.elements[i]){\r\n\t                this.elements[i].renderFrame();\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n\t    var newElement = element.getBaseElement();\r\n\t    if(!newElement){\r\n\t        return;\r\n\t    }\r\n\t    var i = 0;\r\n\t    var nextElement;\r\n\t    while(i<pos){\r\n\t        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n\t            nextElement = this.elements[i].getBaseElement();\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    if(nextElement){\r\n\t        this.layerElement.insertBefore(newElement, nextElement);\r\n\t    } else {\r\n\t        this.layerElement.appendChild(newElement);\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.hide = function(){\r\n\t    this.layerElement.style.display = 'none';\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.show = function(){\r\n\t    this.layerElement.style.display = 'block';\r\n\t};\r\n\t\n\tfunction MaskElement(data,element,globalData) {\r\n\t    this.data = data;\r\n\t    this.element = element;\r\n\t    this.globalData = globalData;\r\n\t    this.storedData = [];\r\n\t    this.masksProperties = this.data.masksProperties || [];\r\n\t    this.maskElement = null;\r\n\t    this._isFirstFrame = true;\r\n\t    var defs = this.globalData.defs;\r\n\t    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n\t    this.viewData = createSizedArray(len);\r\n\t    this.solidPath = '';\r\n\t\r\n\t\r\n\t    var path, properties = this.masksProperties;\r\n\t    var count = 0;\r\n\t    var currentMasks = [];\r\n\t    var j, jLen;\r\n\t    var layerId = randomString(10);\r\n\t    var rect, expansor, feMorph,x;\r\n\t    var maskType = 'clipPath', maskRef = 'clip-path';\r\n\t    for (i = 0; i < len; i++) {\r\n\t\r\n\t        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n\t            maskType = 'mask';\r\n\t            maskRef = 'mask';\r\n\t        }\r\n\t\r\n\t        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n\t            rect = createNS( 'rect');\r\n\t            rect.setAttribute('fill', '#ffffff');\r\n\t            rect.setAttribute('width', this.element.comp.data.w);\r\n\t            rect.setAttribute('height', this.element.comp.data.h);\r\n\t            currentMasks.push(rect);\r\n\t        } else {\r\n\t            rect = null;\r\n\t        }\r\n\t\r\n\t        path = createNS( 'path');\r\n\t        if(properties[i].mode == 'n') {\r\n\t            // TODO move this to a factory or to a constructor\r\n\t            this.viewData[i] = {\r\n\t                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n\t                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n\t                elem: path\r\n\t            };\r\n\t            defs.appendChild(path);\r\n\t            continue;\r\n\t        }\r\n\t        count += 1;\r\n\t\r\n\t        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n\t        path.setAttribute('clip-rule','nonzero');\r\n\t        var filterID;\r\n\t\r\n\t        if (properties[i].x.k !== 0) {\r\n\t            maskType = 'mask';\r\n\t            maskRef = 'mask';\r\n\t            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n\t            filterID = 'fi_'+randomString(10);\r\n\t            expansor = createNS('filter');\r\n\t            expansor.setAttribute('id',filterID);\r\n\t            feMorph = createNS('feMorphology');\r\n\t            feMorph.setAttribute('operator','dilate');\r\n\t            feMorph.setAttribute('in','SourceGraphic');\r\n\t            feMorph.setAttribute('radius','0');\r\n\t            expansor.appendChild(feMorph);\r\n\t            defs.appendChild(expansor);\r\n\t            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n\t        } else {\r\n\t            feMorph = null;\r\n\t            x = null;\r\n\t        }\r\n\t\r\n\t        // TODO move this to a factory or to a constructor\r\n\t        this.storedData[i] = {\r\n\t             elem: path,\r\n\t             x: x,\r\n\t             expan: feMorph,\r\n\t            lastPath: '',\r\n\t            lastOperator:'',\r\n\t            filterId:filterID,\r\n\t            lastRadius:0\r\n\t        };\r\n\t        if(properties[i].mode == 'i'){\r\n\t            jLen = currentMasks.length;\r\n\t            var g = createNS('g');\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                g.appendChild(currentMasks[j]);\r\n\t            }\r\n\t            var mask = createNS('mask');\r\n\t            mask.setAttribute('mask-type','alpha');\r\n\t            mask.setAttribute('id',layerId+'_'+count);\r\n\t            mask.appendChild(path);\r\n\t            defs.appendChild(mask);\r\n\t            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\t\r\n\t            currentMasks.length = 0;\r\n\t            currentMasks.push(g);\r\n\t        }else{\r\n\t            currentMasks.push(path);\r\n\t        }\r\n\t        if(properties[i].inv && !this.solidPath){\r\n\t            this.solidPath = this.createLayerSolidPath();\r\n\t        }\r\n\t        // TODO move this to a factory or to a constructor\r\n\t        this.viewData[i] = {\r\n\t            elem: path,\r\n\t            lastPath: '',\r\n\t            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n\t            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n\t            invRect: rect\r\n\t        };\r\n\t        if(!this.viewData[i].prop.k){\r\n\t            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    this.maskElement = createNS( maskType);\r\n\t\r\n\t    len = currentMasks.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.maskElement.appendChild(currentMasks[i]);\r\n\t    }\r\n\t\r\n\t    if(count > 0){\r\n\t        this.maskElement.setAttribute('id', layerId);\r\n\t        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n\t        defs.appendChild(this.maskElement);\r\n\t    }\r\n\t\r\n\t}\r\n\t\r\n\tMaskElement.prototype.getMaskProperty = function(pos){\r\n\t    return this.viewData[pos].prop;\r\n\t};\r\n\t\r\n\tMaskElement.prototype.renderFrame = function (finalMat) {\r\n\t    var i, len = this.masksProperties.length;\r\n\t    for (i = 0; i < len; i++) {\r\n\t        if(this.viewData[i].prop._mdf || this._isFirstFrame){\r\n\t            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n\t        }\r\n\t        if(this.viewData[i].op._mdf || this._isFirstFrame){\r\n\t            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n\t        }\r\n\t        if(this.masksProperties[i].mode !== 'n'){\r\n\t            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || this._isFirstFrame)){\r\n\t                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n\t                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n\t            }\r\n\t            if(this.storedData[i].x && (this.storedData[i].x._mdf || this._isFirstFrame)){\r\n\t                var feMorph = this.storedData[i].expan;\r\n\t                if(this.storedData[i].x.v < 0){\r\n\t                    if(this.storedData[i].lastOperator !== 'erode'){\r\n\t                        this.storedData[i].lastOperator = 'erode';\r\n\t                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n\t                    }\r\n\t                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n\t                }else{\r\n\t                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n\t                        this.storedData[i].lastOperator = 'dilate';\r\n\t                        this.storedData[i].elem.setAttribute('filter',null);\r\n\t                    }\r\n\t                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\t\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    this._isFirstFrame = false;\r\n\t};\r\n\t\r\n\tMaskElement.prototype.getMaskelement = function () {\r\n\t    return this.maskElement;\r\n\t};\r\n\t\r\n\tMaskElement.prototype.createLayerSolidPath = function(){\r\n\t    var path = 'M0,0 ';\r\n\t    path += ' h' + this.globalData.compSize.w ;\r\n\t    path += ' v' + this.globalData.compSize.h ;\r\n\t    path += ' h-' + this.globalData.compSize.w ;\r\n\t    path += ' v-' + this.globalData.compSize.h + ' ';\r\n\t    return path;\r\n\t};\r\n\t\r\n\tMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n\t    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n\t    var i, len;\r\n\t    len = pathNodes._length;\r\n\t    for(i=1;i<len;i+=1){\r\n\t        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n\t        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n\t    }\r\n\t        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n\t    if(pathNodes.c && len > 1){\r\n\t        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n\t    }\r\n\t    //pathNodes.__renderedString = pathString;\r\n\t\r\n\t\r\n\t    if(viewData.lastPath !== pathString){\r\n\t        var pathShapeValue = '';\r\n\t        if(viewData.elem){\r\n\t            if(pathNodes.c){\r\n\t                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n\t            }\r\n\t            viewData.elem.setAttribute('d',pathShapeValue);\r\n\t        }\r\n\t        viewData.lastPath = pathString;\r\n\t    }\r\n\t};\r\n\t\r\n\tMaskElement.prototype.destroy = function(){\r\n\t    this.element = null;\r\n\t    this.globalData = null;\r\n\t    this.maskElement = null;\r\n\t    this.data = null;\r\n\t    this.masksProperties = null;\r\n\t};\n\t/**\r\n\t * @file \r\n\t * Handles AE's layer parenting property.\r\n\t *\r\n\t */\r\n\t\r\n\tfunction HierarchyElement(){}\r\n\t\r\n\tHierarchyElement.prototype = {\r\n\t\t/**\r\n\t     * @function \r\n\t     * Initializes hierarchy properties\r\n\t     *\r\n\t     */\r\n\t\tinitHierarchy: function() {\r\n\t\t\t//element's parent list\r\n\t\t    this.hierarchy = [];\r\n\t\t    //if element is parent of another layer _isParent will be true\r\n\t\t    this._isParent = false;\r\n\t\t    this.checkParenting();\r\n\t\t},\r\n\t\t/**\r\n\t     * @function \r\n\t     * Sets layer's hierarchy.\r\n\t     * @param {array} hierarch\r\n\t     * layer's parent list\r\n\t     *\r\n\t     */ \r\n\t\tsetHierarchy: function(hierarchy){\r\n\t\t    this.hierarchy = hierarchy;\r\n\t\t},\r\n\t\t/**\r\n\t     * @function \r\n\t     * Sets layer as parent.\r\n\t     *\r\n\t     */ \r\n\t\tsetAsParent: function() {\r\n\t\t    this._isParent = true;\r\n\t\t},\r\n\t\t/**\r\n\t     * @function \r\n\t     * Searches layer's parenting chain\r\n\t     *\r\n\t     */ \r\n\t\tcheckParenting: function(){\r\n\t\t    if (this.data.parent !== undefined){\r\n\t\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t\t    }\r\n\t\t}\r\n\t};\n\t/**\r\n\t * @file \r\n\t * Handles element's layer frame update.\r\n\t * Checks layer in point and out point\r\n\t *\r\n\t */\r\n\t\r\n\tfunction FrameElement(){}\r\n\t\r\n\tFrameElement.prototype = {\r\n\t    /**\r\n\t     * @function \r\n\t     * Initializes frame related properties.\r\n\t     *\r\n\t     */\r\n\t    initFrame: function(){\r\n\t        //set to true when inpoint is rendered\r\n\t        this._isFirstFrame = false;\r\n\t        //list of animated properties\r\n\t        this.dynamicProperties = [];\r\n\t        // If layer has been modified in current tick this will be true\r\n\t        this._mdf = false;\r\n\t    },\r\n\t    /**\r\n\t     * @function \r\n\t     * Calculates all dynamic values\r\n\t     *\r\n\t     * @param {number} num\r\n\t     * current frame number in Layer's time\r\n\t     * @param {boolean} isVisible\r\n\t     * if layers is currently in range\r\n\t     * \r\n\t     */\r\n\t    prepareProperties: function(num, isVisible) {\r\n\t        var i, len = this.dynamicProperties.length;\r\n\t        for (i = 0;i < len; i += 1) {\r\n\t            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n\t                this.dynamicProperties[i].getValue();\r\n\t                if (this.dynamicProperties[i]._mdf) {\r\n\t                    this.globalData._mdf = true;\r\n\t                    this._mdf = true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    },\r\n\t    addDynamicProperty: function(prop) {\r\n\t        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t            this.dynamicProperties.push(prop);\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction TransformElement(){}\r\n\t\r\n\tTransformElement.prototype = {\r\n\t    initTransform: function() {\r\n\t        this.finalTransform = {\r\n\t            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n\t            _matMdf: false,\r\n\t            _opMdf: false,\r\n\t            mat: new Matrix()\r\n\t        };\r\n\t        if (this.data.ao) {\r\n\t            this.finalTransform.mProp.autoOriented = true;\r\n\t        }\r\n\t\r\n\t        //TODO: check TYPE 11: Guided elements\r\n\t        if (this.data.ty !== 11) {\r\n\t            //this.createElements();\r\n\t        }\r\n\t    },\r\n\t    renderTransform: function() {\r\n\t\r\n\t        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n\t        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\t\r\n\t        if (this.hierarchy) {\r\n\t            var mat;\r\n\t            var finalMat = this.finalTransform.mat;\r\n\t            var i = 0, len = this.hierarchy.length;\r\n\t            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n\t            if (!this.finalTransform._matMdf) {\r\n\t                while (i < len) {\r\n\t                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n\t                        this.finalTransform._matMdf = true;\r\n\t                        break;\r\n\t                    }\r\n\t                    i += 1;\r\n\t                }\r\n\t            }\r\n\t            \r\n\t            if (this.finalTransform._matMdf) {\r\n\t                mat = this.finalTransform.mProp.v.props;\r\n\t                finalMat.cloneFromProps(mat);\r\n\t                for (i = 0; i < len; i += 1) {\r\n\t                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n\t                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    },\r\n\t    globalToLocal: function(pt) {\r\n\t        var transforms = [];\r\n\t        transforms.push(this.finalTransform);\r\n\t        var flag = true;\r\n\t        var comp = this.comp;\r\n\t        while (flag) {\r\n\t            if (comp.finalTransform) {\r\n\t                if (comp.data.hasMask) {\r\n\t                    transforms.splice(0, 0, comp.finalTransform);\r\n\t                }\r\n\t                comp = comp.comp;\r\n\t            } else {\r\n\t                flag = false;\r\n\t            }\r\n\t        }\r\n\t        var i, len = transforms.length,ptNew;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n\t            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n\t            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n\t        }\r\n\t        return pt;\r\n\t    },\r\n\t    mHelper: new Matrix()\r\n\t};\n\tfunction RenderableElement(){\r\n\t\r\n\t}\r\n\t\r\n\tRenderableElement.prototype = {\r\n\t    initRenderable: function() {\r\n\t        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n\t        this.isInRange = false;\r\n\t        //layer's display state\r\n\t        this.hidden = false;\r\n\t        // If layer's transparency equals 0, it can be hidden\r\n\t        this.isTransparent = false;\r\n\t    },\r\n\t    prepareRenderableFrame: function(num) {\r\n\t        this.checkLayerLimits(num);\r\n\t    },\r\n\t    checkTransparency: function(){\r\n\t        if(this.finalTransform.mProp.o.v <= 0) {\r\n\t            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n\t                this.isTransparent = true;\r\n\t                this.hide();\r\n\t            }\r\n\t        } else if(this.isTransparent) {\r\n\t            this.isTransparent = false;\r\n\t            this.show();\r\n\t        }\r\n\t    },\r\n\t    /**\r\n\t     * @function \r\n\t     * Initializes frame related properties.\r\n\t     *\r\n\t     * @param {number} num\r\n\t     * current frame number in Layer's time\r\n\t     * \r\n\t     */\r\n\t    checkLayerLimits: function(num) {\r\n\t        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n\t        {\r\n\t            if(this.isInRange !== true){\r\n\t                this.globalData._mdf = true;\r\n\t                this._mdf = true;\r\n\t                this.isInRange = true;\r\n\t                this.show();\r\n\t            }\r\n\t        } else {\r\n\t            if(this.isInRange !== false){\r\n\t                this.globalData._mdf = true;\r\n\t                this.isInRange = false;\r\n\t                this.hide();\r\n\t            }\r\n\t        }\r\n\t    },\r\n\t    renderRenderable: function() {\r\n\t        this.maskManager.renderFrame(this.finalTransform.mat);\r\n\t        this.renderableEffectsManager.renderFrame(this._isFirstFrame);\r\n\t    },\r\n\t    sourceRectAtTime: function(){\r\n\t        return {\r\n\t            top:0,\r\n\t            left:0,\r\n\t            width:100,\r\n\t            height:100\r\n\t        };\r\n\t    },\r\n\t    getLayerSize: function(){\r\n\t        if(this.data.ty === 5){\r\n\t            return {w:this.data.textData.width,h:this.data.textData.height};\r\n\t        }else{\r\n\t            return {w:this.data.width,h:this.data.height};\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction RenderableDOMElement() {}\r\n\t\r\n\t(function(){\r\n\t    var _prototype = {\r\n\t        initElement: function(data,globalData,comp) {\r\n\t            this.initFrame();\r\n\t            this.initBaseData(data, globalData, comp);\r\n\t            this.initTransform(data, globalData, comp);\r\n\t            this.initHierarchy();\r\n\t            this.initRenderable();\r\n\t            this.initRendererElement();\r\n\t            this.createContainerElements();\r\n\t            this.addMasks();\r\n\t            this.createContent();\r\n\t            this.hide();\r\n\t        },\r\n\t        hide: function(){\r\n\t            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n\t                var elem = this.baseElement || this.layerElement;\r\n\t                elem.style.display = 'none';\r\n\t                this.hidden = true;\r\n\t            }\r\n\t        },\r\n\t        show: function(){\r\n\t            if (this.isInRange && !this.isTransparent){\r\n\t                if (!this.data.hd) {\r\n\t                    var elem = this.baseElement || this.layerElement;\r\n\t                    elem.style.display = 'block';\r\n\t                }\r\n\t                this.hidden = false;\r\n\t                this._isFirstFrame = true;\r\n\t                this.maskManager._isFirstFrame = true;\r\n\t            }\r\n\t        },\r\n\t        renderFrame: function() {\r\n\t            //If it is exported as hidden (data.hd === true) no need to render\r\n\t            //If it is not visible no need to render\r\n\t            if (this.data.hd || this.hidden) {\r\n\t                return;\r\n\t            }\r\n\t            this.renderTransform();\r\n\t            this.renderRenderable();\r\n\t            this.renderElement();\r\n\t            this.renderInnerContent();\r\n\t            if (this._isFirstFrame) {\r\n\t                this._isFirstFrame = false;\r\n\t            }\r\n\t        },\r\n\t        renderInnerContent: function() {},\r\n\t        prepareFrame: function(num) {\r\n\t            this._mdf = false;\r\n\t            this.prepareRenderableFrame(num);\r\n\t            this.prepareProperties(num, this.isInRange);\r\n\t            this.checkTransparency();\r\n\t        },\r\n\t        destroy: function(){\r\n\t            this.innerElem =  null;\r\n\t            this.destroyBaseElement();\r\n\t        }\r\n\t    };\r\n\t    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n\t}());\n\tfunction ProcessedElement(element, position) {\r\n\t\tthis.elem = element;\r\n\t\tthis.pos = position;\r\n\t}\n\tfunction SVGStyleData(data, level) {\r\n\t\tthis.data = data;\r\n\t\tthis.type = data.ty;\r\n\t\tthis.d = '';\r\n\t\tthis.lvl = level;\r\n\t\tthis._mdf = false;\r\n\t\tthis.closed = false;\r\n\t\tthis.pElem = createNS('path');\r\n\t\tthis.msElem = null;\r\n\t}\r\n\t\r\n\tSVGStyleData.prototype.reset = function() {\r\n\t\tthis.d = '';\r\n\t\tthis._mdf = false;\r\n\t};\n\tfunction SVGShapeData(transformers, level, shape) {\r\n\t    this.caches = [];\r\n\t    this.styles = [];\r\n\t    this.transformers = transformers;\r\n\t    this.lStr = '';\r\n\t    this.sh = shape;\r\n\t    this.lvl = level;\r\n\t}\n\tfunction SVGTransformData(mProps, op) {\r\n\t\tthis.transform = {\r\n\t\t\tmProps: mProps,\r\n\t\t\top: op\r\n\t\t};\r\n\t\tthis.elements = [];\r\n\t}\n\tfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\t\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n\t\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,elem);\r\n\t\tthis.d = new DashProperty(elem,data.d||{},'svg',elem);\r\n\t\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,elem);\r\n\t\tthis.style = styleOb;\r\n\t}\n\tfunction SVGFillStyleData(elem, data, styleOb){\r\n\t\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n\t\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,elem);\r\n\t\tthis.style = styleOb;\r\n\t}\n\tfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n\t    this.initGradientData(elem, data, styleOb);\r\n\t}\r\n\t\r\n\tSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n\t    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n\t    this.s = PropertyFactory.getProp(elem,data.s,1,null,elem);\r\n\t    this.e = PropertyFactory.getProp(elem,data.e,1,null,elem);\r\n\t    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,elem);\r\n\t    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,elem);\r\n\t    this.g = new GradientProperty(elem,data.g,elem);\r\n\t    this.style = styleOb;\r\n\t    this.stops = [];\r\n\t    this.setGradientData(styleOb.pElem, data);\r\n\t    this.setGradientOpacity(data, styleOb);\r\n\t\r\n\t};\r\n\t\r\n\tSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\t\r\n\t    var gradientId = 'gr_'+randomString(10);\r\n\t    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n\t    gfill.setAttribute('id',gradientId);\r\n\t    gfill.setAttribute('spreadMethod','pad');\r\n\t    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n\t    var stops = [];\r\n\t    var stop, j, jLen;\r\n\t    jLen = data.g.p*4;\r\n\t    for(j=0;j<jLen;j+=4){\r\n\t        stop = createNS('stop');\r\n\t        gfill.appendChild(stop);\r\n\t        stops.push(stop);\r\n\t    }\r\n\t    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n\t    \r\n\t    this.gf = gfill;\r\n\t    this.cst = stops;\r\n\t};\r\n\t\r\n\tSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n\t    if(this.g._hasOpacity && !this.g._collapsable){\r\n\t        var stop, j, jLen;\r\n\t        var mask = createNS(\"mask\");\r\n\t        var maskElement = createNS( 'path');\r\n\t        mask.appendChild(maskElement);\r\n\t        var opacityId = 'op_'+randomString(10);\r\n\t        var maskId = 'mk_'+randomString(10);\r\n\t        mask.setAttribute('id',maskId);\r\n\t        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n\t        opFill.setAttribute('id',opacityId);\r\n\t        opFill.setAttribute('spreadMethod','pad');\r\n\t        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n\t        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n\t        var stops = this.stops;\r\n\t        for(j=data.g.p*4;j<jLen;j+=2){\r\n\t            stop = createNS('stop');\r\n\t            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n\t            opFill.appendChild(stop);\r\n\t            stops.push(stop);\r\n\t        }\r\n\t        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n\t        this.of = opFill;\r\n\t        this.ms = mask;\r\n\t        this.ost = stops;\r\n\t        this.maskId = maskId;\r\n\t        styleOb.msElem = maskElement;\r\n\t    }\r\n\t};\n\tfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\t\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,elem);\r\n\t\tthis.d = new DashProperty(elem,data.d||{},'svg',elem);\r\n\t    this.initGradientData(elem, data, styleOb);\r\n\t}\r\n\t\r\n\tSVGGradientStrokeStyleData.prototype.initGradientData = SVGGradientFillStyleData.prototype.initGradientData;\r\n\tSVGGradientStrokeStyleData.prototype.setGradientData = SVGGradientFillStyleData.prototype.setGradientData;\r\n\tSVGGradientStrokeStyleData.prototype.setGradientOpacity = SVGGradientFillStyleData.prototype.setGradientOpacity;\n\tfunction ShapeGroupData() {\r\n\t\tthis.it = [];\r\n\t    this.prevViewData = [];\r\n\t    this.gr = createNS('g');\r\n\t}\n\tfunction BaseElement(){\r\n\t}\r\n\tBaseElement.prototype.checkMasks = function(){\r\n\t    if(!this.data.hasMask){\r\n\t        return false;\r\n\t    }\r\n\t    var i = 0, len = this.data.masksProperties.length;\r\n\t    while(i<len) {\r\n\t        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n\t            return true;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    return false;\r\n\t};\r\n\t\r\n\tBaseElement.prototype.initExpressions = function(){\r\n\t    this.layerInterface = LayerExpressionInterface(this);\r\n\t    if(this.data.hasMask && this.maskManager) {\r\n\t        this.layerInterface.registerMaskInterface(this.maskManager);\r\n\t    }\r\n\t    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n\t    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\t\r\n\t    if(this.data.ty === 0 || this.data.xt){\r\n\t        this.compInterface = CompExpressionInterface(this);\r\n\t    } else if(this.data.ty === 4){\r\n\t        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n\t        this.layerInterface.content = this.layerInterface.shapeInterface;\r\n\t    } else if(this.data.ty === 5){\r\n\t        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n\t        this.layerInterface.text = this.layerInterface.textInterface;\r\n\t    }\r\n\t};\r\n\t\r\n\tBaseElement.prototype.blendModeEnums = {\r\n\t    1:'multiply',\r\n\t    2:'screen',\r\n\t    3:'overlay',\r\n\t    4:'darken',\r\n\t    5:'lighten',\r\n\t    6:'color-dodge',\r\n\t    7:'color-burn',\r\n\t    8:'hard-light',\r\n\t    9:'soft-light',\r\n\t    10:'difference',\r\n\t    11:'exclusion',\r\n\t    12:'hue',\r\n\t    13:'saturation',\r\n\t    14:'color',\r\n\t    15:'luminosity'\r\n\t};\r\n\t\r\n\tBaseElement.prototype.getBlendMode = function(){\r\n\t    return this.blendModeEnums[this.data.bm] || '';\r\n\t};\r\n\t\r\n\tBaseElement.prototype.setBlendMode = function(){\r\n\t    var blendModeValue = this.getBlendMode();\r\n\t    var elem = this.baseElement || this.layerElement;\r\n\t\r\n\t    elem.style['mix-blend-mode'] = blendModeValue;\r\n\t};\r\n\t\r\n\tBaseElement.prototype.initBaseData = function(data, globalData, comp){\r\n\t    this.globalData = globalData;\r\n\t    this.comp = comp;\r\n\t    this.data = data;\r\n\t    this.layerId = 'ly_'+randomString(10);\r\n\t    \r\n\t    //Stretch factor for old animations missing this property.\r\n\t    if(!this.data.sr){\r\n\t        this.data.sr = 1;\r\n\t    }\r\n\t    // effects manager\r\n\t    this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n\t    \r\n\t};\r\n\t\r\n\tBaseElement.prototype.getType = function(){\r\n\t    return this.type;\r\n\t};\r\n\t\n\tfunction NullElement(data,globalData,comp){\r\n\t    this.initFrame();\r\n\t\tthis.initBaseData(data, globalData, comp);\r\n\t    this.initFrame();\r\n\t    this.initTransform(data, globalData, comp);\r\n\t    this.initHierarchy();\r\n\t}\r\n\t\r\n\tNullElement.prototype.prepareFrame = function(num) {\r\n\t    this.prepareProperties(num, true);\r\n\t};\r\n\t\r\n\tNullElement.prototype.renderFrame = function() {\r\n\t};\r\n\t\r\n\tNullElement.prototype.getBaseElement = function() {\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\tNullElement.prototype.destroy = function() {\r\n\t};\r\n\t\r\n\tNullElement.prototype.sourceRectAtTime = function() {\r\n\t};\r\n\t\r\n\tNullElement.prototype.hide = function() {\r\n\t};\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\t\n\tfunction SVGBaseElement(){\r\n\t}\r\n\t\r\n\tSVGBaseElement.prototype = {\r\n\t    initRendererElement: function() {\r\n\t        this.layerElement = createNS('g');\r\n\t    },\r\n\t    createContainerElements: function(){\r\n\t        this.matteElement = createNS('g');\r\n\t        this.transformedElement = this.layerElement;\r\n\t        this.maskedElement = this.layerElement;\r\n\t        this._sizeChanged = false;\r\n\t        var layerElementParent = null;\r\n\t        //If this layer acts as a mask for the following layer\r\n\t        var filId, fil, gg;\r\n\t        if (this.data.td) {\r\n\t            if (this.data.td == 3 || this.data.td == 1) {\r\n\t                var masker = createNS('mask');\r\n\t                masker.setAttribute('id', this.layerId);\r\n\t                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n\t                masker.appendChild(this.layerElement);\r\n\t                layerElementParent = masker;\r\n\t                this.globalData.defs.appendChild(masker);\r\n\t                // This is only for IE and Edge when mask if of type alpha\r\n\t                if (!featureSupport.maskType && this.data.td == 1) {\r\n\t                    masker.setAttribute('mask-type', 'luminance');\r\n\t                    filId = randomString(10);\r\n\t                    fil = filtersFactory.createFilter(filId);\r\n\t                    this.globalData.defs.appendChild(fil);\r\n\t                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n\t                    gg = createNS('g');\r\n\t                    gg.appendChild(this.layerElement);\r\n\t                    layerElementParent = gg;\r\n\t                    masker.appendChild(gg);\r\n\t                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n\t                }\r\n\t            } else if(this.data.td == 2) {\r\n\t                var maskGroup = createNS('mask');\r\n\t                maskGroup.setAttribute('id', this.layerId);\r\n\t                maskGroup.setAttribute('mask-type','alpha');\r\n\t                var maskGrouper = createNS('g');\r\n\t                maskGroup.appendChild(maskGrouper);\r\n\t                filId = randomString(10);\r\n\t                fil = filtersFactory.createFilter(filId);\r\n\t                ////\r\n\t\r\n\t                var feColorMatrix = createNS('feColorMatrix');\r\n\t                feColorMatrix.setAttribute('type', 'matrix');\r\n\t                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n\t                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n\t                fil.appendChild(feColorMatrix);\r\n\t\r\n\t                ////\r\n\t                /*var feCTr = createNS('feComponentTransfer');\r\n\t                feCTr.setAttribute('in','SourceGraphic');\r\n\t                fil.appendChild(feCTr);\r\n\t                var feFunc = createNS('feFuncA');\r\n\t                feFunc.setAttribute('type','table');\r\n\t                feFunc.setAttribute('tableValues','1.0 0.0');\r\n\t                feCTr.appendChild(feFunc);*/\r\n\t                this.globalData.defs.appendChild(fil);\r\n\t                var alphaRect = createNS('rect');\r\n\t                alphaRect.setAttribute('width',  this.comp.data.w);\r\n\t                alphaRect.setAttribute('height', this.comp.data.h);\r\n\t                alphaRect.setAttribute('x','0');\r\n\t                alphaRect.setAttribute('y','0');\r\n\t                alphaRect.setAttribute('fill','#ffffff');\r\n\t                alphaRect.setAttribute('opacity','0');\r\n\t                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n\t                maskGrouper.appendChild(alphaRect);\r\n\t                maskGrouper.appendChild(this.layerElement);\r\n\t                layerElementParent = maskGrouper;\r\n\t                if (!featureSupport.maskType) {\r\n\t                    maskGroup.setAttribute('mask-type', 'luminance');\r\n\t                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n\t                    gg = createNS('g');\r\n\t                    maskGrouper.appendChild(alphaRect);\r\n\t                    gg.appendChild(this.layerElement);\r\n\t                    layerElementParent = gg;\r\n\t                    maskGrouper.appendChild(gg);\r\n\t                }\r\n\t                this.globalData.defs.appendChild(maskGroup);\r\n\t            }\r\n\t        } else if (this.data.tt) {\r\n\t            this.matteElement.appendChild(this.layerElement);\r\n\t            layerElementParent = this.matteElement;\r\n\t            this.baseElement = this.matteElement;\r\n\t        } else {\r\n\t            this.baseElement = this.layerElement;\r\n\t        }\r\n\t        if (this.data.ln) {\r\n\t            this.layerElement.setAttribute('id', this.data.ln);\r\n\t        }\r\n\t        if (this.data.cl) {\r\n\t            this.layerElement.setAttribute('class', this.data.cl);\r\n\t        }\r\n\t        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n\t        if (this.data.ty === 0 && !this.data.hd) {\r\n\t            var cp = createNS( 'clipPath');\r\n\t            var pt = createNS('path');\r\n\t            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n\t            var clipId = 'cp_'+randomString(8);\r\n\t            cp.setAttribute('id',clipId);\r\n\t            cp.appendChild(pt);\r\n\t            this.globalData.defs.appendChild(cp);\r\n\t\r\n\t            if (this.checkMasks()) {\r\n\t                var cpGroup = createNS('g');\r\n\t                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n\t                cpGroup.appendChild(this.layerElement);\r\n\t                this.transformedElement = cpGroup;\r\n\t                if (layerElementParent) {\r\n\t                    layerElementParent.appendChild(this.transformedElement);\r\n\t                } else {\r\n\t                    this.baseElement = this.transformedElement;\r\n\t                }\r\n\t            } else {\r\n\t                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n\t            }\r\n\t            \r\n\t        }\r\n\t        if (this.data.bm !== 0) {\r\n\t            this.setBlendMode();\r\n\t        }\r\n\t        this.renderableEffectsManager = new SVGEffects(this);\r\n\t\r\n\t    },\r\n\t    renderElement: function() {\r\n\t        if (this.finalTransform._matMdf) {\r\n\t            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n\t        }\r\n\t        if (this.finalTransform._opMdf) {\r\n\t            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n\t        }\r\n\t    },\r\n\t    destroyBaseElement: function() {\r\n\t        this.layerElement = null;\r\n\t        this.matteElement = null;\r\n\t        this.maskManager.destroy();\r\n\t    },\r\n\t    getBaseElement: function() {\r\n\t        if (this.data.hd) {\r\n\t            return null;\r\n\t        }\r\n\t        return this.baseElement;\r\n\t    },\r\n\t    addMasks: function() {\r\n\t        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n\t    },\r\n\t    setMatte: function(id) {\r\n\t        if (!this.matteElement) {\r\n\t            return;\r\n\t        }\r\n\t        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n\t    }\r\n\t};\n\tfunction IShapeElement(){\r\n\t}\r\n\t\r\n\tIShapeElement.prototype = {\r\n\t    addShapeToModifiers: function(data) {\r\n\t        var i, len = this.shapeModifiers.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            this.shapeModifiers[i].addShape(data);\r\n\t        }\r\n\t    },\r\n\t    renderModifiers: function() {\r\n\t        if(!this.shapeModifiers.length){\r\n\t            return;\r\n\t        }\r\n\t        var i, len = this.shapes.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            this.shapes[i].reset();\r\n\t        }\r\n\t\r\n\t        len = this.shapeModifiers.length;\r\n\t        for(i=len-1;i>=0;i-=1){\r\n\t            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n\t        }\r\n\t    },\r\n\t    lcEnum: {\r\n\t        '1': 'butt',\r\n\t        '2': 'round',\r\n\t        '3': 'square'\r\n\t    },\r\n\t    ljEnum: {\r\n\t        '1': 'miter',\r\n\t        '2': 'round',\r\n\t        '3': 'butt'\r\n\t    },\r\n\t    searchProcessedElement: function(elem){\r\n\t        var i = 0, len = this.processedElements.length;\r\n\t        while(i < len){\r\n\t            if(this.processedElements[i].elem === elem){\r\n\t                return this.processedElements[i].pos;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        return 0;\r\n\t    },\r\n\t    addProcessedElement: function(elem, pos){\r\n\t        var i = this.processedElements.length, found = false;\r\n\t        while(i){\r\n\t            i -= 1;\r\n\t            if(this.processedElements[i].elem === elem){\r\n\t                this.processedElements[i].pos = pos;\r\n\t                found = true;\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        if(!found){\r\n\t            this.processedElements.push(new ProcessedElement(elem, pos));\r\n\t        }\r\n\t    },\r\n\t    prepareFrame: function(num) {\r\n\t        this.prepareRenderableFrame(num);\r\n\t        this.prepareProperties(num, this.isInRange);\r\n\t    },\r\n\t    buildShapeString: function(pathNodes, length, closed, mat) {\r\n\t        var i, shapeString = '';\r\n\t        for(i = 1; i < length; i += 1) {\r\n\t            if (i === 1) {\r\n\t                shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n\t            }\r\n\t            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n\t        }\r\n\t        if (length === 1) {\r\n\t            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n\t        }\r\n\t        if (closed && length) {\r\n\t            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n\t            shapeString += 'z';\r\n\t        }\r\n\t        return shapeString;\r\n\t    }\r\n\t};\n\tfunction ITextElement(){\r\n\t}\r\n\t\r\n\tITextElement.prototype.initElement = function(data,globalData,comp){\r\n\t    this.lettersChangedFlag = true;\r\n\t    this.initFrame();\r\n\t    this.initBaseData(data, globalData, comp);\r\n\t    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n\t    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n\t    this.initTransform(data, globalData, comp);\r\n\t    this.initHierarchy();\r\n\t    this.initRenderable();\r\n\t    this.initRendererElement();\r\n\t    this.createContainerElements();\r\n\t    this.addMasks();\r\n\t    this.createContent();\r\n\t    this.hide();\r\n\t    this.textAnimator.searchProperties(this.dynamicProperties);\r\n\t};\r\n\t\r\n\tITextElement.prototype.prepareFrame = function(num) {\r\n\t    this._mdf = false;\r\n\t    this.prepareRenderableFrame(num);\r\n\t    this.prepareProperties(num, this.isInRange);\r\n\t    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n\t        this.buildNewText();\r\n\t        this.textProperty._isFirstFrame = false;\r\n\t    }\r\n\t};\r\n\t\r\n\tITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n\t    var j,jLen = shapes.length;\r\n\t    var k, kLen, pathNodes;\r\n\t    var shapeStr = '';\r\n\t    for(j=0;j<jLen;j+=1){\r\n\t        pathNodes = shapes[j].ks.k;\r\n\t        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n\t    }\r\n\t    return shapeStr;\r\n\t};\r\n\t\r\n\tITextElement.prototype.updateDocumentData = function(newData, index) {\r\n\t    this.textProperty.updateDocumentData(newData, index);\r\n\t    this.buildNewText();\r\n\t    this.renderInnerContent();\r\n\t};\r\n\t\r\n\tITextElement.prototype.canResizeFont = function(_canResize) {\r\n\t    this.textProperty.canResizeFont(_canResize);\r\n\t    this.buildNewText();\r\n\t    this.renderInnerContent();\r\n\t};\r\n\t\r\n\tITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n\t    this.textProperty.setMinimumFontSize(_fontSize);\r\n\t    this.buildNewText();\r\n\t    this.renderInnerContent();\r\n\t};\r\n\t\r\n\tITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n\t    if(documentData.ps){\r\n\t        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n\t    }\r\n\t    matrixHelper.translate(0,-documentData.ls,0);\r\n\t    switch(documentData.j){\r\n\t        case 1:\r\n\t            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n\t            break;\r\n\t        case 2:\r\n\t            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n\t            break;\r\n\t    }\r\n\t    matrixHelper.translate(xPos, yPos, 0);\r\n\t};\r\n\t\r\n\tITextElement.prototype.buildColor = function(colorData) {\r\n\t    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n\t};\r\n\t\r\n\tITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\t\r\n\tITextElement.prototype.emptyProp = new LetterProps();\r\n\t\r\n\tITextElement.prototype.destroy = function(){\r\n\t    \r\n\t};\n\tfunction ICompElement(){}\r\n\t\r\n\textendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\t\r\n\tICompElement.prototype.initElement = function(data,globalData,comp) {\r\n\t    this.initFrame();\r\n\t    this.initBaseData(data, globalData, comp);\r\n\t    this.initTransform(data, globalData, comp);\r\n\t    this.initRenderable();\r\n\t    this.initHierarchy();\r\n\t    this.initRendererElement();\r\n\t    this.createContainerElements();\r\n\t    this.addMasks();\r\n\t    if(this.data.xt || !globalData.progressiveLoad){\r\n\t        this.buildAllItems();\r\n\t    }\r\n\t    this.hide();\r\n\t};\r\n\t\r\n\t/*ICompElement.prototype.hide = function(){\r\n\t    if(!this.hidden){\r\n\t        this.hideElement();\r\n\t        var i,len = this.elements.length;\r\n\t        for( i = 0; i < len; i+=1 ){\r\n\t            if(this.elements[i]){\r\n\t                this.elements[i].hide();\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};*/\r\n\t\r\n\tICompElement.prototype.prepareFrame = function(num){\r\n\t    this._mdf = false;\r\n\t    this.prepareRenderableFrame(num);\r\n\t    this.prepareProperties(num, this.isInRange);\r\n\t    if(!this.isInRange && !this.data.xt){\r\n\t        return;\r\n\t    }\r\n\t\r\n\t    if (!this.tm._placeholder) {\r\n\t        var timeRemapped = this.tm.v;\r\n\t        if(timeRemapped === this.data.op){\r\n\t            timeRemapped = this.data.op - 1;\r\n\t        }\r\n\t        this.renderedFrame = timeRemapped;\r\n\t    } else {\r\n\t        this.renderedFrame = num/this.data.sr;\r\n\t    }\r\n\t    var i,len = this.elements.length;\r\n\t    if(!this.completeLayers){\r\n\t        this.checkLayers(this.renderedFrame);\r\n\t    }\r\n\t    for( i = 0; i < len; i+=1 ){\r\n\t        if(this.completeLayers || this.elements[i]){\r\n\t            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n\t            if(this.elements[i]._mdf) {\r\n\t                this._mdf = true;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tICompElement.prototype.renderInnerContent = function() {\r\n\t    var i,len = this.layers.length;\r\n\t    for( i = 0; i < len; i += 1 ){\r\n\t        if(this.completeLayers || this.elements[i]){\r\n\t            this.elements[i].renderFrame();\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tICompElement.prototype.setElements = function(elems){\r\n\t    this.elements = elems;\r\n\t};\r\n\t\r\n\tICompElement.prototype.getElements = function(){\r\n\t    return this.elements;\r\n\t};\r\n\t\r\n\tICompElement.prototype.destroyElements = function(){\r\n\t    var i,len = this.layers.length;\r\n\t    for( i = 0; i < len; i+=1 ){\r\n\t        if(this.elements[i]){\r\n\t            this.elements[i].destroy();\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tICompElement.prototype.destroy = function(){\r\n\t    this.destroyElements();\r\n\t    this.destroyBaseElement();\r\n\t};\r\n\t\n\tfunction IImageElement(data,globalData,comp){\r\n\t    this.assetData = globalData.getAssetData(data.refId);\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\t\r\n\tIImageElement.prototype.createContent = function(){\r\n\t\r\n\t    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\t\r\n\t    this.innerElem = createNS('image');\r\n\t    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n\t    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n\t    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n\t    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n\t    \r\n\t    this.layerElement.appendChild(this.innerElem);\r\n\t};\r\n\t\n\tfunction ISolidElement(data,globalData,comp){\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\textendPrototype([IImageElement], ISolidElement);\r\n\t\r\n\tISolidElement.prototype.createContent = function(){\r\n\t\r\n\t    var rect = createNS('rect');\r\n\t    ////rect.style.width = this.data.sw;\r\n\t    ////rect.style.height = this.data.sh;\r\n\t    ////rect.style.fill = this.data.sc;\r\n\t    rect.setAttribute('width',this.data.sw);\r\n\t    rect.setAttribute('height',this.data.sh);\r\n\t    rect.setAttribute('fill',this.data.sc);\r\n\t    this.layerElement.appendChild(rect);\r\n\t};\n\tfunction SVGCompElement(data,globalData,comp){\r\n\t    this.layers = data.layers;\r\n\t    this.supports3d = true;\r\n\t    this.completeLayers = false;\r\n\t    this.pendingElements = [];\r\n\t    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n\t    //this.layerElement = createNS('g');\r\n\t    this.initElement(data,globalData,comp);\r\n\t    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n\t}\r\n\t\r\n\textendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\n\tfunction SVGTextElement(data,globalData,comp){\r\n\t    this.textSpans = [];\r\n\t    this.renderType = 'svg';\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\t\r\n\tSVGTextElement.prototype.createContent = function(){\r\n\t\r\n\t    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n\t        this.textContainer = createNS('text');\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n\t    var i = 0, len = textArray.length;\r\n\t    var textContents = [], currentTextContent = '';\r\n\t    while (i < len) {\r\n\t        if(textArray[i] === String.fromCharCode(13)) {\r\n\t            textContents.push(currentTextContent);\r\n\t            currentTextContent = '';\r\n\t        } else {\r\n\t            currentTextContent += textArray[i];\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    textContents.push(currentTextContent);\r\n\t    return textContents;\r\n\t}\r\n\t\r\n\tSVGTextElement.prototype.buildNewText = function(){\r\n\t    var i, len;\r\n\t\r\n\t    var documentData = this.textProperty.currentData;\r\n\t    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n\t    if(documentData.fc) {\r\n\t        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n\t    }else{\r\n\t        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n\t    }\r\n\t    if(documentData.sc){\r\n\t        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n\t        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n\t    }\r\n\t    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n\t    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n\t    if(fontData.fClass){\r\n\t        this.layerElement.setAttribute('class',fontData.fClass);\r\n\t    } else {\r\n\t        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n\t        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n\t        this.layerElement.setAttribute('font-style', fStyle);\r\n\t        this.layerElement.setAttribute('font-weight', fWeight);\r\n\t    }\r\n\t\r\n\t    var letters = documentData.l || [];\r\n\t    var usesGlyphs = this.globalData.fontManager.chars;\r\n\t    len = letters.length;\r\n\t    if(!len){\r\n\t        return;\r\n\t    }\r\n\t    var tSpan;\r\n\t    var matrixHelper = this.mHelper;\r\n\t    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n\t    var xPos = 0, yPos = 0, firstLine = true;\r\n\t    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n\t    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n\t        var tElement = this.textContainer;\r\n\t        var justify = 'start';\r\n\t        switch(documentData.j) {\r\n\t            case 1:\r\n\t                justify = 'end';\r\n\t                break;\r\n\t            case 2:\r\n\t                justify = 'middle';\r\n\t                break;\r\n\t        }\r\n\t        tElement.setAttribute('text-anchor',justify);\r\n\t        tElement.setAttribute('letter-spacing',trackingOffset);\r\n\t        var textContent = this.buildTextContents(documentData.finalText);\r\n\t        len = textContent.length;\r\n\t        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n\t        for ( i = 0; i < len; i += 1) {\r\n\t            tSpan = this.textSpans[i] || createNS('tspan');\r\n\t            tSpan.textContent = textContent[i];\r\n\t            tSpan.setAttribute('x', 0);\r\n\t            tSpan.setAttribute('y', yPos);\r\n\t            tSpan.style.display = 'inherit';\r\n\t            tElement.appendChild(tSpan);\r\n\t            this.textSpans[i] = tSpan;\r\n\t            yPos += documentData.finalLineHeight;\r\n\t        }\r\n\t        \r\n\t        this.layerElement.appendChild(tElement);\r\n\t    } else {\r\n\t        var cachedSpansLength = this.textSpans.length;\r\n\t        var shapeData, charData;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            if(!usesGlyphs || !singleShape || i === 0){\r\n\t                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n\t                if (cachedSpansLength <= i) {\r\n\t                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n\t                    tSpan.setAttribute('stroke-linejoin','round');\r\n\t                    tSpan.setAttribute('stroke-miterlimit','4');\r\n\t                    this.textSpans[i] = tSpan;\r\n\t                    this.layerElement.appendChild(tSpan);\r\n\t                }\r\n\t                tSpan.style.display = 'inherit';\r\n\t            }\r\n\t            \r\n\t            matrixHelper.reset();\r\n\t            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n\t            if (singleShape) {\r\n\t                if(letters[i].n) {\r\n\t                    xPos = -trackingOffset;\r\n\t                    yPos += documentData.yOffset;\r\n\t                    yPos += firstLine ? 1 : 0;\r\n\t                    firstLine = false;\r\n\t                }\r\n\t                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n\t                xPos += letters[i].l || 0;\r\n\t                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n\t                xPos += trackingOffset;\r\n\t            }\r\n\t            if(usesGlyphs) {\r\n\t                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n\t                shapeData = charData && charData.data || {};\r\n\t                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n\t                if(!singleShape){\r\n\t                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n\t                } else {\r\n\t                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n\t                }\r\n\t            } else {\r\n\t                if(singleShape) {\r\n\t                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n\t                }\r\n\t                tSpan.textContent = letters[i].val;\r\n\t                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n\t            }\r\n\t            //\r\n\t        }\r\n\t        if (singleShape) {\r\n\t            tSpan.setAttribute('d',shapeStr);\r\n\t        }\r\n\t    }\r\n\t    while (i < this.textSpans.length){\r\n\t        this.textSpans[i].style.display = 'none';\r\n\t        i += 1;\r\n\t    }\r\n\t    \r\n\t    this._sizeChanged = true;\r\n\t};\r\n\t\r\n\tSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n\t    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n\t    this.renderInnerContent();\r\n\t    if(this._sizeChanged){\r\n\t        this._sizeChanged = false;\r\n\t        var textBox = this.layerElement.getBBox();\r\n\t        this.bbox = {\r\n\t            top: textBox.y,\r\n\t            left: textBox.x,\r\n\t            width: textBox.width,\r\n\t            height: textBox.height\r\n\t        };\r\n\t    }\r\n\t    return this.bbox;\r\n\t};\r\n\t\r\n\tSVGTextElement.prototype.renderInnerContent = function(){\r\n\t\r\n\t    if(!this.data.singleShape){\r\n\t        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n\t        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n\t            this._sizeChanged = true;\r\n\t            var  i,len;\r\n\t            var renderedLetters = this.textAnimator.renderedLetters;\r\n\t\r\n\t            var letters = this.textProperty.currentData.l;\r\n\t\r\n\t            len = letters.length;\r\n\t            var renderedLetter, textSpan;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                if(letters[i].n){\r\n\t                    continue;\r\n\t                }\r\n\t                renderedLetter = renderedLetters[i];\r\n\t                textSpan = this.textSpans[i];\r\n\t                if(renderedLetter._mdf.m) {\r\n\t                    textSpan.setAttribute('transform',renderedLetter.m);\r\n\t                }\r\n\t                if(renderedLetter._mdf.o) {\r\n\t                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n\t                }\r\n\t                if(renderedLetter._mdf.sw){\r\n\t                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n\t                }\r\n\t                if(renderedLetter._mdf.sc){\r\n\t                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n\t                }\r\n\t                if(renderedLetter._mdf.fc){\r\n\t                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction SVGShapeElement(data,globalData,comp){\r\n\t    //List of drawable elements\r\n\t    this.shapes = [];\r\n\t    // Full shape data\r\n\t    this.shapesData = data.shapes;\r\n\t    //List of styles that will be applied to shapes\r\n\t    this.stylesList = [];\r\n\t    //List of modifiers that will be applied to shapes\r\n\t    this.shapeModifiers = [];\r\n\t    //List of items in shape tree\r\n\t    this.itemsData = [];\r\n\t    //List of items in previous shape tree\r\n\t    this.processedElements = [];\r\n\t    this.initElement(data,globalData,comp);\r\n\t    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n\t    // List of elements that have been created\r\n\t    this.prevViewData = [];\r\n\t}\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\t\r\n\tSVGShapeElement.prototype.initSecondaryElement = function() {\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\t\r\n\tSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\t\r\n\tSVGShapeElement.prototype.createContent = function(){\r\n\t    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n\t    //TODO: prevent drawing of hidden styles\r\n\t    var elementData;\r\n\t    var styleOb = new SVGStyleData(data, level);\r\n\t\r\n\t    var pathElement = styleOb.pElem;\r\n\t    if(data.ty === 'st') {\r\n\t        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n\t    } else if(data.ty === 'fl') {\r\n\t        elementData = new SVGFillStyleData(this, data, styleOb);\r\n\t    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n\t        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n\t        elementData = new gradientConstructor(this, data, styleOb);\r\n\t        this.globalData.defs.appendChild(elementData.gf);\r\n\t        if (elementData.maskId) {\r\n\t            this.globalData.defs.appendChild(elementData.ms);\r\n\t            this.globalData.defs.appendChild(elementData.of);\r\n\t            pathElement.setAttribute('mask','url(#' + elementData.maskId + ')');\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    if(data.ty === 'st' || data.ty === 'gs') {\r\n\t        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n\t        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n\t        pathElement.setAttribute('fill-opacity','0');\r\n\t        if(data.lj === 1) {\r\n\t            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    if(data.r === 2) {\r\n\t        pathElement.setAttribute('fill-rule', 'evenodd');\r\n\t    }\r\n\t\r\n\t    if(data.ln){\r\n\t        pathElement.setAttribute('id',data.ln);\r\n\t    }\r\n\t    if(data.cl){\r\n\t        pathElement.setAttribute('class',data.cl);\r\n\t    }\r\n\t    this.stylesList.push(styleOb);\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.createGroupElement = function(data) {\r\n\t    var elementData = new ShapeGroupData();\r\n\t    if(data.ln){\r\n\t        elementData.gr.setAttribute('id',data.ln);\r\n\t    }\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.createTransformElement = function(data) {\r\n\t    return new SVGTransformData(TransformPropertyFactory.getTransformProperty(this,data,this), PropertyFactory.getProp(this,data.o,0,0.01,this));\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n\t    var ty = 4;\r\n\t    if(data.ty === 'rc'){\r\n\t        ty = 5;\r\n\t    }else if(data.ty === 'el'){\r\n\t        ty = 6;\r\n\t    }else if(data.ty === 'sr'){\r\n\t        ty = 7;\r\n\t    }\r\n\t    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n\t    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n\t    this.shapes.push(elementData.sh);\r\n\t    this.addShapeToModifiers(elementData);\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n\t    var arr = elementData.styles;\r\n\t    var j, jLen = this.stylesList.length;\r\n\t    for (j = 0; j < jLen; j += 1) {\r\n\t        if (!this.stylesList[j].closed) {\r\n\t            arr.push(this.stylesList[j]);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.reloadShapes = function(){\r\n\t    this._isFirstFrame = true;\r\n\t    var i, len = this.itemsData.length;\r\n\t    for( i = 0; i < len; i += 1) {\r\n\t        this.prevViewData[i] = this.itemsData[i];\r\n\t    }\r\n\t    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n\t    len = this.dynamicProperties.length;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        this.dynamicProperties[i].getValue();\r\n\t    }\r\n\t    this.renderModifiers();\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n\t    var ownTransformers = [].concat(transformers);\r\n\t    var i, len = arr.length - 1;\r\n\t    var j, jLen;\r\n\t    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n\t    for(i=len;i>=0;i-=1){\r\n\t        processedPos = this.searchProcessedElement(arr[i]);\r\n\t        if(!processedPos){\r\n\t            arr[i]._render = render;\r\n\t        } else {\r\n\t            itemsData[i] = prevViewData[processedPos - 1];\r\n\t        }\r\n\t        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createStyleElement(arr[i], level);\r\n\t            } else {\r\n\t                itemsData[i].style.closed = false;\r\n\t            }\r\n\t            if(arr[i]._render){\r\n\t                container.appendChild(itemsData[i].style.pElem);\r\n\t            }\r\n\t            ownStyles.push(itemsData[i].style);\r\n\t        }else if(arr[i].ty == 'gr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createGroupElement(arr[i]);\r\n\t            } else {\r\n\t                jLen = itemsData[i].it.length;\r\n\t                for(j=0;j<jLen;j+=1){\r\n\t                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n\t                }\r\n\t            }\r\n\t            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n\t            if(arr[i]._render){\r\n\t                container.appendChild(itemsData[i].gr);\r\n\t            }\r\n\t        }else if(arr[i].ty == 'tr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createTransformElement(arr[i]);\r\n\t            }\r\n\t            currentTransform = itemsData[i].transform;\r\n\t            ownTransformers.push(currentTransform);\r\n\t        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n\t            }\r\n\t            this.setElementStyles(itemsData[i]);\r\n\t\r\n\t        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n\t            if(!processedPos){\r\n\t                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n\t                modifier.init(this,arr[i]);\r\n\t                itemsData[i] = modifier;\r\n\t                this.shapeModifiers.push(modifier);\r\n\t            } else {\r\n\t                modifier = itemsData[i];\r\n\t                modifier.closed = false;\r\n\t            }\r\n\t            ownModifiers.push(modifier);\r\n\t        }else if(arr[i].ty == 'rp'){\r\n\t            if(!processedPos){\r\n\t                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n\t                itemsData[i] = modifier;\r\n\t                modifier.init(this,arr,i,itemsData);\r\n\t                this.shapeModifiers.push(modifier);\r\n\t                render = false;\r\n\t            }else{\r\n\t                modifier = itemsData[i];\r\n\t                modifier.closed = true;\r\n\t            }\r\n\t            ownModifiers.push(modifier);\r\n\t        }\r\n\t        this.addProcessedElement(arr[i], i + 1);\r\n\t    }\r\n\t    len = ownStyles.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        ownStyles[i].closed = true;\r\n\t    }\r\n\t    len = ownModifiers.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        ownModifiers[i].closed = true;\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.renderInnerContent = function() {\r\n\t    this.renderModifiers();\r\n\t    var i, len = this.stylesList.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.stylesList[i].reset();\r\n\t    }\r\n\t    this.renderShape(this.shapesData, this.itemsData, this.layerElement);\r\n\t\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n\t            if(this.stylesList[i].msElem){\r\n\t                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n\t                //Adding M0 0 fixes same mask bug on all browsers\r\n\t                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n\t            }\r\n\t            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\t\r\n\tSVGShapeElement.prototype.renderShape = function(items, data, container) {\r\n\t    var i, len = items.length - 1;\r\n\t    var ty;\r\n\t    for(i=0;i<=len;i+=1){\r\n\t        ty = items[i].ty;\r\n\t        if(ty == 'tr'){\r\n\t            if(this._isFirstFrame || data[i].transform.op._mdf){\r\n\t                container.setAttribute('opacity',data[i].transform.op.v);\r\n\t            }\r\n\t            if(this._isFirstFrame || data[i].transform.mProps._mdf){\r\n\t                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n\t            }\r\n\t        }else if(items[i]._render && (ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr')){\r\n\t            this.renderPath(data[i]);\r\n\t        }else if(ty == 'fl'){\r\n\t            this.renderFill(items[i],data[i]);\r\n\t        }else if(ty == 'gf'){\r\n\t            this.renderGradient(items[i],data[i]);\r\n\t        }else if(ty == 'gs'){\r\n\t            this.renderGradient(items[i],data[i]);\r\n\t            this.renderStroke(items[i],data[i]);\r\n\t        }else if(ty == 'st'){\r\n\t            this.renderStroke(items[i],data[i]);\r\n\t        }else if(ty == 'gr'){\r\n\t            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n\t        }else if(ty == 'tm'){\r\n\t            //\r\n\t        }\r\n\t    }\r\n\t\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.renderPath = function(itemData){\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || this._isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = this.mHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                props = itemData.transformers[k].mProps.v.props;\r\n\t                mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t        } else {\r\n\t            mat = this.identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.renderFill = function(styleData,itemData){\r\n\t    var styleElem = itemData.style;\r\n\t\r\n\t    if(itemData.c._mdf || this._isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || this._isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.renderGradient = function(styleData, itemData) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\t\r\n\t    if (itemData.o._mdf || this._isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || this._isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || this._isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || this._isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || this._isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || this._isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || this._isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\t\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.renderStroke = function(styleData, itemData) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || this._isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || this._isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || this._isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || this._isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.destroy = function(){\r\n\t    this.destroyBaseElement();\r\n\t    this.shapeData = null;\r\n\t    this.itemsData = null;\r\n\t};\r\n\t\n\tfunction SVGTintFilter(filter, filterManager){\r\n\t    this.filterManager = filterManager;\r\n\t    var feColorMatrix = createNS('feColorMatrix');\r\n\t    feColorMatrix.setAttribute('type','matrix');\r\n\t    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n\t    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n\t    feColorMatrix.setAttribute('result','f1');\r\n\t    filter.appendChild(feColorMatrix);\r\n\t    feColorMatrix = createNS('feColorMatrix');\r\n\t    feColorMatrix.setAttribute('type','matrix');\r\n\t    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n\t    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n\t    feColorMatrix.setAttribute('result','f2');\r\n\t    filter.appendChild(feColorMatrix);\r\n\t    this.matrixFilter = feColorMatrix;\r\n\t    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n\t        var feMerge = createNS('feMerge');\r\n\t        filter.appendChild(feMerge);\r\n\t        var feMergeNode;\r\n\t        feMergeNode = createNS('feMergeNode');\r\n\t        feMergeNode.setAttribute('in','SourceGraphic');\r\n\t        feMerge.appendChild(feMergeNode);\r\n\t        feMergeNode = createNS('feMergeNode');\r\n\t        feMergeNode.setAttribute('in','f2');\r\n\t        feMerge.appendChild(feMergeNode);\r\n\t    }\r\n\t}\r\n\t\r\n\tSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n\t    if(forceRender || this.filterManager._mdf){\r\n\t        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n\t        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n\t        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n\t        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n\t    }\r\n\t};\n\tfunction SVGFillFilter(filter, filterManager){\r\n\t    this.filterManager = filterManager;\r\n\t    var feColorMatrix = createNS('feColorMatrix');\r\n\t    feColorMatrix.setAttribute('type','matrix');\r\n\t    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n\t    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n\t    filter.appendChild(feColorMatrix);\r\n\t    this.matrixFilter = feColorMatrix;\r\n\t}\r\n\tSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n\t    if(forceRender || this.filterManager._mdf){\r\n\t        var color = this.filterManager.effectElements[2].p.v;\r\n\t        var opacity = this.filterManager.effectElements[6].p.v;\r\n\t        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n\t    }\r\n\t};\n\tfunction SVGStrokeEffect(elem, filterManager){\r\n\t    this.initialized = false;\r\n\t    this.filterManager = filterManager;\r\n\t    this.elem = elem;\r\n\t    this.paths = [];\r\n\t}\r\n\t\r\n\tSVGStrokeEffect.prototype.initialize = function(){\r\n\t\r\n\t    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n\t    var path,groupPath, i, len;\r\n\t    if(this.filterManager.effectElements[1].p.v === 1){\r\n\t        len = this.elem.maskManager.masksProperties.length;\r\n\t        i = 0;\r\n\t    } else {\r\n\t        i = this.filterManager.effectElements[0].p.v - 1;\r\n\t        len = i + 1;\r\n\t    }\r\n\t    groupPath = createNS('g'); \r\n\t    groupPath.setAttribute('fill','none');\r\n\t    groupPath.setAttribute('stroke-linecap','round');\r\n\t    groupPath.setAttribute('stroke-dashoffset',1);\r\n\t    for(i;i<len;i+=1){\r\n\t        path = createNS('path');\r\n\t        groupPath.appendChild(path);\r\n\t        this.paths.push({p:path,m:i});\r\n\t    }\r\n\t    if(this.filterManager.effectElements[10].p.v === 3){\r\n\t        var mask = createNS('mask');\r\n\t        var id = 'stms_' + randomString(10);\r\n\t        mask.setAttribute('id',id);\r\n\t        mask.setAttribute('mask-type','alpha');\r\n\t        mask.appendChild(groupPath);\r\n\t        this.elem.globalData.defs.appendChild(mask);\r\n\t        var g = createNS('g');\r\n\t        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n\t        if(elemChildren[0]){\r\n\t            g.appendChild(elemChildren[0]);\r\n\t        }\r\n\t        this.elem.layerElement.appendChild(g);\r\n\t        this.masker = mask;\r\n\t        groupPath.setAttribute('stroke','#fff');\r\n\t    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n\t        if(this.filterManager.effectElements[10].p.v === 2){\r\n\t            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n\t            while(elemChildren.length){\r\n\t                this.elem.layerElement.removeChild(elemChildren[0]);\r\n\t            }\r\n\t        }\r\n\t        this.elem.layerElement.appendChild(groupPath);\r\n\t        this.elem.layerElement.removeAttribute('mask');\r\n\t        groupPath.setAttribute('stroke','#fff');\r\n\t    }\r\n\t    this.initialized = true;\r\n\t    this.pathMasker = groupPath;\r\n\t};\r\n\t\r\n\tSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n\t    if(!this.initialized){\r\n\t        this.initialize();\r\n\t    }\r\n\t    var i, len = this.paths.length;\r\n\t    var mask, path;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(this.paths[i].m === -1) {\r\n\t            continue;\r\n\t        }\r\n\t        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n\t        path = this.paths[i].p;\r\n\t        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n\t            path.setAttribute('d',mask.lastPath);\r\n\t        }\r\n\t        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n\t            var dasharrayValue;\r\n\t            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n\t                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n\t                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n\t                var l = path.getTotalLength();\r\n\t                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n\t                var lineLength = l*(e-s);\r\n\t                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n\t                var units = Math.floor(lineLength/segment);\r\n\t                var j;\r\n\t                for(j=0;j<units;j+=1){\r\n\t                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n\t                }\r\n\t                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n\t            } else {\r\n\t                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n\t            }\r\n\t            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n\t        }\r\n\t    }\r\n\t    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n\t        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n\t    }\r\n\t    \r\n\t    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n\t        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n\t    }\r\n\t    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n\t        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n\t            var color = this.filterManager.effectElements[3].p.v;\r\n\t            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction SVGTritoneFilter(filter, filterManager){\r\n\t    this.filterManager = filterManager;\r\n\t    var feColorMatrix = createNS('feColorMatrix');\r\n\t    feColorMatrix.setAttribute('type','matrix');\r\n\t    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n\t    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n\t    feColorMatrix.setAttribute('result','f1');\r\n\t    filter.appendChild(feColorMatrix);\r\n\t    var feComponentTransfer = createNS('feComponentTransfer');\r\n\t    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n\t    filter.appendChild(feComponentTransfer);\r\n\t    this.matrixFilter = feComponentTransfer;\r\n\t    var feFuncR = createNS('feFuncR');\r\n\t    feFuncR.setAttribute('type','table');\r\n\t    feComponentTransfer.appendChild(feFuncR);\r\n\t    this.feFuncR = feFuncR;\r\n\t    var feFuncG = createNS('feFuncG');\r\n\t    feFuncG.setAttribute('type','table');\r\n\t    feComponentTransfer.appendChild(feFuncG);\r\n\t    this.feFuncG = feFuncG;\r\n\t    var feFuncB = createNS('feFuncB');\r\n\t    feFuncB.setAttribute('type','table');\r\n\t    feComponentTransfer.appendChild(feFuncB);\r\n\t    this.feFuncB = feFuncB;\r\n\t}\r\n\t\r\n\tSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n\t    if(forceRender || this.filterManager._mdf){\r\n\t        var color1 = this.filterManager.effectElements[0].p.v;\r\n\t        var color2 = this.filterManager.effectElements[1].p.v;\r\n\t        var color3 = this.filterManager.effectElements[2].p.v;\r\n\t        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n\t        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n\t        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n\t        this.feFuncR.setAttribute('tableValues', tableR);\r\n\t        this.feFuncG.setAttribute('tableValues', tableG);\r\n\t        this.feFuncB.setAttribute('tableValues', tableB);\r\n\t        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n\t        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n\t    }\r\n\t};\n\tfunction SVGProLevelsFilter(filter, filterManager){\r\n\t    this.filterManager = filterManager;\r\n\t    var effectElements = this.filterManager.effectElements;\r\n\t    var feComponentTransfer = createNS('feComponentTransfer');\r\n\t    var feFuncR, feFuncG, feFuncB;\r\n\t    \r\n\t    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n\t        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n\t    }\r\n\t    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n\t        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n\t    }\r\n\t    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n\t        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n\t    }\r\n\t    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n\t        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n\t    }\r\n\t    \r\n\t    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n\t        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n\t        filter.appendChild(feComponentTransfer);\r\n\t        feComponentTransfer = createNS('feComponentTransfer');\r\n\t    }\r\n\t\r\n\t    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\t\r\n\t        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n\t        filter.appendChild(feComponentTransfer);\r\n\t        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n\t        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n\t        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n\t    }\r\n\t}\r\n\t\r\n\tSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n\t    var feFunc = createNS(type);\r\n\t    feFunc.setAttribute('type','table');\r\n\t    feComponentTransfer.appendChild(feFunc);\r\n\t    return feFunc;\r\n\t};\r\n\t\r\n\tSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n\t    var cnt = 0;\r\n\t    var segments = 256;\r\n\t    var perc;\r\n\t    var min = Math.min(inputBlack, inputWhite);\r\n\t    var max = Math.max(inputBlack, inputWhite);\r\n\t    var table = Array.call(null,{length:segments});\r\n\t    var colorValue;\r\n\t    var pos = 0;\r\n\t    var outputDelta = outputWhite - outputBlack; \r\n\t    var inputDelta = inputWhite - inputBlack; \r\n\t    while(cnt <= 256) {\r\n\t        perc = cnt/256;\r\n\t        if(perc <= min){\r\n\t            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n\t        } else if(perc >= max){\r\n\t            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n\t        } else {\r\n\t            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n\t        }\r\n\t        table[pos++] = colorValue;\r\n\t        cnt += 256/(segments-1);\r\n\t    }\r\n\t    return table.join(' ');\r\n\t};\r\n\t\r\n\tSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n\t    if(forceRender || this.filterManager._mdf){\r\n\t        var val, cnt, perc, bezier;\r\n\t        var effectElements = this.filterManager.effectElements;\r\n\t        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n\t            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n\t            this.feFuncRComposed.setAttribute('tableValues',val);\r\n\t            this.feFuncGComposed.setAttribute('tableValues',val);\r\n\t            this.feFuncBComposed.setAttribute('tableValues',val);\r\n\t        }\r\n\t\r\n\t\r\n\t        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n\t            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n\t            this.feFuncR.setAttribute('tableValues',val);\r\n\t        }\r\n\t\r\n\t        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n\t            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n\t            this.feFuncG.setAttribute('tableValues',val);\r\n\t        }\r\n\t\r\n\t        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n\t            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n\t            this.feFuncB.setAttribute('tableValues',val);\r\n\t        }\r\n\t\r\n\t        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n\t            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n\t            this.feFuncA.setAttribute('tableValues',val);\r\n\t        }\r\n\t        \r\n\t    }\r\n\t};\n\tfunction SVGDropShadowEffect(filter, filterManager){\r\n\t    filter.setAttribute('x','-100%');\r\n\t    filter.setAttribute('y','-100%');\r\n\t    filter.setAttribute('width','400%');\r\n\t    filter.setAttribute('height','400%');\r\n\t    this.filterManager = filterManager;\r\n\t\r\n\t    var feGaussianBlur = createNS('feGaussianBlur');\r\n\t    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n\t    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n\t    feGaussianBlur.setAttribute('stdDeviation','0');\r\n\t    this.feGaussianBlur = feGaussianBlur;\r\n\t    filter.appendChild(feGaussianBlur);\r\n\t\r\n\t    var feOffset = createNS('feOffset');\r\n\t    feOffset.setAttribute('dx','25');\r\n\t    feOffset.setAttribute('dy','0');\r\n\t    feOffset.setAttribute('in','drop_shadow_1');\r\n\t    feOffset.setAttribute('result','drop_shadow_2');\r\n\t    this.feOffset = feOffset;\r\n\t    filter.appendChild(feOffset);\r\n\t    var feFlood = createNS('feFlood');\r\n\t    feFlood.setAttribute('flood-color','#00ff00');\r\n\t    feFlood.setAttribute('flood-opacity','1');\r\n\t    feFlood.setAttribute('result','drop_shadow_3');\r\n\t    this.feFlood = feFlood;\r\n\t    filter.appendChild(feFlood);\r\n\t\r\n\t    var feComposite = createNS('feComposite');\r\n\t    feComposite.setAttribute('in','drop_shadow_3');\r\n\t    feComposite.setAttribute('in2','drop_shadow_2');\r\n\t    feComposite.setAttribute('operator','in');\r\n\t    feComposite.setAttribute('result','drop_shadow_4');\r\n\t    filter.appendChild(feComposite);\r\n\t\r\n\t\r\n\t    var feMerge = createNS('feMerge');\r\n\t    filter.appendChild(feMerge);\r\n\t    var feMergeNode;\r\n\t    feMergeNode = createNS('feMergeNode');\r\n\t    feMerge.appendChild(feMergeNode);\r\n\t    feMergeNode = createNS('feMergeNode');\r\n\t    feMergeNode.setAttribute('in','SourceGraphic');\r\n\t    this.feMergeNode = feMergeNode;\r\n\t    this.feMerge = feMerge;\r\n\t    this.originalNodeAdded = false;\r\n\t    feMerge.appendChild(feMergeNode);\r\n\t}\r\n\t\r\n\tSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n\t    if(forceRender || this.filterManager._mdf){\r\n\t        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n\t            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n\t        }\r\n\t        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n\t            var col = this.filterManager.effectElements[0].p.v;\r\n\t            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n\t        }\r\n\t        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n\t            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n\t        }\r\n\t        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n\t            var distance = this.filterManager.effectElements[3].p.v;\r\n\t            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n\t            var x = distance * Math.cos(angle);\r\n\t            var y = distance * Math.sin(angle);\r\n\t            this.feOffset.setAttribute('dx', x);\r\n\t            this.feOffset.setAttribute('dy', y);\r\n\t        }\r\n\t        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n\t            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n\t                this.feMerge.removeChild(this.feMergeNode);\r\n\t                this.originalNodeAdded = false;\r\n\t            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n\t                this.feMerge.appendChild(this.feMergeNode);\r\n\t                this.originalNodeAdded = true;\r\n\t            }\r\n\t        }*/\r\n\t    }\r\n\t};\n\tvar _svgMatteSymbols = [];\r\n\tvar _svgMatteMaskCounter = 0;\r\n\t\r\n\tfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n\t    this.initialized = false;\r\n\t    this.filterManager = filterManager;\r\n\t    this.filterElem = filterElem;\r\n\t    this.elem = elem;\r\n\t    elem.matteElement = createNS('g');\r\n\t    elem.matteElement.appendChild(elem.layerElement);\r\n\t    elem.matteElement.appendChild(elem.transformedElement);\r\n\t    elem.baseElement = elem.matteElement;\r\n\t}\r\n\t\r\n\tSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n\t    var i = 0, len = _svgMatteSymbols.length;\r\n\t    while(i < len) {\r\n\t        if(_svgMatteSymbols[i] === mask) {\r\n\t            return _svgMatteSymbols[i];\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    return null;\r\n\t};\r\n\t\r\n\tSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n\t    var parentNode = mask.layerElement.parentNode;\r\n\t    if(!parentNode) {\r\n\t        return;\r\n\t    }\r\n\t    var children = parentNode.children;\r\n\t    var i = 0, len = children.length;\r\n\t    while (i < len) {\r\n\t        if (children[i] === mask.layerElement) {\r\n\t            break;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    var nextChild;\r\n\t    if (i <= len - 2) {\r\n\t        nextChild = children[i + 1];\r\n\t    }\r\n\t    var useElem = createNS('use');\r\n\t    useElem.setAttribute('href', '#' + symbolId);\r\n\t    if(nextChild) {\r\n\t        parentNode.insertBefore(useElem, nextChild);\r\n\t    } else {\r\n\t        parentNode.appendChild(useElem);\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n\t    if(!this.findSymbol(mask)) {\r\n\t        var symbolId = 'matte_' + randomString(5) + '_' + _svgMatteMaskCounter++;\r\n\t        var masker = createNS('mask');\r\n\t        masker.setAttribute('id', mask.layerId);\r\n\t        masker.setAttribute('mask-type', 'alpha');\r\n\t        _svgMatteSymbols.push(mask);\r\n\t        var defs = elem.globalData.defs;\r\n\t        defs.appendChild(masker);\r\n\t        var symbol = createNS('symbol');\r\n\t        symbol.setAttribute('id', symbolId);\r\n\t        this.replaceInParent(mask, symbolId);\r\n\t        symbol.appendChild(mask.layerElement);\r\n\t        defs.appendChild(symbol);\r\n\t        var useElem = createNS('use');\r\n\t        useElem.setAttribute('href', '#' + symbolId);\r\n\t        masker.appendChild(useElem);\r\n\t        mask.data.hd = false;\r\n\t        mask.show();\r\n\t    }\r\n\t    elem.setMatte(mask.layerId);\r\n\t};\r\n\t\r\n\tSVGMatte3Effect.prototype.initialize = function() {\r\n\t    var ind = this.filterManager.effectElements[0].p.v;\r\n\t    var i = 0, len = this.elem.comp.elements.length;\r\n\t    while (i < len) {\r\n\t    \tif (this.elem.comp.elements[i].data.ind === ind) {\r\n\t    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n\t    \t}\r\n\t    \ti += 1;\r\n\t    }\r\n\t    this.initialized = true;\r\n\t};\r\n\t\r\n\tSVGMatte3Effect.prototype.renderFrame = function() {\r\n\t\tif(!this.initialized) {\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t};\n\tfunction SVGEffects(elem){\r\n\t    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n\t    var filId = randomString(10);\r\n\t    var fil = filtersFactory.createFilter(filId);\r\n\t    var count = 0;\r\n\t    this.filters = [];\r\n\t    var filterManager;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        filterManager = null;\r\n\t        if(elem.data.ef[i].ty === 20){\r\n\t            count += 1;\r\n\t            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 21){\r\n\t            count += 1;\r\n\t            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 22){\r\n\t            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 23){\r\n\t            count += 1;\r\n\t            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 24){\r\n\t            count += 1;\r\n\t            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 25){\r\n\t            count += 1;\r\n\t            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 28){\r\n\t            //count += 1;\r\n\t            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n\t        }\r\n\t        if(filterManager) {\r\n\t            this.filters.push(filterManager);\r\n\t        }\r\n\t    }\r\n\t    if(count){\r\n\t        elem.globalData.defs.appendChild(fil);\r\n\t        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n\t    }\r\n\t}\r\n\t\r\n\tSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n\t    var i, len = this.filters.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.filters[i].renderFrame(_isFirstFrame);\r\n\t    }\r\n\t};\n\tvar animationManager = (function(){\r\n\t    var moduleOb = {};\r\n\t    var registeredAnimations = [];\r\n\t    var initTime = 0;\r\n\t    var len = 0;\r\n\t    var idled = true;\r\n\t    var playingAnimationsNum = 0;\r\n\t    var _stopped = true;\r\n\t\r\n\t    function removeElement(ev){\r\n\t        var i = 0;\r\n\t        var animItem = ev.target;\r\n\t        while(i<len) {\r\n\t            if (registeredAnimations[i].animation === animItem) {\r\n\t                registeredAnimations.splice(i, 1);\r\n\t                i -= 1;\r\n\t                len -= 1;\r\n\t                if(!animItem.isPaused){\r\n\t                    subtractPlayingCount();\r\n\t                }\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function registerAnimation(element, animationData){\r\n\t        if(!element){\r\n\t            return null;\r\n\t        }\r\n\t        var i=0;\r\n\t        while(i<len){\r\n\t            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n\t                return registeredAnimations[i].animation;\r\n\t            }\r\n\t            i+=1;\r\n\t        }\r\n\t        var animItem = new AnimationItem();\r\n\t        setupAnimation(animItem, element);\r\n\t        animItem.setData(element, animationData);\r\n\t        return animItem;\r\n\t    }\r\n\t\r\n\t    function addPlayingCount(){\r\n\t        playingAnimationsNum += 1;\r\n\t        activate();\r\n\t    }\r\n\t\r\n\t    function subtractPlayingCount(){\r\n\t        playingAnimationsNum -= 1;\r\n\t        if(playingAnimationsNum === 0){\r\n\t            idled = true;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function setupAnimation(animItem, element){\r\n\t        animItem.addEventListener('destroy',removeElement);\r\n\t        animItem.addEventListener('_active',addPlayingCount);\r\n\t        animItem.addEventListener('_idle',subtractPlayingCount);\r\n\t        registeredAnimations.push({elem: element,animation:animItem});\r\n\t        len += 1;\r\n\t    }\r\n\t\r\n\t    function loadAnimation(params){\r\n\t        var animItem = new AnimationItem();\r\n\t        setupAnimation(animItem, null);\r\n\t        animItem.setParams(params);\r\n\t        return animItem;\r\n\t    }\r\n\t\r\n\t\r\n\t    function setSpeed(val,animation){\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.setSpeed(val, animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function setDirection(val, animation){\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.setDirection(val, animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function play(animation){\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.play(animation);\r\n\t        }\r\n\t    }\r\n\t    function resume(nowTime) {\r\n\t        var elapsedTime = nowTime - initTime;\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n\t        }\r\n\t        initTime = nowTime;\r\n\t        if(!idled) {\r\n\t            window.requestAnimationFrame(resume);\r\n\t        } else {\r\n\t            _stopped = true;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function first(nowTime){\r\n\t        initTime = nowTime;\r\n\t        window.requestAnimationFrame(resume);\r\n\t    }\r\n\t\r\n\t    function pause(animation) {\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.pause(animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function goToAndStop(value,isFrame,animation) {\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function stop(animation) {\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.stop(animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function togglePause(animation) {\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.togglePause(animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function destroy(animation) {\r\n\t        var i;\r\n\t        for(i=(len-1);i>=0;i-=1){\r\n\t            registeredAnimations[i].animation.destroy(animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function searchAnimations(animationData, standalone, renderer){\r\n\t        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n\t                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n\t        var i, len = animElements.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            if(renderer){\r\n\t                animElements[i].setAttribute('data-bm-type',renderer);\r\n\t            }\r\n\t            registerAnimation(animElements[i], animationData);\r\n\t        }\r\n\t        if(standalone && len === 0){\r\n\t            if(!renderer){\r\n\t                renderer = 'svg';\r\n\t            }\r\n\t            var body = document.getElementsByTagName('body')[0];\r\n\t            body.innerHTML = '';\r\n\t            var div = createTag('div');\r\n\t            div.style.width = '100%';\r\n\t            div.style.height = '100%';\r\n\t            div.setAttribute('data-bm-type',renderer);\r\n\t            body.appendChild(div);\r\n\t            registerAnimation(div, animationData);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function resize(){\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.resize();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    /*function start(){\r\n\t        window.requestAnimationFrame(first);\r\n\t    }*/\r\n\t\r\n\t    function activate(){\r\n\t        if(idled){\r\n\t            idled = false;\r\n\t            if(_stopped) {\r\n\t                window.requestAnimationFrame(first);\r\n\t                _stopped = false;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    //start();\r\n\t\r\n\t    //setTimeout(start,0);\r\n\t\r\n\t    moduleOb.registerAnimation = registerAnimation;\r\n\t    moduleOb.loadAnimation = loadAnimation;\r\n\t    moduleOb.setSpeed = setSpeed;\r\n\t    moduleOb.setDirection = setDirection;\r\n\t    moduleOb.play = play;\r\n\t    moduleOb.pause = pause;\r\n\t    moduleOb.stop = stop;\r\n\t    moduleOb.togglePause = togglePause;\r\n\t    moduleOb.searchAnimations = searchAnimations;\r\n\t    moduleOb.resize = resize;\r\n\t    //moduleOb.start = start;\r\n\t    moduleOb.goToAndStop = goToAndStop;\r\n\t    moduleOb.destroy = destroy;\r\n\t    return moduleOb;\r\n\t}());\r\n\t\n\tvar AnimationItem = function () {\r\n\t    this._cbs = [];\r\n\t    this.name = '';\r\n\t    this.path = '';\r\n\t    this.isLoaded = false;\r\n\t    this.currentFrame = 0;\r\n\t    this.currentRawFrame = 0;\r\n\t    this.totalFrames = 0;\r\n\t    this.frameRate = 0;\r\n\t    this.frameMult = 0;\r\n\t    this.playSpeed = 1;\r\n\t    this.playDirection = 1;\r\n\t    this.pendingElements = 0;\r\n\t    this.playCount = 0;\r\n\t    this.animationData = {};\r\n\t    this.layers = [];\r\n\t    this.assets = [];\r\n\t    this.isPaused = true;\r\n\t    this.autoplay = false;\r\n\t    this.loop = true;\r\n\t    this.renderer = null;\r\n\t    this.animationID = randomString(10);\r\n\t    this.assetsPath = '';\r\n\t    this.timeCompleted = 0;\r\n\t    this.segmentPos = 0;\r\n\t    this.subframeEnabled = subframeEnabled;\r\n\t    this.segments = [];\r\n\t    this._idle = true;\r\n\t    this.projectInterface = ProjectInterface();\r\n\t};\r\n\t\r\n\textendPrototype([BaseEvent], AnimationItem);\r\n\t\r\n\tAnimationItem.prototype.setParams = function(params) {\r\n\t    var self = this;\r\n\t    if(params.context){\r\n\t        this.context = params.context;\r\n\t    }\r\n\t    if(params.wrapper || params.container){\r\n\t        this.wrapper = params.wrapper || params.container;\r\n\t    }\r\n\t    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n\t    switch(animType){\r\n\t        case 'canvas':\r\n\t            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n\t            break;\r\n\t        case 'svg':\r\n\t            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n\t            break;\r\n\t        default:\r\n\t            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n\t            break;\r\n\t    }\r\n\t    this.renderer.setProjectInterface(this.projectInterface);\r\n\t    this.animType = animType;\r\n\t\r\n\t    if(params.loop === '' || params.loop === null){\r\n\t    }else if(params.loop === false){\r\n\t        this.loop = false;\r\n\t    }else if(params.loop === true){\r\n\t        this.loop = true;\r\n\t    }else{\r\n\t        this.loop = parseInt(params.loop);\r\n\t    }\r\n\t    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n\t    this.name = params.name ? params.name :  '';\r\n\t    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n\t    if(params.animationData){\r\n\t        self.configAnimation(params.animationData);\r\n\t    }else if(params.path){\r\n\t        if(params.path.substr(-4) != 'json'){\r\n\t            if (params.path.substr(-1, 1) != '/') {\r\n\t                params.path += '/';\r\n\t            }\r\n\t            params.path += 'data.json';\r\n\t        }\r\n\t\r\n\t        var xhr = new XMLHttpRequest();\r\n\t        if(params.path.lastIndexOf('\\\\') != -1){\r\n\t            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n\t        }else{\r\n\t            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n\t        }\r\n\t        this.assetsPath = params.assetsPath;\r\n\t        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n\t        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\t        xhr.open('GET', params.path, true);\r\n\t        xhr.send();\r\n\t        xhr.onreadystatechange = function () {\r\n\t            if (xhr.readyState == 4) {\r\n\t                if(xhr.status == 200){\r\n\t                    self.configAnimation(JSON.parse(xhr.responseText));\r\n\t                }else{\r\n\t                    try{\r\n\t                        var response = JSON.parse(xhr.responseText);\r\n\t                        self.configAnimation(response);\r\n\t                    }catch(err){\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n\t    var params = {\r\n\t        wrapper: wrapper,\r\n\t        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n\t    };\r\n\t    var wrapperAttributes = wrapper.attributes;\r\n\t\r\n\t    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n\t    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\t\r\n\t    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n\t    if(loop === ''){\r\n\t    }else if(loop === 'false'){\r\n\t        params.loop = false;\r\n\t    }else if(loop === 'true'){\r\n\t        params.loop = true;\r\n\t    }else{\r\n\t        params.loop = parseInt(loop);\r\n\t    }\r\n\t    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n\t    params.autoplay = autoplay !== \"false\";\r\n\t\r\n\t    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n\t    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\t\r\n\t    if(prerender === 'false'){\r\n\t        params.prerender = false;\r\n\t    }\r\n\t    this.setParams(params);\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.includeLayers = function(data) {\r\n\t    if(data.op > this.animationData.op){\r\n\t        this.animationData.op = data.op;\r\n\t        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n\t        this.animationData.tf = this.totalFrames;\r\n\t    }\r\n\t    var layers = this.animationData.layers;\r\n\t    var i, len = layers.length;\r\n\t    var newLayers = data.layers;\r\n\t    var j, jLen = newLayers.length;\r\n\t    for(j=0;j<jLen;j+=1){\r\n\t        i = 0;\r\n\t        while(i<len){\r\n\t            if(layers[i].id == newLayers[j].id){\r\n\t                layers[i] = newLayers[j];\r\n\t                break;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t    }\r\n\t    if(data.chars || data.fonts){\r\n\t        this.renderer.globalData.fontManager.addChars(data.chars);\r\n\t        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n\t    }\r\n\t    if(data.assets){\r\n\t        len = data.assets.length;\r\n\t        for(i = 0; i < len; i += 1){\r\n\t            this.animationData.assets.push(data.assets[i]);\r\n\t        }\r\n\t    }\r\n\t    //this.totalFrames = 50;\r\n\t    //this.animationData.tf = 50;\r\n\t    this.animationData.__complete = false;\r\n\t    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n\t    this.renderer.includeLayers(data.layers);\r\n\t    if(expressionsPlugin){\r\n\t        expressionsPlugin.initExpressions(this);\r\n\t    }\r\n\t    this.renderer.renderFrame(-1);\r\n\t    this.loadNextSegment();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.loadNextSegment = function() {\r\n\t    var segments = this.animationData.segments;\r\n\t    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n\t        this.trigger('data_ready');\r\n\t        this.timeCompleted = this.animationData.tf;\r\n\t        return;\r\n\t    }\r\n\t    var segment = segments.shift();\r\n\t    this.timeCompleted = segment.time * this.frameRate;\r\n\t    var xhr = new XMLHttpRequest();\r\n\t    var self = this;\r\n\t    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n\t    this.segmentPos += 1;\r\n\t    xhr.open('GET', segmentPath, true);\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t                self.includeLayers(JSON.parse(xhr.responseText));\r\n\t            }else{\r\n\t                try{\r\n\t                    var response = JSON.parse(xhr.responseText);\r\n\t                    self.includeLayers(response);\r\n\t                }catch(err){\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.loadSegments = function() {\r\n\t    var segments = this.animationData.segments;\r\n\t    if(!segments) {\r\n\t        this.timeCompleted = this.animationData.tf;\r\n\t    }\r\n\t    this.loadNextSegment();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.configAnimation = function (animData) {\r\n\t    var _this = this;\r\n\t    if(this.renderer && this.renderer.destroyed){\r\n\t        return;\r\n\t    }\r\n\t    this.animationData = animData;\r\n\t    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n\t    this.animationData.tf = this.totalFrames;\r\n\t    this.renderer.configAnimation(animData);\r\n\t    if(!animData.assets){\r\n\t        animData.assets = [];\r\n\t    }\r\n\t    if(animData.comps) {\r\n\t        animData.assets = animData.assets.concat(animData.comps);\r\n\t        animData.comps = null;\r\n\t    }\r\n\t    this.renderer.searchExtraCompositions(animData.assets);\r\n\t\r\n\t    this.layers = this.animationData.layers;\r\n\t    this.assets = this.animationData.assets;\r\n\t    this.frameRate = this.animationData.fr;\r\n\t    this.firstFrame = Math.round(this.animationData.ip);\r\n\t    this.frameMult = this.animationData.fr / 1000;\r\n\t    this.trigger('config_ready');\r\n\t    this.imagePreloader = new ImagePreloader();\r\n\t    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n\t    this.imagePreloader.setPath(this.path);\r\n\t    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n\t        if(!err) {\r\n\t            _this.trigger('loaded_images');\r\n\t        }\r\n\t    });\r\n\t    this.loadSegments();\r\n\t    this.updaFrameModifier();\r\n\t    if(this.renderer.globalData.fontManager){\r\n\t        this.waitForFontsLoaded();\r\n\t    }else{\r\n\t        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n\t        this.checkLoaded();\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n\t    function checkFontsLoaded(){\r\n\t        if(this.renderer.globalData.fontManager.loaded){\r\n\t            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n\t            //this.renderer.buildItems(this.animationData.layers);\r\n\t            this.checkLoaded();\r\n\t        }else{\r\n\t            setTimeout(checkFontsLoaded.bind(this),20);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    return function(){\r\n\t        checkFontsLoaded.bind(this)();\r\n\t    };\r\n\t}());\r\n\t\r\n\tAnimationItem.prototype.addPendingElement = function () {\r\n\t    this.pendingElements += 1;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.elementLoaded = function () {\r\n\t    this.pendingElements--;\r\n\t    this.checkLoaded();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.checkLoaded = function () {\r\n\t    if (this.pendingElements === 0) {\r\n\t        if(expressionsPlugin){\r\n\t            expressionsPlugin.initExpressions(this);\r\n\t        }\r\n\t        this.renderer.initItems();\r\n\t        setTimeout(function(){\r\n\t            this.trigger('DOMLoaded');\r\n\t        }.bind(this),0);\r\n\t        this.isLoaded = true;\r\n\t        this.gotoFrame();\r\n\t        if(this.autoplay){\r\n\t            this.play();\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.resize = function () {\r\n\t    this.renderer.updateContainerSize();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.setSubframe = function(flag){\r\n\t    this.subframeEnabled = flag ? true : false;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.gotoFrame = function () {\r\n\t    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\t\r\n\t    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n\t        this.currentFrame = this.timeCompleted;\r\n\t    }\r\n\t    this.trigger('enterFrame');\r\n\t    this.renderFrame();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.renderFrame = function () {\r\n\t    if(this.isLoaded === false){\r\n\t        return;\r\n\t    }\r\n\t    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.play = function (name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    if(this.isPaused === true){\r\n\t        this.isPaused = false;\r\n\t        if(this._idle){\r\n\t            this._idle = false;\r\n\t            this.trigger('_active');\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.pause = function (name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    if(this.isPaused === false){\r\n\t        this.isPaused = true;\r\n\t        this._idle = true;\r\n\t        this.trigger('_idle');\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.togglePause = function (name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    if(this.isPaused === true){\r\n\t        this.play();\r\n\t    }else{\r\n\t        this.pause();\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.stop = function (name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    this.pause();\r\n\t    this.playCount = 0;\r\n\t    this.setCurrentRawFrameValue(0);\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    if(isFrame){\r\n\t        this.setCurrentRawFrameValue(value);\r\n\t    }else{\r\n\t        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n\t    }\r\n\t    this.pause();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n\t    this.goToAndStop(value, isFrame, name);\r\n\t    this.play();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.advanceTime = function (value) {\r\n\t    if (this.isPaused === true || this.isLoaded === false) {\r\n\t        return;\r\n\t    }\r\n\t    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n\t    var _isComplete = false;\r\n\t    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n\t    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n\t    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n\t        if (!this.loop || this.playCount === this.loop) {\r\n\t            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n\t                _isComplete = true;\r\n\t                nextValue = this.totalFrames - 1;\r\n\t            }\r\n\t        } else if (nextValue >= this.totalFrames) {\r\n\t            this.playCount += 1;\r\n\t            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n\t                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n\t                this.trigger('loopComplete');\r\n\t            }\r\n\t        } else {\r\n\t            this.setCurrentRawFrameValue(nextValue);\r\n\t        }\r\n\t    } else if(nextValue < 0) {\r\n\t        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n\t            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n\t                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n\t                this.trigger('loopComplete');\r\n\t            } else {\r\n\t                _isComplete = true;\r\n\t                nextValue = 0;\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        this.setCurrentRawFrameValue(nextValue);\r\n\t    }\r\n\t    if (_isComplete) {\r\n\t        this.setCurrentRawFrameValue(nextValue);\r\n\t        this.pause();\r\n\t        this.trigger('complete');\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n\t    this.playCount = 0;\r\n\t    if(arr[1] < arr[0]){\r\n\t        if(this.frameModifier > 0){\r\n\t            if(this.playSpeed < 0){\r\n\t                this.setSpeed(-this.playSpeed);\r\n\t            } else {\r\n\t                this.setDirection(-1);\r\n\t            }\r\n\t        }\r\n\t        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n\t        this.firstFrame = arr[1];\r\n\t        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n\t    } else if(arr[1] > arr[0]){\r\n\t        if(this.frameModifier < 0){\r\n\t            if(this.playSpeed < 0){\r\n\t                this.setSpeed(-this.playSpeed);\r\n\t            } else {\r\n\t                this.setDirection(1);\r\n\t            }\r\n\t        }\r\n\t        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n\t        this.firstFrame = arr[0];\r\n\t        this.setCurrentRawFrameValue(0.001 + offset);\r\n\t    }\r\n\t    this.trigger('segmentStart');\r\n\t};\r\n\tAnimationItem.prototype.setSegment = function (init,end) {\r\n\t    var pendingFrame = -1;\r\n\t    if(this.isPaused) {\r\n\t        if (this.currentRawFrame + this.firstFrame < init) {\r\n\t            pendingFrame = init;\r\n\t        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n\t            pendingFrame = end - init;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    this.firstFrame = init;\r\n\t    this.timeCompleted = this.totalFrames = end - init;\r\n\t    if(pendingFrame !== -1) {\r\n\t        this.goToAndStop(pendingFrame,true);\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n\t    if(typeof arr[0] === 'object'){\r\n\t        var i, len = arr.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            this.segments.push(arr[i]);\r\n\t        }\r\n\t    }else{\r\n\t        this.segments.push(arr);\r\n\t    }\r\n\t    if(forceFlag){\r\n\t        this.checkSegments(0);\r\n\t    }\r\n\t    if(this.isPaused){\r\n\t        this.play();\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n\t    this.segments.length = 0;\r\n\t    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n\t    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n\t    if(forceFlag){\r\n\t        this.checkSegments(0);\r\n\t    }\r\n\t};\r\n\tAnimationItem.prototype.checkSegments = function(offset){\r\n\t    if(this.segments.length) {\r\n\t        this.adjustSegment(this.segments.shift(), offset);\r\n\t        return true;\r\n\t    }\r\n\t    return false;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.remove = function (name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    this.renderer.destroy();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.destroy = function (name) {\r\n\t    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n\t        return;\r\n\t    }\r\n\t    this.renderer.destroy();\r\n\t    this.trigger('destroy');\r\n\t    this._cbs = null;\r\n\t    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n\t    this.renderer = null;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n\t    this.currentRawFrame = value;\r\n\t    this.gotoFrame();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.setSpeed = function (val) {\r\n\t    this.playSpeed = val;\r\n\t    this.updaFrameModifier();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.setDirection = function (val) {\r\n\t    this.playDirection = val < 0 ? -1 : 1;\r\n\t    this.updaFrameModifier();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.updaFrameModifier = function () {\r\n\t    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.getPath = function () {\r\n\t    return this.path;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n\t    var path = '';\r\n\t    if(this.assetsPath){\r\n\t        var imagePath = assetData.p;\r\n\t        if(imagePath.indexOf('images/') !== -1){\r\n\t            imagePath = imagePath.split('/')[1];\r\n\t        }\r\n\t        path = this.assetsPath + imagePath;\r\n\t    } else {\r\n\t        path = this.path;\r\n\t        path += assetData.u ? assetData.u : '';\r\n\t        path += assetData.p;\r\n\t    }\r\n\t    return path;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.getAssetData = function (id) {\r\n\t    var i = 0, len = this.assets.length;\r\n\t    while (i < len) {\r\n\t        if(id == this.assets[i].id){\r\n\t            return this.assets[i];\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.hide = function () {\r\n\t    this.renderer.hide();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.show = function () {\r\n\t    this.renderer.show();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.getAssets = function () {\r\n\t    return this.assets;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.trigger = function(name){\r\n\t    if(this._cbs && this._cbs[name]){\r\n\t        switch(name){\r\n\t            case 'enterFrame':\r\n\t                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n\t                break;\r\n\t            case 'loopComplete':\r\n\t                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n\t                break;\r\n\t            case 'complete':\r\n\t                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n\t                break;\r\n\t            case 'segmentStart':\r\n\t                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n\t                break;\r\n\t            case 'destroy':\r\n\t                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n\t                break;\r\n\t            default:\r\n\t                this.triggerEvent(name);\r\n\t        }\r\n\t    }\r\n\t    if(name === 'enterFrame' && this.onEnterFrame){\r\n\t        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n\t    }\r\n\t    if(name === 'loopComplete' && this.onLoopComplete){\r\n\t        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n\t    }\r\n\t    if(name === 'complete' && this.onComplete){\r\n\t        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n\t    }\r\n\t    if(name === 'segmentStart' && this.onSegmentStart){\r\n\t        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n\t    }\r\n\t    if(name === 'destroy' && this.onDestroy){\r\n\t        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n\t    }\r\n\t};\n\tfunction EffectsManager(){}\n\tfunction CanvasRenderer(animationItem, config){\r\n\t    this.animationItem = animationItem;\r\n\t    this.renderConfig = {\r\n\t        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n\t        context: (config && config.context) || null,\r\n\t        progressiveLoad: (config && config.progressiveLoad) || false,\r\n\t        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n\t        className: (config && config.className) || ''\r\n\t    };\r\n\t    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n\t    if (this.animationItem.wrapper) {\r\n\t        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n\t    }\r\n\t    this.renderedFrame = -1;\r\n\t    this.globalData = {\r\n\t        frameNum: -1,\r\n\t        _mdf: false,\r\n\t        renderConfig: this.renderConfig\r\n\t    };\r\n\t    var i, len = 15;\r\n\t    this.contextData = new CVContextData();\r\n\t    this.elements = [];\r\n\t    this.pendingElements = [];\r\n\t    this.transformMat = new Matrix();\r\n\t    this.completeLayers = false;\r\n\t}\r\n\textendPrototype([BaseRenderer],CanvasRenderer);\r\n\t\r\n\tCanvasRenderer.prototype.createShape = function (data) {\r\n\t    return new CVShapeElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.createText = function (data) {\r\n\t    return new CVTextElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.createImage = function (data) {\r\n\t    return new CVImageElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.createComp = function (data) {\r\n\t    return new CVCompElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.createSolid = function (data) {\r\n\t    return new CVSolidElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\t\r\n\tCanvasRenderer.prototype.ctxTransform = function(props){\r\n\t    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n\t        return;\r\n\t    }\r\n\t    if(!this.renderConfig.clearCanvas){\r\n\t        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n\t        return;\r\n\t    }\r\n\t    this.transformMat.cloneFromProps(props);\r\n\t    var cProps = this.contextData.cTr.props;\r\n\t    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n\t    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n\t    var trProps = this.contextData.cTr.props;\r\n\t    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.ctxOpacity = function(op){\r\n\t    /*if(op === 1){\r\n\t        return;\r\n\t    }*/\r\n\t    if(!this.renderConfig.clearCanvas){\r\n\t        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n\t        return;\r\n\t    }\r\n\t    this.contextData.cO *= op < 0 ? 0 : op;\r\n\t    this.canvasContext.globalAlpha = this.contextData.cO;\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.reset = function(){\r\n\t    if(!this.renderConfig.clearCanvas){\r\n\t        this.canvasContext.restore();\r\n\t        return;\r\n\t    }\r\n\t    this.contextData.reset();\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.save = function(actionFlag){\r\n\t    if(!this.renderConfig.clearCanvas){\r\n\t        this.canvasContext.save();\r\n\t        return;\r\n\t    }\r\n\t    if(actionFlag){\r\n\t        this.canvasContext.save();\r\n\t    }\r\n\t    var props = this.contextData.cTr.props;\r\n\t    if(this.contextData._length <= this.contextData.cArrPos) {\r\n\t        this.contextData.duplicate();\r\n\t    }\r\n\t    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n\t    for (i = 0; i < 16; i += 1) {\r\n\t        arr[i] = props[i];\r\n\t    }\r\n\t    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n\t    this.contextData.cArrPos += 1;\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.restore = function(actionFlag){\r\n\t    if(!this.renderConfig.clearCanvas){\r\n\t        this.canvasContext.restore();\r\n\t        return;\r\n\t    }\r\n\t    if(actionFlag){\r\n\t        this.canvasContext.restore();\r\n\t        this.globalData.blendMode = 'source-over';\r\n\t    }\r\n\t    this.contextData.cArrPos -= 1;\r\n\t    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n\t    var i,arr = this.contextData.cTr.props;\r\n\t    for(i=0;i<16;i+=1){\r\n\t        arr[i] = popped[i];\r\n\t    }\r\n\t    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n\t    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n\t    this.contextData.cO = popped;\r\n\t    this.canvasContext.globalAlpha = popped;\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.configAnimation = function(animData){\r\n\t    if(this.animationItem.wrapper){\r\n\t        this.animationItem.container = createTag('canvas');\r\n\t        this.animationItem.container.style.width = '100%';\r\n\t        this.animationItem.container.style.height = '100%';\r\n\t        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n\t        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n\t        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n\t        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n\t        this.canvasContext = this.animationItem.container.getContext('2d');\r\n\t        if(this.renderConfig.className) {\r\n\t            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n\t        }\r\n\t    }else{\r\n\t        this.canvasContext = this.renderConfig.context;\r\n\t    }\r\n\t    this.data = animData;\r\n\t    this.globalData.canvasContext = this.canvasContext;\r\n\t    this.globalData.renderer = this;\r\n\t    this.globalData.isDashed = false;\r\n\t    this.globalData.totalFrames = Math.floor(animData.tf);\r\n\t    this.globalData.compWidth = animData.w;\r\n\t    this.globalData.compHeight = animData.h;\r\n\t    this.globalData.frameRate = animData.fr;\r\n\t    this.globalData.frameId = 0;\r\n\t    this.globalData.compSize = {\r\n\t        w: animData.w,\r\n\t        h: animData.h\r\n\t    };\r\n\t    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n\t    this.layers = animData.layers;\r\n\t    this.transformCanvas = {\r\n\t        w: animData.w,\r\n\t        h:animData.h,\r\n\t        sx:0,\r\n\t        sy:0,\r\n\t        tx:0,\r\n\t        ty:0\r\n\t    };\r\n\t    this.globalData.fontManager = new FontManager();\r\n\t    this.globalData.fontManager.addChars(animData.chars);\r\n\t    this.globalData.fontManager.addFonts(animData.fonts,document.body);\r\n\t    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n\t    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n\t    this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem);\r\n\t    this.globalData.addPendingElement = this.animationItem.addPendingElement.bind(this.animationItem);\r\n\t    this.globalData.transformCanvas = this.transformCanvas;\r\n\t    this.elements = createSizedArray(animData.layers.length);\r\n\t\r\n\t    this.updateContainerSize();\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.updateContainerSize = function () {\r\n\t    this.reset();\r\n\t    var elementWidth,elementHeight;\r\n\t    if(this.animationItem.wrapper && this.animationItem.container){\r\n\t        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n\t        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n\t        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n\t        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n\t    }else{\r\n\t        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n\t        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n\t    }\r\n\t    var elementRel,animationRel;\r\n\t    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n\t        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n\t        var fillType = par[1] || 'meet';\r\n\t        var pos = par[0] || 'xMidYMid';\r\n\t        var xPos = pos.substr(0,4);\r\n\t        var yPos = pos.substr(4);\r\n\t        elementRel = elementWidth/elementHeight;\r\n\t        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n\t        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n\t            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n\t            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n\t        }else{\r\n\t            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n\t            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n\t        }\r\n\t\r\n\t        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n\t            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n\t        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n\t            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n\t        } else {\r\n\t            this.transformCanvas.tx = 0;\r\n\t        }\r\n\t        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n\t            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n\t        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n\t            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n\t        } else {\r\n\t            this.transformCanvas.ty = 0;\r\n\t        }\r\n\t\r\n\t    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n\t        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n\t        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n\t        this.transformCanvas.tx = 0;\r\n\t        this.transformCanvas.ty = 0;\r\n\t    }else{\r\n\t        this.transformCanvas.sx = this.renderConfig.dpr;\r\n\t        this.transformCanvas.sy = this.renderConfig.dpr;\r\n\t        this.transformCanvas.tx = 0;\r\n\t        this.transformCanvas.ty = 0;\r\n\t    }\r\n\t    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n\t    /*var i, len = this.elements.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n\t            this.elements[i].resize(this.globalData.transformCanvas);\r\n\t        }\r\n\t    }*/\r\n\t    this.ctxTransform(this.transformCanvas.props);\r\n\t    this.canvasContext.beginPath();\r\n\t    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n\t    this.canvasContext.closePath();\r\n\t    this.canvasContext.clip();\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.destroy = function () {\r\n\t    if(this.renderConfig.clearCanvas) {\r\n\t        this.animationItem.wrapper.innerHTML = '';\r\n\t    }\r\n\t    var i, len = this.layers ? this.layers.length : 0;\r\n\t    for (i = len - 1; i >= 0; i-=1) {\r\n\t        if(this.elements[i]) {\r\n\t            this.elements[i].destroy();\r\n\t        }\r\n\t    }\r\n\t    this.elements.length = 0;\r\n\t    this.globalData.canvasContext = null;\r\n\t    this.animationItem.container = null;\r\n\t    this.destroyed = true;\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.renderFrame = function(num){\r\n\t    if((this.renderedFrame == num && this.renderConfig.clearCanvas === true) || this.destroyed || num === -1){\r\n\t        return;\r\n\t    }\r\n\t    this.renderedFrame = num;\r\n\t    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n\t    this.globalData.frameId += 1;\r\n\t    this.globalData._mdf = false;\r\n\t    this.globalData.projectInterface.currentFrame = num;\r\n\t\r\n\t     // console.log('--------');\r\n\t     // console.log('NEW: ',num);\r\n\t    var i, len = this.layers.length;\r\n\t    if(!this.completeLayers){\r\n\t        this.checkLayers(num);\r\n\t    }\r\n\t\r\n\t    for (i = 0; i < len; i++) {\r\n\t        if(this.completeLayers || this.elements[i]){\r\n\t            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n\t        }\r\n\t    }\r\n\t    if(this.globalData._mdf) {\r\n\t        if(this.renderConfig.clearCanvas === true){\r\n\t            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n\t        }else{\r\n\t            this.save();\r\n\t        }\r\n\t        for (i = len - 1; i >= 0; i-=1) {\r\n\t            if(this.completeLayers || this.elements[i]){\r\n\t                this.elements[i].renderFrame();\r\n\t            }\r\n\t        }\r\n\t        if(this.renderConfig.clearCanvas !== true){\r\n\t            this.restore();\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.buildItem = function(pos){\r\n\t    var elements = this.elements;\r\n\t    if(elements[pos] || this.layers[pos].ty == 99){\r\n\t        return;\r\n\t    }\r\n\t    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n\t    elements[pos] = element;\r\n\t    element.initExpressions();\r\n\t    /*if(this.layers[pos].ty === 0){\r\n\t        element.resize(this.globalData.transformCanvas);\r\n\t    }*/\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.checkPendingElements  = function(){\r\n\t    while(this.pendingElements.length){\r\n\t        var element = this.pendingElements.pop();\r\n\t        element.checkParenting();\r\n\t    }\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.hide = function(){\r\n\t    this.animationItem.container.style.display = 'none';\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.show = function(){\r\n\t    this.animationItem.container.style.display = 'block';\r\n\t};\r\n\t\n\tfunction HybridRenderer(animationItem, config){\r\n\t    this.animationItem = animationItem;\r\n\t    this.layers = null;\r\n\t    this.renderedFrame = -1;\r\n\t    this.renderConfig = {\r\n\t        className: (config && config.className) || '',\r\n\t        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n\t    };\r\n\t    this.globalData = {\r\n\t        _mdf: false,\r\n\t        frameNum: -1,\r\n\t        renderConfig: this.renderConfig\r\n\t    };\r\n\t    this.pendingElements = [];\r\n\t    this.elements = [];\r\n\t    this.threeDElements = [];\r\n\t    this.destroyed = false;\r\n\t    this.camera = null;\r\n\t    this.supports3d = true;\r\n\t\r\n\t}\r\n\t\r\n\textendPrototype([BaseRenderer],HybridRenderer);\r\n\t\r\n\tHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\t\r\n\tHybridRenderer.prototype.checkPendingElements  = function(){\r\n\t    while(this.pendingElements.length){\r\n\t        var element = this.pendingElements.pop();\r\n\t        element.checkParenting();\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n\t    var newDOMElement = element.getBaseElement();\r\n\t    if(!newDOMElement){\r\n\t        return;\r\n\t    }\r\n\t    var layer = this.layers[pos];\r\n\t    if(!layer.ddd || !this.supports3d){\r\n\t        var i = 0;\r\n\t        var nextDOMElement, nextLayer, tmpDOMElement;\r\n\t        while(i<pos){\r\n\t            if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n\t                nextLayer = this.elements[i];\r\n\t                tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n\t                nextDOMElement = tmpDOMElement || nextDOMElement;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(nextDOMElement){\r\n\t            if(!layer.ddd || !this.supports3d){\r\n\t                this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n\t            }\r\n\t        } else {\r\n\t            if(!layer.ddd || !this.supports3d){\r\n\t                this.layerElement.appendChild(newDOMElement);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        this.addTo3dContainer(newDOMElement,pos);\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createShape = function (data) {\r\n\t    if(!this.supports3d){\r\n\t        return new SVGShapeElement(data, this.globalData, this);\r\n\t    }\r\n\t    return new HShapeElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createText = function (data) {\r\n\t    if(!this.supports3d){\r\n\t        return new SVGTextElement(data, this.globalData, this);\r\n\t    }\r\n\t    return new HTextElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createCamera = function (data) {\r\n\t    this.camera = new HCameraElement(data, this.globalData, this);\r\n\t    return this.camera;\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createImage = function (data) {\r\n\t    if(!this.supports3d){\r\n\t        return new IImageElement(data, this.globalData, this);\r\n\t    }\r\n\t    return new HImageElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createComp = function (data) {\r\n\t    if(!this.supports3d){\r\n\t        return new SVGCompElement(data, this.globalData, this);\r\n\t    }\r\n\t    return new HCompElement(data, this.globalData, this);\r\n\t\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createSolid = function (data) {\r\n\t    if(!this.supports3d){\r\n\t        return new ISolidElement(data, this.globalData, this);\r\n\t    }\r\n\t    return new HSolidElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\t\r\n\tHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n\t    var i = 0, len = this.threeDElements.length;\r\n\t    while(i<len) {\r\n\t        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n\t            return this.threeDElements[i].perspectiveElem;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createThreeDContainer = function(pos){\r\n\t    var perspectiveElem = createTag('div');\r\n\t    styleDiv(perspectiveElem);\r\n\t    perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n\t    perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n\t    perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n\t    var container = createTag('div');\r\n\t    styleDiv(container);\r\n\t    container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n\t    perspectiveElem.appendChild(container);\r\n\t    this.resizerElem.appendChild(perspectiveElem);\r\n\t    var threeDContainerData = {\r\n\t        container:container,\r\n\t        perspectiveElem:perspectiveElem,\r\n\t        startPos: pos,\r\n\t        endPos: pos\r\n\t    };\r\n\t    this.threeDElements.push(threeDContainerData);\r\n\t    return threeDContainerData;\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.build3dContainers = function(){\r\n\t    var i, len = this.layers.length;\r\n\t    var lastThreeDContainerData;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n\t            if(!lastThreeDContainerData){\r\n\t                lastThreeDContainerData = this.createThreeDContainer(i);\r\n\t            }\r\n\t            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n\t        } else {\r\n\t            lastThreeDContainerData = null;\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n\t    var i = 0, len = this.threeDElements.length;\r\n\t    while(i<len){\r\n\t        if(pos <= this.threeDElements[i].endPos){\r\n\t            var j = this.threeDElements[i].startPos;\r\n\t            var nextElement;\r\n\t            while(j<pos){\r\n\t                if(this.elements[j] && this.elements[j].getBaseElement){\r\n\t                    nextElement = this.elements[j].getBaseElement();\r\n\t                }\r\n\t                j += 1;\r\n\t            }\r\n\t            if(nextElement){\r\n\t                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n\t            } else {\r\n\t                this.threeDElements[i].container.appendChild(elem);\r\n\t            }\r\n\t            break;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.configAnimation = function(animData){\r\n\t    var resizerElem = createTag('div');\r\n\t    var wrapper = this.animationItem.wrapper;\r\n\t    resizerElem.style.width = animData.w+'px';\r\n\t    resizerElem.style.height = animData.h+'px';\r\n\t    this.resizerElem = resizerElem;\r\n\t    styleDiv(resizerElem);\r\n\t    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n\t    if(this.renderConfig.className) {\r\n\t      resizerElem.setAttribute('class', this.renderConfig.className);\r\n\t    }\r\n\t    wrapper.appendChild(resizerElem);\r\n\t\r\n\t    resizerElem.style.overflow = 'hidden';\r\n\t    var svg = createNS('svg');\r\n\t    svg.setAttribute('width','1');\r\n\t    svg.setAttribute('height','1');\r\n\t    styleDiv(svg);\r\n\t    this.resizerElem.appendChild(svg);\r\n\t    var defs = createNS('defs');\r\n\t    svg.appendChild(defs);\r\n\t    this.globalData.defs = defs;\r\n\t    this.data = animData;\r\n\t    //Mask animation\r\n\t    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n\t    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n\t    this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem);\r\n\t    this.globalData.frameId = 0;\r\n\t    this.globalData.compSize = {\r\n\t        w: animData.w,\r\n\t        h: animData.h\r\n\t    };\r\n\t    this.globalData.frameRate = animData.fr;\r\n\t    this.layers = animData.layers;\r\n\t    this.globalData.fontManager = new FontManager();\r\n\t    this.globalData.fontManager.addChars(animData.chars);\r\n\t    this.globalData.fontManager.addFonts(animData.fonts,svg);\r\n\t    this.layerElement = this.resizerElem;\r\n\t    this.build3dContainers();\r\n\t    this.updateContainerSize();\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.destroy = function () {\r\n\t    this.animationItem.wrapper.innerHTML = '';\r\n\t    this.animationItem.container = null;\r\n\t    this.globalData.defs = null;\r\n\t    var i, len = this.layers ? this.layers.length : 0;\r\n\t    for (i = 0; i < len; i++) {\r\n\t        this.elements[i].destroy();\r\n\t    }\r\n\t    this.elements.length = 0;\r\n\t    this.destroyed = true;\r\n\t    this.animationItem = null;\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.updateContainerSize = function () {\r\n\t    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n\t    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n\t    var elementRel = elementWidth/elementHeight;\r\n\t    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n\t    var sx,sy,tx,ty;\r\n\t    if(animationRel>elementRel){\r\n\t        sx = elementWidth/(this.globalData.compSize.w);\r\n\t        sy = elementWidth/(this.globalData.compSize.w);\r\n\t        tx = 0;\r\n\t        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n\t    }else{\r\n\t        sx = elementHeight/(this.globalData.compSize.h);\r\n\t        sy = elementHeight/(this.globalData.compSize.h);\r\n\t        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n\t        ty = 0;\r\n\t    }\r\n\t    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\t\r\n\tHybridRenderer.prototype.hide = function(){\r\n\t    this.resizerElem.style.display = 'none';\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.show = function(){\r\n\t    this.resizerElem.style.display = 'block';\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.initItems = function(){\r\n\t    this.buildAllItems();\r\n\t    if(this.camera){\r\n\t        this.camera.setup();\r\n\t    } else {\r\n\t        var cWidth = this.globalData.compSize.w;\r\n\t        var cHeight = this.globalData.compSize.h;\r\n\t        var i, len = this.threeDElements.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n\t    var i, len = assets.length;\r\n\t    var floatingContainer = createTag('div');\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(assets[i].xt){\r\n\t            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n\t            comp.initExpressions();\r\n\t            this.globalData.projectInterface.registerComposition(comp);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\n\tfunction CVContextData() {\r\n\t\tthis.saved = [];\r\n\t    this.cArrPos = 0;\r\n\t    this.cTr = new Matrix();\r\n\t    this.cO = 1;\r\n\t    var i, len = 15;\r\n\t    this.savedOp = createTypedArray('float32', len);\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.saved[i] = createTypedArray('float32', 16);\r\n\t    }\r\n\t    this._length = len;\r\n\t}\r\n\t\r\n\tCVContextData.prototype.duplicate = function() {\r\n\t\tvar newLength = this._length * 2;\r\n\t\tvar currentSavedOp = this.savedOp;\r\n\t    this.savedOp = createTypedArray('float32', newLength);\r\n\t    this.savedOp.set(currentSavedOp);\r\n\t    var i = 0;\r\n\t    for(i = this._length; i < newLength; i += 1) {\r\n\t        this.saved[i] = createTypedArray('float32', 16);\r\n\t    }\r\n\t    this._length = newLength;\r\n\t};\r\n\t\r\n\tCVContextData.prototype.reset = function() {\r\n\t\tthis.cArrPos = 0;\r\n\t\tthis.cTr.reset();\r\n\t    this.cO = 1;\r\n\t};\n\tfunction CVBaseElement(){\r\n\t}\r\n\t\r\n\tCVBaseElement.prototype = {\r\n\t    createElements: function(){},\r\n\t    initRendererElement: function(){},\r\n\t    createContainerElements: function(){\r\n\t        this.canvasContext = this.globalData.canvasContext;\r\n\t        this.renderableEffectsManager = new CVEffects(this);\r\n\t    },\r\n\t    createContent: function(){},\r\n\t    setBlendMode: function(){\r\n\t        var globalData = this.globalData;\r\n\t        if(globalData.blendMode !== this.data.bm) {\r\n\t            globalData.blendMode = this.data.bm;\r\n\t            var blendModeValue = this.getBlendMode();\r\n\t            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n\t        }\r\n\t    },\r\n\t    addMasks: function(){\r\n\t        this.maskManager = new CVMaskElement(this.data, this);\r\n\t    },\r\n\t    hideElement: function(){\r\n\t        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n\t            this.hidden = true;\r\n\t        }\r\n\t    },\r\n\t    showElement: function(){\r\n\t        if (this.isInRange && !this.isTransparent){\r\n\t            this.hidden = false;\r\n\t            this._isFirstFrame = true;\r\n\t            this.maskManager._isFirstFrame = true;\r\n\t        }\r\n\t    },\r\n\t    renderFrame: function() {\r\n\t        if (this.hidden) {\r\n\t            return;\r\n\t        }\r\n\t        this.renderTransform();\r\n\t        this.renderRenderable();\r\n\t        this.setBlendMode();\r\n\t        this.globalData.renderer.save();\r\n\t        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n\t        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n\t        this.renderInnerContent();\r\n\t        this.globalData.renderer.restore();\r\n\t        if(this.maskManager.hasMasks) {\r\n\t            this.globalData.renderer.restore(true);\r\n\t        }\r\n\t        if (this._isFirstFrame) {\r\n\t            this._isFirstFrame = false;\r\n\t        }\r\n\t    },\r\n\t    destroy: function(){\r\n\t        this.canvasContext = null;\r\n\t        this.data = null;\r\n\t        this.globalData = null;\r\n\t        this.maskManager.destroy();\r\n\t    },\r\n\t    mHelper: new Matrix()\r\n\t};\r\n\tCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\n\tCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\t\n\tfunction CVImageElement(data, globalData, comp){\r\n\t    this.failed = false;\r\n\t    this.img = new Image();\r\n\t    this.assetData = globalData.getAssetData(data.refId);\r\n\t    this.initElement(data,globalData,comp);\r\n\t    this.globalData.addPendingElement();\r\n\t}\r\n\textendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\t\r\n\tCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\n\tCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\t\r\n\tCVImageElement.prototype.imageLoaded = function() {\r\n\t    this.globalData.elementLoaded();\r\n\t    if(this.assetData.w !== this.img.width || this.assetData.h !== this.img.height){\r\n\t        var canvas = createTag('canvas');\r\n\t        canvas.width = this.assetData.w;\r\n\t        canvas.height = this.assetData.h;\r\n\t        var ctx = canvas.getContext('2d');\r\n\t\r\n\t        var imgW = this.img.width;\r\n\t        var imgH = this.img.height;\r\n\t        var imgRel = imgW / imgH;\r\n\t        var canvasRel = this.assetData.w/this.assetData.h;\r\n\t        var widthCrop, heightCrop;\r\n\t        if(imgRel>canvasRel){\r\n\t            heightCrop = imgH;\r\n\t            widthCrop = heightCrop*canvasRel;\r\n\t        } else {\r\n\t            widthCrop = imgW;\r\n\t            heightCrop = widthCrop/canvasRel;\r\n\t        }\r\n\t        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n\t        this.img = canvas;\r\n\t    }\r\n\t};\r\n\t\r\n\tCVImageElement.prototype.imageFailed = function() {\r\n\t    this.failed = true;\r\n\t    this.globalData.elementLoaded();\r\n\t};\r\n\t\r\n\tCVImageElement.prototype.createContent = function(){\r\n\t    var img = this.img;\r\n\t    img.addEventListener('load', this.imageLoaded.bind(this), false);\r\n\t    img.addEventListener('error', this.imageFailed.bind(this), false);\r\n\t    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\t    img.src = assetPath;\r\n\t\r\n\t};\r\n\t\r\n\tCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n\t    if (this.failed) {\r\n\t        return;\r\n\t    }\r\n\t    this.canvasContext.drawImage(this.img, 0, 0);\r\n\t};\r\n\t\r\n\tCVImageElement.prototype.destroy = function(){\r\n\t    this.img = null;\r\n\t};\n\tfunction CVCompElement(data, globalData, comp) {\r\n\t    this.completeLayers = false;\r\n\t    this.layers = data.layers;\r\n\t    this.pendingElements = [];\r\n\t    this.elements = createSizedArray(this.layers.length);\r\n\t    this.initElement(data, globalData, comp);\r\n\t    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n\t}\r\n\t\r\n\textendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\t\r\n\tCVCompElement.prototype.renderInnerContent = function() {\r\n\t    var i,len = this.layers.length;\r\n\t    for( i = len - 1; i >= 0; i -= 1 ){\r\n\t        if(this.completeLayers || this.elements[i]){\r\n\t            this.elements[i].renderFrame();\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tCVCompElement.prototype.destroy = function(){\r\n\t    var i,len = this.layers.length;\r\n\t    for( i = len - 1; i >= 0; i -= 1 ){\r\n\t        if(this.elements[i]) {\r\n\t            this.elements[i].destroy();\r\n\t        }\r\n\t    }\r\n\t    this.layers = null;\r\n\t    this.elements = null;\r\n\t};\n\t\r\n\tfunction CVMaskElement(data,element){\r\n\t    this.data = data;\r\n\t    this.element = element;\r\n\t    this.masksProperties = this.data.masksProperties || [];\r\n\t    this.viewData = createSizedArray(this.masksProperties.length);\r\n\t    var i, len = this.masksProperties.length, hasMasks = false;\r\n\t    for (i = 0; i < len; i++) {\r\n\t        if(this.masksProperties[i].mode !== 'n'){\r\n\t            hasMasks = true;\r\n\t        }\r\n\t        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n\t    }\r\n\t    this.hasMasks = hasMasks;\r\n\t}\r\n\t\r\n\tCVMaskElement.prototype.renderFrame = function (transform) {\r\n\t    if(!this.hasMasks){\r\n\t        return;\r\n\t    }\r\n\t    var ctx = this.element.canvasContext;\r\n\t    var i, len = this.masksProperties.length;\r\n\t    var pt,pts,data;\r\n\t    ctx.beginPath();\r\n\t    for (i = 0; i < len; i++) {\r\n\t        if(this.masksProperties[i].mode !== 'n'){\r\n\t            if (this.masksProperties[i].inv) {\r\n\t                ctx.moveTo(0, 0);\r\n\t                ctx.lineTo(this.element.globalData.compWidth, 0);\r\n\t                ctx.lineTo(this.element.globalData.compWidth, this.element.globalData.compHeight);\r\n\t                ctx.lineTo(0, this.element.globalData.compHeight);\r\n\t                ctx.lineTo(0, 0);\r\n\t            }\r\n\t            data = this.viewData[i].v;\r\n\t            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n\t            ctx.moveTo(pt[0], pt[1]);\r\n\t            var j, jLen = data._length;\r\n\t            for (j = 1; j < jLen; j++) {\r\n\t                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n\t                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n\t            }\r\n\t            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n\t            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n\t        }\r\n\t    }\r\n\t    this.element.globalData.renderer.save(true);\r\n\t    ctx.clip();\r\n\t};\r\n\t\r\n\tCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\t\r\n\tCVMaskElement.prototype.destroy = function(){\r\n\t    this.element = null;\r\n\t};\n\tfunction CVShapeElement(data, globalData, comp) {\r\n\t    this.shapes = [];\r\n\t    this.shapesData = data.shapes;\r\n\t    this.stylesList = [];\r\n\t    this.itemsData = [];\r\n\t    this.prevViewData = [];\r\n\t    this.shapeModifiers = [];\r\n\t    this.processedElements = [];\r\n\t    this.initElement(data, globalData, comp);\r\n\t}\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\t\r\n\tCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\t\r\n\tCVShapeElement.prototype.transformHelper = {opacity:1,mat:new Matrix(),_matMdf:false,_opMdf:false};\r\n\t\r\n\tCVShapeElement.prototype.dashResetter = [];\r\n\t\r\n\tCVShapeElement.prototype.createContent = function(){\r\n\t    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true);\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.createStyleElement = function(data){\r\n\t    var styleElem = {\r\n\t        data: data,\r\n\t        type: data.ty,\r\n\t        elements: []\r\n\t    };\r\n\t    var elementData = {};\r\n\t    if(data.ty == 'fl' || data.ty == 'st'){\r\n\t        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n\t        if(!elementData.c.k){\r\n\t            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n\t        }\r\n\t    }\r\n\t    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n\t    if(data.ty == 'st') {\r\n\t        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n\t        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n\t        if(data.lj == 1) {\r\n\t            styleElem.ml = data.ml;\r\n\t        }\r\n\t        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n\t        if(!elementData.w.k){\r\n\t            styleElem.wi = elementData.w.v;\r\n\t        }\r\n\t        if(data.d){\r\n\t            var d = new DashProperty(this,data.d,'canvas');\r\n\t            elementData.d = d;\r\n\t            if(!elementData.d.k){\r\n\t                styleElem.da = elementData.d.dashArray;\r\n\t                styleElem.do = elementData.d.dashoffset[0];\r\n\t            }\r\n\t        }\r\n\t\r\n\t    } else {\r\n\t\r\n\t        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n\t    }\r\n\t    this.stylesList.push(styleElem);\r\n\t    elementData.style = styleElem;\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.createGroupElement = function(data) {\r\n\t    var elementData = {\r\n\t        it: [],\r\n\t        prevViewData: []\r\n\t    };\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.createTransformElement = function(data) {\r\n\t    var elementData = {\r\n\t        transform : {\r\n\t            mat: new Matrix(),\r\n\t            opacity: 1,\r\n\t            _matMdf:false,\r\n\t            _opMdf:false,\r\n\t            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n\t            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n\t        },\r\n\t        elements: []\r\n\t    };\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.createShapeElement = function(data) {\r\n\t    var elementData = {\r\n\t        nodes:[],\r\n\t        trNodes:[],\r\n\t        tr:[0,0,0,0,0,0]\r\n\t    };\r\n\t    var ty = 4;\r\n\t    if(data.ty == 'rc'){\r\n\t        ty = 5;\r\n\t    }else if(data.ty == 'el'){\r\n\t        ty = 6;\r\n\t    }else if(data.ty == 'sr'){\r\n\t        ty = 7;\r\n\t    }\r\n\t    elementData.sh = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n\t    this.shapes.push(elementData.sh);\r\n\t    this.addShapeToModifiers(elementData);\r\n\t    var j, jLen = this.stylesList.length;\r\n\t    var hasStrokes = false, hasFills = false;\r\n\t    for(j=0;j<jLen;j+=1){\r\n\t        if(!this.stylesList[j].closed){\r\n\t            this.stylesList[j].elements.push(elementData);\r\n\t            if(this.stylesList[j].type === 'st'){\r\n\t                hasStrokes = true;\r\n\t            }else{\r\n\t                hasFills = true;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    elementData.st = hasStrokes;\r\n\t    elementData.fl = hasFills;\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.reloadShapes = function(){\r\n\t    this._isFirstFrame = true;\r\n\t    var i, len = this.itemsData.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.prevViewData[i] = this.itemsData[i];\r\n\t    }\r\n\t    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true);\r\n\t    len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t    }\r\n\t    this.renderModifiers();\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, render){\r\n\t    var i, len = arr.length - 1;\r\n\t    var j, jLen;\r\n\t    var ownArrays = [], ownModifiers = [], processedPos, modifier;\r\n\t    for(i=len;i>=0;i-=1){\r\n\t        processedPos = this.searchProcessedElement(arr[i]);\r\n\t        if(!processedPos){\r\n\t            arr[i]._render = render;\r\n\t        } else {\r\n\t            itemsData[i] = prevViewData[processedPos - 1];\r\n\t        }\r\n\t        if(arr[i].ty == 'fl' || arr[i].ty == 'st'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createStyleElement(arr[i]);\r\n\t            } else {\r\n\t                itemsData[i].style.closed = false;\r\n\t            }\r\n\t            \r\n\t            ownArrays.push(itemsData[i].style);\r\n\t        }else if(arr[i].ty == 'gr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createGroupElement(arr[i]);\r\n\t            } else {\r\n\t                jLen = itemsData[i].it.length;\r\n\t                for(j=0;j<jLen;j+=1){\r\n\t                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n\t                }\r\n\t            }\r\n\t            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, render);\r\n\t        }else if(arr[i].ty == 'tr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createTransformElement(arr[i]);\r\n\t            }\r\n\t        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createShapeElement(arr[i]);\r\n\t            }\r\n\t            \r\n\t        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n\t            if(!processedPos){\r\n\t                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n\t                modifier.init(this,arr[i]);\r\n\t                itemsData[i] = modifier;\r\n\t                this.shapeModifiers.push(modifier);\r\n\t            } else {\r\n\t                modifier = itemsData[i];\r\n\t                modifier.closed = false;\r\n\t            }\r\n\t            ownModifiers.push(modifier);\r\n\t        } else if(arr[i].ty == 'rp'){\r\n\t            if(!processedPos){\r\n\t                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n\t                itemsData[i] = modifier;\r\n\t                modifier.init(this,arr,i,itemsData);\r\n\t                this.shapeModifiers.push(modifier);\r\n\t                render = false;\r\n\t            }else{\r\n\t                modifier = itemsData[i];\r\n\t                modifier.closed = true;\r\n\t            }\r\n\t            ownModifiers.push(modifier);\r\n\t        }\r\n\t        this.addProcessedElement(arr[i], i + 1);\r\n\t    }\r\n\t    len = ownArrays.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        ownArrays[i].closed = true;\r\n\t    }\r\n\t    len = ownModifiers.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        ownModifiers[i].closed = true;\r\n\t    }\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.renderInnerContent = function() {\r\n\t\r\n\t    this.transformHelper.mat.reset();\r\n\t    this.transformHelper.opacity = 1;\r\n\t    this.transformHelper._matMdf = false;\r\n\t    this.transformHelper._opMdf = false;\r\n\t    this.renderModifiers();\r\n\t    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n\t    var props, groupMatrix;\r\n\t    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n\t        groupTransform.opacity = parentTransform.opacity;\r\n\t        groupTransform.opacity *= groupTransform.op.v;\r\n\t        groupTransform._opMdf = true;\r\n\t    }\r\n\t    if(parentTransform._matMdf || groupTransform.mProps._mdf || this._isFirstFrame) {\r\n\t        groupMatrix = groupTransform.mat;\r\n\t        groupMatrix.cloneFromProps(groupTransform.mProps.v.props);\r\n\t        groupTransform._matMdf = true;\r\n\t        props = parentTransform.mat.props;\r\n\t        groupMatrix.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t    }\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.drawLayer = function() {\r\n\t    var i, len = this.stylesList.length;\r\n\t    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        currentStyle = this.stylesList[i];\r\n\t        type = currentStyle.type;\r\n\t        if((type === 'st' && currentStyle.wi === 0) || !currentStyle.data._render || currentStyle.coOp === 0){\r\n\t            continue;\r\n\t        }\r\n\t        renderer.save();\r\n\t        elems = currentStyle.elements;\r\n\t        if(type === 'st'){\r\n\t            ctx.strokeStyle = currentStyle.co;\r\n\t            ctx.lineWidth = currentStyle.wi;\r\n\t            ctx.lineCap = currentStyle.lc;\r\n\t            ctx.lineJoin = currentStyle.lj;\r\n\t            ctx.miterLimit = currentStyle.ml || 0;\r\n\t        }else{\r\n\t            ctx.fillStyle = currentStyle.co;\r\n\t        }\r\n\t        renderer.ctxOpacity(currentStyle.coOp);\r\n\t        if(type !== 'st'){\r\n\t            ctx.beginPath();\r\n\t        }\r\n\t        jLen = elems.length;\r\n\t        for(j=0;j<jLen;j+=1){\r\n\t            if(type === 'st'){\r\n\t                ctx.beginPath();\r\n\t                if(currentStyle.da){\r\n\t                    ctx.setLineDash(currentStyle.da);\r\n\t                    ctx.lineDashOffset = currentStyle.do;\r\n\t                    this.globalData.isDashed = true;\r\n\t                }else if(this.globalData.isDashed){\r\n\t                    ctx.setLineDash(this.dashResetter);\r\n\t                    this.globalData.isDashed = false;\r\n\t                }\r\n\t            }\r\n\t            nodes = elems[j].trNodes;\r\n\t            kLen = nodes.length;\r\n\t\r\n\t            for(k=0;k<kLen;k+=1){\r\n\t                if(nodes[k].t == 'm'){\r\n\t                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n\t                }else if(nodes[k].t == 'c'){\r\n\t                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n\t                }else{\r\n\t                    ctx.closePath();\r\n\t                }\r\n\t            }\r\n\t            if(type === 'st'){\r\n\t                ctx.stroke();\r\n\t            }\r\n\t        }\r\n\t        if(type !== 'st'){\r\n\t            ctx.fill(currentStyle.r);\r\n\t        }\r\n\t        renderer.restore();\r\n\t    }\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n\t    var i, len = items.length - 1;\r\n\t    var groupTransform;\r\n\t    groupTransform = parentTransform;\r\n\t    for(i=len;i>=0;i-=1){\r\n\t        if(items[i].ty == 'tr'){\r\n\t            groupTransform = data[i].transform;\r\n\t            this.renderShapeTransform(parentTransform, groupTransform);\r\n\t        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n\t            this.renderPath(items[i],data[i],groupTransform);\r\n\t        }else if(items[i].ty == 'fl'){\r\n\t            this.renderFill(items[i],data[i],groupTransform);\r\n\t        }else if(items[i].ty == 'st'){\r\n\t            this.renderStroke(items[i],data[i],groupTransform);\r\n\t        }else if(items[i].ty == 'gr'){\r\n\t            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n\t        }else if(items[i].ty == 'tm'){\r\n\t            //\r\n\t        }\r\n\t    }\r\n\t    if(isMain){\r\n\t        this.drawLayer();\r\n\t    }\r\n\t    \r\n\t};\r\n\tCVShapeElement.prototype.renderPath = function(pathData,itemData,groupTransform){\r\n\t    var len, i, j,jLen;\r\n\t    var redraw = groupTransform._matMdf || itemData.sh._mdf || this._isFirstFrame;\r\n\t    if(redraw) {\r\n\t        var paths = itemData.sh.paths, groupTransformMat = groupTransform.mat;\r\n\t        jLen = pathData._render === false ? 0 : paths._length;\r\n\t        var pathStringTransformed = itemData.trNodes;\r\n\t        pathStringTransformed.length = 0;\r\n\t        for(j=0;j<jLen;j+=1){\r\n\t            var pathNodes = paths.shapes[j];\r\n\t            if(pathNodes && pathNodes.v){\r\n\t                len = pathNodes._length;\r\n\t                for (i = 1; i < len; i += 1) {\r\n\t                    if (i == 1) {\r\n\t                        pathStringTransformed.push({\r\n\t                            t: 'm',\r\n\t                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n\t                        });\r\n\t                    }\r\n\t                    pathStringTransformed.push({\r\n\t                        t: 'c',\r\n\t                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n\t                    });\r\n\t                }\r\n\t                if (len == 1) {\r\n\t                    pathStringTransformed.push({\r\n\t                        t: 'm',\r\n\t                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n\t                    });\r\n\t                }\r\n\t                if (pathNodes.c && len) {\r\n\t                    pathStringTransformed.push({\r\n\t                        t: 'c',\r\n\t                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n\t                    });\r\n\t                    pathStringTransformed.push({\r\n\t                        t: 'z'\r\n\t                    });\r\n\t                }\r\n\t                itemData.lStr = pathStringTransformed;\r\n\t            }\r\n\t\r\n\t        }\r\n\t\r\n\t        if (itemData.st) {\r\n\t            for (i = 0; i < 16; i += 1) {\r\n\t                itemData.tr[i] = groupTransform.mat.props[i];\r\n\t            }\r\n\t        }\r\n\t        itemData.trNodes = pathStringTransformed;\r\n\t\r\n\t    }\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\tCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n\t    var styleElem = itemData.style;\r\n\t\r\n\t    if(itemData.c._mdf || this._isFirstFrame){\r\n\t        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n\t    }\r\n\t    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n\t        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n\t    }\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if(d && (d._mdf  || this._isFirstFrame)){\r\n\t        styleElem.da = d.dashArray;\r\n\t        styleElem.do = d.dashoffset[0];\r\n\t    }\r\n\t    if(itemData.c._mdf || this._isFirstFrame){\r\n\t        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n\t    }\r\n\t    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n\t        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n\t    }\r\n\t    if(itemData.w._mdf || this._isFirstFrame){\r\n\t        styleElem.wi = itemData.w.v;\r\n\t    }\r\n\t};\r\n\t\r\n\t\r\n\tCVShapeElement.prototype.destroy = function(){\r\n\t    this.shapesData = null;\r\n\t    this.globalData = null;\r\n\t    this.canvasContext = null;\r\n\t    this.stylesList.length = 0;\r\n\t    this.itemsData.length = 0;\r\n\t};\r\n\t\r\n\t\n\tfunction CVSolidElement(data, globalData, comp) {\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\textendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\t\r\n\tCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\n\tCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\t\r\n\tCVSolidElement.prototype.renderInnerContent = function() {\r\n\t    var ctx = this.canvasContext;\r\n\t    ctx.fillStyle = this.data.sc;\r\n\t    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n\t    //\r\n\t};\n\tfunction CVTextElement(data, globalData, comp){\r\n\t    this.textSpans = [];\r\n\t    this.yOffset = 0;\r\n\t    this.fillColorAnim = false;\r\n\t    this.strokeColorAnim = false;\r\n\t    this.strokeWidthAnim = false;\r\n\t    this.stroke = false;\r\n\t    this.fill = false;\r\n\t    this.justifyOffset = 0;\r\n\t    this.currentRender = null;\r\n\t    this.renderType = 'canvas';\r\n\t    this.values = {\r\n\t        fill: 'rgba(0,0,0,0)',\r\n\t        stroke: 'rgba(0,0,0,0)',\r\n\t        sWidth: 0,\r\n\t        fValue: ''\r\n\t    };\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\textendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\t\r\n\tCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\t\r\n\tCVTextElement.prototype.buildNewText = function(){\r\n\t    var documentData = this.textProperty.currentData;\r\n\t    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\t\r\n\t    var hasFill = false;\r\n\t    if(documentData.fc) {\r\n\t        hasFill = true;\r\n\t        this.values.fill = this.buildColor(documentData.fc);\r\n\t    }else{\r\n\t        this.values.fill = 'rgba(0,0,0,0)';\r\n\t    }\r\n\t    this.fill = hasFill;\r\n\t    var hasStroke = false;\r\n\t    if(documentData.sc){\r\n\t        hasStroke = true;\r\n\t        this.values.stroke = this.buildColor(documentData.sc);\r\n\t        this.values.sWidth = documentData.sw;\r\n\t    }\r\n\t    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n\t    var i, len;\r\n\t    var letters = documentData.l;\r\n\t    var matrixHelper = this.mHelper;\r\n\t    this.stroke = hasStroke;\r\n\t    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n\t    len = documentData.finalText.length;\r\n\t    //this.tHelper.font = this.values.fValue;\r\n\t    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n\t    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n\t    var xPos = 0, yPos = 0, firstLine = true;\r\n\t    var cnt = 0;\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n\t        shapeData = charData && charData.data || {};\r\n\t        matrixHelper.reset();\r\n\t        if(singleShape && letters[i].n) {\r\n\t            xPos = -trackingOffset;\r\n\t            yPos += documentData.yOffset;\r\n\t            yPos += firstLine ? 1 : 0;\r\n\t            firstLine = false;\r\n\t        }\r\n\t\r\n\t        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n\t        jLen = shapes.length;\r\n\t        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n\t        if(singleShape){\r\n\t            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n\t        }\r\n\t        commands = createSizedArray(jLen);\r\n\t        for(j=0;j<jLen;j+=1){\r\n\t            kLen = shapes[j].ks.k.i.length;\r\n\t            pathNodes = shapes[j].ks.k;\r\n\t            pathArr = [];\r\n\t            for(k=1;k<kLen;k+=1){\r\n\t                if(k==1){\r\n\t                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n\t                }\r\n\t                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n\t            }\r\n\t            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n\t            commands[j] = pathArr;\r\n\t        }\r\n\t        if(singleShape){\r\n\t            xPos += letters[i].l;\r\n\t            xPos += trackingOffset;\r\n\t        }\r\n\t        if(this.textSpans[cnt]){\r\n\t            this.textSpans[cnt].elem = commands;\r\n\t        } else {\r\n\t            this.textSpans[cnt] = {elem: commands};\r\n\t        }\r\n\t        cnt +=1;\r\n\t    }\r\n\t};\r\n\t\r\n\tCVTextElement.prototype.renderInnerContent = function(){\r\n\t    var ctx = this.canvasContext;\r\n\t    var finalMat = this.finalTransform.mat.props;\r\n\t    ctx.font = this.values.fValue;\r\n\t    ctx.lineCap = 'butt';\r\n\t    ctx.lineJoin = 'miter';\r\n\t    ctx.miterLimit = 4;\r\n\t\r\n\t    if(!this.data.singleShape){\r\n\t        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n\t    }\r\n\t\r\n\t    var  i,len, j, jLen, k, kLen;\r\n\t    var renderedLetters = this.textAnimator.renderedLetters;\r\n\t\r\n\t    var letters = this.textProperty.currentData.l;\r\n\t\r\n\t    len = letters.length;\r\n\t    var renderedLetter;\r\n\t    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(letters[i].n){\r\n\t            continue;\r\n\t        }\r\n\t        renderedLetter = renderedLetters[i];\r\n\t        if(renderedLetter){\r\n\t            this.globalData.renderer.save();\r\n\t            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n\t            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n\t        }\r\n\t        if(this.fill){\r\n\t            if(renderedLetter && renderedLetter.fc){\r\n\t                if(lastFill !== renderedLetter.fc){\r\n\t                    lastFill = renderedLetter.fc;\r\n\t                    ctx.fillStyle = renderedLetter.fc;\r\n\t                }\r\n\t            }else if(lastFill !== this.values.fill){\r\n\t                lastFill = this.values.fill;\r\n\t                ctx.fillStyle = this.values.fill;\r\n\t            }\r\n\t            commands = this.textSpans[i].elem;\r\n\t            jLen = commands.length;\r\n\t            this.globalData.canvasContext.beginPath();\r\n\t            for(j=0;j<jLen;j+=1) {\r\n\t                pathArr = commands[j];\r\n\t                kLen = pathArr.length;\r\n\t                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n\t                for (k = 2; k < kLen; k += 6) {\r\n\t                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n\t                }\r\n\t            }\r\n\t            this.globalData.canvasContext.closePath();\r\n\t            this.globalData.canvasContext.fill();\r\n\t            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n\t        }\r\n\t        if(this.stroke){\r\n\t            if(renderedLetter && renderedLetter.sw){\r\n\t                if(lastStrokeW !== renderedLetter.sw){\r\n\t                    lastStrokeW = renderedLetter.sw;\r\n\t                    ctx.lineWidth = renderedLetter.sw;\r\n\t                }\r\n\t            }else if(lastStrokeW !== this.values.sWidth){\r\n\t                lastStrokeW = this.values.sWidth;\r\n\t                ctx.lineWidth = this.values.sWidth;\r\n\t            }\r\n\t            if(renderedLetter && renderedLetter.sc){\r\n\t                if(lastStroke !== renderedLetter.sc){\r\n\t                    lastStroke = renderedLetter.sc;\r\n\t                    ctx.strokeStyle = renderedLetter.sc;\r\n\t                }\r\n\t            }else if(lastStroke !== this.values.stroke){\r\n\t                lastStroke = this.values.stroke;\r\n\t                ctx.strokeStyle = this.values.stroke;\r\n\t            }\r\n\t            commands = this.textSpans[i].elem;\r\n\t            jLen = commands.length;\r\n\t            this.globalData.canvasContext.beginPath();\r\n\t            for(j=0;j<jLen;j+=1) {\r\n\t                pathArr = commands[j];\r\n\t                kLen = pathArr.length;\r\n\t                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n\t                for (k = 2; k < kLen; k += 6) {\r\n\t                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n\t                }\r\n\t            }\r\n\t            this.globalData.canvasContext.closePath();\r\n\t            this.globalData.canvasContext.stroke();\r\n\t            ///ctx.strokeText(letters[i].val,0,0);\r\n\t        }\r\n\t        if(renderedLetter) {\r\n\t            this.globalData.renderer.restore();\r\n\t        }\r\n\t    }\r\n\t    /*if(this.data.hasMask){\r\n\t     this.globalData.renderer.restore(true);\r\n\t     }*/\r\n\t};\n\tfunction CVEffects() {\r\n\t\r\n\t}\r\n\tCVEffects.prototype.renderFrame = function(){};\n\tfunction HBaseElement(data,globalData,comp){}\r\n\tHBaseElement.prototype = {\r\n\t    checkBlendMode: function(){},\r\n\t    initRendererElement: function(){\r\n\t        this.baseElement = createTag(this.data.tg || 'div');\r\n\t        if(this.data.hasMask) {\r\n\t            this.svgElement = createNS('svg');\r\n\t            this.layerElement = createNS('g');\r\n\t            this.maskedElement = this.layerElement;\r\n\t            this.svgElement.appendChild(this.layerElement);\r\n\t            this.baseElement.appendChild(this.svgElement);\r\n\t        } else {\r\n\t            this.layerElement = this.baseElement;\r\n\t        }\r\n\t        styleDiv(this.baseElement);\r\n\t    },\r\n\t    createContainerElements: function(){\r\n\t        this.renderableEffectsManager = new CVEffects(this);\r\n\t        this.transformedElement = this.baseElement;\r\n\t        this.maskedElement = this.layerElement;\r\n\t        if (this.data.ln) {\r\n\t            this.layerElement.setAttribute('id',this.data.ln);\r\n\t        }\r\n\t        if (this.data.cl) {\r\n\t            this.layerElement.setAttribute('class', this.data.cl);\r\n\t        }\r\n\t        if (this.data.bm !== 0) {\r\n\t            this.setBlendMode();\r\n\t        }\r\n\t    },\r\n\t    renderElement: function() {\r\n\t        if(this.finalTransform._matMdf){\r\n\t            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n\t        }\r\n\t        if(this.finalTransform._opMdf){\r\n\t            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n\t        }\r\n\t    },\r\n\t    renderFrame: function() {\r\n\t        //If it is exported as hidden (data.hd === true) no need to render\r\n\t        //If it is not visible no need to render\r\n\t        if (this.data.hd || this.hidden) {\r\n\t            return;\r\n\t        }\r\n\t        this.renderTransform();\r\n\t        this.renderRenderable();\r\n\t        this.renderElement();\r\n\t        this.renderInnerContent();\r\n\t        if (this._isFirstFrame) {\r\n\t            this._isFirstFrame = false;\r\n\t        }\r\n\t    },\r\n\t    destroy: function(){\r\n\t        this.layerElement = null;\r\n\t        this.transformedElement = null;\r\n\t        if(this.matteElement) {\r\n\t            this.matteElement = null;\r\n\t        }\r\n\t        if(this.maskManager) {\r\n\t            this.maskManager.destroy();\r\n\t            this.maskManager = null;\r\n\t        }\r\n\t    },\r\n\t    addMasks: function(){\r\n\t        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n\t    },\r\n\t    setMatte: function(){}\r\n\t};\r\n\tHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\n\tHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\n\tHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\n\tfunction HSolidElement(data,globalData,comp){\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\textendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\t\r\n\tHSolidElement.prototype.createContent = function(){\r\n\t    var rect;\r\n\t    if(this.data.hasMask){\r\n\t        rect = createNS('rect');\r\n\t        rect.setAttribute('width',this.data.sw);\r\n\t        rect.setAttribute('height',this.data.sh);\r\n\t        rect.setAttribute('fill',this.data.sc);\r\n\t        this.svgElement.setAttribute('width',this.data.sw);\r\n\t        this.svgElement.setAttribute('height',this.data.sh);\r\n\t    } else {\r\n\t        rect = createTag('div');\r\n\t        rect.style.width = this.data.sw + 'px';\r\n\t        rect.style.height = this.data.sh + 'px';\r\n\t        rect.style.backgroundColor = this.data.sc;\r\n\t    }\r\n\t    this.layerElement.appendChild(rect);\r\n\t};\r\n\t\n\tfunction HCompElement(data,globalData,comp){\r\n\t    this.layers = data.layers;\r\n\t    this.supports3d = !data.hasMask;\r\n\t    this.completeLayers = false;\r\n\t    this.pendingElements = [];\r\n\t    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n\t    this.initElement(data,globalData,comp);\r\n\t    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n\t}\r\n\t\r\n\textendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\n\tHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\t\r\n\tHCompElement.prototype.createContainerElements = function(){\r\n\t    this._createBaseContainerElements();\r\n\t    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n\t    if(this.data.hasMask){\r\n\t        this.svgElement.setAttribute('width',this.data.w);\r\n\t        this.svgElement.setAttribute('height',this.data.h);\r\n\t        this.transformedElement = this.baseElement;\r\n\t    } else {\r\n\t        this.transformedElement = this.layerElement;\r\n\t    }\r\n\t};\r\n\t\r\n\tHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n\t    var j = 0;\r\n\t    var nextElement;\r\n\t    while(j<pos){\r\n\t        if(this.elements[j] && this.elements[j].getBaseElement){\r\n\t            nextElement = this.elements[j].getBaseElement();\r\n\t        }\r\n\t        j += 1;\r\n\t    }\r\n\t    if(nextElement){\r\n\t        this.layerElement.insertBefore(elem, nextElement);\r\n\t    } else {\r\n\t        this.layerElement.appendChild(elem);\r\n\t    }\r\n\t}\r\n\t\n\tfunction HShapeElement(data,globalData,comp){\r\n\t    //List of drawable elements\r\n\t    this.shapes = [];\r\n\t    // Full shape data\r\n\t    this.shapesData = data.shapes;\r\n\t    //List of styles that will be applied to shapes\r\n\t    this.stylesList = [];\r\n\t    //List of modifiers that will be applied to shapes\r\n\t    this.shapeModifiers = [];\r\n\t    //List of items in shape tree\r\n\t    this.itemsData = [];\r\n\t    //List of items in previous shape tree\r\n\t    this.processedElements = [];\r\n\t    this.shapesContainer = createNS('g');\r\n\t    this.initElement(data,globalData,comp);\r\n\t    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n\t    // List of elements that have been created\r\n\t    this.prevViewData = [];\r\n\t    this.currentBBox = {\r\n\t        x:999999,\r\n\t        y: -999999,\r\n\t        h: 0,\r\n\t        w: 0\r\n\t    };\r\n\t}\r\n\textendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\n\tHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\t\r\n\tHShapeElement.prototype.createContent = function(){\r\n\t    var cont;\r\n\t    this.baseElement.style.fontSize = 0;\r\n\t    if (this.data.hasMask) {\r\n\t        this.layerElement.appendChild(this.shapesContainer);\r\n\t        cont = this.svgElement;\r\n\t    } else {\r\n\t        cont = createNS('svg');\r\n\t        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n\t        cont.setAttribute('width',size.w);\r\n\t        cont.setAttribute('height',size.h);\r\n\t        cont.appendChild(this.shapesContainer);\r\n\t        this.layerElement.appendChild(cont);\r\n\t    }\r\n\t\r\n\t    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n\t    this.shapeCont = cont;\r\n\t};\r\n\t\r\n\tHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n\t    var i, len = transformers.length;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n\t    }\r\n\t    return point;\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n\t    var shape = item.sh.v;\r\n\t    var transformers = item.transformers;\r\n\t    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n\t    if (len <= 1) {\r\n\t        return;\r\n\t    }\r\n\t    for (i = 0; i < len - 1; i += 1) {\r\n\t        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n\t        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n\t        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n\t        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n\t        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n\t    }\r\n\t    if(shape.c) {\r\n\t        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n\t        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n\t        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n\t        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n\t        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n\t    }\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n\t    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n\t    var bounds = this.shapeBoundingBox;\r\n\t    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n\t    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n\t    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n\t    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.shapeBoundingBox = {\r\n\t    left:0,\r\n\t    right:0,\r\n\t    top:0,\r\n\t    bottom:0,\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.tempBoundingBox = {\r\n\t    x:0,\r\n\t    xMax:0,\r\n\t    y:0,\r\n\t    yMax:0,\r\n\t    width:0,\r\n\t    height:0\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\t\r\n\t    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\t\r\n\t    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\t\r\n\t      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n\t      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n\t      c = 3 * p1[i] - 3 * p0[i];\r\n\t\r\n\t      b = b | 0;\r\n\t      a = a | 0;\r\n\t      c = c | 0;\r\n\t\r\n\t      if (a === 0) {\r\n\t\r\n\t        if (b === 0) {\r\n\t          continue;\r\n\t        }\r\n\t\r\n\t        t = -c / b;\r\n\t\r\n\t        if (0 < t && t < 1) {\r\n\t          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n\t        }\r\n\t        continue;\r\n\t      }\r\n\t\r\n\t      b2ac = b * b - 4 * c * a;\r\n\t\r\n\t      if (b2ac < 0) {\r\n\t        continue;\r\n\t      }\r\n\t\r\n\t      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n\t      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\t\r\n\t      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n\t      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\t\r\n\t    }\r\n\t\r\n\t    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n\t    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n\t    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n\t    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n\t  };\r\n\t\r\n\t  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n\t    return bm_pow(1-t, 3) * p0[i]\r\n\t        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n\t        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n\t        + bm_pow(t, 3) * p3[i];\r\n\t  }\r\n\t\r\n\tHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n\t    var i, len = itemsData.length, path;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        if(itemsData[i] && itemsData[i].sh) {\r\n\t            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n\t        } else if(itemsData[i] && itemsData[i].it) {\r\n\t            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.renderInnerContent = function() {\r\n\t    this._renderShapeFrame();\r\n\t\r\n\t    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n\t        var tempBoundingBox = this.tempBoundingBox;\r\n\t        var max = 999999;\r\n\t        tempBoundingBox.x = max;\r\n\t        tempBoundingBox.xMax = -max;\r\n\t        tempBoundingBox.y = max;\r\n\t        tempBoundingBox.yMax = -max;\r\n\t        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n\t        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n\t        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n\t        //var tempBoundingBox = this.shapeCont.getBBox();\r\n\t        var changed = false;\r\n\t        if(this.currentBBox.w !== tempBoundingBox.width){\r\n\t            this.currentBBox.w = tempBoundingBox.width;\r\n\t            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n\t            changed = true;\r\n\t        }\r\n\t        if(this.currentBBox.h !== tempBoundingBox.height){\r\n\t            this.currentBBox.h = tempBoundingBox.height;\r\n\t            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n\t            changed = true;\r\n\t        }\r\n\t        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n\t            this.currentBBox.w = tempBoundingBox.width;\r\n\t            this.currentBBox.h = tempBoundingBox.height;\r\n\t            this.currentBBox.x = tempBoundingBox.x;\r\n\t            this.currentBBox.y = tempBoundingBox.y;\r\n\t\r\n\t            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n\t            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n\t        }\r\n\t    }\r\n\t\r\n\t};\n\tfunction HTextElement(data,globalData,comp){\r\n\t    this.textSpans = [];\r\n\t    this.textPaths = [];\r\n\t    this.currentBBox = {\r\n\t        x:999999,\r\n\t        y: -999999,\r\n\t        h: 0,\r\n\t        w: 0\r\n\t    };\r\n\t    this.renderType = 'svg';\r\n\t    this.isMasked = false;\r\n\t    this.initElement(data,globalData,comp);\r\n\t\r\n\t}\r\n\textendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\t\r\n\tHTextElement.prototype.createContent = function(){\r\n\t    this.isMasked = this.checkMasks();\r\n\t    if(this.isMasked){\r\n\t        this.renderType = 'svg';\r\n\t        this.compW = this.comp.data.w;\r\n\t        this.compH = this.comp.data.h;\r\n\t        this.svgElement.setAttribute('width',this.compW);\r\n\t        this.svgElement.setAttribute('height',this.compH);\r\n\t        var g = createNS('g');\r\n\t        this.maskedElement.appendChild(g);\r\n\t        this.innerElem = g;\r\n\t    } else {\r\n\t        this.renderType = 'html';\r\n\t        this.innerElem = this.layerElement;\r\n\t    }\r\n\t\r\n\t    this.checkParenting();\r\n\t\r\n\t};\r\n\t\r\n\tHTextElement.prototype.buildNewText = function(){\r\n\t    var documentData = this.textProperty.currentData;\r\n\t    this.renderedLetters = createSizedArray(this.textProperty.currentData.l ? this.textProperty.currentData.l.length : 0);\r\n\t    var innerElemStyle = this.innerElem.style;\r\n\t    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n\t    if(documentData.sc){\r\n\t        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n\t        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n\t    }\r\n\t    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n\t    if(!this.globalData.fontManager.chars){\r\n\t        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n\t        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n\t        if(fontData.fClass){\r\n\t            this.innerElem.className = fontData.fClass;\r\n\t        } else {\r\n\t            innerElemStyle.fontFamily = fontData.fFamily;\r\n\t            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n\t            innerElemStyle.fontStyle = fStyle;\r\n\t            innerElemStyle.fontWeight = fWeight;\r\n\t        }\r\n\t    }\r\n\t    var i, len;\r\n\t\r\n\t    var letters = documentData.l;\r\n\t    len = letters.length;\r\n\t    var tSpan,tParent,tCont;\r\n\t    var matrixHelper = this.mHelper;\r\n\t    var shapes, shapeStr = '';\r\n\t    var cnt = 0;\r\n\t    for (i = 0;i < len ;i += 1) {\r\n\t        if(this.globalData.fontManager.chars){\r\n\t            if(!this.textPaths[cnt]){\r\n\t                tSpan = createNS('path');\r\n\t                tSpan.setAttribute('stroke-linecap', 'butt');\r\n\t                tSpan.setAttribute('stroke-linejoin','round');\r\n\t                tSpan.setAttribute('stroke-miterlimit','4');\r\n\t            } else {\r\n\t                tSpan = this.textPaths[cnt];\r\n\t            }\r\n\t            if(!this.isMasked){\r\n\t                if(this.textSpans[cnt]){\r\n\t                    tParent = this.textSpans[cnt];\r\n\t                    tCont = tParent.children[0];\r\n\t                } else {\r\n\t\r\n\t                    tParent = createTag('div');\r\n\t                    tCont = createNS('svg');\r\n\t                    tCont.appendChild(tSpan);\r\n\t                    styleDiv(tParent);\r\n\t                }\r\n\t            }\r\n\t        }else{\r\n\t            if(!this.isMasked){\r\n\t                if(this.textSpans[cnt]){\r\n\t                    tParent = this.textSpans[cnt];\r\n\t                    tSpan = this.textPaths[cnt];\r\n\t                } else {\r\n\t                    tParent = createTag('span');\r\n\t                    styleDiv(tParent);\r\n\t                    tSpan = createTag('span');\r\n\t                    styleDiv(tSpan);\r\n\t                    tParent.appendChild(tSpan);\r\n\t                }\r\n\t            } else {\r\n\t                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n\t            }\r\n\t        }\r\n\t        //tSpan.setAttribute('visibility', 'hidden');\r\n\t        if(this.globalData.fontManager.chars){\r\n\t            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n\t            var shapeData;\r\n\t            if(charData){\r\n\t                shapeData = charData.data;\r\n\t            } else {\r\n\t                shapeData = null;\r\n\t            }\r\n\t            matrixHelper.reset();\r\n\t            if(shapeData && shapeData.shapes){\r\n\t                shapes = shapeData.shapes[0].it;\r\n\t                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n\t                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n\t                tSpan.setAttribute('d',shapeStr);\r\n\t            }\r\n\t            if(!this.isMasked){\r\n\t                this.innerElem.appendChild(tParent);\r\n\t                if(shapeData && shapeData.shapes){\r\n\t\r\n\t                    //document.body.appendChild is needed to get exact measure of shape\r\n\t                    document.body.appendChild(tCont);\r\n\t                    var boundingBox = tCont.getBBox();\r\n\t                    tCont.setAttribute('width',boundingBox.width + 2);\r\n\t                    tCont.setAttribute('height',boundingBox.height + 2);\r\n\t                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n\t                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\t\r\n\t                    letters[i].yOffset = boundingBox.y-1;\r\n\t                    tParent.appendChild(tCont);\r\n\t\r\n\t                } else{\r\n\t                    tCont.setAttribute('width',1);\r\n\t                    tCont.setAttribute('height',1);\r\n\t                }\r\n\t            }else{\r\n\t                this.innerElem.appendChild(tSpan);\r\n\t            }\r\n\t        }else{\r\n\t            tSpan.textContent = letters[i].val;\r\n\t            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n\t            if(!this.isMasked){\r\n\t                this.innerElem.appendChild(tParent);\r\n\t                //\r\n\t                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n\t            } else {\r\n\t                this.innerElem.appendChild(tSpan);\r\n\t            }\r\n\t        }\r\n\t        //\r\n\t        if(!this.isMasked){\r\n\t            this.textSpans[cnt] = tParent;\r\n\t        }else{\r\n\t            this.textSpans[cnt] = tSpan;\r\n\t        }\r\n\t        this.textSpans[cnt].style.display = 'block';\r\n\t        this.textPaths[cnt] = tSpan;\r\n\t        cnt += 1;\r\n\t    }\r\n\t    while(cnt < this.textSpans.length){\r\n\t        this.textSpans[cnt].style.display = 'none';\r\n\t        cnt += 1;\r\n\t    }\r\n\t};\r\n\t\r\n\tHTextElement.prototype.renderInnerContent = function() {\r\n\t\r\n\t    if(this.data.singleShape){\r\n\t        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n\t            return;\r\n\t        } else {\r\n\t            // Todo Benchmark if using this is better than getBBox\r\n\t             if(this.isMasked && this.finalTransform._matMdf){\r\n\t                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n\t                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n\t             }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n\t    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n\t        return;\r\n\t    }\r\n\t    var  i,len, count = 0;\r\n\t    var renderedLetters = this.textAnimator.renderedLetters;\r\n\t\r\n\t    var letters = this.textProperty.currentData.l;\r\n\t\r\n\t    len = letters.length;\r\n\t    var renderedLetter, textSpan, textPath;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(letters[i].n){\r\n\t            count += 1;\r\n\t            continue;\r\n\t        }\r\n\t        textSpan = this.textSpans[i];\r\n\t        textPath = this.textPaths[i];\r\n\t        renderedLetter = renderedLetters[count];\r\n\t        count += 1;\r\n\t        if(renderedLetter._mdf.m) {\r\n\t            if(!this.isMasked){\r\n\t                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n\t            }else{\r\n\t                textSpan.setAttribute('transform',renderedLetter.m);\r\n\t            }\r\n\t        }\r\n\t        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n\t        textSpan.style.opacity = renderedLetter.o;\r\n\t        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n\t            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n\t        }\r\n\t        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n\t            textPath.setAttribute('stroke',renderedLetter.sc);\r\n\t        }\r\n\t        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n\t            textPath.setAttribute('fill',renderedLetter.fc);\r\n\t            textPath.style.color = renderedLetter.fc;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n\t        var boundingBox = this.innerElem.getBBox();\r\n\t\r\n\t        if(this.currentBBox.w !== boundingBox.width){\r\n\t            this.currentBBox.w = boundingBox.width;\r\n\t            this.svgElement.setAttribute('width',boundingBox.width);\r\n\t        }\r\n\t        if(this.currentBBox.h !== boundingBox.height){\r\n\t            this.currentBBox.h = boundingBox.height;\r\n\t            this.svgElement.setAttribute('height',boundingBox.height);\r\n\t        }\r\n\t\r\n\t        var margin = 1;\r\n\t        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n\t            this.currentBBox.w = boundingBox.width + margin*2;\r\n\t            this.currentBBox.h = boundingBox.height + margin*2;\r\n\t            this.currentBBox.x = boundingBox.x - margin;\r\n\t            this.currentBBox.y = boundingBox.y - margin;\r\n\t\r\n\t            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n\t            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction HImageElement(data,globalData,comp){\r\n\t    this.assetData = globalData.getAssetData(data.refId);\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\t\r\n\t\r\n\tHImageElement.prototype.createContent = function(){\r\n\t    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\t    var img = new Image();\r\n\t\r\n\t    if(this.data.hasMask){\r\n\t        this.imageElem = createNS('image');\r\n\t        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n\t        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n\t        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n\t        this.layerElement.appendChild(this.imageElem);\r\n\t        this.baseElement.setAttribute('width',this.assetData.w);\r\n\t        this.baseElement.setAttribute('height',this.assetData.h);\r\n\t    } else {\r\n\t        this.layerElement.appendChild(img);\r\n\t    }\r\n\t    img.src = assetPath;\r\n\t    if(this.data.ln){\r\n\t        this.innerElem.setAttribute('id',this.data.ln);\r\n\t    }\r\n\t};\n\tfunction HCameraElement(data,globalData,comp){\r\n\t    this.initFrame();\r\n\t    this.initBaseData(data,globalData,comp);\r\n\t    this.initHierarchy();\r\n\t    var getProp = PropertyFactory.getProp;\r\n\t    this.pe = getProp(this,data.pe,0,0,this);\r\n\t    if(data.ks.p.s){\r\n\t        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n\t        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n\t        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n\t    }else{\r\n\t        this.p = getProp(this,data.ks.p,1,0,this);\r\n\t    }\r\n\t    if(data.ks.a){\r\n\t        this.a = getProp(this,data.ks.a,1,0,this);\r\n\t    }\r\n\t    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n\t        var i,len = data.ks.or.k.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            data.ks.or.k[i].to = null;\r\n\t            data.ks.or.k[i].ti = null;\r\n\t        }\r\n\t    }\r\n\t    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n\t    this.or.sh = true;\r\n\t    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n\t    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n\t    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n\t    this.mat = new Matrix();\r\n\t    this._prevMat = new Matrix();\r\n\t    this._isFirstFrame = true;\r\n\t}\r\n\textendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\t\r\n\tHCameraElement.prototype.setup = function() {\r\n\t    var i, len = this.comp.threeDElements.length, comp;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        //[perspectiveElem,container]\r\n\t        comp = this.comp.threeDElements[i];\r\n\t        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n\t        comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n\t        comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n\t    }\r\n\t};\r\n\t\r\n\tHCameraElement.prototype.createElements = function(){\r\n\t};\r\n\t\r\n\tHCameraElement.prototype.hide = function(){\r\n\t};\r\n\t\r\n\tHCameraElement.prototype.renderFrame = function(){\r\n\t    var _mdf = this._isFirstFrame;\r\n\t    var i, len;\r\n\t    if(this.hierarchy){\r\n\t        len = this.hierarchy.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n\t        }\r\n\t    }\r\n\t    if(_mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n\t        this.mat.reset();\r\n\t\r\n\t        if(this.hierarchy){\r\n\t            var mat;\r\n\t            len = this.hierarchy.length - 1;\r\n\t            for (i = len; i >= 0; i -= 1) {\r\n\t                /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n\t                console.log(mat)\r\n\t                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n\t                console.log(this.mat.props)*/\r\n\t                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n\t                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n\t                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n\t                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n\t                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n\t            }\r\n\t        }\r\n\t\r\n\t        if(this.p){\r\n\t            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n\t        }else{\r\n\t            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n\t        }\r\n\t        if(this.a){\r\n\t            var diffVector = [this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];\r\n\t            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n\t            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n\t            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n\t            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n\t            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n\t            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n\t            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\t\r\n\t        }\r\n\t        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n\t        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n\t        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n\t        this.mat.translate(0,0,this.pe.v);\r\n\t\r\n\t\r\n\t        \r\n\t\r\n\t\r\n\t        if(!this._prevMat.equals(this.mat) && this.comp.threeDElements) {\r\n\t            len = this.comp.threeDElements.length;\r\n\t            var comp;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                comp = this.comp.threeDElements[i];\r\n\t                comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n\t            }\r\n\t            this.mat.clone(this._prevMat);\r\n\t        }\r\n\t    }\r\n\t    this._isFirstFrame = false;\r\n\t};\r\n\t\r\n\tHCameraElement.prototype.prepareFrame = function(num) {\r\n\t    this.prepareProperties(num, true);\r\n\t};\r\n\t\r\n\tHCameraElement.prototype.destroy = function(){\r\n\t};\r\n\tHCameraElement.prototype.initExpressions = function(){};\r\n\tHCameraElement.prototype.getBaseElement = function(){return null;};\n\tfunction HEffects() {\r\n\t}\r\n\tHEffects.prototype.renderFrame = function(){};\n\tvar Expressions = (function(){\r\n\t    var ob = {};\r\n\t    ob.initExpressions = initExpressions;\r\n\t\r\n\t\r\n\t    function initExpressions(animation){\r\n\t        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n\t        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n\t    }\r\n\t   return ob;\r\n\t}());\r\n\t\r\n\texpressionsPlugin = Expressions;\r\n\t\n\tvar ExpressionManager = (function(){\r\n\t    'use strict';\r\n\t    var ob = {};\r\n\t    var Math = BMMath;\r\n\t    var window = null;\r\n\t    var document = null;\r\n\t\r\n\t    function duplicatePropertyValue(value, mult) {\r\n\t        mult = mult || 1;\r\n\t\r\n\t        if (typeof value === 'number'  || value instanceof Number) {\r\n\t            return value * mult;\r\n\t        } else if(value.i) {\r\n\t            return shape_pool.clone(value);\r\n\t        } else {\r\n\t            var arr = createTypedArray('float32', value.length);\r\n\t            var i, len = value.length;\r\n\t            for (i = 0; i < len; i += 1) {\r\n\t                arr[i] = value[i] * mult;\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function isTypeOfArray(arr) {\r\n\t        return arr.constructor === Array || arr.constructor === Float32Array;\r\n\t    }\r\n\t\r\n\t    function $bm_neg(a){\r\n\t        var tOfA = typeof a;\r\n\t        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n\t            return -a;\r\n\t        }\r\n\t        if(isTypeOfArray(a)){\r\n\t            var i, lenA = a.length;\r\n\t            var retArr = [];\r\n\t            for(i=0;i<lenA;i+=1){\r\n\t                retArr[i] = -a[i];\r\n\t            }\r\n\t            return retArr;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function sum(a,b) {\r\n\t        var tOfA = typeof a;\r\n\t        var tOfB = typeof b;\r\n\t        if(tOfA === 'string' || tOfB === 'string'){\r\n\t            return a + b;\r\n\t        }\r\n\t        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string'  || b instanceof Number)) {\r\n\t            return a + b;\r\n\t        }\r\n\t        if(isTypeOfArray(a) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )){\r\n\t            a = a.slice(0);\r\n\t            a[0] = a[0] + b;\r\n\t            return a;\r\n\t        }\r\n\t        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && isTypeOfArray(b)){\r\n\t            b = b.slice(0);\r\n\t            b[0] = a + b[0];\r\n\t            return b;\r\n\t        }\r\n\t        if(isTypeOfArray(a) && isTypeOfArray(b)){\r\n\t            \r\n\t            var i = 0, lenA = a.length, lenB = b.length;\r\n\t            var retArr = [];\r\n\t            while(i<lenA || i < lenB){\r\n\t                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n\t                    retArr[i] = a[i] + b[i];\r\n\t                }else{\r\n\t                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            return retArr;\r\n\t        }\r\n\t        return 0;\r\n\t    }\r\n\t    var add = sum;\r\n\t\r\n\t    function sub(a,b) {\r\n\t        var tOfA = typeof a;\r\n\t        var tOfB = typeof b;\r\n\t        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )) {\r\n\t            if(tOfA === 'string') {\r\n\t                a = parseInt(a);\r\n\t            }\r\n\t            if(tOfB === 'string') {\r\n\t                b = parseInt(b);\r\n\t            }\r\n\t            return a - b;\r\n\t        }\r\n\t        if( isTypeOfArray(a) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )){\r\n\t            a = a.slice(0);\r\n\t            a[0] = a[0] - b;\r\n\t            return a;\r\n\t        }\r\n\t        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) &&  isTypeOfArray(b)){\r\n\t            b = b.slice(0);\r\n\t            b[0] = a - b[0];\r\n\t            return b;\r\n\t        }\r\n\t        if(isTypeOfArray(a) && isTypeOfArray(b)){\r\n\t            var i = 0, lenA = a.length, lenB = b.length;\r\n\t            var retArr = [];\r\n\t            while(i<lenA || i < lenB){\r\n\t                if((typeof a[i] === 'number' || a[i] instanceof Number) && typeof (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n\t                    retArr[i] = a[i] - b[i];\r\n\t                }else{\r\n\t                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            return retArr;\r\n\t        }\r\n\t        return 0;\r\n\t    }\r\n\t\r\n\t    function mul(a,b) {\r\n\t        var tOfA = typeof a;\r\n\t        var tOfB = typeof b;\r\n\t        var arr;\r\n\t        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )) {\r\n\t            return a * b;\r\n\t        }\r\n\t\r\n\t        var i, len;\r\n\t        if(isTypeOfArray(a) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )){\r\n\t            len = a.length;\r\n\t            arr = createTypedArray('float32', len);\r\n\t            for(i=0;i<len;i+=1){\r\n\t                arr[i] = a[i] * b;\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && isTypeOfArray(b)){\r\n\t            len = b.length;\r\n\t            arr = createTypedArray('float32', len);\r\n\t            for(i=0;i<len;i+=1){\r\n\t                arr[i] = a * b[i];\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t        return 0;\r\n\t    }\r\n\t\r\n\t    function div(a,b) {\r\n\t        var tOfA = typeof a;\r\n\t        var tOfB = typeof b;\r\n\t        var arr;\r\n\t        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )) {\r\n\t            return a / b;\r\n\t        }\r\n\t        var i, len;\r\n\t        if(isTypeOfArray(a) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number  )){\r\n\t            len = a.length;\r\n\t            arr = createTypedArray('float32', len);\r\n\t            for(i=0;i<len;i+=1){\r\n\t                arr[i] = a[i] / b;\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && isTypeOfArray(b)){\r\n\t            len = b.length;\r\n\t            arr = createTypedArray('float32', len);\r\n\t            for(i=0;i<len;i+=1){\r\n\t                arr[i] = a / b[i];\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t        return 0;\r\n\t    }\r\n\t    function mod(a,b) {\r\n\t        if(typeof a === 'string') {\r\n\t            a = parseInt(a);\r\n\t        }\r\n\t        if(typeof b === 'string') {\r\n\t            b = parseInt(b);\r\n\t        }\r\n\t        return a % b;\r\n\t    }\r\n\t\r\n\t    function clamp(num, min, max) {\r\n\t        if(min > max){\r\n\t            var mm = max;\r\n\t            max = min;\r\n\t            min = mm;\r\n\t        }\r\n\t        return Math.min(Math.max(num, min), max);\r\n\t    }\r\n\t\r\n\t    function radiansToDegrees(val) {\r\n\t        return val/degToRads;\r\n\t    }\r\n\t    var radians_to_degrees = radiansToDegrees;\r\n\t\r\n\t    function degreesToRadians(val) {\r\n\t        return val*degToRads;\r\n\t    }\r\n\t    var degrees_to_radians = radiansToDegrees;\r\n\t\r\n\t    var helperLengthArray = [0,0,0,0,0,0];\r\n\t\r\n\t    function length(arr1, arr2) {\r\n\t        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n\t            arr2 = arr2 || 0;\r\n\t            return Math.abs(arr1 - arr2);\r\n\t        }\r\n\t        if(!arr2) {\r\n\t            arr2 = helperLengthArray;\r\n\t        }\r\n\t        var i, len = Math.min(arr1.length, arr2.length);\r\n\t        var addedLength = 0;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n\t        }\r\n\t        return Math.sqrt(addedLength);\r\n\t    }\r\n\t\r\n\t    function normalize(vec) {\r\n\t        return div(vec, length(vec));\r\n\t    }\r\n\t\r\n\t    function rgbToHsl(val) {\r\n\t        var r = val[0]; var g = val[1]; var b = val[2];\r\n\t        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n\t        var h, s, l = (max + min) / 2;\r\n\t\r\n\t        if(max == min){\r\n\t            h = s = 0; // achromatic\r\n\t        }else{\r\n\t            var d = max - min;\r\n\t            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\t            switch(max){\r\n\t                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t                case g: h = (b - r) / d + 2; break;\r\n\t                case b: h = (r - g) / d + 4; break;\r\n\t            }\r\n\t            h /= 6;\r\n\t        }\r\n\t\r\n\t        return [h, s, l,val[3]];\r\n\t    }\r\n\t\r\n\t    function hue2rgb(p, q, t){\r\n\t        if(t < 0) t += 1;\r\n\t        if(t > 1) t -= 1;\r\n\t        if(t < 1/6) return p + (q - p) * 6 * t;\r\n\t        if(t < 1/2) return q;\r\n\t        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n\t        return p;\r\n\t    }\r\n\t\r\n\t    function hslToRgb(val){\r\n\t        var h = val[0];\r\n\t        var s = val[1];\r\n\t        var l = val[2];\r\n\t\r\n\t        var r, g, b;\r\n\t\r\n\t        if(s === 0){\r\n\t            r = g = b = l; // achromatic\r\n\t        }else{\r\n\t\r\n\t            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t            var p = 2 * l - q;\r\n\t            r = hue2rgb(p, q, h + 1/3);\r\n\t            g = hue2rgb(p, q, h);\r\n\t            b = hue2rgb(p, q, h - 1/3);\r\n\t        }\r\n\t\r\n\t        return [r, g , b, val[3]];\r\n\t    }\r\n\t\r\n\t    function linear(t, tMin, tMax, value1, value2){\r\n\t        if(value1 === undefined || value2 === undefined){\r\n\t            return linear(t,0,1,tMin,tMax);\r\n\t        }\r\n\t        if(t <= tMin) {\r\n\t            return value1;\r\n\t        }else if(t >= tMax){\r\n\t            return value2;\r\n\t        }\r\n\t        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n\t        if(!value1.length){\r\n\t            return value1 + (value2-value1)*perc;\r\n\t        }\r\n\t        var i, len = value1.length;\r\n\t        var arr = createTypedArray('float32', len);\r\n\t        for(i=0;i<len;i+=1){\r\n\t            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n\t        }\r\n\t        return arr;\r\n\t    }\r\n\t    function random(min,max){\r\n\t        if(max === undefined){\r\n\t            if(min === undefined){\r\n\t                min = 0;\r\n\t                max = 1;\r\n\t            } else {\r\n\t                max = min;\r\n\t                min = undefined;\r\n\t            }\r\n\t        }\r\n\t        if(max.length){\r\n\t            var i, len = max.length;\r\n\t            if(!min){\r\n\t                min = createTypedArray('float32', len);\r\n\t            }\r\n\t            var arr = createTypedArray('float32', len);\r\n\t            var rnd = BMMath.random();\r\n\t            for(i=0;i<len;i+=1){\r\n\t                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t        if(min === undefined){\r\n\t            min = 0;\r\n\t        }\r\n\t        var rndm = BMMath.random();\r\n\t        return min + rndm*(max-min);\r\n\t    }\r\n\t\r\n\t    function createPath(points, inTangents, outTangents, closed) {\r\n\t        var i, len = points.length;\r\n\t        var path = shape_pool.newElement();\r\n\t        path.setPathData(!!closed, len);\r\n\t        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            inVertexPoint = inTangents ? inTangents[i] : arrPlaceholder;\r\n\t            outVertexPoint = outTangents ? outTangents[i] : arrPlaceholder;\r\n\t            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n\t        }\r\n\t        return path;\r\n\t    }\r\n\t\r\n\t    function initiateExpression(elem,data,property){\r\n\t        var val = data.x;\r\n\t        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n\t        var _needsRandom = val.indexOf('random') !== -1;\r\n\t        var elemType = elem.data.ty;\r\n\t        var transform,content,effect;\r\n\t        var thisProperty = property;\r\n\t        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n\t        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n\t        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n\t        var width = elem.data.sw ? elem.data.sw : 0;\r\n\t        var height = elem.data.sh ? elem.data.sh : 0;\r\n\t        var loopIn, loop_in, loopOut, loop_out;\r\n\t        var toWorld,fromWorld,fromComp,fromCompToSurface,anchorPoint,thisLayer,thisComp,mask,valueAtTime,velocityAtTime;\r\n\t\r\n\t        var scoped_bm_rt;\r\n\t        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n\t        var numKeys = property.kf ? data.k.length : 0;\r\n\t\r\n\t        var wiggle = function wiggle(freq,amp){\r\n\t            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n\t            var addedAmps = createTypedArray('float32', len);\r\n\t            freq = 5;\r\n\t            var iterations = Math.floor(time*freq);\r\n\t            i = 0;\r\n\t            j = 0;\r\n\t            while(i<iterations){\r\n\t                //var rnd = BMMath.random();\r\n\t                for(j=0;j<len;j+=1){\r\n\t                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n\t                    //addedAmps[j] += -amp + amp*2*rnd;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            //var rnd2 = BMMath.random();\r\n\t            var periods = time*freq;\r\n\t            var perc = periods - Math.floor(periods);\r\n\t            var arr = createTypedArray('float32', len);\r\n\t            if(len>1){\r\n\t                for(j=0;j<len;j+=1){\r\n\t                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n\t                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n\t                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n\t                }\r\n\t                return arr;\r\n\t            } else {\r\n\t                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n\t            }\r\n\t        }.bind(this);\r\n\t\r\n\t        if(thisProperty.loopIn) {\r\n\t            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n\t            loop_in = loopIn;\r\n\t        }\r\n\t\r\n\t        if(thisProperty.loopOut) {\r\n\t            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n\t            loop_out = loopOut;\r\n\t        }\r\n\t\r\n\t        function loopInDuration(type,duration){\r\n\t            return loopIn(type,duration,true);\r\n\t        }\r\n\t\r\n\t        function loopOutDuration(type,duration){\r\n\t            return loopOut(type,duration,true);\r\n\t        }\r\n\t\r\n\t        if(this.getValueAtTime) {\r\n\t            valueAtTime = this.getValueAtTime.bind(this);\r\n\t        }\r\n\t\r\n\t        if(this.getVelocityAtTime) {\r\n\t            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n\t        }\r\n\t\r\n\t        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\t\r\n\t        function lookAt(elem1,elem2){\r\n\t            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n\t            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n\t            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n\t            return [yaw,pitch,0];\r\n\t        }\r\n\t\r\n\t        function easeOut(t, tMin, tMax, val1, val2){\r\n\t            if(val1 === undefined){\r\n\t                val1 = tMin;\r\n\t                val2 = tMax;\r\n\t            } else {\r\n\t                t = (t - tMin) / (tMax - tMin);\r\n\t            }\r\n\t            return -(val2-val1) * t*(t-2) + val1;\r\n\t        }\r\n\t\r\n\t        function easeIn(t, tMin, tMax, val1, val2){\r\n\t            if(val1 === undefined){\r\n\t                val1 = tMin;\r\n\t                val2 = tMax;\r\n\t            } else {\r\n\t                t = (t - tMin) / (tMax - tMin);\r\n\t            }\r\n\t            return (val2-val1)*t*t + val1;\r\n\t        }\r\n\t\r\n\t        function nearestKey(time){\r\n\t            var i, len = data.k.length,index,keyTime;\r\n\t            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n\t                index = 0;\r\n\t                keyTime = 0;\r\n\t            } else {\r\n\t                index = -1;\r\n\t                time *= elem.comp.globalData.frameRate;\r\n\t                if (time < data.k[0].t) {\r\n\t                    index = 1;\r\n\t                    keyTime = data.k[0].t;\r\n\t                } else {\r\n\t                    for(i=0;i<len-1;i+=1){\r\n\t                        if(time === data.k[i].t){\r\n\t                            index = i + 1;\r\n\t                            keyTime = data.k[i].t;\r\n\t                            break;\r\n\t                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n\t                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n\t                                index = i + 2;\r\n\t                                keyTime = data.k[i+1].t;\r\n\t                            } else {\r\n\t                                index = i + 1;\r\n\t                                keyTime = data.k[i].t;\r\n\t                            }\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    if(index === -1){\r\n\t                        index = i + 1;\r\n\t                        keyTime = data.k[i].t;\r\n\t                    }\r\n\t                }\r\n\t                \r\n\t            }\r\n\t            var ob = {};\r\n\t            ob.index = index;\r\n\t            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n\t            return ob;\r\n\t        }\r\n\t\r\n\t        function key(ind){\r\n\t            var ob, i, len;\r\n\t            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n\t                throw new Error('The property has no keyframe at index ' + ind);\r\n\t            }\r\n\t            ind -= 1;\r\n\t            ob = {\r\n\t                time: data.k[ind].t/elem.comp.globalData.frameRate\r\n\t            };\r\n\t            var arr;\r\n\t            if(ind === data.k.length - 1 && !data.k[ind].h){\r\n\t                arr = data.k[ind-1].e;\r\n\t            }else{\r\n\t                arr = data.k[ind].s;\r\n\t            }\r\n\t            len = arr.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                ob[i] = arr[i];\r\n\t            }\r\n\t            return ob;\r\n\t        }\r\n\t\r\n\t        function framesToTime(frames, fps) { \r\n\t            if (!fps) {\r\n\t                fps = elem.comp.globalData.frameRate;\r\n\t            }\r\n\t            return frames / fps;\r\n\t        }\r\n\t\r\n\t        function timeToFrames(t, fps) {\r\n\t            if (!t && t !== 0) {\r\n\t                t = time;\r\n\t            }\r\n\t            if (!fps) {\r\n\t                fps = elem.comp.globalData.frameRate;\r\n\t            }\r\n\t            return t * fps;\r\n\t        }\r\n\t\r\n\t        function seedRandom(seed){\r\n\t            BMMath.seedrandom(randSeed + seed);\r\n\t        }\r\n\t\r\n\t        function sourceRectAtTime() {\r\n\t            return elem.sourceRectAtTime();\r\n\t        }\r\n\t\r\n\t        var time, velocity, value, textIndex, textTotal, selectorValue;\r\n\t        var index = elem.data.ind;\r\n\t        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n\t        var parent;\r\n\t        var randSeed = Math.floor(Math.random()*1000000);\r\n\t        function executeExpression(_value) {\r\n\t            value = _value;\r\n\t            if (_needsRandom) {\r\n\t                seedRandom(randSeed);\r\n\t            }\r\n\t            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n\t                return value;\r\n\t            }\r\n\t            if(this.propType === 'textSelector'){\r\n\t                textIndex = this.textIndex;\r\n\t                textTotal = this.textTotal;\r\n\t                selectorValue = this.selectorValue;\r\n\t            }\r\n\t            if (!thisLayer) {\r\n\t                thisLayer = elem.layerInterface;\r\n\t                thisComp = elem.comp.compInterface;\r\n\t                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n\t                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n\t                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n\t                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n\t                fromCompToSurface = fromComp;\r\n\t            }\r\n\t            if (!transform) {\r\n\t                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n\t                anchorPoint = transform.anchorPoint;\r\n\t            }\r\n\t            \r\n\t            if (elemType === 4 && !content) {\r\n\t                content = thisLayer(\"ADBE Root Vectors Group\");\r\n\t            }\r\n\t            if (!effect) {\r\n\t                effect = thisLayer(4);\r\n\t            }\r\n\t            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n\t            if (hasParent && !parent) {\r\n\t                parent = elem.hierarchy[0].layerInterface;\r\n\t            }\r\n\t            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n\t            if (needsVelocity) {\r\n\t                velocity = velocityAtTime(time);\r\n\t            }\r\n\t            expression_function();\r\n\t            this.frameExpressionId = elem.globalData.frameId;\r\n\t\r\n\t            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n\t            if (scoped_bm_rt.propType === \"shape\") {\r\n\t                scoped_bm_rt = shape_pool.clone(scoped_bm_rt.v);\r\n\t            }\r\n\t            return scoped_bm_rt;\r\n\t        }\r\n\t        return executeExpression;\r\n\t    }\r\n\t\r\n\t    ob.initiateExpression = initiateExpression;\r\n\t    return ob;\r\n\t}());\n\t(function addPropertyDecorator() {\r\n\t\r\n\t    function getStaticValueAtTime() {\r\n\t        return this.pv;\r\n\t    }\r\n\t\r\n\t    function loopOut(type,duration,durationFlag){\r\n\t        if(!this.k || !this.keyframes){\r\n\t            return this.pv;\r\n\t        }\r\n\t        type = type ? type.toLowerCase() : '';\r\n\t        var currentFrame = this.comp.renderedFrame;\r\n\t        var keyframes = this.keyframes;\r\n\t        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n\t        if(currentFrame<=lastKeyFrame){\r\n\t            return this.pv;\r\n\t        }else{\r\n\t            var cycleDuration, firstKeyFrame;\r\n\t            if(!durationFlag){\r\n\t                if(!duration || duration > keyframes.length - 1){\r\n\t                    duration = keyframes.length - 1;\r\n\t                }\r\n\t                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n\t                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n\t            } else {\r\n\t                if(!duration){\r\n\t                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n\t                } else {\r\n\t                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n\t                }\r\n\t                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n\t            }\r\n\t            var i, len, ret;\r\n\t            if(type === 'pingpong') {\r\n\t                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n\t                if(iterations % 2 !== 0){\r\n\t                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n\t                }\r\n\t            } else if(type === 'offset'){\r\n\t                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n\t                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n\t                if(this.pv.length){\r\n\t                    ret = new Array(initV.length);\r\n\t                    len = ret.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n\t                    }\r\n\t                    return ret;\r\n\t                }\r\n\t                return (endV-initV)*repeats + current;\r\n\t            } else if(type === 'continue'){\r\n\t                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n\t                if(this.pv.length){\r\n\t                    ret = new Array(lastValue.length);\r\n\t                    len = ret.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n\t                    }\r\n\t                    return ret;\r\n\t                }\r\n\t                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n\t            }\r\n\t            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function loopIn(type,duration, durationFlag) {\r\n\t        if(!this.k){\r\n\t            return this.pv;\r\n\t        }\r\n\t        type = type ? type.toLowerCase() : '';\r\n\t        var currentFrame = this.comp.renderedFrame;\r\n\t        var keyframes = this.keyframes;\r\n\t        var firstKeyFrame = keyframes[0].t;\r\n\t        if(currentFrame>=firstKeyFrame){\r\n\t            return this.pv;\r\n\t        }else{\r\n\t            var cycleDuration, lastKeyFrame;\r\n\t            if(!durationFlag){\r\n\t                if(!duration || duration > keyframes.length - 1){\r\n\t                    duration = keyframes.length - 1;\r\n\t                }\r\n\t                lastKeyFrame = keyframes[duration].t;\r\n\t                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n\t            } else {\r\n\t                if(!duration){\r\n\t                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n\t                } else {\r\n\t                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n\t                }\r\n\t                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n\t            }\r\n\t            var i, len, ret;\r\n\t            if(type === 'pingpong') {\r\n\t                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n\t                if(iterations % 2 === 0){\r\n\t                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n\t                }\r\n\t            } else if(type === 'offset'){\r\n\t                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n\t                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n\t                if(this.pv.length){\r\n\t                    ret = new Array(initV.length);\r\n\t                    len = ret.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n\t                    }\r\n\t                    return ret;\r\n\t                }\r\n\t                return current-(endV-initV)*repeats;\r\n\t            } else if(type === 'continue'){\r\n\t                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n\t                if(this.pv.length){\r\n\t                    ret = new Array(firstValue.length);\r\n\t                    len = ret.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n\t                    }\r\n\t                    return ret;\r\n\t                }\r\n\t                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n\t            }\r\n\t            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getValueAtTime(frameNum) {\r\n\t        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n\t            frameNum *= this.elem.globalData.frameRate;\r\n\t            frameNum -= this.offsetTime;\r\n\t            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n\t            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n\t            this._cachingAtTime.lastFrame = frameNum;\r\n\t        }\r\n\t        return this._cachingAtTime.value;\r\n\t\r\n\t    }\r\n\t\r\n\t    function getVelocityAtTime(frameNum) {\r\n\t        if(this.vel !== undefined){\r\n\t            return this.vel;\r\n\t        }\r\n\t        var delta = -0.01;\r\n\t        //frameNum += this.elem.data.st;\r\n\t        var v1 = this.getValueAtTime(frameNum);\r\n\t        var v2 = this.getValueAtTime(frameNum + delta);\r\n\t        var velocity;\r\n\t        if(v1.length){\r\n\t            velocity = createTypedArray('float32', v1.length);\r\n\t            var i;\r\n\t            for(i=0;i<v1.length;i+=1){\r\n\t                //removing frameRate\r\n\t                //if needed, don't add it here\r\n\t                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n\t                velocity[i] = (v2[i] - v1[i])/delta;\r\n\t            }\r\n\t        } else {\r\n\t            velocity = (v2 - v1)/delta;\r\n\t        }\r\n\t        return velocity;\r\n\t    }\r\n\t\r\n\t    function setGroupProperty(propertyGroup){\r\n\t        this.propertyGroup = propertyGroup;\r\n\t    }\r\n\t\r\n\t    function searchExpressions(elem,data,prop){\r\n\t        if(data.x){\r\n\t            prop.k = true;\r\n\t            prop.x = true;\r\n\t            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n\t            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getTransformValueAtTime(time) {\r\n\t        console.warn('Transform at time not supported');\r\n\t    }\r\n\t\r\n\t    function getTransformStaticValueAtTime(time) {\r\n\t\r\n\t    }\r\n\t\r\n\t    var TextExpressionSelectorProp = (function(){\r\n\t\r\n\t        function getValueProxy(index,total){\r\n\t            this.textIndex = index+1;\r\n\t            this.textTotal = total;\r\n\t            this.getValue();\r\n\t            return this.v;\r\n\t        }\r\n\t\r\n\t        return function TextExpressionSelectorProp(elem,data){\r\n\t            this.pv = 1;\r\n\t            this.comp = elem.comp;\r\n\t            this.elem = elem;\r\n\t            this.mult = 0.01;\r\n\t            this.propType = 'textSelector';\r\n\t            this.textTotal = data.totalChars;\r\n\t            this.selectorValue = 100;\r\n\t            this.lastValue = [1,1,1];\r\n\t            searchExpressions.bind(this)(elem,data,this);\r\n\t            this.getMult = getValueProxy;\r\n\t            this.getVelocityAtTime = getVelocityAtTime;\r\n\t            if(this.kf){\r\n\t                this.getValueAtTime = getValueAtTime.bind(this);\r\n\t            } else {\r\n\t                this.getValueAtTime = getStaticValueAtTime.bind(this);\r\n\t            }\r\n\t            this.setGroupProperty = setGroupProperty;\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n\t    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n\t        var prop = getTransformProperty(elem, data, container);\r\n\t        if(prop.dynamicProperties.length) {\r\n\t            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n\t        } else {\r\n\t            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n\t        }\r\n\t        prop.setGroupProperty = setGroupProperty;\r\n\t        return prop;\r\n\t    };\r\n\t\r\n\t    var propertyGetProp = PropertyFactory.getProp;\r\n\t    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n\t        var prop = propertyGetProp(elem,data,type, mult, container);\r\n\t        //prop.getVelocityAtTime = getVelocityAtTime;\r\n\t        //prop.loopOut = loopOut;\r\n\t        //prop.loopIn = loopIn;\r\n\t        if(prop.kf){\r\n\t            prop.getValueAtTime = getValueAtTime.bind(prop);\r\n\t        } else {\r\n\t            prop.getValueAtTime = getStaticValueAtTime.bind(prop);\r\n\t        }\r\n\t        prop.setGroupProperty = setGroupProperty;\r\n\t        prop.loopOut = loopOut;\r\n\t        prop.loopIn = loopIn;\r\n\t        prop.getVelocityAtTime = getVelocityAtTime;\r\n\t        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n\t        prop.propertyIndex = data.ix;\r\n\t        var value = 0;\r\n\t        if(type !== 0) {\r\n\t            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n\t        }\r\n\t        prop._cachingAtTime = {\r\n\t            lastFrame: initialDefaultFrame,\r\n\t            lastIndex: 0,\r\n\t            value: value\r\n\t        };\r\n\t        searchExpressions(elem,data,prop);\r\n\t        if(prop.k){\r\n\t            container.addDynamicProperty(prop);\r\n\t        }\r\n\t\r\n\t        return prop;\r\n\t    };\r\n\t\r\n\t    function getShapeValueAtTime(frameNum) {\r\n\t        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n\t        if (!this._cachingAtTime) {\r\n\t            this._cachingAtTime = {\r\n\t                shapeValue: shape_pool.clone(this.pv),\r\n\t                lastIndex: 0,\r\n\t                lastTime: initialDefaultFrame\r\n\t            };\r\n\t        }\r\n\t        if(frameNum !== this._cachingAtTime.lastTime) {\r\n\t            this._cachingAtTime.lastTime = frameNum;\r\n\t            frameNum *= this.elem.globalData.frameRate;\r\n\t            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n\t        }\r\n\t        return this._cachingAtTime.shapeValue;\r\n\t    }\r\n\t\r\n\t    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n\t    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\t\r\n\t    function ShapeExpressions(){}\r\n\t    ShapeExpressions.prototype = {\r\n\t        vertices: function(prop, time){\r\n\t            var shapePath = this.v;\r\n\t            if(time !== undefined) {\r\n\t                shapePath = this.getValueAtTime(time, 0);\r\n\t            }\r\n\t            var i, len = shapePath._length;\r\n\t            var vertices = shapePath[prop];\r\n\t            var points = shapePath.v;\r\n\t            var arr = createSizedArray(len);\r\n\t            for(i = 0; i < len; i += 1) {\r\n\t                if(prop === 'i' || prop === 'o') {\r\n\t                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n\t                } else {\r\n\t                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n\t                }\r\n\t                \r\n\t            }\r\n\t            return arr;\r\n\t        },\r\n\t        points: function(time){\r\n\t            return this.vertices('v', time);\r\n\t        },\r\n\t        inTangents: function(time){\r\n\t            return this.vertices('i', time);\r\n\t        },\r\n\t        outTangents: function(time){\r\n\t            return this.vertices('o', time);\r\n\t        },\r\n\t        isClosed: function(){\r\n\t            return this.v.c;\r\n\t        },\r\n\t        pointOnPath: function(perc, time){\r\n\t            var shapePath = this.v;\r\n\t            if(time !== undefined) {\r\n\t                shapePath = this.getValueAtTime(time, 0);\r\n\t            }\r\n\t            if(!this._segmentsLength) {\r\n\t                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n\t            }\r\n\t\r\n\t            var segmentsLength = this._segmentsLength;\r\n\t            var lengths = segmentsLength.lengths;\r\n\t            var lengthPos = segmentsLength.totalLength * perc;\r\n\t            var i = 0, len = lengths.length;\r\n\t            var j = 0, jLen;\r\n\t            var accumulatedLength = 0, pt;\r\n\t            while(i < len) {\r\n\t                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n\t                    var initIndex = i;\r\n\t                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n\t                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n\t                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n\t                    break;\r\n\t                } else {\r\n\t                    accumulatedLength += lengths[i].addedLength;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            if(!pt){\r\n\t                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n\t            }\r\n\t            return pt;\r\n\t        },\r\n\t        vectorOnPath: function(perc, time, vectorType){\r\n\t            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n\t            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n\t            var pt1 = this.pointOnPath(perc, time);\r\n\t            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n\t            var xLength = pt2[0] - pt1[0];\r\n\t            var yLength = pt2[1] - pt1[1];\r\n\t            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n\t            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n\t            return unitVector;\r\n\t        },\r\n\t        tangentOnPath: function(perc, time){\r\n\t            return this.vectorOnPath(perc, time, 'tangent');\r\n\t        },\r\n\t        normalOnPath: function(perc, time){\r\n\t            return this.vectorOnPath(perc, time, 'normal');\r\n\t        },\r\n\t        setGroupProperty: setGroupProperty,\r\n\t        getValueAtTime: getStaticValueAtTime\r\n\t    };\r\n\t    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n\t    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n\t    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n\t    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\t\r\n\t    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n\t    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n\t        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n\t        prop.propertyIndex = data.ix;\r\n\t        prop.lock = false;\r\n\t        if(type === 3){\r\n\t            searchExpressions(elem,data.pt,prop);\r\n\t        } else if(type === 4){\r\n\t            searchExpressions(elem,data.ks,prop);\r\n\t        }\r\n\t        if(prop.k){\r\n\t            elem.addDynamicProperty(prop);\r\n\t        }\r\n\t        return prop;\r\n\t    };\r\n\t\r\n\t    var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n\t    TextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n\t        if(data.t === 1){\r\n\t            return new TextExpressionSelectorProp(elem, data,arr);\r\n\t        } else {\r\n\t            return propertyGetTextProp(elem,data,arr);\r\n\t        }\r\n\t    };\r\n\t}());\n\t(function addDecorator() {\r\n\t\r\n\t    function searchExpressions(){\r\n\t        if(this.data.d.x){\r\n\t            this.comp = this.elem.comp;\r\n\t            if(this.getValue) {\r\n\t                this.getPreValue = this.getValue;\r\n\t            }\r\n\t            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n\t            this.getValue = this.getExpressionValue;\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    TextProperty.prototype.searchProperty = function(){\r\n\t        this.kf = this.searchExpressions() || this.data.d.k.length > 1;\r\n\t        return this.kf;\r\n\t    };\r\n\t\r\n\t    TextProperty.prototype.getExpressionValue = function(num){\r\n\t        this.calculateExpression();\r\n\t        if(this._mdf) {\r\n\t            this.currentData.t = this.v.toString();\r\n\t            this.completeTextData(this.currentData);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    TextProperty.prototype.searchExpressions = searchExpressions;\r\n\t    \r\n\t}());\n\tvar ShapeExpressionInterface = (function(){\r\n\t\r\n\t    function iterateElements(shapes,view, propertyGroup){\r\n\t        var arr = [];\r\n\t        var i, len = shapes ? shapes.length : 0;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            if(shapes[i].ty == 'gr'){\r\n\t                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'fl'){\r\n\t                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'st'){\r\n\t                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'tm'){\r\n\t                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'tr'){\r\n\t                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'el'){\r\n\t                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'sr'){\r\n\t                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            } else if(shapes[i].ty == 'sh'){\r\n\t                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            } else if(shapes[i].ty == 'rc'){\r\n\t                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            } else if(shapes[i].ty == 'rd'){\r\n\t                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            } else if(shapes[i].ty == 'rp'){\r\n\t                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }\r\n\t        }\r\n\t        return arr;\r\n\t    }\r\n\t\r\n\t    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n\t       var interfaces;\r\n\t       var interfaceFunction = function _interfaceFunction(value){\r\n\t           var i = 0, len = interfaces.length;\r\n\t            while(i<len){\r\n\t                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n\t                   return interfaces[i];\r\n\t                }\r\n\t                i+=1;\r\n\t            }\r\n\t            if(typeof value === 'number'){\r\n\t               return interfaces[value-1];\r\n\t            }\r\n\t       };\r\n\t       interfaceFunction.propertyGroup = function(val){\r\n\t           if(val === 1){\r\n\t               return interfaceFunction;\r\n\t           } else{\r\n\t               return propertyGroup(val-1);\r\n\t           }\r\n\t       };\r\n\t       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n\t       interfaceFunction.numProperties = interfaces.length;\r\n\t       interfaceFunction.propertyIndex = shape.cix;\r\n\t       interfaceFunction._name = shape.nm;\r\n\t\r\n\t       return interfaceFunction;\r\n\t   }\r\n\t\r\n\t    function groupInterfaceFactory(shape,view, propertyGroup){\r\n\t        var interfaceFunction = function _interfaceFunction(value){\r\n\t            switch(value){\r\n\t                case 'ADBE Vectors Group':\r\n\t                case 'Contents':\r\n\t                case 2:\r\n\t                    return interfaceFunction.content;\r\n\t                //Not necessary for now. Keeping them here in case a new case appears\r\n\t                //case 'ADBE Vector Transform Group':\r\n\t                //case 3:\r\n\t                default:\r\n\t                    return interfaceFunction.transform;\r\n\t            }\r\n\t        };\r\n\t        interfaceFunction.propertyGroup = function(val){\r\n\t            if(val === 1){\r\n\t                return interfaceFunction;\r\n\t            } else{\r\n\t                return propertyGroup(val-1);\r\n\t            }\r\n\t        };\r\n\t        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n\t        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n\t        interfaceFunction.content = content;\r\n\t        interfaceFunction.transform = transformInterface;\r\n\t        Object.defineProperty(interfaceFunction, '_name', {\r\n\t            get: function(){\r\n\t                return shape.nm;\r\n\t            }\r\n\t        });\r\n\t        //interfaceFunction.content = interfaceFunction;\r\n\t        interfaceFunction.numProperties = shape.np;\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        interfaceFunction.nm = shape.nm;\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function fillInterfaceFactory(shape,view,propertyGroup){\r\n\t        function interfaceFunction(val){\r\n\t            if(val === 'Color' || val === 'color'){\r\n\t                return interfaceFunction.color;\r\n\t            } else if(val === 'Opacity' || val === 'opacity'){\r\n\t                return interfaceFunction.opacity;\r\n\t            }\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'color': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.c, 1 / view.c.mult, 'color');\r\n\t                }\r\n\t            },\r\n\t            'opacity': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.o, 100);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm },\r\n\t            'mn': { value: shape.mn }\r\n\t        });\r\n\t\r\n\t        view.c.setGroupProperty(propertyGroup);\r\n\t        view.o.setGroupProperty(propertyGroup);\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val === 1){\r\n\t                return ob;\r\n\t            } else{\r\n\t                return propertyGroup(val-1);\r\n\t            }\r\n\t        }\r\n\t        function _dashPropertyGroup(val){\r\n\t            if(val === 1){\r\n\t                return dashOb;\r\n\t            } else{\r\n\t                return _propertyGroup(val-1);\r\n\t            }\r\n\t        }\r\n\t        function addPropertyToDashOb(i) {\r\n\t            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.d.dataProps[i].p);\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t        var i, len = shape.d ? shape.d.length : 0;\r\n\t        var dashOb = {};\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            addPropertyToDashOb(i);\r\n\t            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n\t        }\r\n\t\r\n\t        function interfaceFunction(val){\r\n\t            if(val === 'Color' || val === 'color'){\r\n\t                return interfaceFunction.color;\r\n\t            } else if(val === 'Opacity' || val === 'opacity'){\r\n\t                return interfaceFunction.opacity;\r\n\t            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n\t                return interfaceFunction.strokeWidth;\r\n\t            }\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'color': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.c, 1 / view.c.mult, 'color');\r\n\t                }\r\n\t            },\r\n\t            'opacity': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.o, 100);\r\n\t                }\r\n\t            },\r\n\t            'strokeWidth': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.w);\r\n\t                }\r\n\t            },\r\n\t            'dash': {\r\n\t                get: function() {\r\n\t                    return dashOb;\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm },\r\n\t            'mn': { value: shape.mn }\r\n\t        });\r\n\t\r\n\t        view.c.setGroupProperty(_propertyGroup);\r\n\t        view.o.setGroupProperty(_propertyGroup);\r\n\t        view.w.setGroupProperty(_propertyGroup);\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function trimInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t\r\n\t        view.s.setGroupProperty(_propertyGroup);\r\n\t        view.e.setGroupProperty(_propertyGroup);\r\n\t        view.o.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(val){\r\n\t            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n\t                return interfaceFunction.end;\r\n\t            }\r\n\t            if(val === shape.s.ix){\r\n\t                return interfaceFunction.start;\r\n\t            }\r\n\t            if(val === shape.o.ix){\r\n\t                return interfaceFunction.offset;\r\n\t            }\r\n\t        }\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'start': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.s, 1 / view.s.mult);\r\n\t                }\r\n\t            },\r\n\t            'end': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.e, 1 / view.e.mult);\r\n\t                }\r\n\t            },\r\n\t            'offset': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.o);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function transformInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n\t        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n\t        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n\t        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n\t        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n\t        if(view.transform.mProps.sk){\r\n\t            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n\t            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n\t        }\r\n\t        view.transform.op.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.a.ix === value || value === 'Anchor Point'){\r\n\t                return interfaceFunction.anchorPoint;\r\n\t            }\r\n\t            if(shape.o.ix === value || value === 'Opacity'){\r\n\t                return interfaceFunction.opacity;\r\n\t            }\r\n\t            if(shape.p.ix === value || value === 'Position'){\r\n\t                return interfaceFunction.position;\r\n\t            }\r\n\t            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n\t                return interfaceFunction.rotation;\r\n\t            }\r\n\t            if(shape.s.ix === value || value === 'Scale'){\r\n\t                return interfaceFunction.scale;\r\n\t            }\r\n\t            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n\t                return interfaceFunction.skew;\r\n\t            }\r\n\t            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n\t                return interfaceFunction.skewAxis;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'opacity': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.o, 1/view.transform.mProps.o.mult);\r\n\t                }\r\n\t            },\r\n\t            'position': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.p);\r\n\t                }\r\n\t            },\r\n\t            'anchorPoint': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.a);\r\n\t                }\r\n\t            },\r\n\t            'scale': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.s, 1 / view.transform.mProps.s.mult);\r\n\t                }\r\n\t            },\r\n\t            'rotation': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.r, 1 / view.transform.mProps.r.mult);\r\n\t                }\r\n\t            },\r\n\t            'skew': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.sk);\r\n\t                }\r\n\t            },\r\n\t            'skewAxis': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.sa);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.ty = 'tr';\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n\t        prop.s.setGroupProperty(_propertyGroup);\r\n\t        prop.p.setGroupProperty(_propertyGroup);\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.p.ix === value){\r\n\t                return interfaceFunction.position;\r\n\t            }\r\n\t            if(shape.s.ix === value){\r\n\t                return interfaceFunction.size;\r\n\t            }\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'size': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.s);\r\n\t                }\r\n\t            },\r\n\t            'position': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.p);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function starInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        prop.or.setGroupProperty(_propertyGroup);\r\n\t        prop.os.setGroupProperty(_propertyGroup);\r\n\t        prop.pt.setGroupProperty(_propertyGroup);\r\n\t        prop.p.setGroupProperty(_propertyGroup);\r\n\t        prop.r.setGroupProperty(_propertyGroup);\r\n\t        if(shape.ir){\r\n\t            prop.ir.setGroupProperty(_propertyGroup);\r\n\t            prop.is.setGroupProperty(_propertyGroup);\r\n\t        }\r\n\t\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.p.ix === value){\r\n\t                return interfaceFunction.position;\r\n\t            }\r\n\t            if(shape.r.ix === value){\r\n\t                return interfaceFunction.rotation;\r\n\t            }\r\n\t            if(shape.pt.ix === value){\r\n\t                return interfaceFunction.points;\r\n\t            }\r\n\t            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n\t                return interfaceFunction.outerRadius;\r\n\t            }\r\n\t            if(shape.os.ix === value){\r\n\t                return interfaceFunction.outerRoundness;\r\n\t            }\r\n\t            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n\t                return interfaceFunction.innerRadius;\r\n\t            }\r\n\t            if(shape.is && shape.is.ix === value){\r\n\t                return interfaceFunction.innerRoundness;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'position': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(prop.p);\r\n\t                }\r\n\t            },\r\n\t            'rotation': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(prop.r, 1 / prop.r.mult);\r\n\t                }\r\n\t            },\r\n\t            'points': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(prop.pt);\r\n\t                }\r\n\t            },\r\n\t            'outerRadius': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(prop.or);\r\n\t                }\r\n\t            },\r\n\t            'outerRoundness': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.os);\r\n\t                }\r\n\t            },\r\n\t            'innerRadius': {\r\n\t                get: function(){\r\n\t                    if(!prop.ir){\r\n\t                        return 0;\r\n\t                    }\r\n\t                    return ExpressionValue(prop.ir);\r\n\t                }\r\n\t            },\r\n\t            'innerRoundness': {\r\n\t                get: function(){\r\n\t                    if(!prop.is){\r\n\t                        return 0;\r\n\t                    }\r\n\t                    return ExpressionValue(prop.is, 1 / prop.is.mult);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function rectInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        prop.p.setGroupProperty(_propertyGroup);\r\n\t        prop.s.setGroupProperty(_propertyGroup);\r\n\t        prop.r.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.p.ix === value){\r\n\t                return interfaceFunction.position;\r\n\t            }\r\n\t            if(shape.r.ix === value){\r\n\t                return interfaceFunction.roundness;\r\n\t            }\r\n\t            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n\t                return interfaceFunction.size;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'position': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.p);\r\n\t                }\r\n\t            },\r\n\t            'roundness': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.r);\r\n\t                }\r\n\t            },\r\n\t            'size': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.s);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        var prop = view;\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        prop.rd.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n\t                return interfaceFunction.radius;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'radius': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(prop.rd);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        var prop = view;\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        prop.c.setGroupProperty(_propertyGroup);\r\n\t        prop.o.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.c.ix === value || 'Copies' === value){\r\n\t                return interfaceFunction.copies;\r\n\t            } else if(shape.o.ix === value || 'Offset' === value){\r\n\t                return interfaceFunction.offset;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'copies': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.c);\r\n\t                }\r\n\t            },\r\n\t            'offset': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.o);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function pathInterfaceFactory(shape,view,propertyGroup){\r\n\t        var prop = view.sh;\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        prop.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(val){\r\n\t            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n\t                return interfaceFunction.path;\r\n\t            }\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'path': {\r\n\t                get: function(){\r\n\t                    if(prop.k){\r\n\t                        prop.getValue();\r\n\t                    }\r\n\t                    return prop;\r\n\t                }\r\n\t            },\r\n\t            'shape': {\r\n\t                get: function(){\r\n\t                    if(prop.k){\r\n\t                        prop.getValue();\r\n\t                    }\r\n\t                    return prop;\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm },\r\n\t            'ix': { value: shape.ix },\r\n\t            'mn': { value: shape.mn }\r\n\t        });\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    return function(shapes,view,propertyGroup) {\r\n\t        var interfaces;\r\n\t        function _interfaceFunction(value){\r\n\t            if(typeof value === 'number'){\r\n\t                return interfaces[value-1];\r\n\t            } else {\r\n\t                var i = 0, len = interfaces.length;\r\n\t                while(i<len){\r\n\t                    if(interfaces[i]._name === value){\r\n\t                        return interfaces[i];\r\n\t                    }\r\n\t                    i+=1;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        _interfaceFunction.propertyGroup = propertyGroup;\r\n\t        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n\t        return _interfaceFunction;\r\n\t    };\r\n\t}());\r\n\t\n\tvar TextExpressionInterface = (function(){\r\n\t\treturn function(elem){\r\n\t        var _prevValue, _sourceText;\r\n\t        function _thisLayerFunction(){\r\n\t        }\r\n\t        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n\t            get: function(){\r\n\t                var stringValue = elem.textProperty.currentData.t;\r\n\t                if(elem.textProperty.currentData.t !== _prevValue) {\r\n\t                    elem.textProperty.currentData.t = _prevValue;\r\n\t                    _sourceText = new String(stringValue);\r\n\t                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n\t                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n\t                }\r\n\t                return _sourceText;\r\n\t            }\r\n\t        });\r\n\t        return _thisLayerFunction;\r\n\t    };\r\n\t}());\n\tvar LayerExpressionInterface = (function (){\r\n\t    function toWorld(arr, time){\r\n\t        var toWorldMat = new Matrix();\r\n\t        toWorldMat.reset();\r\n\t        var transformMat;\r\n\t        if(time) {\r\n\t            //Todo implement value at time on transform properties\r\n\t            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n\t            transformMat = this._elem.finalTransform.mProp;\r\n\t        } else {\r\n\t            transformMat = this._elem.finalTransform.mProp;\r\n\t        }\r\n\t        transformMat.applyToMatrix(toWorldMat);\r\n\t        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n\t            var i, len = this._elem.hierarchy.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n\t            }\r\n\t            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n\t        }\r\n\t        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n\t    }\r\n\t    function fromWorld(arr, time){\r\n\t        var toWorldMat = new Matrix();\r\n\t        toWorldMat.reset();\r\n\t        var transformMat;\r\n\t        if(time) {\r\n\t            //Todo implement value at time on transform properties\r\n\t            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n\t            transformMat = this._elem.finalTransform.mProp;\r\n\t        } else {\r\n\t            transformMat = this._elem.finalTransform.mProp;\r\n\t        }\r\n\t        transformMat.applyToMatrix(toWorldMat);\r\n\t        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n\t            var i, len = this._elem.hierarchy.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n\t            }\r\n\t            return toWorldMat.inversePoint(arr);\r\n\t        }\r\n\t        return toWorldMat.inversePoint(arr);\r\n\t    }\r\n\t    function fromComp(arr){\r\n\t        var toWorldMat = new Matrix();\r\n\t        toWorldMat.reset();\r\n\t        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n\t        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n\t            var i, len = this._elem.hierarchy.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n\t            }\r\n\t            return toWorldMat.inversePoint(arr);\r\n\t        }\r\n\t        return toWorldMat.inversePoint(arr);\r\n\t    }\r\n\t\r\n\t\r\n\t    return function(elem){\r\n\t\r\n\t        var transformInterface;\r\n\t\r\n\t        function _registerMaskInterface(maskManager){\r\n\t            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n\t        }\r\n\t        function _registerEffectsInterface(effects){\r\n\t            _thisLayerFunction.effect = effects;\r\n\t        }\r\n\t\r\n\t        function _thisLayerFunction(name){\r\n\t            switch(name){\r\n\t                case \"ADBE Root Vectors Group\":\r\n\t                case \"Contents\":\r\n\t                case 2:\r\n\t                    return _thisLayerFunction.shapeInterface;\r\n\t                case 1:\r\n\t                case 6:\r\n\t                case \"Transform\":\r\n\t                case \"transform\":\r\n\t                case \"ADBE Transform Group\":\r\n\t                    return transformInterface;\r\n\t                case 4:\r\n\t                case \"ADBE Effect Parade\":\r\n\t                    return _thisLayerFunction.effect;\r\n\t            }\r\n\t        }\r\n\t        _thisLayerFunction.toWorld = toWorld;\r\n\t        _thisLayerFunction.fromWorld = fromWorld;\r\n\t        _thisLayerFunction.toComp = toWorld;\r\n\t        _thisLayerFunction.fromComp = fromComp;\r\n\t        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n\t        _thisLayerFunction._elem = elem;\r\n\t        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n\t        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n\t        Object.defineProperties(_thisLayerFunction,{\r\n\t            hasParent: {\r\n\t                get: function(){\r\n\t                    return elem.hierarchy.length;\r\n\t                }\r\n\t            },\r\n\t            parent: {\r\n\t                get: function(){\r\n\t                    return elem.hierarchy[0].layerInterface;\r\n\t                }\r\n\t            },\r\n\t            rotation: getDescriptor(transformInterface, 'rotation'),\r\n\t            scale: getDescriptor(transformInterface, 'scale'),\r\n\t            position: getDescriptor(transformInterface, 'position'),\r\n\t            opacity: getDescriptor(transformInterface, 'opacity'),\r\n\t            anchorPoint: anchorPointDescriptor,\r\n\t            anchor_point: anchorPointDescriptor,\r\n\t            transform: {\r\n\t                get: function () {\r\n\t                    return transformInterface;\r\n\t                }\r\n\t            },\r\n\t            active: {\r\n\t                get: function(){\r\n\t                    return elem.isInRange;\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t\r\n\t        _thisLayerFunction.startTime = elem.data.st;\r\n\t        _thisLayerFunction.index = elem.data.ind;\r\n\t        _thisLayerFunction.source = elem.data.refId;\r\n\t        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n\t        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n\t\r\n\t        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n\t        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n\t        return _thisLayerFunction;\r\n\t    };\r\n\t}());\r\n\t\n\tvar CompExpressionInterface = (function (){\r\n\t    return function(comp){\r\n\t        function _thisLayerFunction(name){\r\n\t            var i=0, len = comp.layers.length;\r\n\t            while(i<len){\r\n\t                if(comp.layers[i].nm === name || comp.layers[i].ind === name){\r\n\t                    return comp.elements[i].layerInterface;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            return {active:false};\r\n\t        }\r\n\t        Object.defineProperty(_thisLayerFunction, \"_name\", { value:comp.data.nm });\r\n\t        _thisLayerFunction.layer = _thisLayerFunction;\r\n\t        _thisLayerFunction.pixelAspect = 1;\r\n\t        _thisLayerFunction.height = comp.globalData.compSize.h;\r\n\t        _thisLayerFunction.width = comp.globalData.compSize.w;\r\n\t        _thisLayerFunction.pixelAspect = 1;\r\n\t        _thisLayerFunction.frameDuration = 1/comp.globalData.frameRate;\r\n\t        return _thisLayerFunction;\r\n\t    };\r\n\t}());\n\tvar TransformExpressionInterface = (function (){\r\n\t    return function(transform){\r\n\t        function _thisFunction(name){\r\n\t            switch(name){\r\n\t                case \"scale\":\r\n\t                case \"Scale\":\r\n\t                case \"ADBE Scale\":\r\n\t                case 6:\r\n\t                    return _thisFunction.scale;\r\n\t                case \"rotation\":\r\n\t                case \"Rotation\":\r\n\t                case \"ADBE Rotation\":\r\n\t                case \"ADBE Rotate Z\":\r\n\t                case 10:\r\n\t                    return _thisFunction.rotation;\r\n\t                case \"ADBE Rotate X\":\r\n\t                    return _thisFunction.xRotation;\r\n\t                case \"ADBE Rotate Y\":\r\n\t                    return _thisFunction.yRotation;\r\n\t                case \"position\":\r\n\t                case \"Position\":\r\n\t                case \"ADBE Position\":\r\n\t                case 2:\r\n\t                    return _thisFunction.position;\r\n\t                case 'ADBE Position_0':\r\n\t                    return _thisFunction.xPosition;\r\n\t                case 'ADBE Position_1':\r\n\t                    return _thisFunction.yPosition;\r\n\t                case 'ADBE Position_2':\r\n\t                    return _thisFunction.zPosition;\r\n\t                case \"anchorPoint\":\r\n\t                case \"AnchorPoint\":\r\n\t                case \"Anchor Point\":\r\n\t                case \"ADBE AnchorPoint\":\r\n\t                case 1:\r\n\t                    return _thisFunction.anchorPoint;\r\n\t                case \"opacity\":\r\n\t                case \"Opacity\":\r\n\t                case 11:\r\n\t                    return _thisFunction.opacity;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"rotation\", {\r\n\t            get: function(){\r\n\t                if(transform.r) {\r\n\t                    return ExpressionValue(transform.r, 1/degToRads);\r\n\t                } else {\r\n\t                    return ExpressionValue(transform.rz, 1/degToRads);\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n\t            get: function(){\r\n\t                    return ExpressionValue(transform.rx, 1/degToRads);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n\t            get: function(){\r\n\t                    return ExpressionValue(transform.ry, 1/degToRads);\r\n\t            }\r\n\t        });\r\n\t        Object.defineProperty(_thisFunction, \"scale\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.s, 100);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"position\", {\r\n\t            get: function () {\r\n\t                if(transform.p) {\r\n\t                    return ExpressionValue(transform.p);\r\n\t                } else {\r\n\t                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.px);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.py);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.pz);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.a);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"opacity\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.o, 100);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"skew\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.sk);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.sa);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"orientation\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.or);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        return _thisFunction;\r\n\t    };\r\n\t}());\n\tvar ProjectInterface = (function (){\r\n\t\r\n\t    function registerComposition(comp){\r\n\t        this.compositions.push(comp);\r\n\t    }\r\n\t\r\n\t    return function(){\r\n\t        function _thisProjectFunction(name){\r\n\t            var i = 0, len = this.compositions.length;\r\n\t            while(i<len){\r\n\t                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n\t                    if(this.compositions[i].prepareFrame) {\r\n\t                        this.compositions[i].prepareFrame(this.compositions[i].data.xt ? this.currentFrame : this.compositions[i].renderedFrame);\r\n\t                    }\r\n\t                    return this.compositions[i].compInterface;\r\n\t                }\r\n\t                i+=1;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        _thisProjectFunction.compositions = [];\r\n\t        _thisProjectFunction.currentFrame = 0;\r\n\t\r\n\t        _thisProjectFunction.registerComposition = registerComposition;\r\n\t\r\n\t\r\n\t\r\n\t        return _thisProjectFunction;\r\n\t    };\r\n\t}());\n\tvar EffectsExpressionInterface = (function (){\r\n\t    var ob = {\r\n\t        createEffectsInterface: createEffectsInterface\r\n\t    };\r\n\t\r\n\t    function createEffectsInterface(elem, propertyGroup){\r\n\t        if(elem.effectsManager){\r\n\t\r\n\t            var effectElements = [];\r\n\t            var effectsData = elem.data.ef;\r\n\t            var i, len = elem.effectsManager.effectElements.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n\t            }\r\n\t\r\n\t            return function(name){\r\n\t                var effects = elem.data.ef, i = 0, len = effects.length;\r\n\t                while(i<len) {\r\n\t                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n\t                        return effectElements[i];\r\n\t                    }\r\n\t                    i += 1;\r\n\t                }\r\n\t            };\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function createGroupInterface(data,elements, propertyGroup, elem){\r\n\t        var effectElements = [];\r\n\t        var i, len = data.ef.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            if(data.ef[i].ty === 5){\r\n\t                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n\t            } else {\r\n\t                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n\t            }\r\n\t        }\r\n\t\r\n\t        function _propertyGroup(val) {\r\n\t            if(val === 1){\r\n\t               return groupInterface;\r\n\t            } else{\r\n\t               return propertyGroup(val-1);\r\n\t            }\r\n\t        }\r\n\t\r\n\t        var groupInterface = function(name){\r\n\t            var effects = data.ef, i = 0, len = effects.length;\r\n\t            while(i<len) {\r\n\t                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n\t                    if(effects[i].ty === 5){\r\n\t                        return effectElements[i];\r\n\t                    } else {\r\n\t                        return effectElements[i]();\r\n\t                    }\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            return effectElements[0]();\r\n\t        };\r\n\t\r\n\t        groupInterface.propertyGroup = _propertyGroup;\r\n\t\r\n\t        if(data.mn === 'ADBE Color Control'){\r\n\t            Object.defineProperty(groupInterface, 'color', {\r\n\t                get: function(){\r\n\t                    return effectElements[0]();\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t        Object.defineProperty(groupInterface, 'numProperties', {\r\n\t            get: function(){\r\n\t                return data.np;\r\n\t            }\r\n\t        });\r\n\t        groupInterface.active = data.en !== 0;\r\n\t        return groupInterface;\r\n\t    }\r\n\t\r\n\t    function createValueInterface(element, type, elem, propertyGroup){\r\n\t        function interfaceFunction(){\r\n\t            if(type === 10){\r\n\t                return elem.comp.compInterface(element.p.v);\r\n\t            }\r\n\t            return ExpressionValue(element.p);\r\n\t        }\r\n\t\r\n\t        if(element.p.setGroupProperty) {\r\n\t            element.p.setGroupProperty(propertyGroup);\r\n\t        }\r\n\t\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    return ob;\r\n\t\r\n\t}());\n\tvar MaskManagerInterface = (function(){\r\n\t\r\n\t\tfunction MaskInterface(mask, data){\r\n\t\t\tthis._mask = mask;\r\n\t\t\tthis._data = data;\r\n\t\t}\r\n\t\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n\t        get: function(){\r\n\t                if(this._mask.prop.k){\r\n\t                    this._mask.prop.getValue();\r\n\t                }\r\n\t                return this._mask.prop;\r\n\t            }\r\n\t        });\r\n\t\r\n\t\tvar MaskManager = function(maskManager, elem){\r\n\t\t\tvar _maskManager = maskManager;\r\n\t\t\tvar _elem = elem;\r\n\t\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\t\tvar i, len = maskManager.viewData.length;\r\n\t\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t\t}\r\n\t\r\n\t\t\tvar maskFunction = function(name){\r\n\t\t\t\ti = 0;\r\n\t\t\t    while(i<len){\r\n\t\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t\t            return _masksInterfaces[i];\r\n\t\t\t        }\r\n\t\t\t        i += 1;\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\treturn maskFunction;\r\n\t\t};\r\n\t\treturn MaskManager;\r\n\t}());\r\n\t\n\tvar ExpressionValue = (function() {\r\n\t\treturn function(elementProp, mult, type) {\r\n\t        mult = mult || 1;\r\n\t        var expressionValue, arrayValue;\r\n\t\r\n\t\t\tif (elementProp.k) {\r\n\t            elementProp.getValue();\r\n\t        }\r\n\t        var i, len, arrValue, val;\r\n\t        if (type) {\r\n\t        \tif(type === 'color') {\r\n\t        \t\tlen = 4;\r\n\t                expressionValue = createTypedArray('float32', len);\r\n\t                arrValue = createTypedArray('float32', len);\r\n\t\t\t        for (i = 0; i < len; i += 1) {\r\n\t\t\t            expressionValue[i] = arrValue[i] = (i < 3) ? elementProp.v[i] * mult : 1;\r\n\t\t\t        }\r\n\t\t        \texpressionValue.value = arrValue;\r\n\t        \t}\r\n\t        } else if (elementProp.propType === 'unidimensional'){\r\n\t            val = elementProp.v * mult;\r\n\t            expressionValue = new Number(val);\r\n\t            expressionValue.value = val;\r\n\t        } else {\r\n\t        \tlen = elementProp.pv.length;\r\n\t            expressionValue = createTypedArray('float32', len);\r\n\t            arrValue = createTypedArray('float32', len);\r\n\t\t        for (i = 0; i < len; i += 1) {\r\n\t\t            expressionValue[i] = arrValue[i] = elementProp.v[i] * mult;\r\n\t\t        }\r\n\t\t        expressionValue.value = arrValue;\r\n\t        }\r\n\t        \r\n\t        expressionValue.numKeys = elementProp.keyframes ? elementProp.keyframes.length : 0;\r\n\t        expressionValue.key = function(pos) {\r\n\t            if (!expressionValue.numKeys) {\r\n\t                return 0;\r\n\t            } else {\r\n\t                return elementProp.keyframes[pos-1].t;\r\n\t            }\r\n\t        };\r\n\t        expressionValue.valueAtTime = elementProp.getValueAtTime;\r\n\t        expressionValue.propertyGroup = elementProp.propertyGroup;\r\n\t        return expressionValue;\r\n\t\t};\r\n\t}());\n\tfunction SliderEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n\t}\r\n\tfunction AngleEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n\t}\r\n\tfunction ColorEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n\t}\r\n\tfunction PointEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n\t}\r\n\tfunction LayerIndexEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n\t}\r\n\tfunction MaskIndexEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n\t}\r\n\tfunction CheckboxEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n\t}\r\n\tfunction NoValueEffect(){\r\n\t    this.p = {};\r\n\t}\n\tfunction EffectsManager(data,element){\r\n\t    var effects = data.ef || [];\r\n\t    this.effectElements = [];\r\n\t    var i,len = effects.length;\r\n\t    var effectItem;\r\n\t    for(i=0;i<len;i++) {\r\n\t        effectItem = new GroupEffect(effects[i],element);\r\n\t        this.effectElements.push(effectItem);\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction GroupEffect(data,element){\r\n\t    this.container = element;\r\n\t    this.dynamicProperties = [];\r\n\t    this.init(data,element);\r\n\t}\r\n\t\r\n\tGroupEffect.prototype.getValue = function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tGroupEffect.prototype.addDynamicProperty = addDynamicProperty;\r\n\t\r\n\tGroupEffect.prototype.init = function(data,element){\r\n\t    this.data = data;\r\n\t    this._mdf = false;\r\n\t    this.effectElements = [];\r\n\t    var i, len = this.data.ef.length;\r\n\t    var eff, effects = this.data.ef;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        eff = null;\r\n\t        switch(effects[i].ty){\r\n\t            case 0:\r\n\t                eff = new SliderEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 1:\r\n\t                eff = new AngleEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 2:\r\n\t                eff = new ColorEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 3:\r\n\t                eff = new PointEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 4:\r\n\t            case 7:\r\n\t                eff = new CheckboxEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 10:\r\n\t                eff = new LayerIndexEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 11:\r\n\t                eff = new MaskIndexEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 5:\r\n\t                eff = new EffectsManager(effects[i],element,this);\r\n\t                break;\r\n\t            //case 6:\r\n\t            default:\r\n\t                eff = new NoValueEffect(effects[i],element,this);\r\n\t                break;\r\n\t        }\r\n\t        if(eff) {\r\n\t            this.effectElements.push(eff);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t    var lottiejs = {};\r\n\t\r\n\t    function setLocationHref (href) {\r\n\t        locationHref = href;\r\n\t    }\r\n\t    function play(animation){\r\n\t        animationManager.play(animation);\r\n\t    }\r\n\t\r\n\t    function pause(animation) {\r\n\t        animationManager.pause(animation);\r\n\t    }\r\n\t\r\n\t    function togglePause(animation) {\r\n\t        animationManager.togglePause(animation);\r\n\t    }\r\n\t\r\n\t    function setSpeed(value, animation) {\r\n\t        animationManager.setSpeed(value, animation);\r\n\t    }\r\n\t\r\n\t    function setDirection(value, animation) {\r\n\t        animationManager.setDirection(value, animation);\r\n\t    }\r\n\t\r\n\t    function stop(animation) {\r\n\t        animationManager.stop(animation);\r\n\t    }\r\n\t\r\n\t    function searchAnimations() {\r\n\t        if (standalone === true) {\r\n\t            animationManager.searchAnimations(animationData, standalone, renderer);\r\n\t        } else {\r\n\t            animationManager.searchAnimations();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function registerAnimation(elem) {\r\n\t        return animationManager.registerAnimation(elem);\r\n\t    }\r\n\t\r\n\t    function resize() {\r\n\t        animationManager.resize();\r\n\t    }\r\n\t\r\n\t    /*function start() {\r\n\t        animationManager.start();\r\n\t    }*/\r\n\t\r\n\t    function goToAndStop(val, isFrame, animation) {\r\n\t        animationManager.goToAndStop(val, isFrame, animation);\r\n\t    }\r\n\t\r\n\t    function setSubframeRendering(flag) {\r\n\t        subframeEnabled = flag;\r\n\t    }\r\n\t\r\n\t    function loadAnimation(params) {\r\n\t        if (standalone === true) {\r\n\t            params.animationData = JSON.parse(animationData);\r\n\t        }\r\n\t        return animationManager.loadAnimation(params);\r\n\t    }\r\n\t\r\n\t    function destroy(animation) {\r\n\t        return animationManager.destroy(animation);\r\n\t    }\r\n\t\r\n\t    function setQuality(value) {\r\n\t        if (typeof value === 'string') {\r\n\t            switch (value) {\r\n\t                case 'high':\r\n\t                    defaultCurveSegments = 200;\r\n\t                    break;\r\n\t                case 'medium':\r\n\t                    defaultCurveSegments = 50;\r\n\t                    break;\r\n\t                case 'low':\r\n\t                    defaultCurveSegments = 10;\r\n\t                    break;\r\n\t            }\r\n\t        } else if (!isNaN(value) && value > 1) {\r\n\t            defaultCurveSegments = value;\r\n\t        }\r\n\t        if (defaultCurveSegments >= 50) {\r\n\t            roundValues(false);\r\n\t        } else {\r\n\t            roundValues(true);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function inBrowser() {\r\n\t        return typeof navigator !== 'undefined';\r\n\t    }\r\n\t\r\n\t    function installPlugin(type, plugin) {\r\n\t        if (type === 'expressions') {\r\n\t            expressionsPlugin = plugin;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getFactory(name) {\r\n\t        switch (name) {\r\n\t            case \"propertyFactory\":\r\n\t                return PropertyFactory;\r\n\t            case \"shapePropertyFactory\":\r\n\t                return ShapePropertyFactory;\r\n\t            case \"matrix\":\r\n\t                return Matrix;\r\n\t        }\r\n\t    }\r\n\t    lottiejs.play = play;\r\n\t    lottiejs.pause = pause;\r\n\t    lottiejs.setLocationHref = setLocationHref;\r\n\t    lottiejs.togglePause = togglePause;\r\n\t    lottiejs.setSpeed = setSpeed;\r\n\t    lottiejs.setDirection = setDirection;\r\n\t    lottiejs.stop = stop;\r\n\t    lottiejs.searchAnimations = searchAnimations;\r\n\t    lottiejs.registerAnimation = registerAnimation;\r\n\t    lottiejs.loadAnimation = loadAnimation;\r\n\t    lottiejs.setSubframeRendering = setSubframeRendering;\r\n\t    lottiejs.resize = resize;\r\n\t    //lottiejs.start = start;\r\n\t    lottiejs.goToAndStop = goToAndStop;\r\n\t    lottiejs.destroy = destroy;\r\n\t    lottiejs.setQuality = setQuality;\r\n\t    lottiejs.inBrowser = inBrowser;\r\n\t    lottiejs.installPlugin = installPlugin;\r\n\t    lottiejs.__getFactory = getFactory;\r\n\t    lottiejs.version = '5.1.9';\r\n\t\r\n\t    function checkReady() {\r\n\t        if (document.readyState === \"complete\") {\r\n\t            clearInterval(readyStateCheckInterval);\r\n\t            searchAnimations();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getQueryVariable(variable) {\r\n\t        var vars = queryString.split('&');\r\n\t        for (var i = 0; i < vars.length; i++) {\r\n\t            var pair = vars[i].split('=');\r\n\t            if (decodeURIComponent(pair[0]) == variable) {\r\n\t                return decodeURIComponent(pair[1]);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    var standalone = '__[STANDALONE]__';\r\n\t    var animationData = '__[ANIMATIONDATA]__';\r\n\t    var renderer = '';\r\n\t    if (standalone) {\r\n\t        var scripts = document.getElementsByTagName('script');\r\n\t        var index = scripts.length - 1;\r\n\t        var myScript = scripts[index] || {\r\n\t            src: ''\r\n\t        };\r\n\t        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n\t        renderer = getQueryVariable('renderer');\r\n\t    }\r\n\t    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n\t    return lottiejs;\r\n\t}));\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ }),\n\n/***/ 202:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(5);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(154);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _lottieWeb = __webpack_require__(320);\n\t\n\tvar _lottieWeb2 = _interopRequireDefault(_lottieWeb);\n\t\n\tvar _animation = __webpack_require__(319);\n\t\n\tvar _animation2 = _interopRequireDefault(_animation);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar IndexPage = function (_React$Component) {\n\t  _inherits(IndexPage, _React$Component);\n\t\n\t  function IndexPage(props) {\n\t    _classCallCheck(this, IndexPage);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this._click = function () {\n\t      _this.setState({ show: true });\n\t\n\t      setTimeout(function () {\n\t        return _this.setState({ show: false });\n\t      }, 1500);\n\t    };\n\t\n\t    _this.state = { show: false };\n\t    return _this;\n\t  }\n\t\n\t  IndexPage.prototype.componentDidUpdate = function componentDidUpdate() {\n\t    if (this._el) {\n\t      this._animation = _lottieWeb2.default.loadAnimation({\n\t        container: this._el,\n\t        renderer: 'svg',\n\t        animationData: _animation2.default\n\t      });\n\t    }\n\t  };\n\t\n\t  IndexPage.prototype.render = function render() {\n\t    var _this2 = this;\n\t\n\t    return _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        _react2.default.createElement(\n\t          'span',\n\t          {\n\t            style: {\n\t              fontWeight: 'bold',\n\t              color: 'purple',\n\t              cursor: 'pointer'\n\t            },\n\t            onClick: this._click\n\t          },\n\t          'Click me'\n\t        ),\n\t        ' to see miracle'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Now go build something great.'\n\t      ),\n\t      this.state.show && _react2.default.createElement('div', {\n\t        id: 'animation',\n\t        ref: function ref(el) {\n\t          return _this2._el = el;\n\t        },\n\t        style: {\n\t          position: 'absolute',\n\t          width: '100%',\n\t          height: '100%',\n\t          top: 0,\n\t          left: 0\n\t        }\n\t      })\n\t    );\n\t  };\n\t\n\t  return IndexPage;\n\t}(_react2.default.Component);\n\t\n\texports.default = IndexPage;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 319:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"v\":\"4.9.0\",\"fr\":30,\"ip\":0,\"op\":38,\"w\":315,\"h\":280,\"nm\":\"new\",\"ddd\":0,\"assets\":[],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"bodyband Konturen\",\"parent\":3,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[157.5,129,0]},\"a\":{\"a\":0,\"k\":[157.5,140,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":9,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,52],[14.5,52],[14.5,52.25],[-14.5,52.25]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-41],[14.5,-41],[14.5,52.25],[-14.5,52.25]],\"c\":true}]},{\"t\":19.111328125}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.871,0.702,0.271,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[160.5,184],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"topband Konturen\",\"parent\":4,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[157.5,140,0]},\"a\":{\"a\":0,\"k\":[157.5,140,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":16.777,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-14.5],[14.5,-14.5],[15.036,-14.207],[-13.964,-14.207]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-14.5],[14.5,-14.5],[14.5,14.5],[-14.5,14.5]],\"c\":true}]},{\"t\":23}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.831,0.396,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[160.5,128.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"body Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0],\"e\":[-13]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5.432,\"s\":[-13],\"e\":[17.85]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11.111,\"s\":[17.85],\"e\":[0]},{\"t\":16.2958984375}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":0,\"s\":[162.125,247.599,0],\"e\":[162.125,145.599,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":8.148,\"s\":[162.125,145.599,0],\"e\":[162.125,236.099,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":16.2958984375}]},\"a\":{\"a\":0,\"k\":[162.125,225.099,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":0,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[-3.228,0],[0,0],[-2.75,0.062]],\"o\":[[0,0],[0,0],[4.75,-0.188],[0,0],[3.228,0],[0,0]],\"v\":[[56.25,46.5],[-54.75,46.5],[-55,46.688],[-49.658,46.5],[49.658,46.5],[56,46.688]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[-3.228,0],[0,0],[0,3.21]],\"o\":[[0,0],[0,0],[0,3.21],[0,0],[3.228,0],[0,0]],\"v\":[[55.5,-46.5],[-55.5,-46.5],[-55.5,40.688],[-49.658,46.5],[49.658,46.5],[55.5,40.688]],\"c\":true}]},{\"t\":3.7041015625}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.008,0.588,0.847,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161.5,178.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"top Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3.704,\"s\":[0],\"e\":[100]},{\"t\":4.4443359375}]},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8.148,\"s\":[10],\"e\":[-23]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":14.074,\"s\":[-23],\"e\":[0]},{\"t\":20}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.937,\"y\":0.946},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p937_0p946_0p167_0p167\",\"t\":0,\"s\":[160,177.5,0],\"e\":[150,34.5,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.097,\"y\":0},\"o\":{\"x\":0.084,\"y\":0.101},\"n\":\"0p097_0_0p084_0p101\",\"t\":10.37,\"s\":[150,34.5,0],\"e\":[161,128.5,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":20}]},\"a\":{\"a\":0,\"k\":[161,128.5,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[0,0,100],\"e\":[58.621,58.621,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":10.37,\"s\":[58.621,58.621,100],\"e\":[100,100,100]},{\"t\":20}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.219,0],[0,0],[0,-3.204],[0,0],[-3.219,0],[0,0],[0,3.204],[0,0]],\"o\":[[0,0],[-3.219,0],[0,0],[0,3.204],[0,0],[3.219,0],[0,0],[0,-3.204]],\"v\":[[61.174,-14.5],[-61.174,-14.5],[-67,-8.7],[-67,8.7],[-61.174,14.5],[61.174,14.5],[67,8.7],[67,-8.7]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161,128.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"schleife/new Konturen\",\"parent\":4,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[161,115,0]},\"a\":{\"a\":0,\"k\":[161,115,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.029,0.029,0.833],\"y\":[1.656,1.656,-15.667]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p029_1p656_0p167_0p167\",\"0p029_1p656_0p167_0p167\",\"0p833_-15p667_0p167_16p667\"],\"t\":23,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":34}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[8.059,0],[1.667,-0.428],[-0.598,-1.849],[-1.278,0],[0,-4.797],[4.835,0],[0,0],[-8.693,2.139],[0.541,1.87],[3.006,-6.366],[4.932,3.716],[1.157,-1.595],[-1.586,-3.998],[0,0],[0,4.796],[-4.834,0],[-2.606,-1.934],[-1.272,1.478],[5.256,0],[0,-7.995],[-8.058,0],[0,0],[0,0],[0,7.995]],\"o\":[[-1.91,0],[0.541,1.87],[1.145,-0.282],[4.835,0],[0,4.796],[0,0],[2.097,-5.318],[-0.598,-1.849],[-9.385,2.413],[-2.071,-4.386],[-1.272,1.478],[5.152,3.823],[0,0],[-4.834,0],[0,-4.797],[3.679,0],[1.157,-1.595],[-3.498,-2.637],[-8.058,0],[0,7.995],[0,0],[0,0],[8.059,0],[0,-7.995]],\"v\":[[23.385,-14.5],[18.024,-13.831],[19.756,-8.259],[23.385,-8.7],[32.155,0],[23.385,8.7],[4.075,8.7],[19.756,-8.259],[18.024,-13.831],[0,3.422],[-10.322,-10.065],[-13.987,-5.478],[-4.083,8.7],[-23.385,8.7],[-32.154,0],[-23.385,-8.7],[-13.987,-5.478],[-10.322,-10.065],[-23.385,-14.5],[-38,0],[-23.385,14.5],[0,14.5],[23.385,14.5],[38,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.831,0.396,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161,100.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"shadow Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[162,236,0]},\"a\":{\"a\":0,\"k\":[162,225,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.115,0.115,0.833],\"y\":[1,1,-5.19]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p115_1_0p167_0p167\",\"0p115_1_0p167_0p167\",\"0p833_-5p19_0p167_16p667\"],\"t\":0,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":13}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-53.02,0],[0,-3.313],[53.02,0],[0,3.313]],\"o\":[[53.02,0],[0,3.313],[-53.02,0],[0,-3.313]],\"v\":[[0,-6],[96,0],[0,6],[-96,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945,0.945,0.945,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[162,225],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":4,\"nm\":\"Ebene 12 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":9,\"s\":[262],\"e\":[0]},{\"t\":29}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.359},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p359_0p167_0p167\",\"t\":9,\"s\":[157.5,140,0],\"e\":[95.449,44.997,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":29}]},\"a\":{\"a\":0,\"k\":[95.449,44.997,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":9,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":29}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-2.18,-3.777],[2.178,-3.775],[4.359,0.001],[2.181,3.777],[-2.18,3.775],[-4.359,-0.001]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[95.449,44.997],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Ebene 13 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[-63],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.564},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p564_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[248.067,112.75,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[248.067,112.75,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-1.53,-6.63],[4.974,-4.639],[6.505,1.99],[1.532,6.63],[-4.972,4.64],[-6.505,-1.989]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[248.067,112.75],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Ebene 14 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[-200],\"e\":[0]},{\"t\":20}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.477},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p477_0p167_0p167\",\"t\":0,\"s\":[157.5,140,0],\"e\":[268.728,57.196,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":20}]},\"a\":{\"a\":0,\"k\":[120.728,247.196,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":0,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":20}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[-2.376,-3.394],[2.799,1.018],[-2.799,3.394]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.149,0.784,0.333,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[120.728,247.196],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":10,\"ty\":4,\"nm\":\"Ebene 15 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8,\"s\":[134],\"e\":[0]},{\"t\":28}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.547},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p547_0p167_0p167\",\"t\":8,\"s\":[157.5,140,0],\"e\":[61.63,139.445,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":28}]},\"a\":{\"a\":0,\"k\":[61.63,139.445,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":8,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":28}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[4.37,-5.433],[4.286,5.433],[-4.37,1.022]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.149,0.784,0.333,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[61.63,139.445],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":11,\"ty\":4,\"nm\":\"Ebene 16 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5,\"s\":[74],\"e\":[0]},{\"t\":25}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.387},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p387_0p167_0p167\",\"t\":5,\"s\":[157.5,140,0],\"e\":[183.561,32.661,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":25}]},\"a\":{\"a\":0,\"k\":[183.561,32.661,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":5,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":25}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-2.146,0],[0,-2.147],[2.146,0],[0,2.147]],\"o\":[[2.146,0],[0,2.147],[-2.146,0],[0,-2.147]],\"v\":[[-0.001,-3.888],[3.886,0],[-0.001,3.888],[-3.887,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039,0.314,0.392,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[183.561,32.661],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":12,\"ty\":4,\"nm\":\"Ebene 17 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":12,\"s\":[29],\"e\":[0]},{\"t\":32}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.463},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p463_0p167_0p167\",\"t\":12,\"s\":[157.5,140,0],\"e\":[44.65,36.558,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":32}]},\"a\":{\"a\":0,\"k\":[214.65,244.558,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":12,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":32}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-3.22,0],[0,-3.222],[3.22,0],[0,3.221]],\"o\":[[3.22,0],[0,3.221],[-3.22,0],[0,-3.222]],\"v\":[[0,-5.832],[5.829,0],[0,5.832],[-5.829,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039,0.314,0.392,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[214.65,244.558],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":13,\"ty\":4,\"nm\":\"Ebene 18 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[168],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.243},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p243_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[294.925,112.226,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[62.925,234.226,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.209,0.131],[0,0],[0,0],[0.174,-0.142],[0,0],[0,0],[-0.093,-0.228],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.236],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.012,-0.223],[0,0],[0,0],[-0.238,-0.069],[0,0],[0,0],[-0.135,0.201],[0,0],[0,0],[0.155,0.19],[0,0],[0,0],[0.232,-0.083]],\"v\":[[2.206,-0.077],[1.1,-0.771],[1.036,-2.051],[0.544,-2.269],[-0.45,-1.461],[-1.706,-1.819],[-2.062,-1.431],[-1.568,-0.237],[-2.281,0.82],[-2.008,1.278],[-0.711,1.208],[0.105,2.221],[0.628,2.116],[0.938,0.878],[2.156,0.446]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[62.916,234.223],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":14,\"ty\":4,\"nm\":\"Ebene 19 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8,\"s\":[-209],\"e\":[0]},{\"t\":28}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.25},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p25_0p167_0p167\",\"t\":8,\"s\":[157.5,140,0],\"e\":[35.721,103.978,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":28}]},\"a\":{\"a\":0,\"k\":[35.721,103.978,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":8,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":28}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.209,0.131],[0,0],[0,0],[0.174,-0.141],[0,0],[0,0],[-0.094,-0.227],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.237],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.012,-0.224],[0,0],[0,0],[-0.238,-0.068],[0,0],[0,0],[-0.135,0.2],[0,0],[0,0],[0.155,0.191],[0,0],[0,0],[0.231,-0.083]],\"v\":[[2.206,-0.078],[1.1,-0.771],[1.036,-2.051],[0.544,-2.27],[-0.45,-1.461],[-1.706,-1.82],[-2.062,-1.432],[-1.568,-0.238],[-2.281,0.82],[-2.008,1.278],[-0.711,1.207],[0.105,2.22],[0.628,2.115],[0.938,0.878],[2.156,0.446]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[35.712,103.975],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":15,\"ty\":4,\"nm\":\"Ebene 20 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":7,\"s\":[275],\"e\":[0]},{\"t\":27}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.09},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p09_0p167_0p167\",\"t\":7,\"s\":[157.5,140,0],\"e\":[261.12,26.218,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":27}]},\"a\":{\"a\":0,\"k\":[261.12,26.218,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":7,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":27}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.21,0.131],[0,0],[0,0],[0.174,-0.141],[0,0],[0,0],[-0.093,-0.228],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.236],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.011,-0.223],[0,0],[0,0],[-0.238,-0.068],[0,0],[0,0],[-0.135,0.2],[0,0],[0,0],[0.155,0.19],[0,0],[0,0],[0.232,-0.082]],\"v\":[[2.206,-0.078],[1.099,-0.771],[1.034,-2.052],[0.543,-2.27],[-0.45,-1.461],[-1.707,-1.82],[-2.062,-1.432],[-1.568,-0.238],[-2.281,0.82],[-2.009,1.278],[-0.711,1.207],[0.105,2.22],[0.628,2.115],[0.937,0.878],[2.155,0.445]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[261.111,26.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":16,\"ty\":4,\"nm\":\"Ebene 21 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[132.9],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.326},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p326_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[268.337,196.938,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[252.337,213.938,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.411,0.258],[0,0],[0,0],[0.34,-0.276],[0,0],[0,0],[-0.184,-0.446],[0,0],[0,0],[-0.483,0.027],[0,0],[0,0],[-0.116,0.463],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.022,-0.439],[0,0],[0,0],[-0.466,-0.133],[0,0],[0,0],[-0.265,0.392],[0,0],[0,0],[0.302,0.373],[0,0],[0,0],[0.454,-0.162]],\"v\":[[4.322,-0.152],[2.152,-1.51],[2.027,-4.017],[1.065,-4.447],[-0.882,-2.861],[-3.344,-3.565],[-4.038,-2.804],[-3.072,-0.465],[-4.468,1.607],[-3.935,2.505],[-1.392,2.366],[0.207,4.35],[1.231,4.145],[1.837,1.72],[4.222,0.874]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[252.32,213.932],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":17,\"ty\":4,\"nm\":\"Ebene 22 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":13,\"s\":[-266],\"e\":[0]},{\"t\":33}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.337},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p337_0p167_0p167\",\"t\":13,\"s\":[157.5,140,0],\"e\":[133.395,26.515,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":33}]},\"a\":{\"a\":0,\"k\":[133.395,26.515,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":13,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":33}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.411,0.258],[0,0],[0,0],[0.34,-0.277],[0,0],[0,0],[-0.183,-0.446],[0,0],[0,0],[-0.484,0.026],[0,0],[0,0],[-0.116,0.462],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.022,-0.438],[0,0],[0,0],[-0.466,-0.133],[0,0],[0,0],[-0.264,0.392],[0,0],[0,0],[0.302,0.373],[0,0],[0,0],[0.454,-0.162]],\"v\":[[4.322,-0.152],[2.152,-1.511],[2.027,-4.018],[1.065,-4.446],[-0.882,-2.861],[-3.344,-3.565],[-4.039,-2.804],[-3.072,-0.466],[-4.469,1.607],[-3.935,2.505],[-1.392,2.366],[0.207,4.35],[1.231,4.145],[1.837,1.72],[4.222,0.874]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[133.378,26.508],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":18,\"ty\":4,\"nm\":\"Ebene 23 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5,\"s\":[399],\"e\":[0]},{\"t\":25}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.478},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p478_0p167_0p167\",\"t\":5,\"s\":[157.5,140,0],\"e\":[257.258,159.497,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":25}]},\"a\":{\"a\":0,\"k\":[257.258,159.497,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":5,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":25}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.721,-0.604],[0,0],[0,0],[-0.306,-0.794],[0,0],[0,0],[-0.932,0.071],[0,0],[0,0],[-0.241,0.908],[0,0],[0,0],[0.783,0.491],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.821,-0.221],[0,0],[0,0],[-0.524,0.78],[0,0],[0,0],[0.566,0.723],[0,0],[0,0],[0.869,-0.333],[0,0],[0,0],[-0.027,-0.935]],\"v\":[[2.281,-8.697],[-1.528,-5.509],[-6.23,-6.781],[-7.598,-5.261],[-5.84,-0.719],[-8.615,3.403],[-7.627,5.141],[-2.732,4.758],[0.255,8.578],[2.232,8.133],[3.5,3.356],[8.121,1.595],[8.357,-0.417],[4.245,-2.989],[4.113,-7.897]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[257.231,159.483],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":19,\"ty\":4,\"nm\":\"Ebene 24 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11,\"s\":[-212],\"e\":[0]},{\"t\":31}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.748},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p748_0p167_0p167\",\"t\":11,\"s\":[157.5,140,0],\"e\":[97.064,84.204,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":31}]},\"a\":{\"a\":0,\"k\":[97.064,84.204,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":11,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":31}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.675,-0.565],[0,0],[0,0],[-0.287,-0.743],[0,0],[0,0],[-0.872,0.067],[0,0],[0,0],[-0.226,0.849],[0,0],[0,0],[0.734,0.459],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.77,-0.208],[0,0],[0,0],[-0.491,0.73],[0,0],[0,0],[0.53,0.677],[0,0],[0,0],[0.814,-0.312],[0,0],[0,0],[-0.026,-0.875]],\"v\":[[2.135,-8.142],[-1.43,-5.157],[-5.831,-6.348],[-7.113,-4.926],[-5.467,-0.674],[-8.064,3.186],[-7.141,4.812],[-2.557,4.454],[0.239,8.029],[2.09,7.613],[3.277,3.141],[7.602,1.493],[7.822,-0.391],[3.974,-2.799],[3.851,-7.393]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[97.039,84.191],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":20,\"ty\":4,\"nm\":\"Ebene 25 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[-256],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.718},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p718_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[78.559,168.874,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[78.559,168.874,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.516,-0.432],[0,0],[0,0],[-0.219,-0.569],[0,0],[0,0],[-0.668,0.051],[0,0],[0,0],[-0.173,0.65],[0,0],[0,0],[0.562,0.351],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.588,-0.159],[0,0],[0,0],[-0.376,0.559],[0,0],[0,0],[0.405,0.518],[0,0],[0,0],[0.623,-0.239],[0,0],[0,0],[-0.02,-0.669]],\"v\":[[1.633,-6.229],[-1.096,-3.945],[-4.463,-4.856],[-5.442,-3.768],[-4.183,-0.516],[-6.17,2.436],[-5.463,3.681],[-1.958,3.407],[0.182,6.143],[1.598,5.824],[2.507,2.403],[5.814,1.142],[5.984,-0.299],[3.04,-2.141],[2.945,-5.656]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[78.54,168.865],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":21,\"ty\":4,\"nm\":\"Ebene 26 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":17,\"s\":[50],\"e\":[18]},{\"t\":37}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.897},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p897_0p167_0p167\",\"t\":17,\"s\":[157.5,140,0],\"e\":[155.771,214.44,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":37}]},\"a\":{\"a\":0,\"k\":[155.771,214.44,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.008,1.008,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,15.952]},\"n\":[\"0p042_1p008_0p167_0p167\",\"0p042_1p008_0p167_0p167\",\"0p833_-26p778_0p167_15p952\"],\"t\":17,\"s\":[0,0,100],\"e\":[67,67,100]},{\"t\":37}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[1.312,-0.183],[0,0],[0,0],[0.227,-1.177],[0,0],[0,0],[-1.168,-0.61],[0,0],[0,0],[-0.967,0.904],[0,0],[0,0],[0.57,1.171],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.816,-0.879],[0,0],[0,0],[-1.21,0.541],[0,0],[0,0],[0.137,1.287],[0,0],[0,0],[1.289,0.251],[0,0],[0,0],[0.665,-1.137]],\"v\":[[10.542,-8.02],[3.609,-7.053],[-1.06,-12.084],[-3.829,-11.291],[-5.121,-4.55],[-11.514,-1.696],[-11.632,1.119],[-5.496,4.318],[-4.779,11.114],[-2.084,12.058],[2.999,7.295],[9.835,8.642],[11.62,6.414],[8.627,0.269],[12.136,-5.695]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[155.828,214.455],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":22,\"ty\":4,\"nm\":\"Ebene 27 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11,\"s\":[-239],\"e\":[0]},{\"t\":31}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.5},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p5_0p167_0p167\",\"t\":11,\"s\":[157.5,140,0],\"e\":[219.606,61.933,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":31}]},\"a\":{\"a\":0,\"k\":[219.606,61.933,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":11,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":31}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.946,-0.131],[0,0],[0,0],[0.163,-0.849],[0,0],[0,0],[-0.842,-0.44],[0,0],[0,0],[-0.697,0.652],[0,0],[0,0],[0.411,0.845],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.588,-0.633],[0,0],[0,0],[-0.872,0.39],[0,0],[0,0],[0.099,0.928],[0,0],[0,0],[0.929,0.181],[0,0],[0,0],[0.479,-0.819]],\"v\":[[7.601,-5.783],[2.602,-5.086],[-0.764,-8.713],[-2.76,-8.141],[-3.693,-3.281],[-8.301,-1.223],[-8.387,0.807],[-3.962,3.114],[-3.445,8.013],[-1.503,8.694],[2.163,5.259],[7.09,6.23],[8.378,4.624],[6.219,0.195],[8.749,-4.107]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[219.647,61.944],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-index-js-f94f25c95891da2962dd.js","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar _invariant = require('fbjs/lib/invariant');\n\nif (process.env.NODE_ENV !== 'production') {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n\n  var injectedMixins = [];\n\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillMount`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillReceiveProps`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillUpdate`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillUpdate: 'DEFINE_MANY',\n\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n\n  /**\n   * Similar to ReactClassInterface but for static methods.\n   */\n  var ReactClassStaticInterface = {\n    /**\n     * This method is invoked after a component is instantiated and when it\n     * receives new props. Return an object to update state in response to\n     * prop changes. Return null to indicate no change to state.\n     *\n     * If an object is returned, its keys will be merged into the existing state.\n     *\n     * @return {object || null}\n     * @optional\n     */\n    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'\n  };\n\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n  var RESERVED_SPEC_KEYS = {\n    displayName: function(Constructor, displayName) {\n      Constructor.displayName = displayName;\n    },\n    mixins: function(Constructor, mixins) {\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function(Constructor, childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, childContextTypes, 'childContext');\n      }\n      Constructor.childContextTypes = _assign(\n        {},\n        Constructor.childContextTypes,\n        childContextTypes\n      );\n    },\n    contextTypes: function(Constructor, contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, contextTypes, 'context');\n      }\n      Constructor.contextTypes = _assign(\n        {},\n        Constructor.contextTypes,\n        contextTypes\n      );\n    },\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function(Constructor, getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(\n          Constructor.getDefaultProps,\n          getDefaultProps\n        );\n      } else {\n        Constructor.getDefaultProps = getDefaultProps;\n      }\n    },\n    propTypes: function(Constructor, propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, propTypes, 'prop');\n      }\n      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n    },\n    statics: function(Constructor, statics) {\n      mixStaticSpecIntoComponent(Constructor, statics);\n    },\n    autobind: function() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            typeof typeDef[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n              'React.PropTypes.',\n            Constructor.displayName || 'ReactClass',\n            ReactPropTypeLocationNames[location],\n            propName\n          );\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n      ? ReactClassInterface[name]\n      : null;\n\n    // Disallow overriding of base class methods unless explicitly allowed.\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(\n        specPolicy === 'OVERRIDE_BASE',\n        'ReactClassInterface: You are attempting to override ' +\n          '`%s` from your class specification. Ensure that your method names ' +\n          'do not overlap with React methods.',\n        name\n      );\n    }\n\n    // Disallow defining methods more than once unless explicitly allowed.\n    if (isAlreadyDefined) {\n      _invariant(\n        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n        'ReactClassInterface: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be due ' +\n          'to a mixin.',\n        name\n      );\n    }\n  }\n\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            isMixinValid,\n            \"%s: You're attempting to include a mixin that is either null \" +\n              'or not an object. Check the mixins included by the component, ' +\n              'as well as any mixins they include themselves. ' +\n              'Expected object but got %s.',\n            Constructor.displayName || 'ReactClass',\n            spec === null ? null : typeofSpec\n          );\n        }\n      }\n\n      return;\n    }\n\n    _invariant(\n      typeof spec !== 'function',\n      \"ReactClass: You're attempting to \" +\n        'use a component class or function as a mixin. Instead, just use a ' +\n        'regular object.'\n    );\n    _invariant(\n      !isValidElement(spec),\n      \"ReactClass: You're attempting to \" +\n        'use a component as a mixin. Instead, just use a regular object.'\n    );\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs;\n\n    // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind =\n          isFunction &&\n          !isReactClassMethod &&\n          !isAlreadyDefined &&\n          spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name];\n\n            // These cases should already be caught by validateMethodOverride.\n            _invariant(\n              isReactClassMethod &&\n                (specPolicy === 'DEFINE_MANY_MERGED' ||\n                  specPolicy === 'DEFINE_MANY'),\n              'ReactClass: Unexpected spec policy %s for key %s ' +\n                'when mixing in component specs.',\n              specPolicy,\n              name\n            );\n\n            // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n\n    for (var name in statics) {\n      var property = statics[name];\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n      _invariant(\n        !isReserved,\n        'ReactClass: You are attempting to define a reserved ' +\n          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n          'as an instance property instead; it will still be accessible on the ' +\n          'constructor.',\n        name\n      );\n\n      var isAlreadyDefined = name in Constructor;\n      if (isAlreadyDefined) {\n        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)\n          ? ReactClassStaticInterface[name]\n          : null;\n\n        _invariant(\n          specPolicy === 'DEFINE_MANY_MERGED',\n          'ReactClass: You are attempting to define ' +\n            '`%s` on your component more than once. This conflict may be ' +\n            'due to a mixin.',\n          name\n        );\n\n        Constructor[name] = createMergedResultFunction(Constructor[name], property);\n\n        return;\n      }\n\n      Constructor[name] = property;\n    }\n  }\n\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(\n      one && two && typeof one === 'object' && typeof two === 'object',\n      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n    );\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(\n          one[key] === undefined,\n          'mergeIntoWithNoDuplicateKeys(): ' +\n            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n            'may be due to a mixin; in particular, this may be caused by two ' +\n            'getInitialState() or getDefaultProps() methods returning objects ' +\n            'with clashing keys.',\n          key\n        );\n        one[key] = two[key];\n      }\n    }\n    return one;\n  }\n\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n      boundMethod.bind = function(newThis) {\n        for (\n          var _len = arguments.length,\n            args = Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n        if (newThis !== component && newThis !== null) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): React component methods may only be bound to the ' +\n                'component instance. See %s',\n              componentName\n            );\n          }\n        } else if (!args.length) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): You are binding a component method to the component. ' +\n                'React does this for you automatically in a high-performance ' +\n                'way, so you can safely remove this call. See %s',\n              componentName\n            );\n          }\n          return boundMethod;\n        }\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n    return boundMethod;\n  }\n\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function() {\n      this.__isMounted = true;\n    }\n  };\n\n  var IsMountedPostMixin = {\n    componentWillUnmount: function() {\n      this.__isMounted = false;\n    }\n  };\n\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function() {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this.__didWarnIsMounted,\n          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n            'subscriptions and pending requests in componentWillUnmount to ' +\n            'prevent memory leaks.',\n          (this.constructor && this.constructor.displayName) ||\n            this.name ||\n            'Component'\n        );\n        this.__didWarnIsMounted = true;\n      }\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function() {};\n  _assign(\n    ReactClassComponent.prototype,\n    ReactComponent.prototype,\n    ReactClassMixin\n  );\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function(props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n            'JSX instead. See: https://fb.me/react-legacyfactory'\n        );\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (\n          initialState === undefined &&\n          this.getInitialState._isMockFunction\n        ) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      _invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      );\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    );\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.componentWillRecieveProps,\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.UNSAFE_componentWillRecieveProps,\n        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +\n          'Did you mean UNSAFE_componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/create-react-class/factory.js\n// module id = 96\n// module chunks = 35783957827783 162898551421021 231608221292675","/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.hoistNonReactStatics = factory());\n}(this, (function () {\n    'use strict';\n    \n    var REACT_STATICS = {\n        childContextTypes: true,\n        contextTypes: true,\n        defaultProps: true,\n        displayName: true,\n        getDefaultProps: true,\n        getDerivedStateFromProps: true,\n        mixins: true,\n        propTypes: true,\n        type: true\n    };\n    \n    var KNOWN_STATICS = {\n        name: true,\n        length: true,\n        prototype: true,\n        caller: true,\n        callee: true,\n        arguments: true,\n        arity: true\n    };\n    \n    var defineProperty = Object.defineProperty;\n    var getOwnPropertyNames = Object.getOwnPropertyNames;\n    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var getPrototypeOf = Object.getPrototypeOf;\n    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n    \n    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n            \n            if (objectPrototype) {\n                var inheritedComponent = getPrototypeOf(sourceComponent);\n                if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n                }\n            }\n            \n            var keys = getOwnPropertyNames(sourceComponent);\n            \n            if (getOwnPropertySymbols) {\n                keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n            }\n            \n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                    try { // Avoid failures from read-only properties\n                        defineProperty(targetComponent, key, descriptor);\n                    } catch (e) {}\n                }\n            }\n            \n            return targetComponent;\n        }\n        \n        return targetComponent;\n    };\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hoist-non-react-statics/index.js\n// module id = 158\n// module chunks = 35783957827783 231608221292675","(function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\nfunction addDynamicProperty(prop) {\r\n\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n        this.dynamicProperties.push(prop);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n}\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (x * this.props[0] + y * this.props[4] + this.props[12])+','+(x * this.props[1] + y * this.props[5] + this.props[13]);\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var v = 10000;\r\n        var props = this.props;\r\n        return \"matrix(\" + _rnd(props[0]*v)/v + ',' + _rnd(props[1]*v)/v + ',' + _rnd(props[4]*v)/v + ',' + _rnd(props[5]*v)/v + ',' + _rnd(props[12]*v)/v + ',' + _rnd(props[13]*v)/v + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n            var curveSegments = defaultCurveSegments;\r\n            var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for (k = 0; k < curveSegments; k += 1) {\r\n                point = createSizedArray(len);\r\n                perc = k / (curveSegments - 1);\r\n                ptDistance = 0;\r\n                for (i = 0; i < len; i += 1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n                ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance, point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3; // t0*u0*u0 + u0*t0*u0 + u0*u0*t0\r\n        var t0t0u0_3 = t0*t0*u0*3; // t0*t0*u0 + u0*t0*t0 + t0*u0*t0\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt1[i] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt3[i] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt4[i] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt2[i] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            // pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            // pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            // pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = createTag('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = createTag('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = createTag('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        //On some cases the font even if it is loaded, it won't load correctly when measuring text on canvas.\r\n        //Adding this timeout seems to fix it\r\n        setTimeout(function() {\r\n            checkLoadedFonts.bind(this)();\r\n        }.bind(this), 100);\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n\r\n    function interpolateValue(frameNum, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            if(this.sh && keyData.h !== 1) {\r\n                if(frameNum >= nextKeyData.t-offsetTime){\r\n                    newValue[0] = keyData.e[0];\r\n                    newValue[1] = keyData.e[1];\r\n                    newValue[2] = keyData.e[2];\r\n                }else if(frameNum <= keyData.t-offsetTime){\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                }else{\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(keyData.e);\r\n                    var time = (frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime));\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i=0;i<len;i+=1){\r\n                    if(keyData.h !== 1){\r\n                        if(frameNum >= nextKeyData.t-offsetTime){\r\n                            perc = 1;\r\n                        }else if(frameNum < keyData.t-offsetTime){\r\n                            perc = 0;\r\n                        }else{\r\n                            if(keyData.o.x.constructor === Array){\r\n                                if(!keyData.__fnct){\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                    outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                    inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                    inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                    fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else{\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                        }\r\n                    }\r\n\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n\r\n                    if(len === 1){\r\n                        newValue = keyValue;\r\n                    }else{\r\n                        newValue[i] = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            this._caching.lastIndex = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function getNoValue(){\r\n        this._mdf = false;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(Math.abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (Math.abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }        \r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult, container);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult, container);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult, container);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult, container);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\nvar TransformPropertyFactory = (function() {\r\n\r\n    function searchDynamicProperties() {\r\n        var i, len = this.dynamicProperties.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.dynamicProperties[i].getValue();\r\n            if (this.dynamicProperties[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    function applyToMatrix(mat) {\r\n        this.searchDynamicProperties();\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n\r\n        this._mdf = false;\r\n        this.searchDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.reset();\r\n            if (this.a) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.s) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r) {\r\n                this.v.rotate(-this.r.v);\r\n            } else {\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                var v1,v2;\r\n                if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                    v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                    v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                } else {\r\n                    v1 = this.p.pv;\r\n                    v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function setInverted(){\r\n        this.inverted = true;\r\n        this.iv = new Matrix();\r\n        if(!this.k){\r\n            if(this.data.p.s){\r\n                this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n            }else{\r\n                this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n            if(this.r){\r\n                this.iv.rotate(-this.r.v);\r\n            }else{\r\n                this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n            }\r\n            if(this.s){\r\n                this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n            }\r\n            if(this.a){\r\n                this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.container = container || elem;\r\n        this.dynamicProperties = [];\r\n        this._mdf = false;\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        if(data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n        }\r\n        if(data.r) {\r\n            this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\r\n        } else if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        if(data.a) {\r\n            this.a = PropertyFactory.getProp(elem,data.a,1,0,this);\r\n        }\r\n        if(data.s) {\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this);\r\n        }\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        searchDynamicProperties: searchDynamicProperties,\r\n        getValue: processKeys,\r\n        setInverted: setInverted,\r\n        autoOrient: autoOrient,\r\n        addDynamicProperty: addDynamicProperty\r\n    }\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.lock || this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this.frameId = this.elem.globalData.frameId;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        if(!shapesEqual(this.v, finalValue)) {\r\n            this.v = shape_pool.clone(finalValue);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n        this.lock = false;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [getShapeValue.bind(this)];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.container = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this._mdf = false;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (frameNum){\r\n                var i, len = this.dynamicProperties.length;\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this._mdf = false;\r\n                this.frameId = this.elem.globalData.frameId;\r\n\r\n                for(i=0;i<len;i+=1){\r\n                    this.dynamicProperties[i].getValue(frameNum);\r\n                    if(this.dynamicProperties[i]._mdf){\r\n                        this._mdf = true;\r\n                    }\r\n                }\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            addDynamicProperty: addDynamicProperty,\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.container = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this._mdf = false;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            addDynamicProperty: addDynamicProperty,\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this._mdf = false;\r\n                this.frameId = this.elem.globalData.frameId;\r\n                var i, len = this.dynamicProperties.length;\r\n\r\n                for(i=0;i<len;i+=1){\r\n                    this.dynamicProperties[i].getValue();\r\n                    if(this.dynamicProperties[i]._mdf){\r\n                        this._mdf = true;\r\n                    }\r\n                }\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.container = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this._mdf = false;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this._mdf = false;\r\n                this.frameId = this.elem.globalData.frameId;\r\n                var i, len = this.dynamicProperties.length;\r\n\r\n                for(i=0;i<len;i+=1){\r\n                    this.dynamicProperties[i].getValue(frameNum);\r\n                    if(this.dynamicProperties[i]._mdf){\r\n                        this._mdf = true;\r\n                    }\r\n                }\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            addDynamicProperty: addDynamicProperty,\r\n            reset: resetShape\r\n        }\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.dynamicProperties = [];\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.container = elem;\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this._mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this._mdf = false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i]._mdf){\r\n            this._mdf = true;\r\n        }\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n};\r\n\r\nShapeModifier.prototype.addDynamicProperty = addDynamicProperty;\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = this.s.v + o;\r\n        e = this.e.v + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            if (shapeData.shape.v.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.container = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\nfunction DashProperty(elem, data, renderer) {\r\n    this.elem = elem;\r\n    this.container = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this._mdf = false;\r\n    this.k = false;\r\n    this.dynamicProperties = [];\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k ? true : this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nDashProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    var i = 0, len = this.dataProps.length;\r\n    this._mdf = forceRender;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    while(i<len){\r\n        this.dataProps[i].p.getValue();\r\n        if(this.dataProps[i].p._mdf){\r\n            this._mdf = true;\r\n        }\r\n        i+=1;\r\n    }\r\n    if (this._mdf) {\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\nfunction GradientProperty(elem,data){\r\n    this.container = elem;\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.data = data;\r\n    this.k = this.prop.k;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this._mdf = false;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.addDynamicProperty = function(prop) {\r\n    this.container.addDynamicProperty(this);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\nvar ImagePreloader = (function(){\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = createTag('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.destroy = destroy;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n    };\r\n}());\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._mdf = false;\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis.dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis.container = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this.dynamicProperties.length;\r\n    this._mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis.dynamicProperties[i].getValue();\r\n        this._mdf = this.dynamicProperties[i]._mdf || this._mdf;\r\n\t}\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:[0,0],\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0\r\n\r\n\t};\r\n\tif(this.searchProperty()) {\r\n        elem.addDynamicProperty(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.sz = data.sz;\r\n        currentData.ps = data.ps;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.finalSize = data.finalSize;\r\n        currentData.finalLineHeight = data.finalLineHeight;\r\n        currentData.finalText = data.finalText;\r\n        currentData.__complete = false;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_forceRender) {\r\n\tthis._mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this._isFirstFrame && !_forceRender) {\r\n\t\treturn;\r\n\t}\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this._mdf = !this._isFirstFrame;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(finalText[i].charCodeAt(0) === 13){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    for(var s in newData) {\r\n        dData[s] = newData[s];\r\n    }\r\n    this.recalculate(index);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = -1;\r\n    this._isFirstFrame = true;\r\n    this.getValue(true);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._mdf = false;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.dynamicProperties = [];\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        addDynamicProperty: addDynamicProperty,\r\n        getMult: function(ind) {\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<0.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this._mdf = newCharsFlag || false;\r\n            if(this.dynamicProperties.length){\r\n                var i, len = this.dynamicProperties.length;\r\n                for(i=0;i<len;i+=1){\r\n                    this.dynamicProperties[i].getValue();\r\n                    if(this.dynamicProperties[i]._mdf){\r\n                        this._mdf = true;\r\n                    }\r\n                }\r\n            }\r\n            var totalChars = this.data.totalChars || this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = totalChars;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        frameId: 0,\r\n        compSize: {w:0,h:0},\r\n        renderConfig: this.renderConfig,\r\n        fontManager: new FontManager()\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize.w = animData.w;\r\n    this.globalData.compSize.h = animData.h;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    this._isFirstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = 'fi_'+randomString(10);\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || this._isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || this._isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || this._isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || this._isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.addMasks();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n                this.maskManager._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = false;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n}\nfunction SVGTransformData(mProps, op) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op\r\n\t};\r\n\tthis.elements = [];\r\n}\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,elem);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',elem);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,elem);\r\n\tthis.style = styleOb;\r\n}\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,elem);\r\n\tthis.style = styleOb;\r\n}\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,elem);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,elem);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,elem);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,elem);\r\n    this.g = new GradientProperty(elem,data.g,elem);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,elem);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',elem);\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientStrokeStyleData.prototype.initGradientData = SVGGradientFillStyleData.prototype.initGradientData;\r\nSVGGradientStrokeStyleData.prototype.setGradientData = SVGGradientFillStyleData.prototype.setGradientData;\r\nSVGGradientStrokeStyleData.prototype.setGradientOpacity = SVGGradientFillStyleData.prototype.setGradientOpacity;\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\nfunction BaseElement(){\r\n}\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    if(this.data.hasMask && this.maskManager) {\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n        this.layerInterface.content = this.layerInterface.shapeInterface;\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n        this.layerInterface.text = this.layerInterface.textInterface;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.blendModeEnums = {\r\n    1:'multiply',\r\n    2:'screen',\r\n    3:'overlay',\r\n    4:'darken',\r\n    5:'lighten',\r\n    6:'color-dodge',\r\n    7:'color-burn',\r\n    8:'hard-light',\r\n    9:'soft-light',\r\n    10:'difference',\r\n    11:'exclusion',\r\n    12:'hue',\r\n    13:'saturation',\r\n    14:'color',\r\n    15:'luminosity'\r\n};\r\n\r\nBaseElement.prototype.getBlendMode = function(){\r\n    return this.blendModeEnums[this.data.bm] || '';\r\n};\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = this.getBlendMode();\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n};\r\n\r\nBaseElement.prototype.initBaseData = function(data, globalData, comp){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.layerId = 'ly_'+randomString(10);\r\n    \r\n    //Stretch factor for old animations missing this property.\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    // effects manager\r\n    this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n    \r\n};\r\n\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = randomString(10);\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = randomString(10);\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);\r\n\r\n                ////\r\n                /*var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);*/\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    addMasks: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'butt'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var i = 0, len = this.processedElements.length;\r\n        while(i < len){\r\n            if(this.processedElements[i].elem === elem){\r\n                return this.processedElements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var i = this.processedElements.length, found = false;\r\n        while(i){\r\n            i -= 1;\r\n            if(this.processedElements[i].elem === elem){\r\n                this.processedElements[i].pos = pos;\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if(!found){\r\n            this.processedElements.push(new ProcessedElement(elem, pos));\r\n        }\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    },\r\n    buildShapeString: function(pathNodes, length, closed, mat) {\r\n        var i, shapeString = '';\r\n        for(i = 1; i < length; i += 1) {\r\n            if (i === 1) {\r\n                shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n            }\r\n            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n        }\r\n        if (length === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n    }\r\n};\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n};\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data) {\r\n    return new SVGTransformData(TransformPropertyFactory.getTransformProperty(this,data,this), PropertyFactory.getProp(this,data.o,0,0.01,this));\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i]);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape(this.shapesData, this.itemsData, this.layerElement);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\n\r\nSVGShapeElement.prototype.renderShape = function(items, data, container) {\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=0;i<=len;i+=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this._isFirstFrame || data[i].transform.op._mdf){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this._isFirstFrame || data[i].transform.mProps._mdf){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(items[i]._render && (ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr')){\r\n            this.renderPath(data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nSVGShapeElement.prototype.renderPath = function(itemData){\r\n    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n    var lvl = itemData.lvl;\r\n    var paths, mat, props, iterations, k;\r\n    for(l=0;l<lLen;l+=1){\r\n        redraw = itemData.sh._mdf || this._isFirstFrame;\r\n        if(itemData.styles[l].lvl < lvl){\r\n            mat = this.mHelper.reset();\r\n            iterations = lvl - itemData.styles[l].lvl;\r\n            k = itemData.transformers.length-1;\r\n            while(iterations > 0) {\r\n                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n                props = itemData.transformers[k].mProps.v.props;\r\n                mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                iterations --;\r\n                k --;\r\n            }\r\n        } else {\r\n            mat = this.identityMatrix;\r\n        }\r\n        paths = itemData.sh.paths;\r\n        jLen = paths._length;\r\n        if(redraw){\r\n            pathStringTransformed = '';\r\n            for(j=0;j<jLen;j+=1){\r\n                pathNodes = paths.shapes[j];\r\n                if(pathNodes && pathNodes._length){\r\n                    pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                }\r\n            }\r\n            itemData.caches[l] = pathStringTransformed;\r\n        } else {\r\n            pathStringTransformed = itemData.caches[l];\r\n        }\r\n        itemData.styles[l].d += pathStringTransformed;\r\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n    }\r\n    if(itemData.o._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderGradient = function(styleData, itemData) {\r\n    var gfill = itemData.gf;\r\n    var hasOpacity = itemData.g._hasOpacity;\r\n    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n    if (itemData.o._mdf || this._isFirstFrame) {\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n    }\r\n    if (itemData.s._mdf || this._isFirstFrame) {\r\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n        gfill.setAttribute(attr1, pt1[0]);\r\n        gfill.setAttribute(attr2, pt1[1]);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n            itemData.of.setAttribute(attr1, pt1[0]);\r\n            itemData.of.setAttribute(attr2, pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if (itemData.g._cmdf || this._isFirstFrame) {\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for (i = 0; i < len; i += 1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n        }\r\n    }\r\n    if (hasOpacity && (itemData.g._omdf || this._isFirstFrame)) {\r\n        var oValues = itemData.g.o;\r\n        if(itemData.g._collapsable) {\r\n            stops = itemData.cst;\r\n        } else {\r\n            stops = itemData.ost;\r\n        }\r\n        len = stops.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            stop = stops[i];\r\n            if(!itemData.g._collapsable) {\r\n                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n            }\r\n            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n        }\r\n    }\r\n    if (styleData.t === 1) {\r\n        if (itemData.e._mdf  || this._isFirstFrame) {\r\n            gfill.setAttribute('x2', pt2[0]);\r\n            gfill.setAttribute('y2', pt2[1]);\r\n            if (hasOpacity && !itemData.g._collapsable) {\r\n                itemData.of.setAttribute('x2', pt2[0]);\r\n                itemData.of.setAttribute('y2', pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if (itemData.s._mdf || itemData.e._mdf || this._isFirstFrame) {\r\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            gfill.setAttribute('r', rad);\r\n            if(hasOpacity && !itemData.g._collapsable){\r\n                itemData.of.setAttribute('r', rad);\r\n            }\r\n        }\r\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || this._isFirstFrame) {\r\n            if (!rad) {\r\n                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            }\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            gfill.setAttribute('fx', x);\r\n            gfill.setAttribute('fy', y);\r\n            if (hasOpacity && !itemData.g._collapsable) {\r\n                itemData.of.setAttribute('fx', x);\r\n                itemData.of.setAttribute('fy', y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderStroke = function(styleData, itemData) {\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if (d && (d._mdf || this._isFirstFrame) && d.dashStr) {\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n    }\r\n    if(itemData.c && (itemData.c._mdf || this._isFirstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n    }\r\n    if(itemData.o._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n};\r\n\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\nvar _svgMatteSymbols = [];\r\nvar _svgMatteMaskCounter = 0;\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = 'matte_' + randomString(5) + '_' + _svgMatteMaskCounter++;\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while (i < len) {\r\n    \tif (this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    /*function start(){\r\n        window.requestAnimationFrame(first);\r\n    }*/\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    //setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(-1);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    };\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n};\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                this.trigger('loopComplete');\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset){\r\n    if(this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\nfunction EffectsManager(){}\nfunction CanvasRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.renderConfig = {\r\n        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n        context: (config && config.context) || null,\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n    if (this.animationItem.wrapper) {\r\n        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n    }\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1,\r\n        _mdf: false,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    var i, len = 15;\r\n    this.contextData = new CVContextData();\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.transformMat = new Matrix();\r\n    this.completeLayers = false;\r\n}\r\nextendPrototype([BaseRenderer],CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n    return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n    return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n    return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n    return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n    return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function(props){\r\n    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n        return;\r\n    }\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n        return;\r\n    }\r\n    this.transformMat.cloneFromProps(props);\r\n    var cProps = this.contextData.cTr.props;\r\n    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n    var trProps = this.contextData.cTr.props;\r\n    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function(op){\r\n    /*if(op === 1){\r\n        return;\r\n    }*/\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n        return;\r\n    }\r\n    this.contextData.cO *= op < 0 ? 0 : op;\r\n    this.canvasContext.globalAlpha = this.contextData.cO;\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function(){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.save();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.save();\r\n    }\r\n    var props = this.contextData.cTr.props;\r\n    if(this.contextData._length <= this.contextData.cArrPos) {\r\n        this.contextData.duplicate();\r\n    }\r\n    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n    for (i = 0; i < 16; i += 1) {\r\n        arr[i] = props[i];\r\n    }\r\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n    this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.restore();\r\n        this.globalData.blendMode = 'source-over';\r\n    }\r\n    this.contextData.cArrPos -= 1;\r\n    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n    var i,arr = this.contextData.cTr.props;\r\n    for(i=0;i<16;i+=1){\r\n        arr[i] = popped[i];\r\n    }\r\n    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n    this.contextData.cO = popped;\r\n    this.canvasContext.globalAlpha = popped;\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function(animData){\r\n    if(this.animationItem.wrapper){\r\n        this.animationItem.container = createTag('canvas');\r\n        this.animationItem.container.style.width = '100%';\r\n        this.animationItem.container.style.height = '100%';\r\n        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n        this.canvasContext = this.animationItem.container.getContext('2d');\r\n        if(this.renderConfig.className) {\r\n            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n        }\r\n    }else{\r\n        this.canvasContext = this.renderConfig.context;\r\n    }\r\n    this.data = animData;\r\n    this.globalData.canvasContext = this.canvasContext;\r\n    this.globalData.renderer = this;\r\n    this.globalData.isDashed = false;\r\n    this.globalData.totalFrames = Math.floor(animData.tf);\r\n    this.globalData.compWidth = animData.w;\r\n    this.globalData.compHeight = animData.h;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    };\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.layers = animData.layers;\r\n    this.transformCanvas = {\r\n        w: animData.w,\r\n        h:animData.h,\r\n        sx:0,\r\n        sy:0,\r\n        tx:0,\r\n        ty:0\r\n    };\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,document.body);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem);\r\n    this.globalData.addPendingElement = this.animationItem.addPendingElement.bind(this.animationItem);\r\n    this.globalData.transformCanvas = this.transformCanvas;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n\r\n    this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n    this.reset();\r\n    var elementWidth,elementHeight;\r\n    if(this.animationItem.wrapper && this.animationItem.container){\r\n        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n    }else{\r\n        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n    }\r\n    var elementRel,animationRel;\r\n    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n        var fillType = par[1] || 'meet';\r\n        var pos = par[0] || 'xMidYMid';\r\n        var xPos = pos.substr(0,4);\r\n        var yPos = pos.substr(4);\r\n        elementRel = elementWidth/elementHeight;\r\n        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        }else{\r\n            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n        }\r\n\r\n        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.tx = 0;\r\n        }\r\n        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.ty = 0;\r\n        }\r\n\r\n    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }else{\r\n        this.transformCanvas.sx = this.renderConfig.dpr;\r\n        this.transformCanvas.sy = this.renderConfig.dpr;\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }\r\n    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\r\n    this.ctxTransform(this.transformCanvas.props);\r\n    this.canvasContext.beginPath();\r\n    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n    this.canvasContext.closePath();\r\n    this.canvasContext.clip();\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n    if(this.renderConfig.clearCanvas) {\r\n        this.animationItem.wrapper.innerHTML = '';\r\n    }\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = len - 1; i >= 0; i-=1) {\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.globalData.canvasContext = null;\r\n    this.animationItem.container = null;\r\n    this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function(num){\r\n    if((this.renderedFrame == num && this.renderConfig.clearCanvas === true) || this.destroyed || num === -1){\r\n        return;\r\n    }\r\n    this.renderedFrame = num;\r\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n    this.globalData.frameId += 1;\r\n    this.globalData._mdf = false;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n\r\n     // console.log('--------');\r\n     // console.log('NEW: ',num);\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        if(this.renderConfig.clearCanvas === true){\r\n            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n        }else{\r\n            this.save();\r\n        }\r\n        for (i = len - 1; i >= 0; i-=1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n        if(this.renderConfig.clearCanvas !== true){\r\n            this.restore();\r\n        }\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n    elements[pos] = element;\r\n    element.initExpressions();\r\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function(){\r\n    this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function(){\r\n    this.animationItem.container.style.display = 'block';\r\n};\r\n\nfunction HybridRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.renderConfig = {\r\n        className: (config && config.className) || '',\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.pendingElements = [];\r\n    this.elements = [];\r\n    this.threeDElements = [];\r\n    this.destroyed = false;\r\n    this.camera = null;\r\n    this.supports3d = true;\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newDOMElement = element.getBaseElement();\r\n    if(!newDOMElement){\r\n        return;\r\n    }\r\n    var layer = this.layers[pos];\r\n    if(!layer.ddd || !this.supports3d){\r\n        var i = 0;\r\n        var nextDOMElement, nextLayer, tmpDOMElement;\r\n        while(i<pos){\r\n            if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n                nextLayer = this.elements[i];\r\n                tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n                nextDOMElement = tmpDOMElement || nextDOMElement;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(nextDOMElement){\r\n            if(!layer.ddd || !this.supports3d){\r\n                this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n            }\r\n        } else {\r\n            if(!layer.ddd || !this.supports3d){\r\n                this.layerElement.appendChild(newDOMElement);\r\n            }\r\n        }\r\n    } else {\r\n        this.addTo3dContainer(newDOMElement,pos);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGShapeElement(data, this.globalData, this);\r\n    }\r\n    return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGTextElement(data, this.globalData, this);\r\n    }\r\n    return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n    this.camera = new HCameraElement(data, this.globalData, this);\r\n    return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n    if(!this.supports3d){\r\n        return new IImageElement(data, this.globalData, this);\r\n    }\r\n    return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGCompElement(data, this.globalData, this);\r\n    }\r\n    return new HCompElement(data, this.globalData, this);\r\n\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n    if(!this.supports3d){\r\n        return new ISolidElement(data, this.globalData, this);\r\n    }\r\n    return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len) {\r\n        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n            return this.threeDElements[i].perspectiveElem;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function(pos){\r\n    var perspectiveElem = createTag('div');\r\n    styleDiv(perspectiveElem);\r\n    perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n    perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n    perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n    var container = createTag('div');\r\n    styleDiv(container);\r\n    container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    perspectiveElem.appendChild(container);\r\n    this.resizerElem.appendChild(perspectiveElem);\r\n    var threeDContainerData = {\r\n        container:container,\r\n        perspectiveElem:perspectiveElem,\r\n        startPos: pos,\r\n        endPos: pos\r\n    };\r\n    this.threeDElements.push(threeDContainerData);\r\n    return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function(){\r\n    var i, len = this.layers.length;\r\n    var lastThreeDContainerData;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n            if(!lastThreeDContainerData){\r\n                lastThreeDContainerData = this.createThreeDContainer(i);\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        } else {\r\n            lastThreeDContainerData = null;\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len){\r\n        if(pos <= this.threeDElements[i].endPos){\r\n            var j = this.threeDElements[i].startPos;\r\n            var nextElement;\r\n            while(j<pos){\r\n                if(this.elements[j] && this.elements[j].getBaseElement){\r\n                    nextElement = this.elements[j].getBaseElement();\r\n                }\r\n                j += 1;\r\n            }\r\n            if(nextElement){\r\n                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n            } else {\r\n                this.threeDElements[i].container.appendChild(elem);\r\n            }\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function(animData){\r\n    var resizerElem = createTag('div');\r\n    var wrapper = this.animationItem.wrapper;\r\n    resizerElem.style.width = animData.w+'px';\r\n    resizerElem.style.height = animData.h+'px';\r\n    this.resizerElem = resizerElem;\r\n    styleDiv(resizerElem);\r\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n    if(this.renderConfig.className) {\r\n      resizerElem.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    wrapper.appendChild(resizerElem);\r\n\r\n    resizerElem.style.overflow = 'hidden';\r\n    var svg = createNS('svg');\r\n    svg.setAttribute('width','1');\r\n    svg.setAttribute('height','1');\r\n    styleDiv(svg);\r\n    this.resizerElem.appendChild(svg);\r\n    var defs = createNS('defs');\r\n    svg.appendChild(defs);\r\n    this.globalData.defs = defs;\r\n    this.data = animData;\r\n    //Mask animation\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem);\r\n    this.globalData.frameId = 0;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    };\r\n    this.globalData.frameRate = animData.fr;\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,svg);\r\n    this.layerElement = this.resizerElem;\r\n    this.build3dContainers();\r\n    this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.animationItem.container = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        this.elements[i].destroy();\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    var elementRel = elementWidth/elementHeight;\r\n    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n    var sx,sy,tx,ty;\r\n    if(animationRel>elementRel){\r\n        sx = elementWidth/(this.globalData.compSize.w);\r\n        sy = elementWidth/(this.globalData.compSize.w);\r\n        tx = 0;\r\n        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n    }else{\r\n        sx = elementHeight/(this.globalData.compSize.h);\r\n        sy = elementHeight/(this.globalData.compSize.h);\r\n        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n        ty = 0;\r\n    }\r\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function(){\r\n    this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function(){\r\n    this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function(){\r\n    this.buildAllItems();\r\n    if(this.camera){\r\n        this.camera.setup();\r\n    } else {\r\n        var cWidth = this.globalData.compSize.w;\r\n        var cHeight = this.globalData.compSize.h;\r\n        var i, len = this.threeDElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = createTag('div');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\nfunction CVContextData() {\r\n\tthis.saved = [];\r\n    this.cArrPos = 0;\r\n    this.cTr = new Matrix();\r\n    this.cO = 1;\r\n    var i, len = 15;\r\n    this.savedOp = createTypedArray('float32', len);\r\n    for(i=0;i<len;i+=1){\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function() {\r\n\tvar newLength = this._length * 2;\r\n\tvar currentSavedOp = this.savedOp;\r\n    this.savedOp = createTypedArray('float32', newLength);\r\n    this.savedOp.set(currentSavedOp);\r\n    var i = 0;\r\n    for(i = this._length; i < newLength; i += 1) {\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function() {\r\n\tthis.cArrPos = 0;\r\n\tthis.cTr.reset();\r\n    this.cO = 1;\r\n};\nfunction CVBaseElement(){\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n    createElements: function(){},\r\n    initRendererElement: function(){},\r\n    createContainerElements: function(){\r\n        this.canvasContext = this.globalData.canvasContext;\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n    },\r\n    createContent: function(){},\r\n    setBlendMode: function(){\r\n        var globalData = this.globalData;\r\n        if(globalData.blendMode !== this.data.bm) {\r\n            globalData.blendMode = this.data.bm;\r\n            var blendModeValue = this.getBlendMode();\r\n            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n        }\r\n    },\r\n    addMasks: function(){\r\n        this.maskManager = new CVMaskElement(this.data, this);\r\n    },\r\n    hideElement: function(){\r\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n            this.hidden = true;\r\n        }\r\n    },\r\n    showElement: function(){\r\n        if (this.isInRange && !this.isTransparent){\r\n            this.hidden = false;\r\n            this._isFirstFrame = true;\r\n            this.maskManager._isFirstFrame = true;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        if (this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.setBlendMode();\r\n        this.globalData.renderer.save();\r\n        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n        this.renderInnerContent();\r\n        this.globalData.renderer.restore();\r\n        if(this.maskManager.hasMasks) {\r\n            this.globalData.renderer.restore(true);\r\n        }\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.canvasContext = null;\r\n        this.data = null;\r\n        this.globalData = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\nfunction CVImageElement(data, globalData, comp){\r\n    this.failed = false;\r\n    this.img = new Image();\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.globalData.addPendingElement();\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.imageLoaded = function() {\r\n    this.globalData.elementLoaded();\r\n    if(this.assetData.w !== this.img.width || this.assetData.h !== this.img.height){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = this.assetData.w;\r\n        canvas.height = this.assetData.h;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imgW = this.img.width;\r\n        var imgH = this.img.height;\r\n        var imgRel = imgW / imgH;\r\n        var canvasRel = this.assetData.w/this.assetData.h;\r\n        var widthCrop, heightCrop;\r\n        if(imgRel>canvasRel){\r\n            heightCrop = imgH;\r\n            widthCrop = heightCrop*canvasRel;\r\n        } else {\r\n            widthCrop = imgW;\r\n            heightCrop = widthCrop/canvasRel;\r\n        }\r\n        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n        this.img = canvas;\r\n    }\r\n};\r\n\r\nCVImageElement.prototype.imageFailed = function() {\r\n    this.failed = true;\r\n    this.globalData.elementLoaded();\r\n};\r\n\r\nCVImageElement.prototype.createContent = function(){\r\n    var img = this.img;\r\n    img.addEventListener('load', this.imageLoaded.bind(this), false);\r\n    img.addEventListener('error', this.imageFailed.bind(this), false);\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    img.src = assetPath;\r\n\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n    if (this.failed) {\r\n        return;\r\n    }\r\n    this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function(){\r\n    this.img = null;\r\n};\nfunction CVCompElement(data, globalData, comp) {\r\n    this.completeLayers = false;\r\n    this.layers = data.layers;\r\n    this.pendingElements = [];\r\n    this.elements = createSizedArray(this.layers.length);\r\n    this.initElement(data, globalData, comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.layers = null;\r\n    this.elements = null;\r\n};\n\r\nfunction CVMaskElement(data,element){\r\n    this.data = data;\r\n    this.element = element;\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.viewData = createSizedArray(this.masksProperties.length);\r\n    var i, len = this.masksProperties.length, hasMasks = false;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            hasMasks = true;\r\n        }\r\n        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n    }\r\n    this.hasMasks = hasMasks;\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function (transform) {\r\n    if(!this.hasMasks){\r\n        return;\r\n    }\r\n    var ctx = this.element.canvasContext;\r\n    var i, len = this.masksProperties.length;\r\n    var pt,pts,data;\r\n    ctx.beginPath();\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if (this.masksProperties[i].inv) {\r\n                ctx.moveTo(0, 0);\r\n                ctx.lineTo(this.element.globalData.compWidth, 0);\r\n                ctx.lineTo(this.element.globalData.compWidth, this.element.globalData.compHeight);\r\n                ctx.lineTo(0, this.element.globalData.compHeight);\r\n                ctx.lineTo(0, 0);\r\n            }\r\n            data = this.viewData[i].v;\r\n            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n            ctx.moveTo(pt[0], pt[1]);\r\n            var j, jLen = data._length;\r\n            for (j = 1; j < jLen; j++) {\r\n                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n            }\r\n            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n        }\r\n    }\r\n    this.element.globalData.renderer.save(true);\r\n    ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n};\nfunction CVShapeElement(data, globalData, comp) {\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = {opacity:1,mat:new Matrix(),_matMdf:false,_opMdf:false};\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function(data){\r\n    var styleElem = {\r\n        data: data,\r\n        type: data.ty,\r\n        elements: []\r\n    };\r\n    var elementData = {};\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n        if(!elementData.c.k){\r\n            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n        }\r\n    }\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n    if(data.ty == 'st') {\r\n        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n        if(data.lj == 1) {\r\n            styleElem.ml = data.ml;\r\n        }\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n        if(!elementData.w.k){\r\n            styleElem.wi = elementData.w.v;\r\n        }\r\n        if(data.d){\r\n            var d = new DashProperty(this,data.d,'canvas');\r\n            elementData.d = d;\r\n            if(!elementData.d.k){\r\n                styleElem.da = elementData.d.dashArray;\r\n                styleElem.do = elementData.d.dashoffset[0];\r\n            }\r\n        }\r\n\r\n    } else {\r\n\r\n        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n    }\r\n    this.stylesList.push(styleElem);\r\n    elementData.style = styleElem;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function(data) {\r\n    var elementData = {\r\n        transform : {\r\n            mat: new Matrix(),\r\n            opacity: 1,\r\n            _matMdf:false,\r\n            _opMdf:false,\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n        },\r\n        elements: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function(data) {\r\n    var elementData = {\r\n        nodes:[],\r\n        trNodes:[],\r\n        tr:[0,0,0,0,0,0]\r\n    };\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    elementData.sh = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    var j, jLen = this.stylesList.length;\r\n    var hasStrokes = false, hasFills = false;\r\n    for(j=0;j<jLen;j+=1){\r\n        if(!this.stylesList[j].closed){\r\n            this.stylesList[j].elements.push(elementData);\r\n            if(this.stylesList[j].type === 'st'){\r\n                hasStrokes = true;\r\n            }else{\r\n                hasFills = true;\r\n            }\r\n        }\r\n    }\r\n    elementData.st = hasStrokes;\r\n    elementData.fl = hasFills;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true);\r\n    len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, render){\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownArrays = [], ownModifiers = [], processedPos, modifier;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i]);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            \r\n            ownArrays.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, render);\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i]);\r\n            }\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i]);\r\n            }\r\n            \r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        } else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownArrays.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownArrays[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function() {\r\n\r\n    this.transformHelper.mat.reset();\r\n    this.transformHelper.opacity = 1;\r\n    this.transformHelper._matMdf = false;\r\n    this.transformHelper._opMdf = false;\r\n    this.renderModifiers();\r\n    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n    var props, groupMatrix;\r\n    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n        groupTransform.opacity = parentTransform.opacity;\r\n        groupTransform.opacity *= groupTransform.op.v;\r\n        groupTransform._opMdf = true;\r\n    }\r\n    if(parentTransform._matMdf || groupTransform.mProps._mdf || this._isFirstFrame) {\r\n        groupMatrix = groupTransform.mat;\r\n        groupMatrix.cloneFromProps(groupTransform.mProps.v.props);\r\n        groupTransform._matMdf = true;\r\n        props = parentTransform.mat.props;\r\n        groupMatrix.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function() {\r\n    var i, len = this.stylesList.length;\r\n    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n    for(i=0;i<len;i+=1){\r\n        currentStyle = this.stylesList[i];\r\n        type = currentStyle.type;\r\n        if((type === 'st' && currentStyle.wi === 0) || !currentStyle.data._render || currentStyle.coOp === 0){\r\n            continue;\r\n        }\r\n        renderer.save();\r\n        elems = currentStyle.elements;\r\n        if(type === 'st'){\r\n            ctx.strokeStyle = currentStyle.co;\r\n            ctx.lineWidth = currentStyle.wi;\r\n            ctx.lineCap = currentStyle.lc;\r\n            ctx.lineJoin = currentStyle.lj;\r\n            ctx.miterLimit = currentStyle.ml || 0;\r\n        }else{\r\n            ctx.fillStyle = currentStyle.co;\r\n        }\r\n        renderer.ctxOpacity(currentStyle.coOp);\r\n        if(type !== 'st'){\r\n            ctx.beginPath();\r\n        }\r\n        jLen = elems.length;\r\n        for(j=0;j<jLen;j+=1){\r\n            if(type === 'st'){\r\n                ctx.beginPath();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(currentStyle.da);\r\n                    ctx.lineDashOffset = currentStyle.do;\r\n                    this.globalData.isDashed = true;\r\n                }else if(this.globalData.isDashed){\r\n                    ctx.setLineDash(this.dashResetter);\r\n                    this.globalData.isDashed = false;\r\n                }\r\n            }\r\n            nodes = elems[j].trNodes;\r\n            kLen = nodes.length;\r\n\r\n            for(k=0;k<kLen;k+=1){\r\n                if(nodes[k].t == 'm'){\r\n                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n                }else if(nodes[k].t == 'c'){\r\n                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n                }else{\r\n                    ctx.closePath();\r\n                }\r\n            }\r\n            if(type === 'st'){\r\n                ctx.stroke();\r\n            }\r\n        }\r\n        if(type !== 'st'){\r\n            ctx.fill(currentStyle.r);\r\n        }\r\n        renderer.restore();\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n    var i, len = items.length - 1;\r\n    var groupTransform;\r\n    groupTransform = parentTransform;\r\n    for(i=len;i>=0;i-=1){\r\n        if(items[i].ty == 'tr'){\r\n            groupTransform = data[i].transform;\r\n            this.renderShapeTransform(parentTransform, groupTransform);\r\n        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n            this.renderPath(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'fl'){\r\n            this.renderFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'st'){\r\n            this.renderStroke(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gr'){\r\n            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n        }else if(items[i].ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n    if(isMain){\r\n        this.drawLayer();\r\n    }\r\n    \r\n};\r\nCVShapeElement.prototype.renderPath = function(pathData,itemData,groupTransform){\r\n    var len, i, j,jLen;\r\n    var redraw = groupTransform._matMdf || itemData.sh._mdf || this._isFirstFrame;\r\n    if(redraw) {\r\n        var paths = itemData.sh.paths, groupTransformMat = groupTransform.mat;\r\n        jLen = pathData._render === false ? 0 : paths._length;\r\n        var pathStringTransformed = itemData.trNodes;\r\n        pathStringTransformed.length = 0;\r\n        for(j=0;j<jLen;j+=1){\r\n            var pathNodes = paths.shapes[j];\r\n            if(pathNodes && pathNodes.v){\r\n                len = pathNodes._length;\r\n                for (i = 1; i < len; i += 1) {\r\n                    if (i == 1) {\r\n                        pathStringTransformed.push({\r\n                            t: 'm',\r\n                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                        });\r\n                    }\r\n                    pathStringTransformed.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n                    });\r\n                }\r\n                if (len == 1) {\r\n                    pathStringTransformed.push({\r\n                        t: 'm',\r\n                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                    });\r\n                }\r\n                if (pathNodes.c && len) {\r\n                    pathStringTransformed.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n                    });\r\n                    pathStringTransformed.push({\r\n                        t: 'z'\r\n                    });\r\n                }\r\n                itemData.lStr = pathStringTransformed;\r\n            }\r\n\r\n        }\r\n\r\n        if (itemData.st) {\r\n            for (i = 0; i < 16; i += 1) {\r\n                itemData.tr[i] = groupTransform.mat.props[i];\r\n            }\r\n        }\r\n        itemData.trNodes = pathStringTransformed;\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if(d && (d._mdf  || this._isFirstFrame)){\r\n        styleElem.da = d.dashArray;\r\n        styleElem.do = d.dashoffset[0];\r\n    }\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.wi = itemData.w.v;\r\n    }\r\n};\r\n\r\n\r\nCVShapeElement.prototype.destroy = function(){\r\n    this.shapesData = null;\r\n    this.globalData = null;\r\n    this.canvasContext = null;\r\n    this.stylesList.length = 0;\r\n    this.itemsData.length = 0;\r\n};\r\n\r\n\nfunction CVSolidElement(data, globalData, comp) {\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.fillStyle = this.data.sc;\r\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n    //\r\n};\nfunction CVTextElement(data, globalData, comp){\r\n    this.textSpans = [];\r\n    this.yOffset = 0;\r\n    this.fillColorAnim = false;\r\n    this.strokeColorAnim = false;\r\n    this.strokeWidthAnim = false;\r\n    this.stroke = false;\r\n    this.fill = false;\r\n    this.justifyOffset = 0;\r\n    this.currentRender = null;\r\n    this.renderType = 'canvas';\r\n    this.values = {\r\n        fill: 'rgba(0,0,0,0)',\r\n        stroke: 'rgba(0,0,0,0)',\r\n        sWidth: 0,\r\n        fValue: ''\r\n    };\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n    var hasFill = false;\r\n    if(documentData.fc) {\r\n        hasFill = true;\r\n        this.values.fill = this.buildColor(documentData.fc);\r\n    }else{\r\n        this.values.fill = 'rgba(0,0,0,0)';\r\n    }\r\n    this.fill = hasFill;\r\n    var hasStroke = false;\r\n    if(documentData.sc){\r\n        hasStroke = true;\r\n        this.values.stroke = this.buildColor(documentData.sc);\r\n        this.values.sWidth = documentData.sw;\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    var matrixHelper = this.mHelper;\r\n    this.stroke = hasStroke;\r\n    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n    len = documentData.finalText.length;\r\n    //this.tHelper.font = this.values.fValue;\r\n    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var cnt = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = charData && charData.data || {};\r\n        matrixHelper.reset();\r\n        if(singleShape && letters[i].n) {\r\n            xPos = -trackingOffset;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            firstLine = false;\r\n        }\r\n\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        jLen = shapes.length;\r\n        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n        if(singleShape){\r\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        }\r\n        commands = createSizedArray(jLen);\r\n        for(j=0;j<jLen;j+=1){\r\n            kLen = shapes[j].ks.k.i.length;\r\n            pathNodes = shapes[j].ks.k;\r\n            pathArr = [];\r\n            for(k=1;k<kLen;k+=1){\r\n                if(k==1){\r\n                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n                }\r\n                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n            }\r\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n            commands[j] = pathArr;\r\n        }\r\n        if(singleShape){\r\n            xPos += letters[i].l;\r\n            xPos += trackingOffset;\r\n        }\r\n        if(this.textSpans[cnt]){\r\n            this.textSpans[cnt].elem = commands;\r\n        } else {\r\n            this.textSpans[cnt] = {elem: commands};\r\n        }\r\n        cnt +=1;\r\n    }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function(){\r\n    var ctx = this.canvasContext;\r\n    var finalMat = this.finalTransform.mat.props;\r\n    ctx.font = this.values.fValue;\r\n    ctx.lineCap = 'butt';\r\n    ctx.lineJoin = 'miter';\r\n    ctx.miterLimit = 4;\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    }\r\n\r\n    var  i,len, j, jLen, k, kLen;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter;\r\n    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            continue;\r\n        }\r\n        renderedLetter = renderedLetters[i];\r\n        if(renderedLetter){\r\n            this.globalData.renderer.save();\r\n            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n        }\r\n        if(this.fill){\r\n            if(renderedLetter && renderedLetter.fc){\r\n                if(lastFill !== renderedLetter.fc){\r\n                    lastFill = renderedLetter.fc;\r\n                    ctx.fillStyle = renderedLetter.fc;\r\n                }\r\n            }else if(lastFill !== this.values.fill){\r\n                lastFill = this.values.fill;\r\n                ctx.fillStyle = this.values.fill;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.fill();\r\n            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n        }\r\n        if(this.stroke){\r\n            if(renderedLetter && renderedLetter.sw){\r\n                if(lastStrokeW !== renderedLetter.sw){\r\n                    lastStrokeW = renderedLetter.sw;\r\n                    ctx.lineWidth = renderedLetter.sw;\r\n                }\r\n            }else if(lastStrokeW !== this.values.sWidth){\r\n                lastStrokeW = this.values.sWidth;\r\n                ctx.lineWidth = this.values.sWidth;\r\n            }\r\n            if(renderedLetter && renderedLetter.sc){\r\n                if(lastStroke !== renderedLetter.sc){\r\n                    lastStroke = renderedLetter.sc;\r\n                    ctx.strokeStyle = renderedLetter.sc;\r\n                }\r\n            }else if(lastStroke !== this.values.stroke){\r\n                lastStroke = this.values.stroke;\r\n                ctx.strokeStyle = this.values.stroke;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.stroke();\r\n            ///ctx.strokeText(letters[i].val,0,0);\r\n        }\r\n        if(renderedLetter) {\r\n            this.globalData.renderer.restore();\r\n        }\r\n    }\r\n    /*if(this.data.hasMask){\r\n     this.globalData.renderer.restore(true);\r\n     }*/\r\n};\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function(){};\nfunction HBaseElement(data,globalData,comp){}\r\nHBaseElement.prototype = {\r\n    checkBlendMode: function(){},\r\n    initRendererElement: function(){\r\n        this.baseElement = createTag(this.data.tg || 'div');\r\n        if(this.data.hasMask) {\r\n            this.svgElement = createNS('svg');\r\n            this.layerElement = createNS('g');\r\n            this.maskedElement = this.layerElement;\r\n            this.svgElement.appendChild(this.layerElement);\r\n            this.baseElement.appendChild(this.svgElement);\r\n        } else {\r\n            this.layerElement = this.baseElement;\r\n        }\r\n        styleDiv(this.baseElement);\r\n    },\r\n    createContainerElements: function(){\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n        this.transformedElement = this.baseElement;\r\n        this.maskedElement = this.layerElement;\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n    },\r\n    renderElement: function() {\r\n        if(this.finalTransform._matMdf){\r\n            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n        }\r\n        if(this.finalTransform._opMdf){\r\n            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        //If it is exported as hidden (data.hd === true) no need to render\r\n        //If it is not visible no need to render\r\n        if (this.data.hd || this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.renderElement();\r\n        this.renderInnerContent();\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.layerElement = null;\r\n        this.transformedElement = null;\r\n        if(this.matteElement) {\r\n            this.matteElement = null;\r\n        }\r\n        if(this.maskManager) {\r\n            this.maskManager.destroy();\r\n            this.maskManager = null;\r\n        }\r\n    },\r\n    addMasks: function(){\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    setMatte: function(){}\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\nfunction HSolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function(){\r\n    var rect;\r\n    if(this.data.hasMask){\r\n        rect = createNS('rect');\r\n        rect.setAttribute('width',this.data.sw);\r\n        rect.setAttribute('height',this.data.sh);\r\n        rect.setAttribute('fill',this.data.sc);\r\n        this.svgElement.setAttribute('width',this.data.sw);\r\n        this.svgElement.setAttribute('height',this.data.sh);\r\n    } else {\r\n        rect = createTag('div');\r\n        rect.style.width = this.data.sw + 'px';\r\n        rect.style.height = this.data.sh + 'px';\r\n        rect.style.backgroundColor = this.data.sc;\r\n    }\r\n    this.layerElement.appendChild(rect);\r\n};\r\n\nfunction HCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = !data.hasMask;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function(){\r\n    this._createBaseContainerElements();\r\n    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n    if(this.data.hasMask){\r\n        this.svgElement.setAttribute('width',this.data.w);\r\n        this.svgElement.setAttribute('height',this.data.h);\r\n        this.transformedElement = this.baseElement;\r\n    } else {\r\n        this.transformedElement = this.layerElement;\r\n    }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n    var j = 0;\r\n    var nextElement;\r\n    while(j<pos){\r\n        if(this.elements[j] && this.elements[j].getBaseElement){\r\n            nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(elem, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(elem);\r\n    }\r\n}\r\n\nfunction HShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    this.shapesContainer = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n}\r\nextendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function(){\r\n    var cont;\r\n    this.baseElement.style.fontSize = 0;\r\n    if (this.data.hasMask) {\r\n        this.layerElement.appendChild(this.shapesContainer);\r\n        cont = this.svgElement;\r\n    } else {\r\n        cont = createNS('svg');\r\n        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n        cont.setAttribute('width',size.w);\r\n        cont.setAttribute('height',size.h);\r\n        cont.appendChild(this.shapesContainer);\r\n        this.layerElement.appendChild(cont);\r\n    }\r\n\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n    this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n    var i, len = transformers.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n    }\r\n    return point;\r\n}\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n    var shape = item.sh.v;\r\n    var transformers = item.transformers;\r\n    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n    if (len <= 1) {\r\n        return;\r\n    }\r\n    for (i = 0; i < len - 1; i += 1) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n    if(shape.c) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n    var bounds = this.shapeBoundingBox;\r\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n}\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n    left:0,\r\n    right:0,\r\n    top:0,\r\n    bottom:0,\r\n}\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n    x:0,\r\n    xMax:0,\r\n    y:0,\r\n    yMax:0,\r\n    width:0,\r\n    height:0\r\n}\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\r\n    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\r\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\r\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n      c = 3 * p1[i] - 3 * p0[i];\r\n\r\n      b = b | 0;\r\n      a = a | 0;\r\n      c = c | 0;\r\n\r\n      if (a === 0) {\r\n\r\n        if (b === 0) {\r\n          continue;\r\n        }\r\n\r\n        t = -c / b;\r\n\r\n        if (0 < t && t < 1) {\r\n          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n        }\r\n        continue;\r\n      }\r\n\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n\r\n      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\r\n      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\r\n    }\r\n\r\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n  };\r\n\r\n  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n    return bm_pow(1-t, 3) * p0[i]\r\n        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n        + bm_pow(t, 3) * p3[i];\r\n  }\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n    var i, len = itemsData.length, path;\r\n    for(i = 0; i < len; i += 1) {\r\n        if(itemsData[i] && itemsData[i].sh) {\r\n            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n        } else if(itemsData[i] && itemsData[i].it) {\r\n            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n        }\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.renderInnerContent = function() {\r\n    this._renderShapeFrame();\r\n\r\n    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n        var tempBoundingBox = this.tempBoundingBox;\r\n        var max = 999999;\r\n        tempBoundingBox.x = max;\r\n        tempBoundingBox.xMax = -max;\r\n        tempBoundingBox.y = max;\r\n        tempBoundingBox.yMax = -max;\r\n        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n        //var tempBoundingBox = this.shapeCont.getBBox();\r\n        var changed = false;\r\n        if(this.currentBBox.w !== tempBoundingBox.width){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n            changed = true;\r\n        }\r\n        if(this.currentBBox.h !== tempBoundingBox.height){\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n            changed = true;\r\n        }\r\n        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.currentBBox.x = tempBoundingBox.x;\r\n            this.currentBBox.y = tempBoundingBox.y;\r\n\r\n            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n\r\n};\nfunction HTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.textPaths = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n    this.renderType = 'svg';\r\n    this.isMasked = false;\r\n    this.initElement(data,globalData,comp);\r\n\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function(){\r\n    this.isMasked = this.checkMasks();\r\n    if(this.isMasked){\r\n        this.renderType = 'svg';\r\n        this.compW = this.comp.data.w;\r\n        this.compH = this.comp.data.h;\r\n        this.svgElement.setAttribute('width',this.compW);\r\n        this.svgElement.setAttribute('height',this.compH);\r\n        var g = createNS('g');\r\n        this.maskedElement.appendChild(g);\r\n        this.innerElem = g;\r\n    } else {\r\n        this.renderType = 'html';\r\n        this.innerElem = this.layerElement;\r\n    }\r\n\r\n    this.checkParenting();\r\n\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(this.textProperty.currentData.l ? this.textProperty.currentData.l.length : 0);\r\n    var innerElemStyle = this.innerElem.style;\r\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n    if(documentData.sc){\r\n        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(!this.globalData.fontManager.chars){\r\n        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n        if(fontData.fClass){\r\n            this.innerElem.className = fontData.fClass;\r\n        } else {\r\n            innerElemStyle.fontFamily = fontData.fFamily;\r\n            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n            innerElemStyle.fontStyle = fStyle;\r\n            innerElemStyle.fontWeight = fWeight;\r\n        }\r\n    }\r\n    var i, len;\r\n\r\n    var letters = documentData.l;\r\n    len = letters.length;\r\n    var tSpan,tParent,tCont;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '';\r\n    var cnt = 0;\r\n    for (i = 0;i < len ;i += 1) {\r\n        if(this.globalData.fontManager.chars){\r\n            if(!this.textPaths[cnt]){\r\n                tSpan = createNS('path');\r\n                tSpan.setAttribute('stroke-linecap', 'butt');\r\n                tSpan.setAttribute('stroke-linejoin','round');\r\n                tSpan.setAttribute('stroke-miterlimit','4');\r\n            } else {\r\n                tSpan = this.textPaths[cnt];\r\n            }\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tCont = tParent.children[0];\r\n                } else {\r\n\r\n                    tParent = createTag('div');\r\n                    tCont = createNS('svg');\r\n                    tCont.appendChild(tSpan);\r\n                    styleDiv(tParent);\r\n                }\r\n            }\r\n        }else{\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tSpan = this.textPaths[cnt];\r\n                } else {\r\n                    tParent = createTag('span');\r\n                    styleDiv(tParent);\r\n                    tSpan = createTag('span');\r\n                    styleDiv(tSpan);\r\n                    tParent.appendChild(tSpan);\r\n                }\r\n            } else {\r\n                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n            }\r\n        }\r\n        //tSpan.setAttribute('visibility', 'hidden');\r\n        if(this.globalData.fontManager.chars){\r\n            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n            var shapeData;\r\n            if(charData){\r\n                shapeData = charData.data;\r\n            } else {\r\n                shapeData = null;\r\n            }\r\n            matrixHelper.reset();\r\n            if(shapeData && shapeData.shapes){\r\n                shapes = shapeData.shapes[0].it;\r\n                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n                tSpan.setAttribute('d',shapeStr);\r\n            }\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                if(shapeData && shapeData.shapes){\r\n\r\n                    //document.body.appendChild is needed to get exact measure of shape\r\n                    document.body.appendChild(tCont);\r\n                    var boundingBox = tCont.getBBox();\r\n                    tCont.setAttribute('width',boundingBox.width + 2);\r\n                    tCont.setAttribute('height',boundingBox.height + 2);\r\n                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\r\n                    letters[i].yOffset = boundingBox.y-1;\r\n                    tParent.appendChild(tCont);\r\n\r\n                } else{\r\n                    tCont.setAttribute('width',1);\r\n                    tCont.setAttribute('height',1);\r\n                }\r\n            }else{\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }else{\r\n            tSpan.textContent = letters[i].val;\r\n            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                //\r\n                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n            } else {\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }\r\n        //\r\n        if(!this.isMasked){\r\n            this.textSpans[cnt] = tParent;\r\n        }else{\r\n            this.textSpans[cnt] = tSpan;\r\n        }\r\n        this.textSpans[cnt].style.display = 'block';\r\n        this.textPaths[cnt] = tSpan;\r\n        cnt += 1;\r\n    }\r\n    while(cnt < this.textSpans.length){\r\n        this.textSpans[cnt].style.display = 'none';\r\n        cnt += 1;\r\n    }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function() {\r\n\r\n    if(this.data.singleShape){\r\n        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n            return;\r\n        } else {\r\n            // Todo Benchmark if using this is better than getBBox\r\n             if(this.isMasked && this.finalTransform._matMdf){\r\n                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n             }\r\n        }\r\n    }\r\n\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n        return;\r\n    }\r\n    var  i,len, count = 0;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter, textSpan, textPath;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            count += 1;\r\n            continue;\r\n        }\r\n        textSpan = this.textSpans[i];\r\n        textPath = this.textPaths[i];\r\n        renderedLetter = renderedLetters[count];\r\n        count += 1;\r\n        if(renderedLetter._mdf.m) {\r\n            if(!this.isMasked){\r\n                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n            }else{\r\n                textSpan.setAttribute('transform',renderedLetter.m);\r\n            }\r\n        }\r\n        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n        textSpan.style.opacity = renderedLetter.o;\r\n        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n        }\r\n        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n            textPath.setAttribute('stroke',renderedLetter.sc);\r\n        }\r\n        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n            textPath.setAttribute('fill',renderedLetter.fc);\r\n            textPath.style.color = renderedLetter.fc;\r\n        }\r\n    }\r\n\r\n    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n        var boundingBox = this.innerElem.getBBox();\r\n\r\n        if(this.currentBBox.w !== boundingBox.width){\r\n            this.currentBBox.w = boundingBox.width;\r\n            this.svgElement.setAttribute('width',boundingBox.width);\r\n        }\r\n        if(this.currentBBox.h !== boundingBox.height){\r\n            this.currentBBox.h = boundingBox.height;\r\n            this.svgElement.setAttribute('height',boundingBox.height);\r\n        }\r\n\r\n        var margin = 1;\r\n        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n            this.currentBBox.w = boundingBox.width + margin*2;\r\n            this.currentBBox.h = boundingBox.height + margin*2;\r\n            this.currentBBox.x = boundingBox.x - margin;\r\n            this.currentBBox.y = boundingBox.y - margin;\r\n\r\n            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n};\nfunction HImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\r\n\r\nHImageElement.prototype.createContent = function(){\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    var img = new Image();\r\n\r\n    if(this.data.hasMask){\r\n        this.imageElem = createNS('image');\r\n        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n        this.layerElement.appendChild(this.imageElem);\r\n        this.baseElement.setAttribute('width',this.assetData.w);\r\n        this.baseElement.setAttribute('height',this.assetData.h);\r\n    } else {\r\n        this.layerElement.appendChild(img);\r\n    }\r\n    img.src = assetPath;\r\n    if(this.data.ln){\r\n        this.innerElem.setAttribute('id',this.data.ln);\r\n    }\r\n};\nfunction HCameraElement(data,globalData,comp){\r\n    this.initFrame();\r\n    this.initBaseData(data,globalData,comp);\r\n    this.initHierarchy();\r\n    var getProp = PropertyFactory.getProp;\r\n    this.pe = getProp(this,data.pe,0,0,this);\r\n    if(data.ks.p.s){\r\n        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n    }else{\r\n        this.p = getProp(this,data.ks.p,1,0,this);\r\n    }\r\n    if(data.ks.a){\r\n        this.a = getProp(this,data.ks.a,1,0,this);\r\n    }\r\n    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n        var i,len = data.ks.or.k.length;\r\n        for(i=0;i<len;i+=1){\r\n            data.ks.or.k[i].to = null;\r\n            data.ks.or.k[i].ti = null;\r\n        }\r\n    }\r\n    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n    this.or.sh = true;\r\n    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n    this.mat = new Matrix();\r\n    this._prevMat = new Matrix();\r\n    this._isFirstFrame = true;\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function() {\r\n    var i, len = this.comp.threeDElements.length, comp;\r\n    for(i=0;i<len;i+=1){\r\n        //[perspectiveElem,container]\r\n        comp = this.comp.threeDElements[i];\r\n        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n        comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n        comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function(){\r\n};\r\n\r\nHCameraElement.prototype.hide = function(){\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function(){\r\n    var _mdf = this._isFirstFrame;\r\n    var i, len;\r\n    if(this.hierarchy){\r\n        len = this.hierarchy.length;\r\n        for(i=0;i<len;i+=1){\r\n            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n        }\r\n    }\r\n    if(_mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n        this.mat.reset();\r\n\r\n        if(this.hierarchy){\r\n            var mat;\r\n            len = this.hierarchy.length - 1;\r\n            for (i = len; i >= 0; i -= 1) {\r\n                /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                console.log(mat)\r\n                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n                console.log(this.mat.props)*/\r\n                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n            }\r\n        }\r\n\r\n        if(this.p){\r\n            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n        }else{\r\n            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n        }\r\n        if(this.a){\r\n            var diffVector = [this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];\r\n            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\r\n        }\r\n        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n        this.mat.translate(0,0,this.pe.v);\r\n\r\n\r\n        \r\n\r\n\r\n        if(!this._prevMat.equals(this.mat) && this.comp.threeDElements) {\r\n            len = this.comp.threeDElements.length;\r\n            var comp;\r\n            for(i=0;i<len;i+=1){\r\n                comp = this.comp.threeDElements[i];\r\n                comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n            }\r\n            this.mat.clone(this._prevMat);\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function(){\r\n};\r\nHCameraElement.prototype.initExpressions = function(){};\r\nHCameraElement.prototype.getBaseElement = function(){return null;};\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function(){};\nvar Expressions = (function(){\r\n    var ob = {};\r\n    ob.initExpressions = initExpressions;\r\n\r\n\r\n    function initExpressions(animation){\r\n        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n    }\r\n   return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\nvar ExpressionManager = (function(){\r\n    'use strict';\r\n    var ob = {};\r\n    var Math = BMMath;\r\n    var window = null;\r\n    var document = null;\r\n\r\n    function duplicatePropertyValue(value, mult) {\r\n        mult = mult || 1;\r\n\r\n        if (typeof value === 'number'  || value instanceof Number) {\r\n            return value * mult;\r\n        } else if(value.i) {\r\n            return shape_pool.clone(value);\r\n        } else {\r\n            var arr = createTypedArray('float32', value.length);\r\n            var i, len = value.length;\r\n            for (i = 0; i < len; i += 1) {\r\n                arr[i] = value[i] * mult;\r\n            }\r\n            return arr;\r\n        }\r\n    }\r\n\r\n    function isTypeOfArray(arr) {\r\n        return arr.constructor === Array || arr.constructor === Float32Array;\r\n    }\r\n\r\n    function $bm_neg(a){\r\n        var tOfA = typeof a;\r\n        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n            return -a;\r\n        }\r\n        if(isTypeOfArray(a)){\r\n            var i, lenA = a.length;\r\n            var retArr = [];\r\n            for(i=0;i<lenA;i+=1){\r\n                retArr[i] = -a[i];\r\n            }\r\n            return retArr;\r\n        }\r\n    }\r\n\r\n    function sum(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(tOfA === 'string' || tOfB === 'string'){\r\n            return a + b;\r\n        }\r\n        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string'  || b instanceof Number)) {\r\n            return a + b;\r\n        }\r\n        if(isTypeOfArray(a) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )){\r\n            a = a.slice(0);\r\n            a[0] = a[0] + b;\r\n            return a;\r\n        }\r\n        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && isTypeOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a + b[0];\r\n            return b;\r\n        }\r\n        if(isTypeOfArray(a) && isTypeOfArray(b)){\r\n            \r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] + b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n    var add = sum;\r\n\r\n    function sub(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )) {\r\n            if(tOfA === 'string') {\r\n                a = parseInt(a);\r\n            }\r\n            if(tOfB === 'string') {\r\n                b = parseInt(b);\r\n            }\r\n            return a - b;\r\n        }\r\n        if( isTypeOfArray(a) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )){\r\n            a = a.slice(0);\r\n            a[0] = a[0] - b;\r\n            return a;\r\n        }\r\n        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) &&  isTypeOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a - b[0];\r\n            return b;\r\n        }\r\n        if(isTypeOfArray(a) && isTypeOfArray(b)){\r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && typeof (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] - b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function mul(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )) {\r\n            return a * b;\r\n        }\r\n\r\n        var i, len;\r\n        if(isTypeOfArray(a) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] * b;\r\n            }\r\n            return arr;\r\n        }\r\n        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && isTypeOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a * b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function div(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number )) {\r\n            return a / b;\r\n        }\r\n        var i, len;\r\n        if(isTypeOfArray(a) && (tOfB === 'number' || tOfB === 'boolean' || tOfB === 'string' || b instanceof Number  )){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] / b;\r\n            }\r\n            return arr;\r\n        }\r\n        if((tOfA === 'number' || tOfA === 'boolean' || tOfA === 'string' || a instanceof Number ) && isTypeOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a / b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n    function mod(a,b) {\r\n        if(typeof a === 'string') {\r\n            a = parseInt(a);\r\n        }\r\n        if(typeof b === 'string') {\r\n            b = parseInt(b);\r\n        }\r\n        return a % b;\r\n    }\r\n\r\n    function clamp(num, min, max) {\r\n        if(min > max){\r\n            var mm = max;\r\n            max = min;\r\n            min = mm;\r\n        }\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n\r\n    function radiansToDegrees(val) {\r\n        return val/degToRads;\r\n    }\r\n    var radians_to_degrees = radiansToDegrees;\r\n\r\n    function degreesToRadians(val) {\r\n        return val*degToRads;\r\n    }\r\n    var degrees_to_radians = radiansToDegrees;\r\n\r\n    var helperLengthArray = [0,0,0,0,0,0];\r\n\r\n    function length(arr1, arr2) {\r\n        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n            arr2 = arr2 || 0;\r\n            return Math.abs(arr1 - arr2);\r\n        }\r\n        if(!arr2) {\r\n            arr2 = helperLengthArray;\r\n        }\r\n        var i, len = Math.min(arr1.length, arr2.length);\r\n        var addedLength = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n        }\r\n        return Math.sqrt(addedLength);\r\n    }\r\n\r\n    function normalize(vec) {\r\n        return div(vec, length(vec));\r\n    }\r\n\r\n    function rgbToHsl(val) {\r\n        var r = val[0]; var g = val[1]; var b = val[2];\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min){\r\n            h = s = 0; // achromatic\r\n        }else{\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max){\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l,val[3]];\r\n    }\r\n\r\n    function hue2rgb(p, q, t){\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    function hslToRgb(val){\r\n        var h = val[0];\r\n        var s = val[1];\r\n        var l = val[2];\r\n\r\n        var r, g, b;\r\n\r\n        if(s === 0){\r\n            r = g = b = l; // achromatic\r\n        }else{\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return [r, g , b, val[3]];\r\n    }\r\n\r\n    function linear(t, tMin, tMax, value1, value2){\r\n        if(value1 === undefined || value2 === undefined){\r\n            return linear(t,0,1,tMin,tMax);\r\n        }\r\n        if(t <= tMin) {\r\n            return value1;\r\n        }else if(t >= tMax){\r\n            return value2;\r\n        }\r\n        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n        if(!value1.length){\r\n            return value1 + (value2-value1)*perc;\r\n        }\r\n        var i, len = value1.length;\r\n        var arr = createTypedArray('float32', len);\r\n        for(i=0;i<len;i+=1){\r\n            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n        }\r\n        return arr;\r\n    }\r\n    function random(min,max){\r\n        if(max === undefined){\r\n            if(min === undefined){\r\n                min = 0;\r\n                max = 1;\r\n            } else {\r\n                max = min;\r\n                min = undefined;\r\n            }\r\n        }\r\n        if(max.length){\r\n            var i, len = max.length;\r\n            if(!min){\r\n                min = createTypedArray('float32', len);\r\n            }\r\n            var arr = createTypedArray('float32', len);\r\n            var rnd = BMMath.random();\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        if(min === undefined){\r\n            min = 0;\r\n        }\r\n        var rndm = BMMath.random();\r\n        return min + rndm*(max-min);\r\n    }\r\n\r\n    function createPath(points, inTangents, outTangents, closed) {\r\n        var i, len = points.length;\r\n        var path = shape_pool.newElement();\r\n        path.setPathData(!!closed, len);\r\n        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n        for(i = 0; i < len; i += 1) {\r\n            inVertexPoint = inTangents ? inTangents[i] : arrPlaceholder;\r\n            outVertexPoint = outTangents ? outTangents[i] : arrPlaceholder;\r\n            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function initiateExpression(elem,data,property){\r\n        var val = data.x;\r\n        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n        var _needsRandom = val.indexOf('random') !== -1;\r\n        var elemType = elem.data.ty;\r\n        var transform,content,effect;\r\n        var thisProperty = property;\r\n        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        var width = elem.data.sw ? elem.data.sw : 0;\r\n        var height = elem.data.sh ? elem.data.sh : 0;\r\n        var loopIn, loop_in, loopOut, loop_out;\r\n        var toWorld,fromWorld,fromComp,fromCompToSurface,anchorPoint,thisLayer,thisComp,mask,valueAtTime,velocityAtTime;\r\n\r\n        var scoped_bm_rt;\r\n        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n        var numKeys = property.kf ? data.k.length : 0;\r\n\r\n        var wiggle = function wiggle(freq,amp){\r\n            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n            var addedAmps = createTypedArray('float32', len);\r\n            freq = 5;\r\n            var iterations = Math.floor(time*freq);\r\n            i = 0;\r\n            j = 0;\r\n            while(i<iterations){\r\n                //var rnd = BMMath.random();\r\n                for(j=0;j<len;j+=1){\r\n                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n                    //addedAmps[j] += -amp + amp*2*rnd;\r\n                }\r\n                i += 1;\r\n            }\r\n            //var rnd2 = BMMath.random();\r\n            var periods = time*freq;\r\n            var perc = periods - Math.floor(periods);\r\n            var arr = createTypedArray('float32', len);\r\n            if(len>1){\r\n                for(j=0;j<len;j+=1){\r\n                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n                }\r\n                return arr;\r\n            } else {\r\n                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n            }\r\n        }.bind(this);\r\n\r\n        if(thisProperty.loopIn) {\r\n            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n            loop_in = loopIn;\r\n        }\r\n\r\n        if(thisProperty.loopOut) {\r\n            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n            loop_out = loopOut;\r\n        }\r\n\r\n        function loopInDuration(type,duration){\r\n            return loopIn(type,duration,true);\r\n        }\r\n\r\n        function loopOutDuration(type,duration){\r\n            return loopOut(type,duration,true);\r\n        }\r\n\r\n        if(this.getValueAtTime) {\r\n            valueAtTime = this.getValueAtTime.bind(this);\r\n        }\r\n\r\n        if(this.getVelocityAtTime) {\r\n            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n        }\r\n\r\n        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n        function lookAt(elem1,elem2){\r\n            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n            return [yaw,pitch,0];\r\n        }\r\n\r\n        function easeOut(t, tMin, tMax, val1, val2){\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            return -(val2-val1) * t*(t-2) + val1;\r\n        }\r\n\r\n        function easeIn(t, tMin, tMax, val1, val2){\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            return (val2-val1)*t*t + val1;\r\n        }\r\n\r\n        function nearestKey(time){\r\n            var i, len = data.k.length,index,keyTime;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                index = 0;\r\n                keyTime = 0;\r\n            } else {\r\n                index = -1;\r\n                time *= elem.comp.globalData.frameRate;\r\n                if (time < data.k[0].t) {\r\n                    index = 1;\r\n                    keyTime = data.k[0].t;\r\n                } else {\r\n                    for(i=0;i<len-1;i+=1){\r\n                        if(time === data.k[i].t){\r\n                            index = i + 1;\r\n                            keyTime = data.k[i].t;\r\n                            break;\r\n                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n                                index = i + 2;\r\n                                keyTime = data.k[i+1].t;\r\n                            } else {\r\n                                index = i + 1;\r\n                                keyTime = data.k[i].t;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(index === -1){\r\n                        index = i + 1;\r\n                        keyTime = data.k[i].t;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            var ob = {};\r\n            ob.index = index;\r\n            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n            return ob;\r\n        }\r\n\r\n        function key(ind){\r\n            var ob, i, len;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                throw new Error('The property has no keyframe at index ' + ind);\r\n            }\r\n            ind -= 1;\r\n            ob = {\r\n                time: data.k[ind].t/elem.comp.globalData.frameRate\r\n            };\r\n            var arr;\r\n            if(ind === data.k.length - 1 && !data.k[ind].h){\r\n                arr = data.k[ind-1].e;\r\n            }else{\r\n                arr = data.k[ind].s;\r\n            }\r\n            len = arr.length;\r\n            for(i=0;i<len;i+=1){\r\n                ob[i] = arr[i];\r\n            }\r\n            return ob;\r\n        }\r\n\r\n        function framesToTime(frames, fps) { \r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return frames / fps;\r\n        }\r\n\r\n        function timeToFrames(t, fps) {\r\n            if (!t && t !== 0) {\r\n                t = time;\r\n            }\r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return t * fps;\r\n        }\r\n\r\n        function seedRandom(seed){\r\n            BMMath.seedrandom(randSeed + seed);\r\n        }\r\n\r\n        function sourceRectAtTime() {\r\n            return elem.sourceRectAtTime();\r\n        }\r\n\r\n        var time, velocity, value, textIndex, textTotal, selectorValue;\r\n        var index = elem.data.ind;\r\n        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n        var parent;\r\n        var randSeed = Math.floor(Math.random()*1000000);\r\n        function executeExpression(_value) {\r\n            value = _value;\r\n            if (_needsRandom) {\r\n                seedRandom(randSeed);\r\n            }\r\n            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n                return value;\r\n            }\r\n            if(this.propType === 'textSelector'){\r\n                textIndex = this.textIndex;\r\n                textTotal = this.textTotal;\r\n                selectorValue = this.selectorValue;\r\n            }\r\n            if (!thisLayer) {\r\n                thisLayer = elem.layerInterface;\r\n                thisComp = elem.comp.compInterface;\r\n                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n                fromCompToSurface = fromComp;\r\n            }\r\n            if (!transform) {\r\n                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n                anchorPoint = transform.anchorPoint;\r\n            }\r\n            \r\n            if (elemType === 4 && !content) {\r\n                content = thisLayer(\"ADBE Root Vectors Group\");\r\n            }\r\n            if (!effect) {\r\n                effect = thisLayer(4);\r\n            }\r\n            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n            if (hasParent && !parent) {\r\n                parent = elem.hierarchy[0].layerInterface;\r\n            }\r\n            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n            if (needsVelocity) {\r\n                velocity = velocityAtTime(time);\r\n            }\r\n            expression_function();\r\n            this.frameExpressionId = elem.globalData.frameId;\r\n\r\n            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n            if (scoped_bm_rt.propType === \"shape\") {\r\n                scoped_bm_rt = shape_pool.clone(scoped_bm_rt.v);\r\n            }\r\n            return scoped_bm_rt;\r\n        }\r\n        return executeExpression;\r\n    }\r\n\r\n    ob.initiateExpression = initiateExpression;\r\n    return ob;\r\n}());\n(function addPropertyDecorator() {\r\n\r\n    function getStaticValueAtTime() {\r\n        return this.pv;\r\n    }\r\n\r\n    function loopOut(type,duration,durationFlag){\r\n        if(!this.k || !this.keyframes){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n        if(currentFrame<=lastKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, firstKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n                } else {\r\n                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n                }\r\n                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(iterations % 2 !== 0){\r\n                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n                    }\r\n                    return ret;\r\n                }\r\n                return (endV-initV)*repeats + current;\r\n            } else if(type === 'continue'){\r\n                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(lastValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n            }\r\n            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function loopIn(type,duration, durationFlag) {\r\n        if(!this.k){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var firstKeyFrame = keyframes[0].t;\r\n        if(currentFrame>=firstKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, lastKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                lastKeyFrame = keyframes[duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n                } else {\r\n                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n                }\r\n                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n                if(iterations % 2 === 0){\r\n                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return current-(endV-initV)*repeats;\r\n            } else if(type === 'continue'){\r\n                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(firstValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n            }\r\n            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            frameNum *= this.elem.globalData.frameRate;\r\n            frameNum -= this.offsetTime;\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getVelocityAtTime(frameNum) {\r\n        if(this.vel !== undefined){\r\n            return this.vel;\r\n        }\r\n        var delta = -0.01;\r\n        //frameNum += this.elem.data.st;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var velocity;\r\n        if(v1.length){\r\n            velocity = createTypedArray('float32', v1.length);\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                //removing frameRate\r\n                //if needed, don't add it here\r\n                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n                velocity[i] = (v2[i] - v1[i])/delta;\r\n            }\r\n        } else {\r\n            velocity = (v2 - v1)/delta;\r\n        }\r\n        return velocity;\r\n    }\r\n\r\n    function setGroupProperty(propertyGroup){\r\n        this.propertyGroup = propertyGroup;\r\n    }\r\n\r\n    function searchExpressions(elem,data,prop){\r\n        if(data.x){\r\n            prop.k = true;\r\n            prop.x = true;\r\n            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n        }\r\n    }\r\n\r\n    function getTransformValueAtTime(time) {\r\n        console.warn('Transform at time not supported');\r\n    }\r\n\r\n    function getTransformStaticValueAtTime(time) {\r\n\r\n    }\r\n\r\n    var TextExpressionSelectorProp = (function(){\r\n\r\n        function getValueProxy(index,total){\r\n            this.textIndex = index+1;\r\n            this.textTotal = total;\r\n            this.getValue();\r\n            return this.v;\r\n        }\r\n\r\n        return function TextExpressionSelectorProp(elem,data){\r\n            this.pv = 1;\r\n            this.comp = elem.comp;\r\n            this.elem = elem;\r\n            this.mult = 0.01;\r\n            this.propType = 'textSelector';\r\n            this.textTotal = data.totalChars;\r\n            this.selectorValue = 100;\r\n            this.lastValue = [1,1,1];\r\n            searchExpressions.bind(this)(elem,data,this);\r\n            this.getMult = getValueProxy;\r\n            this.getVelocityAtTime = getVelocityAtTime;\r\n            if(this.kf){\r\n                this.getValueAtTime = getValueAtTime.bind(this);\r\n            } else {\r\n                this.getValueAtTime = getStaticValueAtTime.bind(this);\r\n            }\r\n            this.setGroupProperty = setGroupProperty;\r\n        };\r\n    }());\r\n\r\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n        var prop = getTransformProperty(elem, data, container);\r\n        if(prop.dynamicProperties.length) {\r\n            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = setGroupProperty;\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetProp = PropertyFactory.getProp;\r\n    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n        var prop = propertyGetProp(elem,data,type, mult, container);\r\n        //prop.getVelocityAtTime = getVelocityAtTime;\r\n        //prop.loopOut = loopOut;\r\n        //prop.loopIn = loopIn;\r\n        if(prop.kf){\r\n            prop.getValueAtTime = getValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = setGroupProperty;\r\n        prop.loopOut = loopOut;\r\n        prop.loopIn = loopIn;\r\n        prop.getVelocityAtTime = getVelocityAtTime;\r\n        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n        prop.propertyIndex = data.ix;\r\n        var value = 0;\r\n        if(type !== 0) {\r\n            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n        }\r\n        prop._cachingAtTime = {\r\n            lastFrame: initialDefaultFrame,\r\n            lastIndex: 0,\r\n            value: value\r\n        };\r\n        searchExpressions(elem,data,prop);\r\n        if(prop.k){\r\n            container.addDynamicProperty(prop);\r\n        }\r\n\r\n        return prop;\r\n    };\r\n\r\n    function getShapeValueAtTime(frameNum) {\r\n        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n        if (!this._cachingAtTime) {\r\n            this._cachingAtTime = {\r\n                shapeValue: shape_pool.clone(this.pv),\r\n                lastIndex: 0,\r\n                lastTime: initialDefaultFrame\r\n            };\r\n        }\r\n        if(frameNum !== this._cachingAtTime.lastTime) {\r\n            this._cachingAtTime.lastTime = frameNum;\r\n            frameNum *= this.elem.globalData.frameRate;\r\n            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n        }\r\n        return this._cachingAtTime.shapeValue;\r\n    }\r\n\r\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n    function ShapeExpressions(){}\r\n    ShapeExpressions.prototype = {\r\n        vertices: function(prop, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            var i, len = shapePath._length;\r\n            var vertices = shapePath[prop];\r\n            var points = shapePath.v;\r\n            var arr = createSizedArray(len);\r\n            for(i = 0; i < len; i += 1) {\r\n                if(prop === 'i' || prop === 'o') {\r\n                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n                } else {\r\n                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n                }\r\n                \r\n            }\r\n            return arr;\r\n        },\r\n        points: function(time){\r\n            return this.vertices('v', time);\r\n        },\r\n        inTangents: function(time){\r\n            return this.vertices('i', time);\r\n        },\r\n        outTangents: function(time){\r\n            return this.vertices('o', time);\r\n        },\r\n        isClosed: function(){\r\n            return this.v.c;\r\n        },\r\n        pointOnPath: function(perc, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            if(!this._segmentsLength) {\r\n                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n            }\r\n\r\n            var segmentsLength = this._segmentsLength;\r\n            var lengths = segmentsLength.lengths;\r\n            var lengthPos = segmentsLength.totalLength * perc;\r\n            var i = 0, len = lengths.length;\r\n            var j = 0, jLen;\r\n            var accumulatedLength = 0, pt;\r\n            while(i < len) {\r\n                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n                    var initIndex = i;\r\n                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n                    break;\r\n                } else {\r\n                    accumulatedLength += lengths[i].addedLength;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(!pt){\r\n                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n            }\r\n            return pt;\r\n        },\r\n        vectorOnPath: function(perc, time, vectorType){\r\n            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n            var pt1 = this.pointOnPath(perc, time);\r\n            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n            var xLength = pt2[0] - pt1[0];\r\n            var yLength = pt2[1] - pt1[1];\r\n            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n            return unitVector;\r\n        },\r\n        tangentOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'tangent');\r\n        },\r\n        normalOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'normal');\r\n        },\r\n        setGroupProperty: setGroupProperty,\r\n        getValueAtTime: getStaticValueAtTime\r\n    };\r\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n        prop.propertyIndex = data.ix;\r\n        prop.lock = false;\r\n        if(type === 3){\r\n            searchExpressions(elem,data.pt,prop);\r\n        } else if(type === 4){\r\n            searchExpressions(elem,data.ks,prop);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n    TextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n        if(data.t === 1){\r\n            return new TextExpressionSelectorProp(elem, data,arr);\r\n        } else {\r\n            return propertyGetTextProp(elem,data,arr);\r\n        }\r\n    };\r\n}());\n(function addDecorator() {\r\n\r\n    function searchExpressions(){\r\n        if(this.data.d.x){\r\n            this.comp = this.elem.comp;\r\n            if(this.getValue) {\r\n                this.getPreValue = this.getValue;\r\n            }\r\n            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n            this.getValue = this.getExpressionValue;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    TextProperty.prototype.searchProperty = function(){\r\n        this.kf = this.searchExpressions() || this.data.d.k.length > 1;\r\n        return this.kf;\r\n    };\r\n\r\n    TextProperty.prototype.getExpressionValue = function(num){\r\n        this.calculateExpression();\r\n        if(this._mdf) {\r\n            this.currentData.t = this.v.toString();\r\n            this.completeTextData(this.currentData);\r\n        }\r\n    };\r\n\r\n    TextProperty.prototype.searchExpressions = searchExpressions;\r\n    \r\n}());\nvar ShapeExpressionInterface = (function(){\r\n\r\n    function iterateElements(shapes,view, propertyGroup){\r\n        var arr = [];\r\n        var i, len = shapes ? shapes.length : 0;\r\n        for(i=0;i<len;i+=1){\r\n            if(shapes[i].ty == 'gr'){\r\n                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'fl'){\r\n                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'st'){\r\n                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tm'){\r\n                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tr'){\r\n                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'el'){\r\n                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'sr'){\r\n                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'sh'){\r\n                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rc'){\r\n                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rd'){\r\n                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rp'){\r\n                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n       var interfaces;\r\n       var interfaceFunction = function _interfaceFunction(value){\r\n           var i = 0, len = interfaces.length;\r\n            while(i<len){\r\n                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n                   return interfaces[i];\r\n                }\r\n                i+=1;\r\n            }\r\n            if(typeof value === 'number'){\r\n               return interfaces[value-1];\r\n            }\r\n       };\r\n       interfaceFunction.propertyGroup = function(val){\r\n           if(val === 1){\r\n               return interfaceFunction;\r\n           } else{\r\n               return propertyGroup(val-1);\r\n           }\r\n       };\r\n       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n       interfaceFunction.numProperties = interfaces.length;\r\n       interfaceFunction.propertyIndex = shape.cix;\r\n       interfaceFunction._name = shape.nm;\r\n\r\n       return interfaceFunction;\r\n   }\r\n\r\n    function groupInterfaceFactory(shape,view, propertyGroup){\r\n        var interfaceFunction = function _interfaceFunction(value){\r\n            switch(value){\r\n                case 'ADBE Vectors Group':\r\n                case 'Contents':\r\n                case 2:\r\n                    return interfaceFunction.content;\r\n                //Not necessary for now. Keeping them here in case a new case appears\r\n                //case 'ADBE Vector Transform Group':\r\n                //case 3:\r\n                default:\r\n                    return interfaceFunction.transform;\r\n            }\r\n        };\r\n        interfaceFunction.propertyGroup = function(val){\r\n            if(val === 1){\r\n                return interfaceFunction;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        };\r\n        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n        interfaceFunction.content = content;\r\n        interfaceFunction.transform = transformInterface;\r\n        Object.defineProperty(interfaceFunction, '_name', {\r\n            get: function(){\r\n                return shape.nm;\r\n            }\r\n        });\r\n        //interfaceFunction.content = interfaceFunction;\r\n        interfaceFunction.numProperties = shape.np;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.nm = shape.nm;\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function fillInterfaceFactory(shape,view,propertyGroup){\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: function() {\r\n                    return ExpressionValue(view.c, 1 / view.c.mult, 'color');\r\n                }\r\n            },\r\n            'opacity': {\r\n                get: function() {\r\n                    return ExpressionValue(view.o, 100);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(propertyGroup);\r\n        view.o.setGroupProperty(propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val === 1){\r\n                return ob;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        }\r\n        function _dashPropertyGroup(val){\r\n            if(val === 1){\r\n                return dashOb;\r\n            } else{\r\n                return _propertyGroup(val-1);\r\n            }\r\n        }\r\n        function addPropertyToDashOb(i) {\r\n            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n                get: function(){\r\n                    return ExpressionValue(view.d.dataProps[i].p);\r\n                }\r\n            });\r\n        }\r\n        var i, len = shape.d ? shape.d.length : 0;\r\n        var dashOb = {};\r\n        for (i = 0; i < len; i += 1) {\r\n            addPropertyToDashOb(i);\r\n            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n                return interfaceFunction.strokeWidth;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: function() {\r\n                    return ExpressionValue(view.c, 1 / view.c.mult, 'color');\r\n                }\r\n            },\r\n            'opacity': {\r\n                get: function() {\r\n                    return ExpressionValue(view.o, 100);\r\n                }\r\n            },\r\n            'strokeWidth': {\r\n                get: function() {\r\n                    return ExpressionValue(view.w);\r\n                }\r\n            },\r\n            'dash': {\r\n                get: function() {\r\n                    return dashOb;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n        view.w.setGroupProperty(_propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function trimInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        view.s.setGroupProperty(_propertyGroup);\r\n        view.e.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n                return interfaceFunction.end;\r\n            }\r\n            if(val === shape.s.ix){\r\n                return interfaceFunction.start;\r\n            }\r\n            if(val === shape.o.ix){\r\n                return interfaceFunction.offset;\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'start': {\r\n                get: function() {\r\n                    return ExpressionValue(view.s, 1 / view.s.mult);\r\n                }\r\n            },\r\n            'end': {\r\n                get: function() {\r\n                    return ExpressionValue(view.e, 1 / view.e.mult);\r\n                }\r\n            },\r\n            'offset': {\r\n                get: function() {\r\n                    return ExpressionValue(view.o);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function transformInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n        if(view.transform.mProps.sk){\r\n            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n        }\r\n        view.transform.op.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.a.ix === value || value === 'Anchor Point'){\r\n                return interfaceFunction.anchorPoint;\r\n            }\r\n            if(shape.o.ix === value || value === 'Opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n            if(shape.p.ix === value || value === 'Position'){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.s.ix === value || value === 'Scale'){\r\n                return interfaceFunction.scale;\r\n            }\r\n            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n                return interfaceFunction.skew;\r\n            }\r\n            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n                return interfaceFunction.skewAxis;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'opacity': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.o, 1/view.transform.mProps.o.mult);\r\n                }\r\n            },\r\n            'position': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.p);\r\n                }\r\n            },\r\n            'anchorPoint': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.a);\r\n                }\r\n            },\r\n            'scale': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.s, 1 / view.transform.mProps.s.mult);\r\n                }\r\n            },\r\n            'rotation': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.r, 1 / view.transform.mProps.r.mult);\r\n                }\r\n            },\r\n            'skew': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.sk);\r\n                }\r\n            },\r\n            'skewAxis': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.sa);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.ty = 'tr';\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.s.ix === value){\r\n                return interfaceFunction.size;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'size': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.s);\r\n                }\r\n            },\r\n            'position': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.p);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function starInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.or.setGroupProperty(_propertyGroup);\r\n        prop.os.setGroupProperty(_propertyGroup);\r\n        prop.pt.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n        if(shape.ir){\r\n            prop.ir.setGroupProperty(_propertyGroup);\r\n            prop.is.setGroupProperty(_propertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.pt.ix === value){\r\n                return interfaceFunction.points;\r\n            }\r\n            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n                return interfaceFunction.outerRadius;\r\n            }\r\n            if(shape.os.ix === value){\r\n                return interfaceFunction.outerRoundness;\r\n            }\r\n            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n                return interfaceFunction.innerRadius;\r\n            }\r\n            if(shape.is && shape.is.ix === value){\r\n                return interfaceFunction.innerRoundness;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: function() {\r\n                    return ExpressionValue(prop.p);\r\n                }\r\n            },\r\n            'rotation': {\r\n                get: function() {\r\n                    return ExpressionValue(prop.r, 1 / prop.r.mult);\r\n                }\r\n            },\r\n            'points': {\r\n                get: function() {\r\n                    return ExpressionValue(prop.pt);\r\n                }\r\n            },\r\n            'outerRadius': {\r\n                get: function() {\r\n                    return ExpressionValue(prop.or);\r\n                }\r\n            },\r\n            'outerRoundness': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.os);\r\n                }\r\n            },\r\n            'innerRadius': {\r\n                get: function(){\r\n                    if(!prop.ir){\r\n                        return 0;\r\n                    }\r\n                    return ExpressionValue(prop.ir);\r\n                }\r\n            },\r\n            'innerRoundness': {\r\n                get: function(){\r\n                    if(!prop.is){\r\n                        return 0;\r\n                    }\r\n                    return ExpressionValue(prop.is, 1 / prop.is.mult);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function rectInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.roundness;\r\n            }\r\n            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n                return interfaceFunction.size;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.p);\r\n                }\r\n            },\r\n            'roundness': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.r);\r\n                }\r\n            },\r\n            'size': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.s);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.rd.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n                return interfaceFunction.radius;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'radius': {\r\n                get: function() {\r\n                    return ExpressionValue(prop.rd);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.c.setGroupProperty(_propertyGroup);\r\n        prop.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.c.ix === value || 'Copies' === value){\r\n                return interfaceFunction.copies;\r\n            } else if(shape.o.ix === value || 'Offset' === value){\r\n                return interfaceFunction.offset;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'copies': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.c);\r\n                }\r\n            },\r\n            'offset': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.o);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function pathInterfaceFactory(shape,view,propertyGroup){\r\n        var prop = view.sh;\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        prop.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n                return interfaceFunction.path;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'path': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            'shape': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'ix': { value: shape.ix },\r\n            'mn': { value: shape.mn }\r\n        });\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return function(shapes,view,propertyGroup) {\r\n        var interfaces;\r\n        function _interfaceFunction(value){\r\n            if(typeof value === 'number'){\r\n                return interfaces[value-1];\r\n            } else {\r\n                var i = 0, len = interfaces.length;\r\n                while(i<len){\r\n                    if(interfaces[i]._name === value){\r\n                        return interfaces[i];\r\n                    }\r\n                    i+=1;\r\n                }\r\n            }\r\n        }\r\n        _interfaceFunction.propertyGroup = propertyGroup;\r\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n        return _interfaceFunction;\r\n    };\r\n}());\r\n\nvar TextExpressionInterface = (function(){\r\n\treturn function(elem){\r\n        var _prevValue, _sourceText;\r\n        function _thisLayerFunction(){\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n            get: function(){\r\n                var stringValue = elem.textProperty.currentData.t;\r\n                if(elem.textProperty.currentData.t !== _prevValue) {\r\n                    elem.textProperty.currentData.t = _prevValue;\r\n                    _sourceText = new String(stringValue);\r\n                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n                }\r\n                return _sourceText;\r\n            }\r\n        });\r\n        return _thisLayerFunction;\r\n    };\r\n}());\nvar LayerExpressionInterface = (function (){\r\n    function toWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n        }\r\n        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n    }\r\n    function fromWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n    function fromComp(arr){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n\r\n\r\n    return function(elem){\r\n\r\n        var transformInterface;\r\n\r\n        function _registerMaskInterface(maskManager){\r\n            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n        }\r\n        function _registerEffectsInterface(effects){\r\n            _thisLayerFunction.effect = effects;\r\n        }\r\n\r\n        function _thisLayerFunction(name){\r\n            switch(name){\r\n                case \"ADBE Root Vectors Group\":\r\n                case \"Contents\":\r\n                case 2:\r\n                    return _thisLayerFunction.shapeInterface;\r\n                case 1:\r\n                case 6:\r\n                case \"Transform\":\r\n                case \"transform\":\r\n                case \"ADBE Transform Group\":\r\n                    return transformInterface;\r\n                case 4:\r\n                case \"ADBE Effect Parade\":\r\n                    return _thisLayerFunction.effect;\r\n            }\r\n        }\r\n        _thisLayerFunction.toWorld = toWorld;\r\n        _thisLayerFunction.fromWorld = fromWorld;\r\n        _thisLayerFunction.toComp = toWorld;\r\n        _thisLayerFunction.fromComp = fromComp;\r\n        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n        _thisLayerFunction._elem = elem;\r\n        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n        Object.defineProperties(_thisLayerFunction,{\r\n            hasParent: {\r\n                get: function(){\r\n                    return elem.hierarchy.length;\r\n                }\r\n            },\r\n            parent: {\r\n                get: function(){\r\n                    return elem.hierarchy[0].layerInterface;\r\n                }\r\n            },\r\n            rotation: getDescriptor(transformInterface, 'rotation'),\r\n            scale: getDescriptor(transformInterface, 'scale'),\r\n            position: getDescriptor(transformInterface, 'position'),\r\n            opacity: getDescriptor(transformInterface, 'opacity'),\r\n            anchorPoint: anchorPointDescriptor,\r\n            anchor_point: anchorPointDescriptor,\r\n            transform: {\r\n                get: function () {\r\n                    return transformInterface;\r\n                }\r\n            },\r\n            active: {\r\n                get: function(){\r\n                    return elem.isInRange;\r\n                }\r\n            }\r\n        });\r\n\r\n        _thisLayerFunction.startTime = elem.data.st;\r\n        _thisLayerFunction.index = elem.data.ind;\r\n        _thisLayerFunction.source = elem.data.refId;\r\n        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n\r\n        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\n\nvar CompExpressionInterface = (function (){\r\n    return function(comp){\r\n        function _thisLayerFunction(name){\r\n            var i=0, len = comp.layers.length;\r\n            while(i<len){\r\n                if(comp.layers[i].nm === name || comp.layers[i].ind === name){\r\n                    return comp.elements[i].layerInterface;\r\n                }\r\n                i += 1;\r\n            }\r\n            return {active:false};\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"_name\", { value:comp.data.nm });\r\n        _thisLayerFunction.layer = _thisLayerFunction;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.height = comp.globalData.compSize.h;\r\n        _thisLayerFunction.width = comp.globalData.compSize.w;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.frameDuration = 1/comp.globalData.frameRate;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\nvar TransformExpressionInterface = (function (){\r\n    return function(transform){\r\n        function _thisFunction(name){\r\n            switch(name){\r\n                case \"scale\":\r\n                case \"Scale\":\r\n                case \"ADBE Scale\":\r\n                case 6:\r\n                    return _thisFunction.scale;\r\n                case \"rotation\":\r\n                case \"Rotation\":\r\n                case \"ADBE Rotation\":\r\n                case \"ADBE Rotate Z\":\r\n                case 10:\r\n                    return _thisFunction.rotation;\r\n                case \"ADBE Rotate X\":\r\n                    return _thisFunction.xRotation;\r\n                case \"ADBE Rotate Y\":\r\n                    return _thisFunction.yRotation;\r\n                case \"position\":\r\n                case \"Position\":\r\n                case \"ADBE Position\":\r\n                case 2:\r\n                    return _thisFunction.position;\r\n                case 'ADBE Position_0':\r\n                    return _thisFunction.xPosition;\r\n                case 'ADBE Position_1':\r\n                    return _thisFunction.yPosition;\r\n                case 'ADBE Position_2':\r\n                    return _thisFunction.zPosition;\r\n                case \"anchorPoint\":\r\n                case \"AnchorPoint\":\r\n                case \"Anchor Point\":\r\n                case \"ADBE AnchorPoint\":\r\n                case 1:\r\n                    return _thisFunction.anchorPoint;\r\n                case \"opacity\":\r\n                case \"Opacity\":\r\n                case 11:\r\n                    return _thisFunction.opacity;\r\n            }\r\n        }\r\n\r\n        Object.defineProperty(_thisFunction, \"rotation\", {\r\n            get: function(){\r\n                if(transform.r) {\r\n                    return ExpressionValue(transform.r, 1/degToRads);\r\n                } else {\r\n                    return ExpressionValue(transform.rz, 1/degToRads);\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n            get: function(){\r\n                    return ExpressionValue(transform.rx, 1/degToRads);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n            get: function(){\r\n                    return ExpressionValue(transform.ry, 1/degToRads);\r\n            }\r\n        });\r\n        Object.defineProperty(_thisFunction, \"scale\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.s, 100);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"position\", {\r\n            get: function () {\r\n                if(transform.p) {\r\n                    return ExpressionValue(transform.p);\r\n                } else {\r\n                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.px);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.py);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.pz);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.a);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"opacity\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.o, 100);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skew\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.sk);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.sa);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"orientation\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.or);\r\n            }\r\n        });\r\n\r\n        return _thisFunction;\r\n    };\r\n}());\nvar ProjectInterface = (function (){\r\n\r\n    function registerComposition(comp){\r\n        this.compositions.push(comp);\r\n    }\r\n\r\n    return function(){\r\n        function _thisProjectFunction(name){\r\n            var i = 0, len = this.compositions.length;\r\n            while(i<len){\r\n                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n                    if(this.compositions[i].prepareFrame) {\r\n                        this.compositions[i].prepareFrame(this.compositions[i].data.xt ? this.currentFrame : this.compositions[i].renderedFrame);\r\n                    }\r\n                    return this.compositions[i].compInterface;\r\n                }\r\n                i+=1;\r\n            }\r\n        }\r\n\r\n        _thisProjectFunction.compositions = [];\r\n        _thisProjectFunction.currentFrame = 0;\r\n\r\n        _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n\r\n\r\n        return _thisProjectFunction;\r\n    };\r\n}());\nvar EffectsExpressionInterface = (function (){\r\n    var ob = {\r\n        createEffectsInterface: createEffectsInterface\r\n    };\r\n\r\n    function createEffectsInterface(elem, propertyGroup){\r\n        if(elem.effectsManager){\r\n\r\n            var effectElements = [];\r\n            var effectsData = elem.data.ef;\r\n            var i, len = elem.effectsManager.effectElements.length;\r\n            for(i=0;i<len;i+=1){\r\n                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n            }\r\n\r\n            return function(name){\r\n                var effects = elem.data.ef, i = 0, len = effects.length;\r\n                while(i<len) {\r\n                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                        return effectElements[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    function createGroupInterface(data,elements, propertyGroup, elem){\r\n        var effectElements = [];\r\n        var i, len = data.ef.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(data.ef[i].ty === 5){\r\n                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n            } else {\r\n                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n            }\r\n        }\r\n\r\n        function _propertyGroup(val) {\r\n            if(val === 1){\r\n               return groupInterface;\r\n            } else{\r\n               return propertyGroup(val-1);\r\n            }\r\n        }\r\n\r\n        var groupInterface = function(name){\r\n            var effects = data.ef, i = 0, len = effects.length;\r\n            while(i<len) {\r\n                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                    if(effects[i].ty === 5){\r\n                        return effectElements[i];\r\n                    } else {\r\n                        return effectElements[i]();\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return effectElements[0]();\r\n        };\r\n\r\n        groupInterface.propertyGroup = _propertyGroup;\r\n\r\n        if(data.mn === 'ADBE Color Control'){\r\n            Object.defineProperty(groupInterface, 'color', {\r\n                get: function(){\r\n                    return effectElements[0]();\r\n                }\r\n            });\r\n        }\r\n        Object.defineProperty(groupInterface, 'numProperties', {\r\n            get: function(){\r\n                return data.np;\r\n            }\r\n        });\r\n        groupInterface.active = data.en !== 0;\r\n        return groupInterface;\r\n    }\r\n\r\n    function createValueInterface(element, type, elem, propertyGroup){\r\n        function interfaceFunction(){\r\n            if(type === 10){\r\n                return elem.comp.compInterface(element.p.v);\r\n            }\r\n            return ExpressionValue(element.p);\r\n        }\r\n\r\n        if(element.p.setGroupProperty) {\r\n            element.p.setGroupProperty(propertyGroup);\r\n        }\r\n\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return ob;\r\n\r\n}());\nvar MaskManagerInterface = (function(){\r\n\r\n\tfunction MaskInterface(mask, data){\r\n\t\tthis._mask = mask;\r\n\t\tthis._data = data;\r\n\t}\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n        get: function(){\r\n                if(this._mask.prop.k){\r\n                    this._mask.prop.getValue();\r\n                }\r\n                return this._mask.prop;\r\n            }\r\n        });\r\n\r\n\tvar MaskManager = function(maskManager, elem){\r\n\t\tvar _maskManager = maskManager;\r\n\t\tvar _elem = elem;\r\n\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\tvar i, len = maskManager.viewData.length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t}\r\n\r\n\t\tvar maskFunction = function(name){\r\n\t\t\ti = 0;\r\n\t\t    while(i<len){\r\n\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t            return _masksInterfaces[i];\r\n\t\t        }\r\n\t\t        i += 1;\r\n\t\t    }\r\n\t\t};\r\n\t\treturn maskFunction;\r\n\t};\r\n\treturn MaskManager;\r\n}());\r\n\nvar ExpressionValue = (function() {\r\n\treturn function(elementProp, mult, type) {\r\n        mult = mult || 1;\r\n        var expressionValue, arrayValue;\r\n\r\n\t\tif (elementProp.k) {\r\n            elementProp.getValue();\r\n        }\r\n        var i, len, arrValue, val;\r\n        if (type) {\r\n        \tif(type === 'color') {\r\n        \t\tlen = 4;\r\n                expressionValue = createTypedArray('float32', len);\r\n                arrValue = createTypedArray('float32', len);\r\n\t\t        for (i = 0; i < len; i += 1) {\r\n\t\t            expressionValue[i] = arrValue[i] = (i < 3) ? elementProp.v[i] * mult : 1;\r\n\t\t        }\r\n\t        \texpressionValue.value = arrValue;\r\n        \t}\r\n        } else if (elementProp.propType === 'unidimensional'){\r\n            val = elementProp.v * mult;\r\n            expressionValue = new Number(val);\r\n            expressionValue.value = val;\r\n        } else {\r\n        \tlen = elementProp.pv.length;\r\n            expressionValue = createTypedArray('float32', len);\r\n            arrValue = createTypedArray('float32', len);\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            expressionValue[i] = arrValue[i] = elementProp.v[i] * mult;\r\n\t        }\r\n\t        expressionValue.value = arrValue;\r\n        }\r\n        \r\n        expressionValue.numKeys = elementProp.keyframes ? elementProp.keyframes.length : 0;\r\n        expressionValue.key = function(pos) {\r\n            if (!expressionValue.numKeys) {\r\n                return 0;\r\n            } else {\r\n                return elementProp.keyframes[pos-1].t;\r\n            }\r\n        };\r\n        expressionValue.valueAtTime = elementProp.getValueAtTime;\r\n        expressionValue.propertyGroup = elementProp.propertyGroup;\r\n        return expressionValue;\r\n\t};\r\n}());\nfunction SliderEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction AngleEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction ColorEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction PointEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction LayerIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction MaskIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction CheckboxEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction NoValueEffect(){\r\n    this.p = {};\r\n}\nfunction EffectsManager(data,element){\r\n    var effects = data.ef || [];\r\n    this.effectElements = [];\r\n    var i,len = effects.length;\r\n    var effectItem;\r\n    for(i=0;i<len;i++) {\r\n        effectItem = new GroupEffect(effects[i],element);\r\n        this.effectElements.push(effectItem);\r\n    }\r\n}\r\n\r\nfunction GroupEffect(data,element){\r\n    this.container = element;\r\n    this.dynamicProperties = [];\r\n    this.init(data,element);\r\n}\r\n\r\nGroupEffect.prototype.getValue = function(){\r\n    this._mdf = false;\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i]._mdf) {\r\n            this._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nGroupEffect.prototype.addDynamicProperty = addDynamicProperty;\r\n\r\nGroupEffect.prototype.init = function(data,element){\r\n    this.data = data;\r\n    this._mdf = false;\r\n    this.effectElements = [];\r\n    var i, len = this.data.ef.length;\r\n    var eff, effects = this.data.ef;\r\n    for(i=0;i<len;i+=1){\r\n        eff = null;\r\n        switch(effects[i].ty){\r\n            case 0:\r\n                eff = new SliderEffect(effects[i],element,this);\r\n                break;\r\n            case 1:\r\n                eff = new AngleEffect(effects[i],element,this);\r\n                break;\r\n            case 2:\r\n                eff = new ColorEffect(effects[i],element,this);\r\n                break;\r\n            case 3:\r\n                eff = new PointEffect(effects[i],element,this);\r\n                break;\r\n            case 4:\r\n            case 7:\r\n                eff = new CheckboxEffect(effects[i],element,this);\r\n                break;\r\n            case 10:\r\n                eff = new LayerIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 11:\r\n                eff = new MaskIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 5:\r\n                eff = new EffectsManager(effects[i],element,this);\r\n                break;\r\n            //case 6:\r\n            default:\r\n                eff = new NoValueEffect(effects[i],element,this);\r\n                break;\r\n        }\r\n        if(eff) {\r\n            this.effectElements.push(eff);\r\n        }\r\n    }\r\n};\r\n    var lottiejs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    /*function start() {\r\n        animationManager.start();\r\n    }*/\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    lottiejs.play = play;\r\n    lottiejs.pause = pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = togglePause;\r\n    lottiejs.setSpeed = setSpeed;\r\n    lottiejs.setDirection = setDirection;\r\n    lottiejs.stop = stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = goToAndStop;\r\n    lottiejs.destroy = destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.1.9';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lottie-web/build/player/lottie.js\n// module id = 320\n// module chunks = 35783957827783","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 4\n// module chunks = 35783957827783 162898551421021 231608221292675","import React from 'react'\nimport Link from 'gatsby-link'\nimport lottie from 'lottie-web'\n\nimport animation from '../static/animation.json'\n\nclass IndexPage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {show: false}\n  }\n\n  componentDidUpdate() {\n    if (this._el) {\n      this._animation = lottie.loadAnimation({\n        container: this._el,\n        renderer: 'svg',\n        animationData: animation,\n      })\n    }\n  }\n\n  _click = () => {\n    this.setState({show: true})\n\n    setTimeout(() => this.setState({show: false}), 1500)\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          <span\n            style={{\n              fontWeight: 'bold',\n              color: 'purple',\n              cursor: 'pointer',\n            }}\n            onClick={this._click}\n          >\n            Click me\n          </span>\n          {' to see miracle'}\n        </p>\n        <p>Now go build something great.</p>\n        {this.state.show && (\n          <div\n            id=\"animation\"\n            ref={el => (this._el = el)}\n            style={{\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              top: 0,\n              left: 0,\n            }}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default IndexPage\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/index.js","module.exports = {\"v\":\"4.9.0\",\"fr\":30,\"ip\":0,\"op\":38,\"w\":315,\"h\":280,\"nm\":\"new\",\"ddd\":0,\"assets\":[],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"bodyband Konturen\",\"parent\":3,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[157.5,129,0]},\"a\":{\"a\":0,\"k\":[157.5,140,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":9,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,52],[14.5,52],[14.5,52.25],[-14.5,52.25]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-41],[14.5,-41],[14.5,52.25],[-14.5,52.25]],\"c\":true}]},{\"t\":19.111328125}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.871,0.702,0.271,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[160.5,184],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"topband Konturen\",\"parent\":4,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[157.5,140,0]},\"a\":{\"a\":0,\"k\":[157.5,140,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":16.777,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-14.5],[14.5,-14.5],[15.036,-14.207],[-13.964,-14.207]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-14.5],[14.5,-14.5],[14.5,14.5],[-14.5,14.5]],\"c\":true}]},{\"t\":23}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.831,0.396,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[160.5,128.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"body Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0],\"e\":[-13]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5.432,\"s\":[-13],\"e\":[17.85]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11.111,\"s\":[17.85],\"e\":[0]},{\"t\":16.2958984375}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":0,\"s\":[162.125,247.599,0],\"e\":[162.125,145.599,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":8.148,\"s\":[162.125,145.599,0],\"e\":[162.125,236.099,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":16.2958984375}]},\"a\":{\"a\":0,\"k\":[162.125,225.099,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":0,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[-3.228,0],[0,0],[-2.75,0.062]],\"o\":[[0,0],[0,0],[4.75,-0.188],[0,0],[3.228,0],[0,0]],\"v\":[[56.25,46.5],[-54.75,46.5],[-55,46.688],[-49.658,46.5],[49.658,46.5],[56,46.688]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[-3.228,0],[0,0],[0,3.21]],\"o\":[[0,0],[0,0],[0,3.21],[0,0],[3.228,0],[0,0]],\"v\":[[55.5,-46.5],[-55.5,-46.5],[-55.5,40.688],[-49.658,46.5],[49.658,46.5],[55.5,40.688]],\"c\":true}]},{\"t\":3.7041015625}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.008,0.588,0.847,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161.5,178.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"top Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3.704,\"s\":[0],\"e\":[100]},{\"t\":4.4443359375}]},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8.148,\"s\":[10],\"e\":[-23]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":14.074,\"s\":[-23],\"e\":[0]},{\"t\":20}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.937,\"y\":0.946},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p937_0p946_0p167_0p167\",\"t\":0,\"s\":[160,177.5,0],\"e\":[150,34.5,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.097,\"y\":0},\"o\":{\"x\":0.084,\"y\":0.101},\"n\":\"0p097_0_0p084_0p101\",\"t\":10.37,\"s\":[150,34.5,0],\"e\":[161,128.5,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":20}]},\"a\":{\"a\":0,\"k\":[161,128.5,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[0,0,100],\"e\":[58.621,58.621,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":10.37,\"s\":[58.621,58.621,100],\"e\":[100,100,100]},{\"t\":20}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.219,0],[0,0],[0,-3.204],[0,0],[-3.219,0],[0,0],[0,3.204],[0,0]],\"o\":[[0,0],[-3.219,0],[0,0],[0,3.204],[0,0],[3.219,0],[0,0],[0,-3.204]],\"v\":[[61.174,-14.5],[-61.174,-14.5],[-67,-8.7],[-67,8.7],[-61.174,14.5],[61.174,14.5],[67,8.7],[67,-8.7]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161,128.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"schleife/new Konturen\",\"parent\":4,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[161,115,0]},\"a\":{\"a\":0,\"k\":[161,115,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.029,0.029,0.833],\"y\":[1.656,1.656,-15.667]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p029_1p656_0p167_0p167\",\"0p029_1p656_0p167_0p167\",\"0p833_-15p667_0p167_16p667\"],\"t\":23,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":34}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[8.059,0],[1.667,-0.428],[-0.598,-1.849],[-1.278,0],[0,-4.797],[4.835,0],[0,0],[-8.693,2.139],[0.541,1.87],[3.006,-6.366],[4.932,3.716],[1.157,-1.595],[-1.586,-3.998],[0,0],[0,4.796],[-4.834,0],[-2.606,-1.934],[-1.272,1.478],[5.256,0],[0,-7.995],[-8.058,0],[0,0],[0,0],[0,7.995]],\"o\":[[-1.91,0],[0.541,1.87],[1.145,-0.282],[4.835,0],[0,4.796],[0,0],[2.097,-5.318],[-0.598,-1.849],[-9.385,2.413],[-2.071,-4.386],[-1.272,1.478],[5.152,3.823],[0,0],[-4.834,0],[0,-4.797],[3.679,0],[1.157,-1.595],[-3.498,-2.637],[-8.058,0],[0,7.995],[0,0],[0,0],[8.059,0],[0,-7.995]],\"v\":[[23.385,-14.5],[18.024,-13.831],[19.756,-8.259],[23.385,-8.7],[32.155,0],[23.385,8.7],[4.075,8.7],[19.756,-8.259],[18.024,-13.831],[0,3.422],[-10.322,-10.065],[-13.987,-5.478],[-4.083,8.7],[-23.385,8.7],[-32.154,0],[-23.385,-8.7],[-13.987,-5.478],[-10.322,-10.065],[-23.385,-14.5],[-38,0],[-23.385,14.5],[0,14.5],[23.385,14.5],[38,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.831,0.396,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161,100.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"shadow Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[162,236,0]},\"a\":{\"a\":0,\"k\":[162,225,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.115,0.115,0.833],\"y\":[1,1,-5.19]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p115_1_0p167_0p167\",\"0p115_1_0p167_0p167\",\"0p833_-5p19_0p167_16p667\"],\"t\":0,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":13}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-53.02,0],[0,-3.313],[53.02,0],[0,3.313]],\"o\":[[53.02,0],[0,3.313],[-53.02,0],[0,-3.313]],\"v\":[[0,-6],[96,0],[0,6],[-96,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945,0.945,0.945,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[162,225],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":4,\"nm\":\"Ebene 12 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":9,\"s\":[262],\"e\":[0]},{\"t\":29}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.359},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p359_0p167_0p167\",\"t\":9,\"s\":[157.5,140,0],\"e\":[95.449,44.997,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":29}]},\"a\":{\"a\":0,\"k\":[95.449,44.997,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":9,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":29}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-2.18,-3.777],[2.178,-3.775],[4.359,0.001],[2.181,3.777],[-2.18,3.775],[-4.359,-0.001]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[95.449,44.997],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Ebene 13 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[-63],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.564},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p564_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[248.067,112.75,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[248.067,112.75,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-1.53,-6.63],[4.974,-4.639],[6.505,1.99],[1.532,6.63],[-4.972,4.64],[-6.505,-1.989]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[248.067,112.75],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Ebene 14 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[-200],\"e\":[0]},{\"t\":20}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.477},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p477_0p167_0p167\",\"t\":0,\"s\":[157.5,140,0],\"e\":[268.728,57.196,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":20}]},\"a\":{\"a\":0,\"k\":[120.728,247.196,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":0,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":20}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[-2.376,-3.394],[2.799,1.018],[-2.799,3.394]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.149,0.784,0.333,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[120.728,247.196],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":10,\"ty\":4,\"nm\":\"Ebene 15 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8,\"s\":[134],\"e\":[0]},{\"t\":28}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.547},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p547_0p167_0p167\",\"t\":8,\"s\":[157.5,140,0],\"e\":[61.63,139.445,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":28}]},\"a\":{\"a\":0,\"k\":[61.63,139.445,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":8,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":28}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[4.37,-5.433],[4.286,5.433],[-4.37,1.022]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.149,0.784,0.333,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[61.63,139.445],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":11,\"ty\":4,\"nm\":\"Ebene 16 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5,\"s\":[74],\"e\":[0]},{\"t\":25}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.387},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p387_0p167_0p167\",\"t\":5,\"s\":[157.5,140,0],\"e\":[183.561,32.661,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":25}]},\"a\":{\"a\":0,\"k\":[183.561,32.661,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":5,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":25}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-2.146,0],[0,-2.147],[2.146,0],[0,2.147]],\"o\":[[2.146,0],[0,2.147],[-2.146,0],[0,-2.147]],\"v\":[[-0.001,-3.888],[3.886,0],[-0.001,3.888],[-3.887,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039,0.314,0.392,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[183.561,32.661],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":12,\"ty\":4,\"nm\":\"Ebene 17 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":12,\"s\":[29],\"e\":[0]},{\"t\":32}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.463},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p463_0p167_0p167\",\"t\":12,\"s\":[157.5,140,0],\"e\":[44.65,36.558,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":32}]},\"a\":{\"a\":0,\"k\":[214.65,244.558,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":12,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":32}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-3.22,0],[0,-3.222],[3.22,0],[0,3.221]],\"o\":[[3.22,0],[0,3.221],[-3.22,0],[0,-3.222]],\"v\":[[0,-5.832],[5.829,0],[0,5.832],[-5.829,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039,0.314,0.392,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[214.65,244.558],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":13,\"ty\":4,\"nm\":\"Ebene 18 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[168],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.243},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p243_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[294.925,112.226,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[62.925,234.226,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.209,0.131],[0,0],[0,0],[0.174,-0.142],[0,0],[0,0],[-0.093,-0.228],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.236],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.012,-0.223],[0,0],[0,0],[-0.238,-0.069],[0,0],[0,0],[-0.135,0.201],[0,0],[0,0],[0.155,0.19],[0,0],[0,0],[0.232,-0.083]],\"v\":[[2.206,-0.077],[1.1,-0.771],[1.036,-2.051],[0.544,-2.269],[-0.45,-1.461],[-1.706,-1.819],[-2.062,-1.431],[-1.568,-0.237],[-2.281,0.82],[-2.008,1.278],[-0.711,1.208],[0.105,2.221],[0.628,2.116],[0.938,0.878],[2.156,0.446]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[62.916,234.223],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":14,\"ty\":4,\"nm\":\"Ebene 19 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8,\"s\":[-209],\"e\":[0]},{\"t\":28}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.25},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p25_0p167_0p167\",\"t\":8,\"s\":[157.5,140,0],\"e\":[35.721,103.978,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":28}]},\"a\":{\"a\":0,\"k\":[35.721,103.978,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":8,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":28}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.209,0.131],[0,0],[0,0],[0.174,-0.141],[0,0],[0,0],[-0.094,-0.227],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.237],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.012,-0.224],[0,0],[0,0],[-0.238,-0.068],[0,0],[0,0],[-0.135,0.2],[0,0],[0,0],[0.155,0.191],[0,0],[0,0],[0.231,-0.083]],\"v\":[[2.206,-0.078],[1.1,-0.771],[1.036,-2.051],[0.544,-2.27],[-0.45,-1.461],[-1.706,-1.82],[-2.062,-1.432],[-1.568,-0.238],[-2.281,0.82],[-2.008,1.278],[-0.711,1.207],[0.105,2.22],[0.628,2.115],[0.938,0.878],[2.156,0.446]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[35.712,103.975],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":15,\"ty\":4,\"nm\":\"Ebene 20 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":7,\"s\":[275],\"e\":[0]},{\"t\":27}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.09},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p09_0p167_0p167\",\"t\":7,\"s\":[157.5,140,0],\"e\":[261.12,26.218,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":27}]},\"a\":{\"a\":0,\"k\":[261.12,26.218,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":7,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":27}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.21,0.131],[0,0],[0,0],[0.174,-0.141],[0,0],[0,0],[-0.093,-0.228],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.236],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.011,-0.223],[0,0],[0,0],[-0.238,-0.068],[0,0],[0,0],[-0.135,0.2],[0,0],[0,0],[0.155,0.19],[0,0],[0,0],[0.232,-0.082]],\"v\":[[2.206,-0.078],[1.099,-0.771],[1.034,-2.052],[0.543,-2.27],[-0.45,-1.461],[-1.707,-1.82],[-2.062,-1.432],[-1.568,-0.238],[-2.281,0.82],[-2.009,1.278],[-0.711,1.207],[0.105,2.22],[0.628,2.115],[0.937,0.878],[2.155,0.445]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[261.111,26.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":16,\"ty\":4,\"nm\":\"Ebene 21 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[132.9],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.326},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p326_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[268.337,196.938,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[252.337,213.938,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.411,0.258],[0,0],[0,0],[0.34,-0.276],[0,0],[0,0],[-0.184,-0.446],[0,0],[0,0],[-0.483,0.027],[0,0],[0,0],[-0.116,0.463],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.022,-0.439],[0,0],[0,0],[-0.466,-0.133],[0,0],[0,0],[-0.265,0.392],[0,0],[0,0],[0.302,0.373],[0,0],[0,0],[0.454,-0.162]],\"v\":[[4.322,-0.152],[2.152,-1.51],[2.027,-4.017],[1.065,-4.447],[-0.882,-2.861],[-3.344,-3.565],[-4.038,-2.804],[-3.072,-0.465],[-4.468,1.607],[-3.935,2.505],[-1.392,2.366],[0.207,4.35],[1.231,4.145],[1.837,1.72],[4.222,0.874]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[252.32,213.932],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":17,\"ty\":4,\"nm\":\"Ebene 22 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":13,\"s\":[-266],\"e\":[0]},{\"t\":33}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.337},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p337_0p167_0p167\",\"t\":13,\"s\":[157.5,140,0],\"e\":[133.395,26.515,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":33}]},\"a\":{\"a\":0,\"k\":[133.395,26.515,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":13,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":33}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.411,0.258],[0,0],[0,0],[0.34,-0.277],[0,0],[0,0],[-0.183,-0.446],[0,0],[0,0],[-0.484,0.026],[0,0],[0,0],[-0.116,0.462],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.022,-0.438],[0,0],[0,0],[-0.466,-0.133],[0,0],[0,0],[-0.264,0.392],[0,0],[0,0],[0.302,0.373],[0,0],[0,0],[0.454,-0.162]],\"v\":[[4.322,-0.152],[2.152,-1.511],[2.027,-4.018],[1.065,-4.446],[-0.882,-2.861],[-3.344,-3.565],[-4.039,-2.804],[-3.072,-0.466],[-4.469,1.607],[-3.935,2.505],[-1.392,2.366],[0.207,4.35],[1.231,4.145],[1.837,1.72],[4.222,0.874]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[133.378,26.508],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":18,\"ty\":4,\"nm\":\"Ebene 23 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5,\"s\":[399],\"e\":[0]},{\"t\":25}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.478},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p478_0p167_0p167\",\"t\":5,\"s\":[157.5,140,0],\"e\":[257.258,159.497,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":25}]},\"a\":{\"a\":0,\"k\":[257.258,159.497,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":5,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":25}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.721,-0.604],[0,0],[0,0],[-0.306,-0.794],[0,0],[0,0],[-0.932,0.071],[0,0],[0,0],[-0.241,0.908],[0,0],[0,0],[0.783,0.491],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.821,-0.221],[0,0],[0,0],[-0.524,0.78],[0,0],[0,0],[0.566,0.723],[0,0],[0,0],[0.869,-0.333],[0,0],[0,0],[-0.027,-0.935]],\"v\":[[2.281,-8.697],[-1.528,-5.509],[-6.23,-6.781],[-7.598,-5.261],[-5.84,-0.719],[-8.615,3.403],[-7.627,5.141],[-2.732,4.758],[0.255,8.578],[2.232,8.133],[3.5,3.356],[8.121,1.595],[8.357,-0.417],[4.245,-2.989],[4.113,-7.897]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[257.231,159.483],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":19,\"ty\":4,\"nm\":\"Ebene 24 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11,\"s\":[-212],\"e\":[0]},{\"t\":31}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.748},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p748_0p167_0p167\",\"t\":11,\"s\":[157.5,140,0],\"e\":[97.064,84.204,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":31}]},\"a\":{\"a\":0,\"k\":[97.064,84.204,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":11,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":31}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.675,-0.565],[0,0],[0,0],[-0.287,-0.743],[0,0],[0,0],[-0.872,0.067],[0,0],[0,0],[-0.226,0.849],[0,0],[0,0],[0.734,0.459],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.77,-0.208],[0,0],[0,0],[-0.491,0.73],[0,0],[0,0],[0.53,0.677],[0,0],[0,0],[0.814,-0.312],[0,0],[0,0],[-0.026,-0.875]],\"v\":[[2.135,-8.142],[-1.43,-5.157],[-5.831,-6.348],[-7.113,-4.926],[-5.467,-0.674],[-8.064,3.186],[-7.141,4.812],[-2.557,4.454],[0.239,8.029],[2.09,7.613],[3.277,3.141],[7.602,1.493],[7.822,-0.391],[3.974,-2.799],[3.851,-7.393]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[97.039,84.191],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":20,\"ty\":4,\"nm\":\"Ebene 25 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[-256],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.718},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p718_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[78.559,168.874,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[78.559,168.874,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.516,-0.432],[0,0],[0,0],[-0.219,-0.569],[0,0],[0,0],[-0.668,0.051],[0,0],[0,0],[-0.173,0.65],[0,0],[0,0],[0.562,0.351],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.588,-0.159],[0,0],[0,0],[-0.376,0.559],[0,0],[0,0],[0.405,0.518],[0,0],[0,0],[0.623,-0.239],[0,0],[0,0],[-0.02,-0.669]],\"v\":[[1.633,-6.229],[-1.096,-3.945],[-4.463,-4.856],[-5.442,-3.768],[-4.183,-0.516],[-6.17,2.436],[-5.463,3.681],[-1.958,3.407],[0.182,6.143],[1.598,5.824],[2.507,2.403],[5.814,1.142],[5.984,-0.299],[3.04,-2.141],[2.945,-5.656]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[78.54,168.865],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":21,\"ty\":4,\"nm\":\"Ebene 26 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":17,\"s\":[50],\"e\":[18]},{\"t\":37}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.897},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p897_0p167_0p167\",\"t\":17,\"s\":[157.5,140,0],\"e\":[155.771,214.44,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":37}]},\"a\":{\"a\":0,\"k\":[155.771,214.44,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.008,1.008,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,15.952]},\"n\":[\"0p042_1p008_0p167_0p167\",\"0p042_1p008_0p167_0p167\",\"0p833_-26p778_0p167_15p952\"],\"t\":17,\"s\":[0,0,100],\"e\":[67,67,100]},{\"t\":37}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[1.312,-0.183],[0,0],[0,0],[0.227,-1.177],[0,0],[0,0],[-1.168,-0.61],[0,0],[0,0],[-0.967,0.904],[0,0],[0,0],[0.57,1.171],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.816,-0.879],[0,0],[0,0],[-1.21,0.541],[0,0],[0,0],[0.137,1.287],[0,0],[0,0],[1.289,0.251],[0,0],[0,0],[0.665,-1.137]],\"v\":[[10.542,-8.02],[3.609,-7.053],[-1.06,-12.084],[-3.829,-11.291],[-5.121,-4.55],[-11.514,-1.696],[-11.632,1.119],[-5.496,4.318],[-4.779,11.114],[-2.084,12.058],[2.999,7.295],[9.835,8.642],[11.62,6.414],[8.627,0.269],[12.136,-5.695]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[155.828,214.455],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":22,\"ty\":4,\"nm\":\"Ebene 27 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11,\"s\":[-239],\"e\":[0]},{\"t\":31}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.5},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p5_0p167_0p167\",\"t\":11,\"s\":[157.5,140,0],\"e\":[219.606,61.933,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":31}]},\"a\":{\"a\":0,\"k\":[219.606,61.933,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":11,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":31}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.946,-0.131],[0,0],[0,0],[0.163,-0.849],[0,0],[0,0],[-0.842,-0.44],[0,0],[0,0],[-0.697,0.652],[0,0],[0,0],[0.411,0.845],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.588,-0.633],[0,0],[0,0],[-0.872,0.39],[0,0],[0,0],[0.099,0.928],[0,0],[0,0],[0.929,0.181],[0,0],[0,0],[0.479,-0.819]],\"v\":[[7.601,-5.783],[2.602,-5.086],[-0.764,-8.713],[-2.76,-8.141],[-3.693,-3.281],[-8.301,-1.223],[-8.387,0.807],[-3.962,3.114],[-3.445,8.013],[-1.503,8.694],[2.163,5.259],[7.09,6.23],[8.378,4.624],[6.219,0.195],[8.749,-4.107]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[219.647,61.944],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/static/animation.json\n// module id = 319\n// module chunks = 35783957827783"],"sourceRoot":""}