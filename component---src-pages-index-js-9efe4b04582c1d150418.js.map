{"version":3,"sources":["webpack:///component---src-pages-index-js-9efe4b04582c1d150418.js","webpack:///./~/create-react-class/factory.js","webpack:///./~/hoist-non-react-statics/index.js","webpack:///./~/lottie-web/build/player/lottie.js","webpack:///./~/object-assign/index.js","webpack:///./src/data/animation.json","webpack:///./src/pages/index.js"],"names":["webpackJsonp","97","module","exports","__webpack_require__","identity","fn","factory","ReactComponent","isValidElement","ReactNoopUpdateQueue","validateMethodOverride","isAlreadyDefined","name","specPolicy","ReactClassInterface","hasOwnProperty","ReactClassMixin","_invariant","mixSpecIntoComponent","Constructor","spec","proto","prototype","autoBindPairs","__reactAutoBindPairs","MIXINS_KEY","RESERVED_SPEC_KEYS","mixins","property","isReactClassMethod","isFunction","shouldAutoBind","autobind","push","createMergedResultFunction","createChainedFunction","mixStaticSpecIntoComponent","statics","isReserved","ReactClassStaticInterface","mergeIntoWithNoDuplicateKeys","one","two","key","undefined","a","apply","this","arguments","b","c","bindAutoBindMethod","component","method","boundMethod","bind","bindAutoBindMethods","pairs","i","length","autoBindKey","createClass","props","context","updater","refs","emptyObject","state","initialState","getInitialState","Array","isArray","displayName","ReactClassComponent","constructor","injectedMixins","forEach","IsMountedPreMixin","IsMountedPostMixin","getDefaultProps","defaultProps","render","methodName","propTypes","contextTypes","childContextTypes","getChildContext","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","updateComponent","getDerivedStateFromProps","_assign","__isMounted","replaceState","newState","callback","enqueueReplaceState","isMounted","ReactPropTypeLocationNames","158","global","REACT_STATICS","type","KNOWN_STATICS","caller","callee","arity","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","descriptor","e","322","__WEBPACK_AMD_DEFINE_RESULT__","navigator","root","call","window","ProjectInterface","roundValues","flag","bm_rnd","Math","round","val","styleDiv","element","style","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","n","t","d","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","randomString","chars","result","random","HSVtoRGB","h","s","v","r","g","p","q","floor","RGBtoHSV","max","min","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","BaseEvent","createSizedArray","len","createNS","document","createElementNS","svgNS","createTag","createElement","DynamicPropertyContainer","extendPrototype","sources","destination","sourcePrototype","attr","getDescriptor","object","prop","createProxyFunction","ProxyFunction","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","sqrt","pow","dist2","dist3","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","newElement","closed","pathV","pathO","o","pathI","_length","lengths","totalLength","getBezierLength","addedLength","BezierData","segmentLength","points","PointData","partial","point","partialLength","getDistancePerc","perc","bezierData","percents","initPos","bm_floor","lengthPos","lPerc","dir","getPointInSegment","pt1","pt2","pt3","pt4","percent","t1","u1","ptX","ptY","getNewSegment","startPerc","endPerc","t0","u0","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","bezier_segment_points","k","ptCoord","ptDistance","curveSegments","defaultCurveSegments","lastPoint","lengthData","bezier_length_pool","bm_pow","bm_sqrt","buildBezierData","storedData","keyData","to","ti","bezierName","replace","createTypedArray","dataFunctionManager","completeLayers","layers","comps","fontManager","layerData","animArray","lastFrame","j","jLen","kLen","completed","tt","td","hasMask","maskProps","masksProperties","pt","convertPathsToAbsoluteValues","ty","findCompLayers","refId","completeShapes","shapes","completeText","id","__used","JSON","parse","stringify","arr","hasPaths","ks","it","path","checkVersion","minimum","animVersionString","animVersion","split","completeData","animationData","__complete","checkColors","checkText","checkChars","checkShapes","assets","data","singleShape","updateTextLayer","textLayer","documentData","iterateLayers","minimumVersion","pathData","paths","__converted","iterateShapes","cl","moduleOb","ShapePath","_maxLength","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","DashProperty","elem","renderer","frameId","dataProps","dashStr","dashArray","dashoffset","initDynamicPropertyContainer","PropertyFactory","getProp","getValue","_isAnimated","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","TextAnimatorProperty","textData","renderType","_isFirstFrame","_hasMaskedPath","_frameId","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","container","defaultData","propType","textAnimator_animatables","degToRads","rx","ry","sk","sa","sw","sc","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","m","_mdf","TextProperty","initialDefaultFrame","pv","kf","comp","keysIndex","canResize","minimumFontSize","effectsSequence","currentData","ascent","boxWidth","defaultBoxWidth","fStyle","fWeight","justifyOffset","l","lh","lineWidths","ls","of","tr","sz","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","__test","copyFromDocumentData","searchProperty","completeTextData","BaseRenderer","SVGRenderer","animationItem","config","renderedFrame","svgElement","maskElement","appendChild","layerElement","defs","renderConfig","preserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","className","globalData","frameNum","compSize","w","FontManager","elements","pendingElements","destroyed","MaskElement","viewData","solidPath","rect","expansor","feMorph","x","properties","count","currentMasks","layerId","maskType","maskRef","mode","inv","setAttribute","filterID","expan","lastPath","lastOperator","filterId","lastRadius","mask","locationHref","createLayerSolidPath","op","ShapePropertyFactory","getShapeProp","invRect","drawPath","maskedElement","addRenderableComponent","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","pos","SVGStyleData","level","lvl","pElem","msElem","SVGShapeData","transformers","shape","caches","styles","lStr","sh","mProps","dynamicProperties","SVGTransformData","transform","SVGStrokeStyleData","styleOb","iterateDynamicProperties","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","BaseElement","NullElement","initFrame","initBaseData","initTransform","initHierarchy","SVGBaseElement","IShapeElement","ITextElement","ICompElement","IImageElement","assetData","getAssetData","initElement","ISolidElement","SVGCompElement","supports3d","tm","frameRate","_placeholder","SVGTextElement","textSpans","SVGShapeElement","shapesData","stylesList","shapeModifiers","itemsData","processedElements","animatedContents","SVGTintFilter","filter","filterManager","feColorMatrix","matrixFilter","effectElements","feMerge","feMergeNode","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","SVGMatte3Effect","filterElem","matteElement","transformedElement","baseElement","SVGEffects","ef","filId","fil","filtersFactory","createFilter","filters","effectsManager","EffectsManager","CanvasRenderer","clearCanvas","dpr","wrapper","devicePixelRatio","currentGlobalAlpha","contextData","CVContextData","transformMat","Matrix","HybridRenderer","threeDElements","camera","CVShapeData","nodes","trNodes","st","fl","saved","cArrPos","cTr","cO","savedOp","CVBaseElement","CVImageElement","failed","img","Image","addPendingElement","CVCompElement","CVMaskElement","hasMasks","CVShapeElement","CVSolidElement","CVTextElement","stroke","fill","currentRender","values","sWidth","fValue","CVEffects","HBaseElement","HSolidElement","HCompElement","HShapeElement","shapesContainer","currentBBox","y","HTextElement","textPaths","isMasked","HImageElement","HCameraElement","pe","px","py","pz","z","or","rz","mat","_prevMat","HEffects","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","effects","effectItem","GroupEffect","init","setLocationHref","href","play","animation","animationManager","pause","togglePause","setSpeed","value","setDirection","stop","searchAnimations","standalone","registerAnimation","resize","goToAndStop","isFrame","setSubframeRendering","subframeEnabled","loadAnimation","params","destroy","setQuality","isNaN","inBrowser","installPlugin","plugin","expressionsPlugin","getFactory","checkReady","readyState","clearInterval","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","isSafari","test","userAgent","cachedColors","bm_rounder","bm_abs","abs","bm_max","bm_min","blitter","BMMath","propertyNames","tOfVal","absArr","PI","roundCorner","rgbToHex","hex","colorMap","toString","triggerEvent","eventName","args","_cbs","addEventListener","removeEventListener","splice","createRegularArray","Float32Array","Int16Array","Uint8ClampedArray","addDynamicProperty","indexOf","reset","rotate","angle","mCos","_cos","mSin","_sin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","_tan","skewFromAxis","scale","setTransform","translate","tx","tz","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","applyToX","applyToY","applyToZ","inversePoint","determinant","inversePoints","pts","retPts","applyToTriplePoints","p0","p4","p5","p12","p13","applyToPointArray","applyToPointStringified","toCSS","cssValue","_rnd","roundMatrixProperty","to2dCSS","_a","_b","_c","_d","_e","_f","cos","sin","tan","pool","math","seedrandom","seed","options","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","chunks","startdenom","significance","width","overflow","int32","quick","double","S","pass","is_math_call","copy","rngname","keylen","me","slice","obj","depth","typ","smear","stringseed","charCodeAt","nodecrypto","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","String","fromCharCode","digits","BezierFactory","getBezierEasing","nm","str","beziers","bezEasing","BezierEasing","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","_mSampleValues","float32ArraySupported","kSplineTableSize","_precomputed","get","ob","NEWTON_MIN_SLOPE","kSampleStepSize","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","setTimeout","clearTimeout","bez","dataManager","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","body","offsetWidth","parent","checkLoadedFonts","fonts","loadedCount","loaded","fOrigin","origin","Typekit","load","typekitLoaded","async","active","monoCase","sansCase","removeChild","now","initTime","maxWaitingTime","createHelper","def","fontData","tHelper","fFamily","textContent","fClass","tCanvasHelper","getContext","addFonts","list","fontArr","fPath","rel","helper","cache","addChars","found","ch","getCharData","char","console","warn","emptyChar","measureText","fontName","size","getFontByName","index","getComputedTextLength","fName","getCombinedCharacterCodes","combinedCharacters","Font","interpolateValue","caching","newValue","offsetTime","nextKeyData","iterationIndex","lastIndex","keyframes","fnc","ind","_lastBezierData","__fnct","segmentPerc","distanceInLine","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","quatStart","createQuaternion","quatEnd","time","quaternionToEuler","slerp","omega","cosom","sinom","scale0","scale1","az","aw","bx","by","bz","bw","acos","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","c3","s1","s2","s3","getValueAtCurrentTime","endTime","_caching","renderResult","setVValue","multipliedValue","mult","math_abs","processEffectsSequence","lock","finalValue","addEffect","effectFunction","ValueProperty","vel","MultiDimensionalProperty","KeyframedValueProperty","KeyframedMultidimensionalProperty","arrLen","TransformPropertyFactory","applyToMatrix","processKeys","forceRender","_isDirty","precalculateMatrix","pre","appliedTransformations","autoOriented","getValueAtTime","v1","v2","autoOrient","_addDynamicProperty","TransformProperty","getTransformProperty","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","cnt","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","resetShape","localShapeCollection","shapesEqual","shape1","shape2","shape_pool","releaseShapes","addShape","ShapeProperty","shapeCollection_pool","newShapeCollection","KeyframedShapeProperty","dataProp","RectShapeProperty","EllShapeProperty","StarShapeProperty","getConstructorFunction","getKeyframedConstructorFunction","convertEllToPath","cPoint","s0","_cw","_v","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","os","rad","roundness","perimSegment","numPts","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","convertRectToPath","v0","ShapeModifiers","registerModifier","modifiers","getModifier","initModifierProperties","addShapeToModifier","setAsAnimated","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","_s","shapePaths","totalShapeLength","edges","newShapesData","addShapes","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","cont","unshift","resetElements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","comparePoints","diff","buildShapeString","pathNodes","_o","_i","shapeString","ImagePreloader","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","getAssetsPath","assetsPath","imagePath","u","loadImage","src","loadAssets","cb","totalAssets","setPath","setAssetsPath","featureSupport","createAlphaToLuminanceFilter","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","lineLength","letterM","letterP","defaultPropsArray","animatorJustifyOffset","animatorFirstCharOffset","justifyOffsetMult","isNewLine","getMult","anIndexes","totalChars","line","extra","an","animatorOffset","add","rot","atan","update","updated","setCurrentData","currentTextValue","searchKeyframes","getKeyframeValue","_finalValue","currentValue","textDocumentData","textKeys","buildFinalText","text","charactersArray","charAt","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styleName","toLowerCase","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","_currentTextLength","finalS","finalE","xe","ne","textProperty","easer","tot","newCharsFlag","divisor","pool_factory","initialLength","_create","_release","_clone","pooling","create","cloned","shapeCollection","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","Error","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","searchExtraCompositions","xt","initExpressions","registerComposition","configAnimation","animData","height","fr","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","insertBefore","hide","show","isFirstFrame","finalMat","finalTransform","mProp","getMaskelement","pathString","pathShapeValue","_isParent","prepareProperties","isVisible","_matMdf","_opMdf","ao","renderTransform","globalToLocal","transforms","ptNew","initRenderable","isInRange","hidden","isTransparent","renderableComponents","removeRenderableComponent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","sourceRectAtTime","getLayerSize","_prototype","initRendererElement","createContainerElements","addMasks","createContent","hd","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","opFill","ms","ost","SVGElementsRenderer","createRenderFunction","renderFill","renderGradient","renderGradientStroke","renderStroke","renderPath","renderContentTransform","styleData","itemData","pathStringTransformed","redraw","iterations","lLen","_matrixHelper","_identityMatrix","styleElem","hasOpacity","attr1","attr2","cValues","oValues","ang","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","content","textInterface","TextExpressionInterface","blendModeEnums","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","getBlendMode","bm","setBlendMode","blendModeValue","sr","getType","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","alphaRect","ln","cp","clipId","cpGroup","renderableEffectsManager","addShapeToModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","usesGlyphs","tSpan","cachedSpansLength","tElement","justify","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","gradientConstructor","lc","lj","ml","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","shapeProperty","setElementStyles","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","colorBlack","colorWhite","opacity","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","units","color1","color2","color3","tableR","tableG","tableB","feFunc","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","join","col","_svgMatteSymbols","_svgMatteMaskCounter","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","removeElement","ev","animItem","registeredAnimations","isPaused","subtractPlayingCount","AnimationItem","setupAnimation","setData","addPlayingCount","playingAnimationsNum","activate","idled","setParams","resume","nowTime","elapsedTime","advanceTime","_stopped","first","animElements","getElementsByClassName","getElementsByTagName","div","isLoaded","currentRawFrame","frameMult","playSpeed","playDirection","playCount","autoplay","loop","animationID","timeCompleted","segmentPos","_idle","self","animType","rendererSettings","parseInt","autoloadSegments","substr","xhr","XMLHttpRequest","lastIndexOf","fileName","open","send","onreadystatechange","status","responseText","response","err","wrapperAttributes","attributes","getNamedItem","prerender","tf","loadNextSegment","trigger","shift","segmentPath","loadSegments","_this","imagePreloader","updaFrameModifier","waitForFontsLoaded","checkLoaded","checkFontsLoaded","elementLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getAssets","getDuration","ctxTransform","canvasContext","cProps","trProps","ctxOpacity","globalAlpha","restore","save","actionFlag","duplicate","blendMode","popped","mozTransformOrigin","isDashed","compWidth","compHeight","transformCanvas","elementWidth","elementHeight","offsetHeight","canvas","elementRel","animationRel","par","fillType","beginPath","closePath","clip","clearRect","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","tmpDOMElement","getThreeDContainerByPos","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","svg","setup","cWidth","cHeight","perspective","webkitPerspective","floatingContainer","newLength","currentSavedOp","set","createElements","globalCompositeOperation","hideElement","showElement","widthCrop","heightCrop","ctx","imgW","imgH","imgRel","canvasRel","drawImage","imageFailed","parentMatrix","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","co","wi","da","do","hasStrokes","hasFills","ownArrays","renderShapeTransform","parentTransform","groupTransform","groupMatrix","drawLayer","currentStyle","coOp","strokeStyle","lineCap","lineJoin","miterLimit","fillStyle","setLineDash","lineDashOffset","isMain","groupTransformMat","fillRect","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","checkBlendMode","tg","backgroundColor","_createBaseContainerElements","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","item","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","currentBoxContains","box","changed","compW","compH","innerElemStyle","strokeWidth","lineHeight","tParent","tCont","textPath","margin","imageElem","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","m_rotationX","m_rotationY","Expressions","ExpressionManager","duplicatePropertyValue","Number","isTypeOfArray","isNumerable","tOfV","$bm_neg","tOfA","lenA","retArr","sum","tOfB","lenB","sub","mul","mod","clamp","mm","radiansToDegrees","degreesToRadians","arr1","arr2","helperLengthArray","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","rnd","rndm","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","loopInDuration","duration","loopIn","loopOutDuration","loopOut","lookAt","elem1","elem2","fVec","pitch","yaw","easeOut","val1","val2","easeIn","nearestKey","keyTime","framesToTime","frames","fps","timeToFrames","seedRandom","randSeed","executeExpression","_value","_needsRandom","frameExpressionId","textIndex","textTotal","selectorValue","thisLayer","thisComp","toWorld","fromWorld","fromComp","fromCompToSurface","anchorPoint","elemType","effect","hasParent","needsVelocity","velocity","velocityAtTime","expression_function","scoped_bm_rt","thisProperty","frameDuration","inPoint","outPoint","loop_in","loop_out","valueAtTime","__expression_functions","xf","eval","numKeys","wiggle","freq","amp","addedAmps","periods","getVelocityAtTime","radians_to_degrees","degrees_to_radians","getStaticValueAtTime","durationFlag","lastKeyFrame","cycleDuration","firstKeyFrame","ret","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","_cachingAtTime","getSpeedAtTime","delta","speed","setGroupProperty","propertyGroup","searchExpressions","getTransformValueAtTime","getTransformStaticValueAtTime","getShapeValueAtTime","shapeValue","ShapeExpressions","TextExpressionSelectorProp","getValueProxy","total","propertyGetProp","propertyIndex","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","unitVector","tangentOnPath","normalOnPath","propertyGetShapeProp","trims","propertyGetTextProp","calculateExpression","getExpressionValue","isKeyframed","hasExpressions","iterateElements","view","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","pathInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","contentsInterfaceFactory","interfaces","interfaceFunction","_name","mn","numProperties","cix","transformInterface","transformInterfaceFactory","np","defineProperties","ExpressionValue","_propertyGroup","_dashPropertyGroup","dashOb","addPropertyToDashOb","dash","start","rotation","skewAxis","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","_thisLayerFunction","_prevValue","_sourceText","stringValue","toWorldMat","sampleImage","_registerMaskInterface","MaskManagerInterface","_registerEffectsInterface","toComp","TransformExpressionInterface","anchorPointDescriptor","anchor_point","startTime","source","pixelAspect","_thisFunction","xRotation","yRotation","xPosition","yPosition","zPosition","compositions","_thisProjectFunction","effectsData","createGroupInterface","groupInterface","createValueInterface","en","MaskInterface","_mask","_data","MaskManager","_masksInterfaces","maskFunction","elementProp","expressionValue","arrValue","speedAtTime","eff","lottiejs","__getFactory","version","scripts","myScript","setInterval","toObject","TypeError","shouldUseNative","assign","test1","test2","order2","map","test3","letter","propIsEnumerable","propertyIsEnumerable","from","symbols","321","203","_interopRequireDefault","__esModule","default","_classCallCheck","instance","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_gatsbyLink","IndexPage","_React$Component","_click","setState","_lottie","_el","_animation","_this2","cursor","onClick","ref","el","React","Component"],"mappings":"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","file":"component---src-pages-index-js-9efe4b04582c1d150418.js","sourcesContent":["webpackJsonp([35783957827783],{\n\n/***/ 97:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar emptyObject = __webpack_require__(34);\n\tvar _invariant = __webpack_require__(1);\n\t\n\tif (false) {\n\t  var warning = require('fbjs/lib/warning');\n\t}\n\t\n\tvar MIXINS_KEY = 'mixins';\n\t\n\t// Helper function to allow the creation of anonymous functions which do not\n\t// have .name set to the name of the variable being assigned to.\n\tfunction identity(fn) {\n\t  return fn;\n\t}\n\t\n\tvar ReactPropTypeLocationNames;\n\tif (false) {\n\t  ReactPropTypeLocationNames = {\n\t    prop: 'prop',\n\t    context: 'context',\n\t    childContext: 'child context'\n\t  };\n\t} else {\n\t  ReactPropTypeLocationNames = {};\n\t}\n\t\n\tfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n\t  /**\n\t   * Policies that describe methods in `ReactClassInterface`.\n\t   */\n\t\n\t  var injectedMixins = [];\n\t\n\t  /**\n\t   * Composite components are higher-level components that compose other composite\n\t   * or host components.\n\t   *\n\t   * To create a new type of `ReactClass`, pass a specification of\n\t   * your new class to `React.createClass`. The only requirement of your class\n\t   * specification is that you implement a `render` method.\n\t   *\n\t   *   var MyComponent = React.createClass({\n\t   *     render: function() {\n\t   *       return <div>Hello World</div>;\n\t   *     }\n\t   *   });\n\t   *\n\t   * The class specification supports a specific protocol of methods that have\n\t   * special meaning (e.g. `render`). See `ReactClassInterface` for\n\t   * more the comprehensive protocol. Any other properties and methods in the\n\t   * class specification will be available on the prototype.\n\t   *\n\t   * @interface ReactClassInterface\n\t   * @internal\n\t   */\n\t  var ReactClassInterface = {\n\t    /**\n\t     * An array of Mixin objects to include when defining your component.\n\t     *\n\t     * @type {array}\n\t     * @optional\n\t     */\n\t    mixins: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * An object containing properties and methods that should be defined on\n\t     * the component's constructor instead of its prototype (static methods).\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    statics: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Definition of prop types for this component.\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    propTypes: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Definition of context types for this component.\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    contextTypes: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Definition of context types this component sets for its children.\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    childContextTypes: 'DEFINE_MANY',\n\t\n\t    // ==== Definition methods ====\n\t\n\t    /**\n\t     * Invoked when the component is mounted. Values in the mapping will be set on\n\t     * `this.props` if that prop is not specified (i.e. using an `in` check).\n\t     *\n\t     * This method is invoked before `getInitialState` and therefore cannot rely\n\t     * on `this.state` or use `this.setState`.\n\t     *\n\t     * @return {object}\n\t     * @optional\n\t     */\n\t    getDefaultProps: 'DEFINE_MANY_MERGED',\n\t\n\t    /**\n\t     * Invoked once before the component is mounted. The return value will be used\n\t     * as the initial value of `this.state`.\n\t     *\n\t     *   getInitialState: function() {\n\t     *     return {\n\t     *       isOn: false,\n\t     *       fooBaz: new BazFoo()\n\t     *     }\n\t     *   }\n\t     *\n\t     * @return {object}\n\t     * @optional\n\t     */\n\t    getInitialState: 'DEFINE_MANY_MERGED',\n\t\n\t    /**\n\t     * @return {object}\n\t     * @optional\n\t     */\n\t    getChildContext: 'DEFINE_MANY_MERGED',\n\t\n\t    /**\n\t     * Uses props from `this.props` and state from `this.state` to render the\n\t     * structure of the component.\n\t     *\n\t     * No guarantees are made about when or how often this method is invoked, so\n\t     * it must not have side effects.\n\t     *\n\t     *   render: function() {\n\t     *     var name = this.props.name;\n\t     *     return <div>Hello, {name}!</div>;\n\t     *   }\n\t     *\n\t     * @return {ReactComponent}\n\t     * @required\n\t     */\n\t    render: 'DEFINE_ONCE',\n\t\n\t    // ==== Delegate methods ====\n\t\n\t    /**\n\t     * Invoked when the component is initially created and about to be mounted.\n\t     * This may have side effects, but any external subscriptions or data created\n\t     * by this method must be cleaned up in `componentWillUnmount`.\n\t     *\n\t     * @optional\n\t     */\n\t    componentWillMount: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked when the component has been mounted and has a DOM representation.\n\t     * However, there is no guarantee that the DOM node is in the document.\n\t     *\n\t     * Use this as an opportunity to operate on the DOM when the component has\n\t     * been mounted (initialized and rendered) for the first time.\n\t     *\n\t     * @param {DOMElement} rootNode DOM element representing the component.\n\t     * @optional\n\t     */\n\t    componentDidMount: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked before the component receives new props.\n\t     *\n\t     * Use this as an opportunity to react to a prop transition by updating the\n\t     * state using `this.setState`. Current props are accessed via `this.props`.\n\t     *\n\t     *   componentWillReceiveProps: function(nextProps, nextContext) {\n\t     *     this.setState({\n\t     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n\t     *     });\n\t     *   }\n\t     *\n\t     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n\t     * transition may cause a state change, but the opposite is not true. If you\n\t     * need it, you are probably looking for `componentWillUpdate`.\n\t     *\n\t     * @param {object} nextProps\n\t     * @optional\n\t     */\n\t    componentWillReceiveProps: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked while deciding if the component should be updated as a result of\n\t     * receiving new props, state and/or context.\n\t     *\n\t     * Use this as an opportunity to `return false` when you're certain that the\n\t     * transition to the new props/state/context will not require a component\n\t     * update.\n\t     *\n\t     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n\t     *     return !equal(nextProps, this.props) ||\n\t     *       !equal(nextState, this.state) ||\n\t     *       !equal(nextContext, this.context);\n\t     *   }\n\t     *\n\t     * @param {object} nextProps\n\t     * @param {?object} nextState\n\t     * @param {?object} nextContext\n\t     * @return {boolean} True if the component should update.\n\t     * @optional\n\t     */\n\t    shouldComponentUpdate: 'DEFINE_ONCE',\n\t\n\t    /**\n\t     * Invoked when the component is about to update due to a transition from\n\t     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n\t     * and `nextContext`.\n\t     *\n\t     * Use this as an opportunity to perform preparation before an update occurs.\n\t     *\n\t     * NOTE: You **cannot** use `this.setState()` in this method.\n\t     *\n\t     * @param {object} nextProps\n\t     * @param {?object} nextState\n\t     * @param {?object} nextContext\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @optional\n\t     */\n\t    componentWillUpdate: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked when the component's DOM representation has been updated.\n\t     *\n\t     * Use this as an opportunity to operate on the DOM when the component has\n\t     * been updated.\n\t     *\n\t     * @param {object} prevProps\n\t     * @param {?object} prevState\n\t     * @param {?object} prevContext\n\t     * @param {DOMElement} rootNode DOM element representing the component.\n\t     * @optional\n\t     */\n\t    componentDidUpdate: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked when the component is about to be removed from its parent and have\n\t     * its DOM representation destroyed.\n\t     *\n\t     * Use this as an opportunity to deallocate any external resources.\n\t     *\n\t     * NOTE: There is no `componentDidUnmount` since your component will have been\n\t     * destroyed by that point.\n\t     *\n\t     * @optional\n\t     */\n\t    componentWillUnmount: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Replacement for (deprecated) `componentWillMount`.\n\t     *\n\t     * @optional\n\t     */\n\t    UNSAFE_componentWillMount: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Replacement for (deprecated) `componentWillReceiveProps`.\n\t     *\n\t     * @optional\n\t     */\n\t    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Replacement for (deprecated) `componentWillUpdate`.\n\t     *\n\t     * @optional\n\t     */\n\t    UNSAFE_componentWillUpdate: 'DEFINE_MANY',\n\t\n\t    // ==== Advanced methods ====\n\t\n\t    /**\n\t     * Updates the component's currently mounted DOM representation.\n\t     *\n\t     * By default, this implements React's rendering and reconciliation algorithm.\n\t     * Sophisticated clients may wish to override this.\n\t     *\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @internal\n\t     * @overridable\n\t     */\n\t    updateComponent: 'OVERRIDE_BASE'\n\t  };\n\t\n\t  /**\n\t   * Similar to ReactClassInterface but for static methods.\n\t   */\n\t  var ReactClassStaticInterface = {\n\t    /**\n\t     * This method is invoked after a component is instantiated and when it\n\t     * receives new props. Return an object to update state in response to\n\t     * prop changes. Return null to indicate no change to state.\n\t     *\n\t     * If an object is returned, its keys will be merged into the existing state.\n\t     *\n\t     * @return {object || null}\n\t     * @optional\n\t     */\n\t    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'\n\t  };\n\t\n\t  /**\n\t   * Mapping from class specification keys to special processing functions.\n\t   *\n\t   * Although these are declared like instance properties in the specification\n\t   * when defining classes using `React.createClass`, they are actually static\n\t   * and are accessible on the constructor instead of the prototype. Despite\n\t   * being static, they must be defined outside of the \"statics\" key under\n\t   * which all other static methods are defined.\n\t   */\n\t  var RESERVED_SPEC_KEYS = {\n\t    displayName: function(Constructor, displayName) {\n\t      Constructor.displayName = displayName;\n\t    },\n\t    mixins: function(Constructor, mixins) {\n\t      if (mixins) {\n\t        for (var i = 0; i < mixins.length; i++) {\n\t          mixSpecIntoComponent(Constructor, mixins[i]);\n\t        }\n\t      }\n\t    },\n\t    childContextTypes: function(Constructor, childContextTypes) {\n\t      if (false) {\n\t        validateTypeDef(Constructor, childContextTypes, 'childContext');\n\t      }\n\t      Constructor.childContextTypes = _assign(\n\t        {},\n\t        Constructor.childContextTypes,\n\t        childContextTypes\n\t      );\n\t    },\n\t    contextTypes: function(Constructor, contextTypes) {\n\t      if (false) {\n\t        validateTypeDef(Constructor, contextTypes, 'context');\n\t      }\n\t      Constructor.contextTypes = _assign(\n\t        {},\n\t        Constructor.contextTypes,\n\t        contextTypes\n\t      );\n\t    },\n\t    /**\n\t     * Special case getDefaultProps which should move into statics but requires\n\t     * automatic merging.\n\t     */\n\t    getDefaultProps: function(Constructor, getDefaultProps) {\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps = createMergedResultFunction(\n\t          Constructor.getDefaultProps,\n\t          getDefaultProps\n\t        );\n\t      } else {\n\t        Constructor.getDefaultProps = getDefaultProps;\n\t      }\n\t    },\n\t    propTypes: function(Constructor, propTypes) {\n\t      if (false) {\n\t        validateTypeDef(Constructor, propTypes, 'prop');\n\t      }\n\t      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n\t    },\n\t    statics: function(Constructor, statics) {\n\t      mixStaticSpecIntoComponent(Constructor, statics);\n\t    },\n\t    autobind: function() {}\n\t  };\n\t\n\t  function validateTypeDef(Constructor, typeDef, location) {\n\t    for (var propName in typeDef) {\n\t      if (typeDef.hasOwnProperty(propName)) {\n\t        // use a warning instead of an _invariant so components\n\t        // don't show up in prod but only in __DEV__\n\t        if (false) {\n\t          warning(\n\t            typeof typeDef[propName] === 'function',\n\t            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n\t              'React.PropTypes.',\n\t            Constructor.displayName || 'ReactClass',\n\t            ReactPropTypeLocationNames[location],\n\t            propName\n\t          );\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function validateMethodOverride(isAlreadyDefined, name) {\n\t    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n\t      ? ReactClassInterface[name]\n\t      : null;\n\t\n\t    // Disallow overriding of base class methods unless explicitly allowed.\n\t    if (ReactClassMixin.hasOwnProperty(name)) {\n\t      _invariant(\n\t        specPolicy === 'OVERRIDE_BASE',\n\t        'ReactClassInterface: You are attempting to override ' +\n\t          '`%s` from your class specification. Ensure that your method names ' +\n\t          'do not overlap with React methods.',\n\t        name\n\t      );\n\t    }\n\t\n\t    // Disallow defining methods more than once unless explicitly allowed.\n\t    if (isAlreadyDefined) {\n\t      _invariant(\n\t        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n\t        'ReactClassInterface: You are attempting to define ' +\n\t          '`%s` on your component more than once. This conflict may be due ' +\n\t          'to a mixin.',\n\t        name\n\t      );\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Mixin helper which handles policy validation and reserved\n\t   * specification keys when building React classes.\n\t   */\n\t  function mixSpecIntoComponent(Constructor, spec) {\n\t    if (!spec) {\n\t      if (false) {\n\t        var typeofSpec = typeof spec;\n\t        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\t\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          warning(\n\t            isMixinValid,\n\t            \"%s: You're attempting to include a mixin that is either null \" +\n\t              'or not an object. Check the mixins included by the component, ' +\n\t              'as well as any mixins they include themselves. ' +\n\t              'Expected object but got %s.',\n\t            Constructor.displayName || 'ReactClass',\n\t            spec === null ? null : typeofSpec\n\t          );\n\t        }\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    _invariant(\n\t      typeof spec !== 'function',\n\t      \"ReactClass: You're attempting to \" +\n\t        'use a component class or function as a mixin. Instead, just use a ' +\n\t        'regular object.'\n\t    );\n\t    _invariant(\n\t      !isValidElement(spec),\n\t      \"ReactClass: You're attempting to \" +\n\t        'use a component as a mixin. Instead, just use a regular object.'\n\t    );\n\t\n\t    var proto = Constructor.prototype;\n\t    var autoBindPairs = proto.__reactAutoBindPairs;\n\t\n\t    // By handling mixins before any other properties, we ensure the same\n\t    // chaining order is applied to methods with DEFINE_MANY policy, whether\n\t    // mixins are listed before or after these methods in the spec.\n\t    if (spec.hasOwnProperty(MIXINS_KEY)) {\n\t      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n\t    }\n\t\n\t    for (var name in spec) {\n\t      if (!spec.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t\n\t      if (name === MIXINS_KEY) {\n\t        // We have already handled mixins in a special case above.\n\t        continue;\n\t      }\n\t\n\t      var property = spec[name];\n\t      var isAlreadyDefined = proto.hasOwnProperty(name);\n\t      validateMethodOverride(isAlreadyDefined, name);\n\t\n\t      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n\t        RESERVED_SPEC_KEYS[name](Constructor, property);\n\t      } else {\n\t        // Setup methods on prototype:\n\t        // The following member methods should not be automatically bound:\n\t        // 1. Expected ReactClass methods (in the \"interface\").\n\t        // 2. Overridden methods (that were mixed in).\n\t        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n\t        var isFunction = typeof property === 'function';\n\t        var shouldAutoBind =\n\t          isFunction &&\n\t          !isReactClassMethod &&\n\t          !isAlreadyDefined &&\n\t          spec.autobind !== false;\n\t\n\t        if (shouldAutoBind) {\n\t          autoBindPairs.push(name, property);\n\t          proto[name] = property;\n\t        } else {\n\t          if (isAlreadyDefined) {\n\t            var specPolicy = ReactClassInterface[name];\n\t\n\t            // These cases should already be caught by validateMethodOverride.\n\t            _invariant(\n\t              isReactClassMethod &&\n\t                (specPolicy === 'DEFINE_MANY_MERGED' ||\n\t                  specPolicy === 'DEFINE_MANY'),\n\t              'ReactClass: Unexpected spec policy %s for key %s ' +\n\t                'when mixing in component specs.',\n\t              specPolicy,\n\t              name\n\t            );\n\t\n\t            // For methods which are defined more than once, call the existing\n\t            // methods before calling the new property, merging if appropriate.\n\t            if (specPolicy === 'DEFINE_MANY_MERGED') {\n\t              proto[name] = createMergedResultFunction(proto[name], property);\n\t            } else if (specPolicy === 'DEFINE_MANY') {\n\t              proto[name] = createChainedFunction(proto[name], property);\n\t            }\n\t          } else {\n\t            proto[name] = property;\n\t            if (false) {\n\t              // Add verbose displayName to the function, which helps when looking\n\t              // at profiling tools.\n\t              if (typeof property === 'function' && spec.displayName) {\n\t                proto[name].displayName = spec.displayName + '_' + name;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function mixStaticSpecIntoComponent(Constructor, statics) {\n\t    if (!statics) {\n\t      return;\n\t    }\n\t\n\t    for (var name in statics) {\n\t      var property = statics[name];\n\t      if (!statics.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t\n\t      var isReserved = name in RESERVED_SPEC_KEYS;\n\t      _invariant(\n\t        !isReserved,\n\t        'ReactClass: You are attempting to define a reserved ' +\n\t          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n\t          'as an instance property instead; it will still be accessible on the ' +\n\t          'constructor.',\n\t        name\n\t      );\n\t\n\t      var isAlreadyDefined = name in Constructor;\n\t      if (isAlreadyDefined) {\n\t        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)\n\t          ? ReactClassStaticInterface[name]\n\t          : null;\n\t\n\t        _invariant(\n\t          specPolicy === 'DEFINE_MANY_MERGED',\n\t          'ReactClass: You are attempting to define ' +\n\t            '`%s` on your component more than once. This conflict may be ' +\n\t            'due to a mixin.',\n\t          name\n\t        );\n\t\n\t        Constructor[name] = createMergedResultFunction(Constructor[name], property);\n\t\n\t        return;\n\t      }\n\t\n\t      Constructor[name] = property;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Merge two objects, but throw if both contain the same key.\n\t   *\n\t   * @param {object} one The first object, which is mutated.\n\t   * @param {object} two The second object\n\t   * @return {object} one after it has been mutated to contain everything in two.\n\t   */\n\t  function mergeIntoWithNoDuplicateKeys(one, two) {\n\t    _invariant(\n\t      one && two && typeof one === 'object' && typeof two === 'object',\n\t      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n\t    );\n\t\n\t    for (var key in two) {\n\t      if (two.hasOwnProperty(key)) {\n\t        _invariant(\n\t          one[key] === undefined,\n\t          'mergeIntoWithNoDuplicateKeys(): ' +\n\t            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n\t            'may be due to a mixin; in particular, this may be caused by two ' +\n\t            'getInitialState() or getDefaultProps() methods returning objects ' +\n\t            'with clashing keys.',\n\t          key\n\t        );\n\t        one[key] = two[key];\n\t      }\n\t    }\n\t    return one;\n\t  }\n\t\n\t  /**\n\t   * Creates a function that invokes two functions and merges their return values.\n\t   *\n\t   * @param {function} one Function to invoke first.\n\t   * @param {function} two Function to invoke second.\n\t   * @return {function} Function that invokes the two argument functions.\n\t   * @private\n\t   */\n\t  function createMergedResultFunction(one, two) {\n\t    return function mergedResult() {\n\t      var a = one.apply(this, arguments);\n\t      var b = two.apply(this, arguments);\n\t      if (a == null) {\n\t        return b;\n\t      } else if (b == null) {\n\t        return a;\n\t      }\n\t      var c = {};\n\t      mergeIntoWithNoDuplicateKeys(c, a);\n\t      mergeIntoWithNoDuplicateKeys(c, b);\n\t      return c;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates a function that invokes two functions and ignores their return vales.\n\t   *\n\t   * @param {function} one Function to invoke first.\n\t   * @param {function} two Function to invoke second.\n\t   * @return {function} Function that invokes the two argument functions.\n\t   * @private\n\t   */\n\t  function createChainedFunction(one, two) {\n\t    return function chainedFunction() {\n\t      one.apply(this, arguments);\n\t      two.apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Binds a method to the component.\n\t   *\n\t   * @param {object} component Component whose method is going to be bound.\n\t   * @param {function} method Method to be bound.\n\t   * @return {function} The bound method.\n\t   */\n\t  function bindAutoBindMethod(component, method) {\n\t    var boundMethod = method.bind(component);\n\t    if (false) {\n\t      boundMethod.__reactBoundContext = component;\n\t      boundMethod.__reactBoundMethod = method;\n\t      boundMethod.__reactBoundArguments = null;\n\t      var componentName = component.constructor.displayName;\n\t      var _bind = boundMethod.bind;\n\t      boundMethod.bind = function(newThis) {\n\t        for (\n\t          var _len = arguments.length,\n\t            args = Array(_len > 1 ? _len - 1 : 0),\n\t            _key = 1;\n\t          _key < _len;\n\t          _key++\n\t        ) {\n\t          args[_key - 1] = arguments[_key];\n\t        }\n\t\n\t        // User is trying to bind() an autobound method; we effectively will\n\t        // ignore the value of \"this\" that the user is trying to use, so\n\t        // let's warn.\n\t        if (newThis !== component && newThis !== null) {\n\t          if (process.env.NODE_ENV !== 'production') {\n\t            warning(\n\t              false,\n\t              'bind(): React component methods may only be bound to the ' +\n\t                'component instance. See %s',\n\t              componentName\n\t            );\n\t          }\n\t        } else if (!args.length) {\n\t          if (process.env.NODE_ENV !== 'production') {\n\t            warning(\n\t              false,\n\t              'bind(): You are binding a component method to the component. ' +\n\t                'React does this for you automatically in a high-performance ' +\n\t                'way, so you can safely remove this call. See %s',\n\t              componentName\n\t            );\n\t          }\n\t          return boundMethod;\n\t        }\n\t        var reboundMethod = _bind.apply(boundMethod, arguments);\n\t        reboundMethod.__reactBoundContext = component;\n\t        reboundMethod.__reactBoundMethod = method;\n\t        reboundMethod.__reactBoundArguments = args;\n\t        return reboundMethod;\n\t      };\n\t    }\n\t    return boundMethod;\n\t  }\n\t\n\t  /**\n\t   * Binds all auto-bound methods in a component.\n\t   *\n\t   * @param {object} component Component whose method is going to be bound.\n\t   */\n\t  function bindAutoBindMethods(component) {\n\t    var pairs = component.__reactAutoBindPairs;\n\t    for (var i = 0; i < pairs.length; i += 2) {\n\t      var autoBindKey = pairs[i];\n\t      var method = pairs[i + 1];\n\t      component[autoBindKey] = bindAutoBindMethod(component, method);\n\t    }\n\t  }\n\t\n\t  var IsMountedPreMixin = {\n\t    componentDidMount: function() {\n\t      this.__isMounted = true;\n\t    }\n\t  };\n\t\n\t  var IsMountedPostMixin = {\n\t    componentWillUnmount: function() {\n\t      this.__isMounted = false;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Add more to the ReactClass base class. These are all legacy features and\n\t   * therefore not already part of the modern ReactComponent.\n\t   */\n\t  var ReactClassMixin = {\n\t    /**\n\t     * TODO: This will be deprecated because state should always keep a consistent\n\t     * type signature and the only use case for this, is to avoid that.\n\t     */\n\t    replaceState: function(newState, callback) {\n\t      this.updater.enqueueReplaceState(this, newState, callback);\n\t    },\n\t\n\t    /**\n\t     * Checks whether or not this composite component is mounted.\n\t     * @return {boolean} True if mounted, false otherwise.\n\t     * @protected\n\t     * @final\n\t     */\n\t    isMounted: function() {\n\t      if (false) {\n\t        warning(\n\t          this.__didWarnIsMounted,\n\t          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n\t            'subscriptions and pending requests in componentWillUnmount to ' +\n\t            'prevent memory leaks.',\n\t          (this.constructor && this.constructor.displayName) ||\n\t            this.name ||\n\t            'Component'\n\t        );\n\t        this.__didWarnIsMounted = true;\n\t      }\n\t      return !!this.__isMounted;\n\t    }\n\t  };\n\t\n\t  var ReactClassComponent = function() {};\n\t  _assign(\n\t    ReactClassComponent.prototype,\n\t    ReactComponent.prototype,\n\t    ReactClassMixin\n\t  );\n\t\n\t  /**\n\t   * Creates a composite component class given a class specification.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n\t   *\n\t   * @param {object} spec Class specification (which must define `render`).\n\t   * @return {function} Component constructor function.\n\t   * @public\n\t   */\n\t  function createClass(spec) {\n\t    // To keep our warnings more understandable, we'll use a little hack here to\n\t    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n\t    // unnecessarily identify a class without displayName as 'Constructor'.\n\t    var Constructor = identity(function(props, context, updater) {\n\t      // This constructor gets overridden by mocks. The argument is used\n\t      // by mocks to assert on what gets mounted.\n\t\n\t      if (false) {\n\t        warning(\n\t          this instanceof Constructor,\n\t          'Something is calling a React component directly. Use a factory or ' +\n\t            'JSX instead. See: https://fb.me/react-legacyfactory'\n\t        );\n\t      }\n\t\n\t      // Wire up auto-binding\n\t      if (this.__reactAutoBindPairs.length) {\n\t        bindAutoBindMethods(this);\n\t      }\n\t\n\t      this.props = props;\n\t      this.context = context;\n\t      this.refs = emptyObject;\n\t      this.updater = updater || ReactNoopUpdateQueue;\n\t\n\t      this.state = null;\n\t\n\t      // ReactClasses doesn't have constructors. Instead, they use the\n\t      // getInitialState and componentWillMount methods for initialization.\n\t\n\t      var initialState = this.getInitialState ? this.getInitialState() : null;\n\t      if (false) {\n\t        // We allow auto-mocks to proceed as if they're returning null.\n\t        if (\n\t          initialState === undefined &&\n\t          this.getInitialState._isMockFunction\n\t        ) {\n\t          // This is probably bad practice. Consider warning here and\n\t          // deprecating this convenience.\n\t          initialState = null;\n\t        }\n\t      }\n\t      _invariant(\n\t        typeof initialState === 'object' && !Array.isArray(initialState),\n\t        '%s.getInitialState(): must return an object or null',\n\t        Constructor.displayName || 'ReactCompositeComponent'\n\t      );\n\t\n\t      this.state = initialState;\n\t    });\n\t    Constructor.prototype = new ReactClassComponent();\n\t    Constructor.prototype.constructor = Constructor;\n\t    Constructor.prototype.__reactAutoBindPairs = [];\n\t\n\t    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\t\n\t    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n\t    mixSpecIntoComponent(Constructor, spec);\n\t    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\t\n\t    // Initialize the defaultProps property after all mixins have been merged.\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.defaultProps = Constructor.getDefaultProps();\n\t    }\n\t\n\t    if (false) {\n\t      // This is a tag to indicate that the use of these method names is ok,\n\t      // since it's used with createClass. If it's not, then it's likely a\n\t      // mistake so we'll warn you to use the static property, property\n\t      // initializer or constructor respectively.\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps.isReactClassApproved = {};\n\t      }\n\t      if (Constructor.prototype.getInitialState) {\n\t        Constructor.prototype.getInitialState.isReactClassApproved = {};\n\t      }\n\t    }\n\t\n\t    _invariant(\n\t      Constructor.prototype.render,\n\t      'createClass(...): Class specification must implement a `render` method.'\n\t    );\n\t\n\t    if (false) {\n\t      warning(\n\t        !Constructor.prototype.componentShouldUpdate,\n\t        '%s has a method called ' +\n\t          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n\t          'The name is phrased as a question because the function is ' +\n\t          'expected to return a value.',\n\t        spec.displayName || 'A component'\n\t      );\n\t      warning(\n\t        !Constructor.prototype.componentWillRecieveProps,\n\t        '%s has a method called ' +\n\t          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n\t        spec.displayName || 'A component'\n\t      );\n\t      warning(\n\t        !Constructor.prototype.UNSAFE_componentWillRecieveProps,\n\t        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +\n\t          'Did you mean UNSAFE_componentWillReceiveProps()?',\n\t        spec.displayName || 'A component'\n\t      );\n\t    }\n\t\n\t    // Reduce time spent doing lookups by setting these on the prototype.\n\t    for (var methodName in ReactClassInterface) {\n\t      if (!Constructor.prototype[methodName]) {\n\t        Constructor.prototype[methodName] = null;\n\t      }\n\t    }\n\t\n\t    return Constructor;\n\t  }\n\t\n\t  return createClass;\n\t}\n\t\n\tmodule.exports = factory;\n\n\n/***/ }),\n\n/***/ 158:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015, Yahoo! Inc.\n\t * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n\t */\n\t(function (global, factory) {\n\t     true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    (global.hoistNonReactStatics = factory());\n\t}(this, (function () {\n\t    'use strict';\n\t    \n\t    var REACT_STATICS = {\n\t        childContextTypes: true,\n\t        contextTypes: true,\n\t        defaultProps: true,\n\t        displayName: true,\n\t        getDefaultProps: true,\n\t        getDerivedStateFromProps: true,\n\t        mixins: true,\n\t        propTypes: true,\n\t        type: true\n\t    };\n\t    \n\t    var KNOWN_STATICS = {\n\t        name: true,\n\t        length: true,\n\t        prototype: true,\n\t        caller: true,\n\t        callee: true,\n\t        arguments: true,\n\t        arity: true\n\t    };\n\t    \n\t    var defineProperty = Object.defineProperty;\n\t    var getOwnPropertyNames = Object.getOwnPropertyNames;\n\t    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\t    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\t    var getPrototypeOf = Object.getPrototypeOf;\n\t    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\t    \n\t    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n\t        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\t            \n\t            if (objectPrototype) {\n\t                var inheritedComponent = getPrototypeOf(sourceComponent);\n\t                if (inheritedComponent && inheritedComponent !== objectPrototype) {\n\t                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n\t                }\n\t            }\n\t            \n\t            var keys = getOwnPropertyNames(sourceComponent);\n\t            \n\t            if (getOwnPropertySymbols) {\n\t                keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n\t            }\n\t            \n\t            for (var i = 0; i < keys.length; ++i) {\n\t                var key = keys[i];\n\t                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n\t                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\t                    try { // Avoid failures from read-only properties\n\t                        defineProperty(targetComponent, key, descriptor);\n\t                    } catch (e) {}\n\t                }\n\t            }\n\t            \n\t            return targetComponent;\n\t        }\n\t        \n\t        return targetComponent;\n\t    };\n\t})));\n\n\n/***/ }),\n\n/***/ 322:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(typeof navigator !== \"undefined\") && (function(root, factory) {\r\n\t    if (true) {\r\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n\t            return factory(root);\r\n\t        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t    } else if (typeof module === \"object\" && module.exports) {\r\n\t        module.exports = factory(root);\r\n\t    } else {\r\n\t        root.lottie = factory(root);\r\n\t        root.bodymovin = root.lottie;\r\n\t    }\r\n\t}((window || {}), function(window) {\r\n\t    \"use strict\";\r\n\t    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\t\r\n\tvar locationHref = '';\r\n\t\r\n\tvar initialDefaultFrame = -999999;\r\n\t\n\tvar subframeEnabled = true;\r\n\tvar expressionsPlugin;\r\n\tvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\tvar cachedColors = {};\r\n\tvar bm_rounder = Math.round;\r\n\tvar bm_rnd;\r\n\tvar bm_pow = Math.pow;\r\n\tvar bm_sqrt = Math.sqrt;\r\n\tvar bm_abs = Math.abs;\r\n\tvar bm_floor = Math.floor;\r\n\tvar bm_max = Math.max;\r\n\tvar bm_min = Math.min;\r\n\tvar blitter = 10;\r\n\t\r\n\tvar BMMath = {};\r\n\t(function(){\r\n\t    var propertyNames = Object.getOwnPropertyNames(Math);\r\n\t    var i, len = propertyNames.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n\t    }\r\n\t}());\r\n\t\r\n\tfunction ProjectInterface(){return {};}\r\n\t\r\n\tBMMath.random = Math.random;\r\n\tBMMath.abs = function(val){\r\n\t    var tOfVal = typeof val;\r\n\t    if(tOfVal === 'object' && val.length){\r\n\t        var absArr = createSizedArray(val.length);\r\n\t        var i, len = val.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            absArr[i] = Math.abs(val[i]);\r\n\t        }\r\n\t        return absArr;\r\n\t    }\r\n\t    return Math.abs(val);\r\n\t\r\n\t};\r\n\tvar defaultCurveSegments = 150;\r\n\tvar degToRads = Math.PI/180;\r\n\tvar roundCorner = 0.5519;\r\n\t\r\n\tfunction roundValues(flag){\r\n\t    if(flag){\r\n\t        bm_rnd = Math.round;\r\n\t    }else{\r\n\t        bm_rnd = function(val){\r\n\t            return val;\r\n\t        };\r\n\t    }\r\n\t}\r\n\troundValues(false);\r\n\t\r\n\tfunction styleDiv(element){\r\n\t    element.style.position = 'absolute';\r\n\t    element.style.top = 0;\r\n\t    element.style.left = 0;\r\n\t    element.style.display = 'block';\r\n\t    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n\t    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n\t    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n\t}\r\n\t\r\n\tfunction BMEnterFrameEvent(n,c,t,d){\r\n\t    this.type = n;\r\n\t    this.currentTime = c;\r\n\t    this.totalTime = t;\r\n\t    this.direction = d < 0 ? -1:1;\r\n\t}\r\n\t\r\n\tfunction BMCompleteEvent(n,d){\r\n\t    this.type = n;\r\n\t    this.direction = d < 0 ? -1:1;\r\n\t}\r\n\t\r\n\tfunction BMCompleteLoopEvent(n,c,t,d){\r\n\t    this.type = n;\r\n\t    this.currentLoop = t;\r\n\t    this.totalLoops = c;\r\n\t    this.direction = d < 0 ? -1:1;\r\n\t}\r\n\t\r\n\tfunction BMSegmentStartEvent(n,f,t){\r\n\t    this.type = n;\r\n\t    this.firstFrame = f;\r\n\t    this.totalFrames = t;\r\n\t}\r\n\t\r\n\tfunction BMDestroyEvent(n,t){\r\n\t    this.type = n;\r\n\t    this.target = t;\r\n\t}\r\n\t\r\n\tfunction randomString(length, chars){\r\n\t    if(chars === undefined){\r\n\t        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n\t    }\r\n\t    var i;\r\n\t    var result = '';\r\n\t    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n\t    return result;\r\n\t}\r\n\t\r\n\tfunction HSVtoRGB(h, s, v) {\r\n\t    var r, g, b, i, f, p, q, t;\r\n\t    i = Math.floor(h * 6);\r\n\t    f = h * 6 - i;\r\n\t    p = v * (1 - s);\r\n\t    q = v * (1 - f * s);\r\n\t    t = v * (1 - (1 - f) * s);\r\n\t    switch (i % 6) {\r\n\t        case 0: r = v; g = t; b = p; break;\r\n\t        case 1: r = q; g = v; b = p; break;\r\n\t        case 2: r = p; g = v; b = t; break;\r\n\t        case 3: r = p; g = q; b = v; break;\r\n\t        case 4: r = t; g = p; b = v; break;\r\n\t        case 5: r = v; g = p; b = q; break;\r\n\t    }\r\n\t    return [ r,\r\n\t        g,\r\n\t         b ];\r\n\t}\r\n\t\r\n\tfunction RGBtoHSV(r, g, b) {\r\n\t    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n\t        d = max - min,\r\n\t        h,\r\n\t        s = (max === 0 ? 0 : d / max),\r\n\t        v = max / 255;\r\n\t\r\n\t    switch (max) {\r\n\t        case min: h = 0; break;\r\n\t        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n\t        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n\t        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n\t    }\r\n\t\r\n\t    return [\r\n\t         h,\r\n\t         s,\r\n\t         v\r\n\t    ];\r\n\t}\r\n\t\r\n\tfunction addSaturationToRGB(color,offset){\r\n\t    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n\t    hsv[1] += offset;\r\n\t    if (hsv[1] > 1) {\r\n\t        hsv[1] = 1;\r\n\t    }\r\n\t    else if (hsv[1] <= 0) {\r\n\t        hsv[1] = 0;\r\n\t    }\r\n\t    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n\t}\r\n\t\r\n\tfunction addBrightnessToRGB(color,offset){\r\n\t    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n\t    hsv[2] += offset;\r\n\t    if (hsv[2] > 1) {\r\n\t        hsv[2] = 1;\r\n\t    }\r\n\t    else if (hsv[2] < 0) {\r\n\t        hsv[2] = 0;\r\n\t    }\r\n\t    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n\t}\r\n\t\r\n\tfunction addHueToRGB(color,offset) {\r\n\t    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n\t    hsv[0] += offset/360;\r\n\t    if (hsv[0] > 1) {\r\n\t        hsv[0] -= 1;\r\n\t    }\r\n\t    else if (hsv[0] < 0) {\r\n\t        hsv[0] += 1;\r\n\t    }\r\n\t    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n\t}\r\n\t\r\n\tvar rgbToHex = (function(){\r\n\t    var colorMap = [];\r\n\t    var i;\r\n\t    var hex;\r\n\t    for(i=0;i<256;i+=1){\r\n\t        hex = i.toString(16);\r\n\t        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n\t    }\r\n\t\r\n\t    return function(r, g, b) {\r\n\t        if(r<0){\r\n\t            r = 0;\r\n\t        }\r\n\t        if(g<0){\r\n\t            g = 0;\r\n\t        }\r\n\t        if(b<0){\r\n\t            b = 0;\r\n\t        }\r\n\t        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n\t    };\r\n\t}());\n\tfunction BaseEvent(){}\r\n\tBaseEvent.prototype = {\r\n\t\ttriggerEvent: function (eventName, args) {\r\n\t\t    if (this._cbs[eventName]) {\r\n\t\t        var len = this._cbs[eventName].length;\r\n\t\t        for (var i = 0; i < len; i++){\r\n\t\t            this._cbs[eventName][i](args);\r\n\t\t        }\r\n\t\t    }\r\n\t\t},\r\n\t\taddEventListener: function (eventName, callback) {\r\n\t\t    if (!this._cbs[eventName]){\r\n\t\t        this._cbs[eventName] = [];\r\n\t\t    }\r\n\t\t    this._cbs[eventName].push(callback);\r\n\t\r\n\t\t\treturn function() {\r\n\t\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t\t}.bind(this);\r\n\t\t},\r\n\t\tremoveEventListener: function (eventName,callback){\r\n\t\t    if (!callback){\r\n\t\t        this._cbs[eventName] = null;\r\n\t\t    }else if(this._cbs[eventName]){\r\n\t\t        var i = 0, len = this._cbs[eventName].length;\r\n\t\t        while(i<len){\r\n\t\t            if(this._cbs[eventName][i] === callback){\r\n\t\t                this._cbs[eventName].splice(i,1);\r\n\t\t                i -=1;\r\n\t\t                len -= 1;\r\n\t\t            }\r\n\t\t            i += 1;\r\n\t\t        }\r\n\t\t        if(!this._cbs[eventName].length){\r\n\t\t            this._cbs[eventName] = null;\r\n\t\t        }\r\n\t\t    }\r\n\t\t}\r\n\t};\n\tvar createTypedArray = (function(){\r\n\t\tfunction createRegularArray(type, len){\r\n\t\t\tvar i = 0, arr = [], value;\r\n\t\t\tswitch(type) {\r\n\t\t\t\tcase 'int16':\r\n\t\t\t\tcase 'uint8c':\r\n\t\t\t\t\tvalue = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvalue = 1.1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t\tarr.push(value);\r\n\t\t\t}\r\n\t\t\treturn arr;\r\n\t\t}\r\n\t\tfunction createTypedArray(type, len){\r\n\t\t\tif(type === 'float32') {\r\n\t\t\t\treturn new Float32Array(len);\r\n\t\t\t} else if(type === 'int16') {\r\n\t\t\t\treturn new Int16Array(len);\r\n\t\t\t} else if(type === 'uint8c') {\r\n\t\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\t\treturn createTypedArray;\r\n\t\t} else {\r\n\t\t\treturn createRegularArray;\r\n\t\t}\r\n\t}());\r\n\t\r\n\tfunction createSizedArray(len) {\r\n\t\treturn Array.apply(null,{length:len});\r\n\t}\n\tfunction createNS(type) {\r\n\t\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\t\treturn document.createElementNS(svgNS, type);\r\n\t}\n\tfunction createTag(type) {\r\n\t\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\t\treturn document.createElement(type);\r\n\t}\n\tfunction DynamicPropertyContainer(){};\r\n\tDynamicPropertyContainer.prototype = {\r\n\t\taddDynamicProperty: function(prop) {\r\n\t\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t\t        this.dynamicProperties.push(prop);\r\n\t\t        this.container.addDynamicProperty(this);\r\n\t\t    \tthis._isAnimated = true;\r\n\t\t    }\r\n\t\t},\r\n\t\titerateDynamicProperties: function(){\r\n\t\t    this._mdf = false;\r\n\t\t    var i, len = this.dynamicProperties.length;\r\n\t\t    for(i=0;i<len;i+=1){\r\n\t\t        this.dynamicProperties[i].getValue();\r\n\t\t        if(this.dynamicProperties[i]._mdf) {\r\n\t\t            this._mdf = true;\r\n\t\t        }\r\n\t\t    }\r\n\t\t},\r\n\t\tinitDynamicPropertyContainer: function(container){\r\n\t\t    this.container = container;\r\n\t\t    this.dynamicProperties = [];\r\n\t\t    this._mdf = false;\r\n\t\t    this._isAnimated = false;\r\n\t\t}\r\n\t}\n\t/*!\r\n\t Transformation Matrix v2.0\r\n\t (c) Epistemex 2014-2015\r\n\t www.epistemex.com\r\n\t By Ken Fyrstenberg\r\n\t Contributions by leeoniya.\r\n\t License: MIT, header required.\r\n\t */\r\n\t\r\n\t/**\r\n\t * 2D transformation matrix object initialized with identity matrix.\r\n\t *\r\n\t * The matrix can synchronize a canvas context by supplying the context\r\n\t * as an argument, or later apply current absolute transform to an\r\n\t * existing context.\r\n\t *\r\n\t * All values are handled as floating point values.\r\n\t *\r\n\t * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n\t * @prop {number} a - scale x\r\n\t * @prop {number} b - shear y\r\n\t * @prop {number} c - shear x\r\n\t * @prop {number} d - scale y\r\n\t * @prop {number} e - translate x\r\n\t * @prop {number} f - translate y\r\n\t * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n\t * @constructor\r\n\t */\r\n\t\r\n\tvar Matrix = (function(){\r\n\t\r\n\t    var _cos = Math.cos;\r\n\t    var _sin = Math.sin;\r\n\t    var _tan = Math.tan;\r\n\t    var _rnd = Math.round;\r\n\t\r\n\t    function reset(){\r\n\t        this.props[0] = 1;\r\n\t        this.props[1] = 0;\r\n\t        this.props[2] = 0;\r\n\t        this.props[3] = 0;\r\n\t        this.props[4] = 0;\r\n\t        this.props[5] = 1;\r\n\t        this.props[6] = 0;\r\n\t        this.props[7] = 0;\r\n\t        this.props[8] = 0;\r\n\t        this.props[9] = 0;\r\n\t        this.props[10] = 1;\r\n\t        this.props[11] = 0;\r\n\t        this.props[12] = 0;\r\n\t        this.props[13] = 0;\r\n\t        this.props[14] = 0;\r\n\t        this.props[15] = 1;\r\n\t        return this;\r\n\t    }\r\n\t\r\n\t    function rotate(angle) {\r\n\t        if(angle === 0){\r\n\t            return this;\r\n\t        }\r\n\t        var mCos = _cos(angle);\r\n\t        var mSin = _sin(angle);\r\n\t        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n\t    }\r\n\t\r\n\t    function rotateX(angle){\r\n\t        if(angle === 0){\r\n\t            return this;\r\n\t        }\r\n\t        var mCos = _cos(angle);\r\n\t        var mSin = _sin(angle);\r\n\t        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n\t    }\r\n\t\r\n\t    function rotateY(angle){\r\n\t        if(angle === 0){\r\n\t            return this;\r\n\t        }\r\n\t        var mCos = _cos(angle);\r\n\t        var mSin = _sin(angle);\r\n\t        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n\t    }\r\n\t\r\n\t    function rotateZ(angle){\r\n\t        if(angle === 0){\r\n\t            return this;\r\n\t        }\r\n\t        var mCos = _cos(angle);\r\n\t        var mSin = _sin(angle);\r\n\t        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n\t    }\r\n\t\r\n\t    function shear(sx,sy){\r\n\t        return this._t(1, sy, sx, 1, 0, 0);\r\n\t    }\r\n\t\r\n\t    function skew(ax, ay){\r\n\t        return this.shear(_tan(ax), _tan(ay));\r\n\t    }\r\n\t\r\n\t    function skewFromAxis(ax, angle){\r\n\t        var mCos = _cos(angle);\r\n\t        var mSin = _sin(angle);\r\n\t        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n\t            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n\t            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n\t        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n\t    }\r\n\t\r\n\t    function scale(sx, sy, sz) {\r\n\t        sz = isNaN(sz) ? 1 : sz;\r\n\t        if(sx == 1 && sy == 1 && sz == 1){\r\n\t            return this;\r\n\t        }\r\n\t        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n\t    }\r\n\t\r\n\t    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n\t        this.props[0] = a;\r\n\t        this.props[1] = b;\r\n\t        this.props[2] = c;\r\n\t        this.props[3] = d;\r\n\t        this.props[4] = e;\r\n\t        this.props[5] = f;\r\n\t        this.props[6] = g;\r\n\t        this.props[7] = h;\r\n\t        this.props[8] = i;\r\n\t        this.props[9] = j;\r\n\t        this.props[10] = k;\r\n\t        this.props[11] = l;\r\n\t        this.props[12] = m;\r\n\t        this.props[13] = n;\r\n\t        this.props[14] = o;\r\n\t        this.props[15] = p;\r\n\t        return this;\r\n\t    }\r\n\t\r\n\t    function translate(tx, ty, tz) {\r\n\t        tz = tz || 0;\r\n\t        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n\t            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n\t        }\r\n\t        return this;\r\n\t    }\r\n\t\r\n\t    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\t\r\n\t        var _p = this.props;\r\n\t\r\n\t        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n\t            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n\t            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n\t                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n\t                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n\t                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n\t                _p[15] = _p[15] * p2;\r\n\t            //}\r\n\t            this._identityCalculated = false;\r\n\t            return this;\r\n\t        }\r\n\t\r\n\t        var a1 = _p[0];\r\n\t        var b1 = _p[1];\r\n\t        var c1 = _p[2];\r\n\t        var d1 = _p[3];\r\n\t        var e1 = _p[4];\r\n\t        var f1 = _p[5];\r\n\t        var g1 = _p[6];\r\n\t        var h1 = _p[7];\r\n\t        var i1 = _p[8];\r\n\t        var j1 = _p[9];\r\n\t        var k1 = _p[10];\r\n\t        var l1 = _p[11];\r\n\t        var m1 = _p[12];\r\n\t        var n1 = _p[13];\r\n\t        var o1 = _p[14];\r\n\t        var p1 = _p[15];\r\n\t\r\n\t        /* matrix order (canvas compatible):\r\n\t         * ace\r\n\t         * bdf\r\n\t         * 001\r\n\t         */\r\n\t        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n\t        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n\t        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n\t        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\t\r\n\t        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n\t        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n\t        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n\t        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\t\r\n\t        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n\t        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n\t        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n\t        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\t\r\n\t        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n\t        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n\t        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n\t        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\t\r\n\t        this._identityCalculated = false;\r\n\t        return this;\r\n\t    }\r\n\t\r\n\t    function isIdentity() {\r\n\t        if(!this._identityCalculated){\r\n\t            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n\t            this._identityCalculated = true;\r\n\t        }\r\n\t        return this._identity;\r\n\t    }\r\n\t\r\n\t    function equals(matr){\r\n\t        var i = 0;\r\n\t        while (i < 16) {\r\n\t            if(matr.props[i] !== this.props[i]) {\r\n\t                return false;\r\n\t            }\r\n\t            i+=1;\r\n\t        }\r\n\t        return true;\r\n\t    }\r\n\t\r\n\t    function clone(matr){\r\n\t        var i;\r\n\t        for(i=0;i<16;i+=1){\r\n\t            matr.props[i] = this.props[i];\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function cloneFromProps(props){\r\n\t        var i;\r\n\t        for(i=0;i<16;i+=1){\r\n\t            this.props[i] = props[i];\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function applyToPoint(x, y, z) {\r\n\t\r\n\t        return {\r\n\t            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n\t            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n\t            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n\t        };\r\n\t        /*return {\r\n\t         x: x * me.a + y * me.c + me.e,\r\n\t         y: x * me.b + y * me.d + me.f\r\n\t         };*/\r\n\t    }\r\n\t    function applyToX(x, y, z) {\r\n\t        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n\t    }\r\n\t    function applyToY(x, y, z) {\r\n\t        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n\t    }\r\n\t    function applyToZ(x, y, z) {\r\n\t        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n\t    }\r\n\t\r\n\t    function inversePoint(pt) {\r\n\t        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n\t        var a = this.props[5]/determinant;\r\n\t        var b = - this.props[1]/determinant;\r\n\t        var c = - this.props[4]/determinant;\r\n\t        var d = this.props[0]/determinant;\r\n\t        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n\t        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n\t        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n\t    }\r\n\t\r\n\t    function inversePoints(pts){\r\n\t        var i, len = pts.length, retPts = [];\r\n\t        for(i=0;i<len;i+=1){\r\n\t            retPts[i] = inversePoint(pts[i]);\r\n\t        }\r\n\t        return retPts;\r\n\t    }\r\n\t\r\n\t    function applyToTriplePoints(pt1, pt2, pt3) {\r\n\t        var arr = createTypedArray('float32', 6);\r\n\t        if(this.isIdentity()) {\r\n\t            arr[0] = pt1[0];\r\n\t            arr[1] = pt1[1];\r\n\t            arr[2] = pt2[0];\r\n\t            arr[3] = pt2[1];\r\n\t            arr[4] = pt3[0];\r\n\t            arr[5] = pt3[1];\r\n\t        } else {\r\n\t            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n\t            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n\t            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n\t            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n\t            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n\t            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n\t            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n\t        }\r\n\t        return arr;\r\n\t    }\r\n\t\r\n\t    function applyToPointArray(x,y,z){\r\n\t        var arr;\r\n\t        if(this.isIdentity()) {\r\n\t            arr = [x,y,z];\r\n\t        } else {\r\n\t            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n\t        }\r\n\t        return arr;\r\n\t    }\r\n\t\r\n\t    function applyToPointStringified(x, y) {\r\n\t        if(this.isIdentity()) {\r\n\t            return x + ',' + y;\r\n\t        }\r\n\t        var _p = this.props;\r\n\t        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n\t    }\r\n\t\r\n\t    function toCSS() {\r\n\t        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n\t        /*if(this.isIdentity()) {\r\n\t            return '';\r\n\t        }*/\r\n\t        var i = 0;\r\n\t        var props = this.props;\r\n\t        var cssValue = 'matrix3d(';\r\n\t        var v = 10000;\r\n\t        while(i<16){\r\n\t            cssValue += _rnd(props[i]*v)/v;\r\n\t            cssValue += i === 15 ? ')':',';\r\n\t            i += 1;\r\n\t        }\r\n\t        return cssValue;\r\n\t    }\r\n\t\r\n\t    function roundMatrixProperty(val) {\r\n\t        var v = 10000;\r\n\t        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n\t            return _rnd(val * v) / v;\r\n\t        }\r\n\t        return val;\r\n\t    }\r\n\t\r\n\t    function to2dCSS() {\r\n\t        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n\t        /*if(this.isIdentity()) {\r\n\t            return '';\r\n\t        }*/\r\n\t        var props = this.props;\r\n\t        var _a = roundMatrixProperty(props[0]);\r\n\t        var _b = roundMatrixProperty(props[1]);\r\n\t        var _c = roundMatrixProperty(props[4]);\r\n\t        var _d = roundMatrixProperty(props[5]);\r\n\t        var _e = roundMatrixProperty(props[12]);\r\n\t        var _f = roundMatrixProperty(props[13]);\r\n\t        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n\t    }\r\n\t\r\n\t    return function(){\r\n\t        this.reset = reset;\r\n\t        this.rotate = rotate;\r\n\t        this.rotateX = rotateX;\r\n\t        this.rotateY = rotateY;\r\n\t        this.rotateZ = rotateZ;\r\n\t        this.skew = skew;\r\n\t        this.skewFromAxis = skewFromAxis;\r\n\t        this.shear = shear;\r\n\t        this.scale = scale;\r\n\t        this.setTransform = setTransform;\r\n\t        this.translate = translate;\r\n\t        this.transform = transform;\r\n\t        this.applyToPoint = applyToPoint;\r\n\t        this.applyToX = applyToX;\r\n\t        this.applyToY = applyToY;\r\n\t        this.applyToZ = applyToZ;\r\n\t        this.applyToPointArray = applyToPointArray;\r\n\t        this.applyToTriplePoints = applyToTriplePoints;\r\n\t        this.applyToPointStringified = applyToPointStringified;\r\n\t        this.toCSS = toCSS;\r\n\t        this.to2dCSS = to2dCSS;\r\n\t        this.clone = clone;\r\n\t        this.cloneFromProps = cloneFromProps;\r\n\t        this.equals = equals;\r\n\t        this.inversePoints = inversePoints;\r\n\t        this.inversePoint = inversePoint;\r\n\t        this._t = this.transform;\r\n\t        this.isIdentity = isIdentity;\r\n\t        this._identity = true;\r\n\t        this._identityCalculated = false;\r\n\t\r\n\t        this.props = createTypedArray('float32', 16);\r\n\t        this.reset();\r\n\t    };\r\n\t}());\r\n\t\n\t/*\r\n\t Copyright 2014 David Bau.\r\n\t\r\n\t Permission is hereby granted, free of charge, to any person obtaining\r\n\t a copy of this software and associated documentation files (the\r\n\t \"Software\"), to deal in the Software without restriction, including\r\n\t without limitation the rights to use, copy, modify, merge, publish,\r\n\t distribute, sublicense, and/or sell copies of the Software, and to\r\n\t permit persons to whom the Software is furnished to do so, subject to\r\n\t the following conditions:\r\n\t\r\n\t The above copyright notice and this permission notice shall be\r\n\t included in all copies or substantial portions of the Software.\r\n\t\r\n\t THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n\t EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n\t MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n\t IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n\t CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n\t TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n\t SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\t\r\n\t */\r\n\t\r\n\t(function (pool, math) {\r\n\t//\r\n\t// The following constants are related to IEEE 754 limits.\r\n\t//\r\n\t    var global = this,\r\n\t        width = 256,        // each RC4 output is 0 <= x < 256\r\n\t        chunks = 6,         // at least six RC4 outputs for each double\r\n\t        digits = 52,        // there are 52 significant digits in a double\r\n\t        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n\t        startdenom = math.pow(width, chunks),\r\n\t        significance = math.pow(2, digits),\r\n\t        overflow = significance * 2,\r\n\t        mask = width - 1,\r\n\t        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\t\r\n\t//\r\n\t// seedrandom()\r\n\t// This is the seedrandom function described above.\r\n\t//\r\n\t    function seedrandom(seed, options, callback) {\r\n\t        var key = [];\r\n\t        options = (options === true) ? { entropy: true } : (options || {});\r\n\t\r\n\t        // Flatten the seed string or build one from local entropy if needed.\r\n\t        var shortseed = mixkey(flatten(\r\n\t            options.entropy ? [seed, tostring(pool)] :\r\n\t                (seed === null) ? autoseed() : seed, 3), key);\r\n\t\r\n\t        // Use the seed to initialize an ARC4 generator.\r\n\t        var arc4 = new ARC4(key);\r\n\t\r\n\t        // This function returns a random double in [0, 1) that contains\r\n\t        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n\t        var prng = function() {\r\n\t            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n\t                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n\t                x = 0;                          //   and no 'extra last byte'.\r\n\t            while (n < significance) {          // Fill up all significant digits by\r\n\t                n = (n + x) * width;              //   shifting numerator and\r\n\t                d *= width;                       //   denominator and generating a\r\n\t                x = arc4.g(1);                    //   new least-significant-byte.\r\n\t            }\r\n\t            while (n >= overflow) {             // To avoid rounding up, before adding\r\n\t                n /= 2;                           //   last byte, shift everything\r\n\t                d /= 2;                           //   right using integer math until\r\n\t                x >>>= 1;                         //   we have exactly the desired bits.\r\n\t            }\r\n\t            return (n + x) / d;                 // Form the number within [0, 1).\r\n\t        };\r\n\t\r\n\t        prng.int32 = function() { return arc4.g(4) | 0; };\r\n\t        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n\t        prng.double = prng;\r\n\t\r\n\t        // Mix the randomness into accumulated entropy.\r\n\t        mixkey(tostring(arc4.S), pool);\r\n\t\r\n\t        // Calling convention: what to return as a function of prng, seed, is_math.\r\n\t        return (options.pass || callback ||\r\n\t        function(prng, seed, is_math_call, state) {\r\n\t            if (state) {\r\n\t                // Load the arc4 state from the given state if it has an S array.\r\n\t                if (state.S) { copy(state, arc4); }\r\n\t                // Only provide the .state method if requested via options.state.\r\n\t                prng.state = function() { return copy(arc4, {}); };\r\n\t            }\r\n\t\r\n\t            // If called as a method of Math (Math.seedrandom()), mutate\r\n\t            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n\t            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\t\r\n\t            // Otherwise, it is a newer calling convention, so return the\r\n\t            // prng directly.\r\n\t            else return prng;\r\n\t        })(\r\n\t            prng,\r\n\t            shortseed,\r\n\t            'global' in options ? options.global : (this == math),\r\n\t            options.state);\r\n\t    }\r\n\t    math['seed' + rngname] = seedrandom;\r\n\t\r\n\t//\r\n\t// ARC4\r\n\t//\r\n\t// An ARC4 implementation.  The constructor takes a key in the form of\r\n\t// an array of at most (width) integers that should be 0 <= x < (width).\r\n\t//\r\n\t// The g(count) method returns a pseudorandom integer that concatenates\r\n\t// the next (count) outputs from ARC4.  Its return value is a number x\r\n\t// that is in the range 0 <= x < (width ^ count).\r\n\t//\r\n\t    function ARC4(key) {\r\n\t        var t, keylen = key.length,\r\n\t            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\t\r\n\t        // The empty key [] is treated as [0].\r\n\t        if (!keylen) { key = [keylen++]; }\r\n\t\r\n\t        // Set up S using the standard key scheduling algorithm.\r\n\t        while (i < width) {\r\n\t            s[i] = i++;\r\n\t        }\r\n\t        for (i = 0; i < width; i++) {\r\n\t            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n\t            s[j] = t;\r\n\t        }\r\n\t\r\n\t        // The \"g\" method returns the next (count) outputs as one number.\r\n\t        me.g = function(count) {\r\n\t            // Using instance members instead of closure state nearly doubles speed.\r\n\t            var t, r = 0,\r\n\t                i = me.i, j = me.j, s = me.S;\r\n\t            while (count--) {\r\n\t                t = s[i = mask & (i + 1)];\r\n\t                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n\t            }\r\n\t            me.i = i; me.j = j;\r\n\t            return r;\r\n\t            // For robust unpredictability, the function call below automatically\r\n\t            // discards an initial batch of values.  This is called RC4-drop[256].\r\n\t            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n\t        };\r\n\t    }\r\n\t\r\n\t//\r\n\t// copy()\r\n\t// Copies internal state of ARC4 to or from a plain object.\r\n\t//\r\n\t    function copy(f, t) {\r\n\t        t.i = f.i;\r\n\t        t.j = f.j;\r\n\t        t.S = f.S.slice();\r\n\t        return t;\r\n\t    }\r\n\t\r\n\t//\r\n\t// flatten()\r\n\t// Converts an object tree to nested arrays of strings.\r\n\t//\r\n\t    function flatten(obj, depth) {\r\n\t        var result = [], typ = (typeof obj), prop;\r\n\t        if (depth && typ == 'object') {\r\n\t            for (prop in obj) {\r\n\t                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n\t            }\r\n\t        }\r\n\t        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n\t    }\r\n\t\r\n\t//\r\n\t// mixkey()\r\n\t// Mixes a string seed into a key that is an array of integers, and\r\n\t// returns a shortened string seed that is equivalent to the result key.\r\n\t//\r\n\t    function mixkey(seed, key) {\r\n\t        var stringseed = seed + '', smear, j = 0;\r\n\t        while (j < stringseed.length) {\r\n\t            key[mask & j] =\r\n\t                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n\t        }\r\n\t        return tostring(key);\r\n\t    }\r\n\t\r\n\t//\r\n\t// autoseed()\r\n\t// Returns an object for autoseeding, using window.crypto and Node crypto\r\n\t// module if available.\r\n\t//\r\n\t    function autoseed() {\r\n\t        try {\r\n\t            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n\t            var out = new Uint8Array(width);\r\n\t            (global.crypto || global.msCrypto).getRandomValues(out);\r\n\t            return tostring(out);\r\n\t        } catch (e) {\r\n\t            var browser = global.navigator,\r\n\t                plugins = browser && browser.plugins;\r\n\t            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n\t        }\r\n\t    }\r\n\t\r\n\t//\r\n\t// tostring()\r\n\t// Converts an array of charcodes to a string\r\n\t//\r\n\t    function tostring(a) {\r\n\t        return String.fromCharCode.apply(0, a);\r\n\t    }\r\n\t\r\n\t//\r\n\t// When seedrandom.js is loaded, we immediately mix a few bits\r\n\t// from the built-in RNG into the entropy pool.  Because we do\r\n\t// not want to interfere with deterministic PRNG state later,\r\n\t// seedrandom will not call math.random on its own again after\r\n\t// initialization.\r\n\t//\r\n\t    mixkey(math.random(), pool);\r\n\t\r\n\t//\r\n\t// Nodejs and AMD support: export the implementation as a module using\r\n\t// either convention.\r\n\t//\r\n\t\r\n\t// End anonymous scope, and pass initial values.\r\n\t})(\r\n\t    [],     // pool: entropy pool starts empty\r\n\t    BMMath    // math: package containing random, pow, and seedrandom\r\n\t);\n\tvar BezierFactory = (function(){\r\n\t    /**\r\n\t     * BezierEasing - use bezier curve for transition easing function\r\n\t     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n\t     *\r\n\t     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n\t     * Usage:\r\n\t     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n\t     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n\t     *\r\n\t     */\r\n\t\r\n\t        var ob = {};\r\n\t    ob.getBezierEasing = getBezierEasing;\r\n\t    var beziers = {};\r\n\t\r\n\t    function getBezierEasing(a,b,c,d,nm){\r\n\t        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n\t        if(beziers[str]){\r\n\t            return beziers[str];\r\n\t        }\r\n\t        var bezEasing = new BezierEasing([a,b,c,d]);\r\n\t        beziers[str] = bezEasing;\r\n\t        return bezEasing;\r\n\t    }\r\n\t\r\n\t// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n\t    var NEWTON_ITERATIONS = 4;\r\n\t    var NEWTON_MIN_SLOPE = 0.001;\r\n\t    var SUBDIVISION_PRECISION = 0.0000001;\r\n\t    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\t\r\n\t    var kSplineTableSize = 11;\r\n\t    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\t\r\n\t    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\t\r\n\t    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n\t    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n\t    function C (aA1)      { return 3.0 * aA1; }\r\n\t\r\n\t// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n\t    function calcBezier (aT, aA1, aA2) {\r\n\t        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n\t    }\r\n\t\r\n\t// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n\t    function getSlope (aT, aA1, aA2) {\r\n\t        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n\t    }\r\n\t\r\n\t    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n\t        var currentX, currentT, i = 0;\r\n\t        do {\r\n\t            currentT = aA + (aB - aA) / 2.0;\r\n\t            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n\t            if (currentX > 0.0) {\r\n\t                aB = currentT;\r\n\t            } else {\r\n\t                aA = currentT;\r\n\t            }\r\n\t        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n\t        return currentT;\r\n\t    }\r\n\t\r\n\t    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n\t        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n\t            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n\t            if (currentSlope === 0.0) return aGuessT;\r\n\t            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n\t            aGuessT -= currentX / currentSlope;\r\n\t        }\r\n\t        return aGuessT;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n\t     */\r\n\t    function BezierEasing (points) {\r\n\t        this._p = points;\r\n\t        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n\t        this._precomputed = false;\r\n\t\r\n\t        this.get = this.get.bind(this);\r\n\t    }\r\n\t\r\n\t    BezierEasing.prototype = {\r\n\t\r\n\t        get: function (x) {\r\n\t            var mX1 = this._p[0],\r\n\t                mY1 = this._p[1],\r\n\t                mX2 = this._p[2],\r\n\t                mY2 = this._p[3];\r\n\t            if (!this._precomputed) this._precompute();\r\n\t            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n\t            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n\t            if (x === 0) return 0;\r\n\t            if (x === 1) return 1;\r\n\t            return calcBezier(this._getTForX(x), mY1, mY2);\r\n\t        },\r\n\t\r\n\t        // Private part\r\n\t\r\n\t        _precompute: function () {\r\n\t            var mX1 = this._p[0],\r\n\t                mY1 = this._p[1],\r\n\t                mX2 = this._p[2],\r\n\t                mY2 = this._p[3];\r\n\t            this._precomputed = true;\r\n\t            if (mX1 !== mY1 || mX2 !== mY2)\r\n\t                this._calcSampleValues();\r\n\t        },\r\n\t\r\n\t        _calcSampleValues: function () {\r\n\t            var mX1 = this._p[0],\r\n\t                mX2 = this._p[2];\r\n\t            for (var i = 0; i < kSplineTableSize; ++i) {\r\n\t                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n\t            }\r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n\t         */\r\n\t        _getTForX: function (aX) {\r\n\t            var mX1 = this._p[0],\r\n\t                mX2 = this._p[2],\r\n\t                mSampleValues = this._mSampleValues;\r\n\t\r\n\t            var intervalStart = 0.0;\r\n\t            var currentSample = 1;\r\n\t            var lastSample = kSplineTableSize - 1;\r\n\t\r\n\t            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n\t                intervalStart += kSampleStepSize;\r\n\t            }\r\n\t            --currentSample;\r\n\t\r\n\t            // Interpolate to provide an initial guess for t\r\n\t            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n\t            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\t\r\n\t            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n\t            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n\t                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n\t            } else if (initialSlope === 0.0) {\r\n\t                return guessForT;\r\n\t            } else {\r\n\t                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    return ob;\r\n\t\r\n\t}());\n\t(function () {\r\n\t    var lastTime = 0;\r\n\t    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n\t    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n\t        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n\t        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n\t    }\r\n\t    if(!window.requestAnimationFrame)\r\n\t        window.requestAnimationFrame = function (callback, element) {\r\n\t            var currTime = new Date().getTime();\r\n\t            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n\t            var id = setTimeout(function () {\r\n\t                    callback(currTime + timeToCall);\r\n\t                },\r\n\t                timeToCall);\r\n\t            lastTime = currTime + timeToCall;\r\n\t            return id;\r\n\t        };\r\n\t    if(!window.cancelAnimationFrame)\r\n\t        window.cancelAnimationFrame = function (id) {\r\n\t            clearTimeout(id);\r\n\t        };\r\n\t}());\r\n\t\n\tfunction extendPrototype(sources,destination){\r\n\t    var i, len = sources.length, sourcePrototype;\r\n\t    for (i = 0;i < len;i += 1) {\r\n\t        sourcePrototype = sources[i].prototype;\r\n\t        for (var attr in sourcePrototype) {\r\n\t            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction getDescriptor(object, prop) {\r\n\t    return Object.getOwnPropertyDescriptor(object, prop);\r\n\t}\r\n\t\r\n\tfunction createProxyFunction(prototype) {\r\n\t\tfunction ProxyFunction(){}\r\n\t\tProxyFunction.prototype = prototype;\r\n\t\treturn ProxyFunction;\r\n\t}\n\tfunction bezFunction(){\r\n\t\r\n\t    var easingFunctions = [];\r\n\t    var math = Math;\r\n\t\r\n\t    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n\t        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n\t        return det1 > -0.001 && det1 < 0.001;\r\n\t    }\r\n\t\r\n\t    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n\t        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n\t            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n\t        }\r\n\t        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n\t        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n\t        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n\t        var diffDist;\r\n\t        if(dist1 > dist2){\r\n\t            if(dist1 > dist3){\r\n\t                diffDist = dist1 - dist2 - dist3;\r\n\t            } else {\r\n\t                diffDist = dist3 - dist2 - dist1;\r\n\t            }\r\n\t        } else if(dist3 > dist2){\r\n\t            diffDist = dist3 - dist2 - dist1;\r\n\t        } else {\r\n\t            diffDist = dist2 - dist1 - dist3;\r\n\t        }\r\n\t        return diffDist > -0.0001 && diffDist < 0.0001;\r\n\t    }\r\n\t\r\n\t    var getBezierLength = (function(){\r\n\t\r\n\t        return function(pt1,pt2,pt3,pt4){\r\n\t            var curveSegments = defaultCurveSegments;\r\n\t            var k;\r\n\t            var i, len;\r\n\t            var ptCoord,perc,addedLength = 0;\r\n\t            var ptDistance;\r\n\t            var point = [],lastPoint = [];\r\n\t            var lengthData = bezier_length_pool.newElement();\r\n\t            len = pt3.length;\r\n\t            for(k=0;k<curveSegments;k+=1){\r\n\t                perc = k/(curveSegments-1);\r\n\t                ptDistance = 0;\r\n\t                for(i=0;i<len;i+=1){\r\n\t                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n\t                    point[i] = ptCoord;\r\n\t                    if(lastPoint[i] !== null){\r\n\t                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n\t                    }\r\n\t                    lastPoint[i] = point[i];\r\n\t                }\r\n\t                if(ptDistance){\r\n\t                    ptDistance = bm_sqrt(ptDistance);\r\n\t                    addedLength += ptDistance;\r\n\t                }\r\n\t                lengthData.percents[k] = perc;\r\n\t                lengthData.lengths[k] = addedLength;\r\n\t            }\r\n\t            lengthData.addedLength = addedLength;\r\n\t            return lengthData;\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    function getSegmentsLength(shapeData) {\r\n\t        var segmentsLength = segments_length_pool.newElement();\r\n\t        var closed = shapeData.c;\r\n\t        var pathV = shapeData.v;\r\n\t        var pathO = shapeData.o;\r\n\t        var pathI = shapeData.i;\r\n\t        var i, len = shapeData._length;\r\n\t        var lengths = segmentsLength.lengths;\r\n\t        var totalLength = 0;\r\n\t        for(i=0;i<len-1;i+=1){\r\n\t            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n\t            totalLength += lengths[i].addedLength;\r\n\t        }\r\n\t        if(closed){\r\n\t            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n\t            totalLength += lengths[i].addedLength;\r\n\t        }\r\n\t        segmentsLength.totalLength = totalLength;\r\n\t        return segmentsLength;\r\n\t    }\r\n\t\r\n\t    function BezierData(length){\r\n\t        this.segmentLength = 0;\r\n\t        this.points = new Array(length);\r\n\t    }\r\n\t\r\n\t    function PointData(partial,point){\r\n\t        this.partialLength = partial;\r\n\t        this.point = point;\r\n\t    }\r\n\t\r\n\t    var buildBezierData = (function(){\r\n\t\r\n\t        var storedData = {};\r\n\t\r\n\t        return function (keyData){\r\n\t            var pt1 = keyData.s;\r\n\t            var pt2 = keyData.e;\r\n\t            var pt3 = keyData.to;\r\n\t            var pt4 = keyData.ti;\r\n\t            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n\t            if(storedData[bezierName]){\r\n\t                keyData.bezierData = storedData[bezierName];\r\n\t                return;\r\n\t            }\r\n\t            var curveSegments = defaultCurveSegments;\r\n\t            var k, i, len;\r\n\t            var ptCoord,perc,addedLength = 0;\r\n\t            var ptDistance;\r\n\t            var point,lastPoint = null;\r\n\t            if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n\t                curveSegments = 2;\r\n\t            }\r\n\t            var bezierData = new BezierData(curveSegments);\r\n\t            len = pt3.length;\r\n\t            for (k = 0; k < curveSegments; k += 1) {\r\n\t                point = createSizedArray(len);\r\n\t                perc = k / (curveSegments - 1);\r\n\t                ptDistance = 0;\r\n\t                for (i = 0; i < len; i += 1){\r\n\t                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n\t                    point[i] = ptCoord;\r\n\t                    if(lastPoint !== null){\r\n\t                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n\t                    }\r\n\t                }\r\n\t                ptDistance = bm_sqrt(ptDistance);\r\n\t                addedLength += ptDistance;\r\n\t                bezierData.points[k] = new PointData(ptDistance, point);\r\n\t                lastPoint = point;\r\n\t            }\r\n\t            bezierData.segmentLength = addedLength;\r\n\t            keyData.bezierData = bezierData;\r\n\t            storedData[bezierName] = bezierData;\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    function getDistancePerc(perc,bezierData){\r\n\t        var percents = bezierData.percents;\r\n\t        var lengths = bezierData.lengths;\r\n\t        var len = percents.length;\r\n\t        var initPos = bm_floor((len-1)*perc);\r\n\t        var lengthPos = perc*bezierData.addedLength;\r\n\t        var lPerc = 0;\r\n\t        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n\t            return percents[initPos];\r\n\t        }else{\r\n\t            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n\t            var flag = true;\r\n\t            while(flag){\r\n\t                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n\t                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n\t                    flag = false;\r\n\t                }else{\r\n\t                    initPos += dir;\r\n\t                }\r\n\t                if(initPos < 0 || initPos >= len - 1){\r\n\t                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n\t                    if(initPos === len - 1) {\r\n\t                        return percents[initPos];\r\n\t                    }\r\n\t                    flag = false;\r\n\t                }\r\n\t            }\r\n\t            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n\t        var t1 = getDistancePerc(percent,bezierData);\r\n\t        var u0 = 1;\r\n\t        var u1 = 1 - t1;\r\n\t        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n\t        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n\t        return [ptX, ptY];\r\n\t    }\r\n\t\r\n\t    function getSegmentArray() {\r\n\t\r\n\t    }\r\n\t\r\n\t    var bezier_segment_points = createTypedArray('float32', 8);\r\n\t\r\n\t    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\t\r\n\t        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n\t        var t0 = getDistancePerc(startPerc,bezierData);\r\n\t        endPerc = endPerc > 1 ? 1 : endPerc;\r\n\t        var t1 = getDistancePerc(endPerc,bezierData);\r\n\t        var i, len = pt1.length;\r\n\t        var u0 = 1 - t0;\r\n\t        var u1 = 1 - t1;\r\n\t        var u0u0u0 = u0*u0*u0;\r\n\t        var t0u0u0_3 = t0*u0*u0*3;\r\n\t        var t0t0u0_3 = t0*t0*u0*3;\r\n\t        var t0t0t0 = t0*t0*t0;\r\n\t        //\r\n\t        var u0u0u1 = u0*u0*u1;\r\n\t        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n\t        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n\t        var t0t0t1 = t0*t0*t1;\r\n\t        //\r\n\t        var u0u1u1 = u0*u1*u1;\r\n\t        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n\t        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n\t        var t0t1t1 = t0*t1*t1;\r\n\t        //\r\n\t        var u1u1u1 = u1*u1*u1;\r\n\t        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n\t        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n\t        var t1t1t1 = t1*t1*t1;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n\t            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n\t            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n\t            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n\t        }\r\n\t\r\n\t        return bezier_segment_points;\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        getSegmentsLength : getSegmentsLength,\r\n\t        getNewSegment : getNewSegment,\r\n\t        getPointInSegment : getPointInSegment,\r\n\t        buildBezierData : buildBezierData,\r\n\t        pointOnLine2D : pointOnLine2D,\r\n\t        pointOnLine3D : pointOnLine3D\r\n\t    };\r\n\t}\r\n\t\r\n\tvar bez = bezFunction();\n\tfunction dataFunctionManager(){\r\n\t\r\n\t    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\t\r\n\t    function completeLayers(layers, comps, fontManager){\r\n\t        var layerData;\r\n\t        var animArray, lastFrame;\r\n\t        var i, len = layers.length;\r\n\t        var j, jLen, k, kLen;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            layerData = layers[i];\r\n\t            if(!('ks' in layerData) || layerData.completed){\r\n\t                continue;\r\n\t            }\r\n\t            layerData.completed = true;\r\n\t            if(layerData.tt){\r\n\t                layers[i-1].td = layerData.tt;\r\n\t            }\r\n\t            animArray = [];\r\n\t            lastFrame = -1;\r\n\t            if(layerData.hasMask){\r\n\t                var maskProps = layerData.masksProperties;\r\n\t                jLen = maskProps.length;\r\n\t                for(j=0;j<jLen;j+=1){\r\n\t                    if(maskProps[j].pt.k.i){\r\n\t                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n\t                    }else{\r\n\t                        kLen = maskProps[j].pt.k.length;\r\n\t                        for(k=0;k<kLen;k+=1){\r\n\t                            if(maskProps[j].pt.k[k].s){\r\n\t                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n\t                            }\r\n\t                            if(maskProps[j].pt.k[k].e){\r\n\t                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            if(layerData.ty===0){\r\n\t                layerData.layers = findCompLayers(layerData.refId, comps);\r\n\t                completeLayers(layerData.layers,comps, fontManager);\r\n\t            }else if(layerData.ty === 4){\r\n\t                completeShapes(layerData.shapes);\r\n\t            }else if(layerData.ty == 5){\r\n\t                completeText(layerData, fontManager);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function findCompLayers(id,comps){\r\n\t        var i = 0, len = comps.length;\r\n\t        while(i<len){\r\n\t            if(comps[i].id === id){\r\n\t                if(!comps[i].layers.__used) {\r\n\t                    comps[i].layers.__used = true;\r\n\t                    return comps[i].layers;\r\n\t                }\r\n\t                return JSON.parse(JSON.stringify(comps[i].layers));\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function completeShapes(arr){\r\n\t        var i, len = arr.length;\r\n\t        var j, jLen;\r\n\t        var hasPaths = false;\r\n\t        for(i=len-1;i>=0;i-=1){\r\n\t            if(arr[i].ty == 'sh'){\r\n\t                if(arr[i].ks.k.i){\r\n\t                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n\t                }else{\r\n\t                    jLen = arr[i].ks.k.length;\r\n\t                    for(j=0;j<jLen;j+=1){\r\n\t                        if(arr[i].ks.k[j].s){\r\n\t                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n\t                        }\r\n\t                        if(arr[i].ks.k[j].e){\r\n\t                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                hasPaths = true;\r\n\t            }else if(arr[i].ty == 'gr'){\r\n\t                completeShapes(arr[i].it);\r\n\t            }\r\n\t        }\r\n\t        /*if(hasPaths){\r\n\t            //mx: distance\r\n\t            //ss: sensitivity\r\n\t            //dc: decay\r\n\t            arr.splice(arr.length-1,0,{\r\n\t                \"ty\": \"ms\",\r\n\t                \"mx\":20,\r\n\t                \"ss\":10,\r\n\t                 \"dc\":0.001,\r\n\t                \"maxDist\":200\r\n\t            });\r\n\t        }*/\r\n\t    }\r\n\t\r\n\t    function convertPathsToAbsoluteValues(path){\r\n\t        var i, len = path.i.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            path.i[i][0] += path.v[i][0];\r\n\t            path.i[i][1] += path.v[i][1];\r\n\t            path.o[i][0] += path.v[i][0];\r\n\t            path.o[i][1] += path.v[i][1];\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function checkVersion(minimum,animVersionString){\r\n\t        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n\t        if(minimum[0]>animVersion[0]){\r\n\t            return true;\r\n\t        } else if(animVersion[0] > minimum[0]){\r\n\t            return false;\r\n\t        }\r\n\t        if(minimum[1]>animVersion[1]){\r\n\t            return true;\r\n\t        } else if(animVersion[1] > minimum[1]){\r\n\t            return false;\r\n\t        }\r\n\t        if(minimum[2]>animVersion[2]){\r\n\t            return true;\r\n\t        } else if(animVersion[2] > minimum[2]){\r\n\t            return false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    var checkText = (function(){\r\n\t        var minimumVersion = [4,4,14];\r\n\t\r\n\t        function updateTextLayer(textLayer){\r\n\t            var documentData = textLayer.t.d;\r\n\t            textLayer.t.d = {\r\n\t                k: [\r\n\t                    {\r\n\t                        s:documentData,\r\n\t                        t:0\r\n\t                    }\r\n\t                ]\r\n\t            };\r\n\t        }\r\n\t\r\n\t        function iterateLayers(layers){\r\n\t            var i, len = layers.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                if(layers[i].ty === 5){\r\n\t                    updateTextLayer(layers[i]);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return function (animationData){\r\n\t            if(checkVersion(minimumVersion,animationData.v)){\r\n\t                iterateLayers(animationData.layers);\r\n\t                if(animationData.assets){\r\n\t                    var i, len = animationData.assets.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        if(animationData.assets[i].layers){\r\n\t                            iterateLayers(animationData.assets[i].layers);\r\n\t\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    var checkChars = (function() {\r\n\t        var minimumVersion = [4,7,99];\r\n\t        return function (animationData){\r\n\t            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n\t                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n\t                var pathData, paths;\r\n\t                for(i = 0; i < len; i += 1) {\r\n\t                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n\t                        paths = animationData.chars[i].data.shapes[0].it;\r\n\t                        jLen = paths.length;\r\n\t\r\n\t                        for(j = 0; j < jLen; j += 1) {\r\n\t                            pathData = paths[j].ks.k;\r\n\t                            if(!pathData.__converted) {\r\n\t                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n\t                                pathData.__converted = true;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    var checkColors = (function(){\r\n\t        var minimumVersion = [4,1,9];\r\n\t\r\n\t        function iterateShapes(shapes){\r\n\t            var i, len = shapes.length;\r\n\t            var j, jLen;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                if(shapes[i].ty === 'gr'){\r\n\t                    iterateShapes(shapes[i].it);\r\n\t                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n\t                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n\t                        jLen = shapes[i].c.k.length;\r\n\t                        for(j=0;j<jLen;j+=1){\r\n\t                            if(shapes[i].c.k[j].s){\r\n\t                                shapes[i].c.k[j].s[0] /= 255;\r\n\t                                shapes[i].c.k[j].s[1] /= 255;\r\n\t                                shapes[i].c.k[j].s[2] /= 255;\r\n\t                                shapes[i].c.k[j].s[3] /= 255;\r\n\t                            }\r\n\t                            if(shapes[i].c.k[j].e){\r\n\t                                shapes[i].c.k[j].e[0] /= 255;\r\n\t                                shapes[i].c.k[j].e[1] /= 255;\r\n\t                                shapes[i].c.k[j].e[2] /= 255;\r\n\t                                shapes[i].c.k[j].e[3] /= 255;\r\n\t                            }\r\n\t                        }\r\n\t                    } else {\r\n\t                        shapes[i].c.k[0] /= 255;\r\n\t                        shapes[i].c.k[1] /= 255;\r\n\t                        shapes[i].c.k[2] /= 255;\r\n\t                        shapes[i].c.k[3] /= 255;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        function iterateLayers(layers){\r\n\t            var i, len = layers.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                if(layers[i].ty === 4){\r\n\t                    iterateShapes(layers[i].shapes);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return function (animationData){\r\n\t            if(checkVersion(minimumVersion,animationData.v)){\r\n\t                iterateLayers(animationData.layers);\r\n\t                if(animationData.assets){\r\n\t                    var i, len = animationData.assets.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        if(animationData.assets[i].layers){\r\n\t                            iterateLayers(animationData.assets[i].layers);\r\n\t\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    var checkShapes = (function(){\r\n\t        var minimumVersion = [4,4,18];\r\n\t\r\n\t\r\n\t\r\n\t        function completeShapes(arr){\r\n\t            var i, len = arr.length;\r\n\t            var j, jLen;\r\n\t            var hasPaths = false;\r\n\t            for(i=len-1;i>=0;i-=1){\r\n\t                if(arr[i].ty == 'sh'){\r\n\t                    if(arr[i].ks.k.i){\r\n\t                        arr[i].ks.k.c = arr[i].closed;\r\n\t                    }else{\r\n\t                        jLen = arr[i].ks.k.length;\r\n\t                        for(j=0;j<jLen;j+=1){\r\n\t                            if(arr[i].ks.k[j].s){\r\n\t                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n\t                            }\r\n\t                            if(arr[i].ks.k[j].e){\r\n\t                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                    hasPaths = true;\r\n\t                }else if(arr[i].ty == 'gr'){\r\n\t                    completeShapes(arr[i].it);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        function iterateLayers(layers){\r\n\t            var layerData;\r\n\t            var i, len = layers.length;\r\n\t            var j, jLen, k, kLen;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                layerData = layers[i];\r\n\t                if(layerData.hasMask){\r\n\t                    var maskProps = layerData.masksProperties;\r\n\t                    jLen = maskProps.length;\r\n\t                    for(j=0;j<jLen;j+=1){\r\n\t                        if(maskProps[j].pt.k.i){\r\n\t                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n\t                        }else{\r\n\t                            kLen = maskProps[j].pt.k.length;\r\n\t                            for(k=0;k<kLen;k+=1){\r\n\t                                if(maskProps[j].pt.k[k].s){\r\n\t                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n\t                                }\r\n\t                                if(maskProps[j].pt.k[k].e){\r\n\t                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n\t                                }\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                if(layerData.ty === 4){\r\n\t                    completeShapes(layerData.shapes);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return function (animationData){\r\n\t            if(checkVersion(minimumVersion,animationData.v)){\r\n\t                iterateLayers(animationData.layers);\r\n\t                if(animationData.assets){\r\n\t                    var i, len = animationData.assets.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        if(animationData.assets[i].layers){\r\n\t                            iterateLayers(animationData.assets[i].layers);\r\n\t\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    function completeData(animationData, fontManager){\r\n\t        if(animationData.__complete){\r\n\t            return;\r\n\t        }\r\n\t        checkColors(animationData);\r\n\t        checkText(animationData);\r\n\t        checkChars(animationData);\r\n\t        checkShapes(animationData);\r\n\t        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n\t        animationData.__complete = true;\r\n\t        //blitAnimation(animationData, animationData.assets, fontManager);\r\n\t    }\r\n\t\r\n\t    function completeText(data, fontManager){\r\n\t        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n\t            data.singleShape = true;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    var moduleOb = {};\r\n\t    moduleOb.completeData = completeData;\r\n\t\r\n\t    return moduleOb;\r\n\t}\r\n\t\r\n\tvar dataManager = dataFunctionManager();\n\tvar FontManager = (function(){\r\n\t\r\n\t    var maxWaitingTime = 5000;\r\n\t    var emptyChar = {\r\n\t        w: 0,\r\n\t        size:0,\r\n\t        shapes:[]\r\n\t    };\r\n\t    var combinedCharacters = [];\r\n\t    //Hindi characters\r\n\t    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n\t    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n\t    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\t\r\n\t    function setUpNode(font, family){\r\n\t        var parentNode = createTag('span');\r\n\t        parentNode.style.fontFamily    = family;\r\n\t        var node = createTag('span');\r\n\t        // Characters that vary significantly among different fonts\r\n\t        node.innerHTML = 'giItT1WQy@!-/#';\r\n\t        // Visible - so we can measure it - but not on the screen\r\n\t        parentNode.style.position      = 'absolute';\r\n\t        parentNode.style.left          = '-10000px';\r\n\t        parentNode.style.top           = '-10000px';\r\n\t        // Large font size makes even subtle changes obvious\r\n\t        parentNode.style.fontSize      = '300px';\r\n\t        // Reset any font properties\r\n\t        parentNode.style.fontVariant   = 'normal';\r\n\t        parentNode.style.fontStyle     = 'normal';\r\n\t        parentNode.style.fontWeight    = 'normal';\r\n\t        parentNode.style.letterSpacing = '0';\r\n\t        parentNode.appendChild(node);\r\n\t        document.body.appendChild(parentNode);\r\n\t\r\n\t        // Remember width with no applied web font\r\n\t        var width = node.offsetWidth;\r\n\t        node.style.fontFamily = font + ', '+family;\r\n\t        return {node:node, w:width, parent:parentNode};\r\n\t    }\r\n\t\r\n\t    function checkLoadedFonts() {\r\n\t        var i, len = this.fonts.length;\r\n\t        var node, w;\r\n\t        var loadedCount = len;\r\n\t        for(i=0;i<len; i+= 1){\r\n\t            if(this.fonts[i].loaded){\r\n\t                loadedCount -= 1;\r\n\t                continue;\r\n\t            }\r\n\t            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n\t                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n\t                    this.typekitLoaded = 1;\r\n\t                    try{window.Typekit.load({\r\n\t                        async: true,\r\n\t                        active: function() {\r\n\t                            this.typekitLoaded = 2;\r\n\t                        }.bind(this)\r\n\t                    });}catch(e){}\r\n\t                }\r\n\t                if(this.typekitLoaded === 2) {\r\n\t                    this.fonts[i].loaded = true;\r\n\t                }\r\n\t            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n\t                this.fonts[i].loaded = true;\r\n\t            } else{\r\n\t                node = this.fonts[i].monoCase.node;\r\n\t                w = this.fonts[i].monoCase.w;\r\n\t                if(node.offsetWidth !== w){\r\n\t                    loadedCount -= 1;\r\n\t                    this.fonts[i].loaded = true;\r\n\t                }else{\r\n\t                    node = this.fonts[i].sansCase.node;\r\n\t                    w = this.fonts[i].sansCase.w;\r\n\t                    if(node.offsetWidth !== w){\r\n\t                        loadedCount -= 1;\r\n\t                        this.fonts[i].loaded = true;\r\n\t                    }\r\n\t                }\r\n\t                if(this.fonts[i].loaded){\r\n\t                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n\t                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n\t            setTimeout(checkLoadedFonts.bind(this),20);\r\n\t        }else{\r\n\t            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\t\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function createHelper(def, fontData){\r\n\t        var tHelper = createNS('text');\r\n\t        tHelper.style.fontSize = '100px';\r\n\t        //tHelper.style.fontFamily = fontData.fFamily;\r\n\t        tHelper.setAttribute('font-family', fontData.fFamily);\r\n\t        tHelper.setAttribute('font-style', fontData.fStyle);\r\n\t        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n\t        tHelper.textContent = '1';\r\n\t        if(fontData.fClass){\r\n\t            tHelper.style.fontFamily = 'inherit';\r\n\t            tHelper.className = fontData.fClass;\r\n\t        } else {\r\n\t            tHelper.style.fontFamily = fontData.fFamily;\r\n\t        }\r\n\t        def.appendChild(tHelper);\r\n\t        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\t        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n\t        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n\t        return tHelper;\r\n\t    }\r\n\t\r\n\t    function addFonts(fontData, defs){\r\n\t        if(!fontData){\r\n\t            this.loaded = true;\r\n\t            return;\r\n\t        }\r\n\t        if(this.chars){\r\n\t            this.loaded = true;\r\n\t            this.fonts = fontData.list;\r\n\t            return;\r\n\t        }\r\n\t\r\n\t\r\n\t        var fontArr = fontData.list;\r\n\t        var i, len = fontArr.length;\r\n\t        for(i=0; i<len; i+= 1){\r\n\t            fontArr[i].loaded = false;\r\n\t            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n\t            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n\t            if(!fontArr[i].fPath) {\r\n\t                fontArr[i].loaded = true;\r\n\t            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n\t                var s = createTag('style');\r\n\t                s.type = \"text/css\";\r\n\t                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n\t                defs.appendChild(s);\r\n\t            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n\t                var l = createTag('link');\r\n\t                l.type = \"text/css\";\r\n\t                l.rel = \"stylesheet\";\r\n\t                l.href = fontArr[i].fPath;\r\n\t                document.body.appendChild(l);\r\n\t            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n\t                var sc = createTag('script');\r\n\t                sc.setAttribute('src',fontArr[i].fPath);\r\n\t                defs.appendChild(sc);\r\n\t            }\r\n\t            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n\t            fontArr[i].cache = {};\r\n\t            this.fonts.push(fontArr[i]);\r\n\t        }\r\n\t        //On some cases the font even if it is loaded, it won't load correctly when measuring text on canvas.\r\n\t        //Adding this timeout seems to fix it\r\n\t       setTimeout(function() {\r\n\t            checkLoadedFonts.bind(this)();\r\n\t        }.bind(this), 100);\r\n\t    }\r\n\t\r\n\t    function addChars(chars){\r\n\t        if(!chars){\r\n\t            return;\r\n\t        }\r\n\t        if(!this.chars){\r\n\t            this.chars = [];\r\n\t        }\r\n\t        var i, len = chars.length;\r\n\t        var j, jLen = this.chars.length, found;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            j = 0;\r\n\t            found = false;\r\n\t            while(j<jLen){\r\n\t                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n\t                    found = true;\r\n\t                }\r\n\t                j += 1;\r\n\t            }\r\n\t            if(!found){\r\n\t                this.chars.push(chars[i]);\r\n\t                jLen += 1;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getCharData(char, style, font){\r\n\t        var i = 0, len = this.chars.length;\r\n\t        while( i < len) {\r\n\t            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n\t                return this.chars[i];\r\n\t            }\r\n\t            i+= 1;\r\n\t        }\r\n\t        if(console && console.warn) {\r\n\t            console.warn('Missing character from exported characters list: ', char, style, font);\r\n\t        }\r\n\t        return emptyChar;\r\n\t    }\r\n\t\r\n\t    function measureText(char, fontName, size) {\r\n\t        var fontData = this.getFontByName(fontName);\r\n\t        var index = char.charCodeAt(0);\r\n\t        if(!fontData.cache[index + 1]) {\r\n\t            var tHelper = fontData.helper;\r\n\t            //Canvas version\r\n\t            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n\t            //SVG version\r\n\t            //console.log(tHelper.getBBox().width)\r\n\t            /*tHelper.textContent = '|' + char + '|';\r\n\t            var doubleSize = tHelper.getComputedTextLength();\r\n\t            tHelper.textContent = '||';\r\n\t            var singleSize = tHelper.getComputedTextLength();\r\n\t            fontData.cache[index + 1] = (doubleSize - singleSize)/100;*/\r\n\t           \r\n\t            tHelper.textContent = char;\r\n\t            fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n\t        }\r\n\t        return fontData.cache[index + 1] * size;\r\n\t    }\r\n\t\r\n\t    function getFontByName(name){\r\n\t        var i = 0, len = this.fonts.length;\r\n\t        while(i<len){\r\n\t            if(this.fonts[i].fName === name) {\r\n\t                return this.fonts[i];\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        return this.fonts[0];\r\n\t    }\r\n\t\r\n\t    function getCombinedCharacterCodes() {\r\n\t        return combinedCharacters;\r\n\t    }\r\n\t\r\n\t    var Font = function(){\r\n\t        this.fonts = [];\r\n\t        this.chars = null;\r\n\t        this.typekitLoaded = 0;\r\n\t        this.loaded = false;\r\n\t        this.initTime = Date.now();\r\n\t    };\r\n\t    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n\t    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\t\r\n\t    Font.prototype.addChars = addChars;\r\n\t    Font.prototype.addFonts = addFonts;\r\n\t    Font.prototype.getCharData = getCharData;\r\n\t    Font.prototype.getFontByName = getFontByName;\r\n\t    Font.prototype.measureText = measureText;\r\n\t\r\n\t    return Font;\r\n\t\r\n\t}());\n\tvar PropertyFactory = (function(){\r\n\t\r\n\t    var initFrame = initialDefaultFrame;\r\n\t    var math_abs = Math.abs;\r\n\t\r\n\t    function interpolateValue(frameNum, caching){\r\n\t        var offsetTime = this.offsetTime;\r\n\t        var newValue;\r\n\t        if(this.propType === 'multidimensional') {\r\n\t            newValue = createTypedArray('float32', this.pv.length);\r\n\t        }\r\n\t        var iterationIndex = caching.lastIndex;\r\n\t        var i = iterationIndex;\r\n\t        var len = this.keyframes.length- 1,flag = true;\r\n\t        var keyData, nextKeyData;\r\n\t\r\n\t        while(flag){\r\n\t            keyData = this.keyframes[i];\r\n\t            nextKeyData = this.keyframes[i+1];\r\n\t            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n\t                if(keyData.h){\r\n\t                    keyData = nextKeyData;\r\n\t                }\r\n\t                iterationIndex = 0;\r\n\t                break;\r\n\t            }\r\n\t            if((nextKeyData.t - offsetTime) > frameNum){\r\n\t                iterationIndex = i;\r\n\t                break;\r\n\t            }\r\n\t            if(i < len - 1){\r\n\t                i += 1;\r\n\t            }else{\r\n\t                iterationIndex = 0;\r\n\t                flag = false;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        var k, kLen,perc,jLen, j, fnc;\r\n\t        if(keyData.to){\r\n\t\r\n\t            if(!keyData.bezierData){\r\n\t                bez.buildBezierData(keyData);\r\n\t            }\r\n\t            var bezierData = keyData.bezierData;\r\n\t            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n\t                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n\t                kLen = bezierData.points[ind].point.length;\r\n\t                for(k = 0; k < kLen; k += 1){\r\n\t                    newValue[k] = bezierData.points[ind].point[k];\r\n\t                }\r\n\t                caching._lastBezierData = null;\r\n\t            }else{\r\n\t                if(keyData.__fnct){\r\n\t                    fnc = keyData.__fnct;\r\n\t                }else{\r\n\t                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n\t                    keyData.__fnct = fnc;\r\n\t                }\r\n\t                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n\t                var distanceInLine = bezierData.segmentLength*perc;\r\n\t\r\n\t                var segmentPerc;\r\n\t                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n\t                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n\t                flag = true;\r\n\t                jLen = bezierData.points.length;\r\n\t                while(flag){\r\n\t                    addedLength +=bezierData.points[j].partialLength;\r\n\t                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n\t                        kLen = bezierData.points[j].point.length;\r\n\t                        for(k=0;k<kLen;k+=1){\r\n\t                            newValue[k] = bezierData.points[j].point[k];\r\n\t                        }\r\n\t                        break;\r\n\t                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n\t                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n\t                        kLen = bezierData.points[j].point.length;\r\n\t                        for(k=0;k<kLen;k+=1){\r\n\t                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n\t                        }\r\n\t                        break;\r\n\t                    }\r\n\t                    if(j < jLen - 1){\r\n\t                        j += 1;\r\n\t                    }else{\r\n\t                        flag = false;\r\n\t                    }\r\n\t                }\r\n\t                caching._lastPoint = j;\r\n\t                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n\t                caching._lastBezierData = bezierData;\r\n\t            }\r\n\t        }else{\r\n\t            var outX,outY,inX,inY, keyValue;\r\n\t            len = keyData.s.length;\r\n\t            if(this.sh && keyData.h !== 1) {\r\n\t                if(frameNum >= nextKeyData.t-offsetTime){\r\n\t                    newValue[0] = keyData.e[0];\r\n\t                    newValue[1] = keyData.e[1];\r\n\t                    newValue[2] = keyData.e[2];\r\n\t                }else if(frameNum <= keyData.t-offsetTime){\r\n\t                    newValue[0] = keyData.s[0];\r\n\t                    newValue[1] = keyData.s[1];\r\n\t                    newValue[2] = keyData.s[2];\r\n\t                }else{\r\n\t                    var quatStart = createQuaternion(keyData.s);\r\n\t                    var quatEnd = createQuaternion(keyData.e);\r\n\t                    var time = (frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime));\r\n\t                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n\t                }\r\n\t                \r\n\t            } else {\r\n\t                for(i=0;i<len;i+=1){\r\n\t                    if(keyData.h !== 1){\r\n\t                        if(frameNum >= nextKeyData.t-offsetTime){\r\n\t                            perc = 1;\r\n\t                        }else if(frameNum < keyData.t-offsetTime){\r\n\t                            perc = 0;\r\n\t                        }else{\r\n\t                            if(keyData.o.x.constructor === Array){\r\n\t                                if(!keyData.__fnct){\r\n\t                                    keyData.__fnct = [];\r\n\t                                }\r\n\t                                if (!keyData.__fnct[i]) {\r\n\t                                    outX = keyData.o.x[i] || keyData.o.x[0];\r\n\t                                    outY = keyData.o.y[i] || keyData.o.y[0];\r\n\t                                    inX = keyData.i.x[i] || keyData.i.x[0];\r\n\t                                    inY = keyData.i.y[i] || keyData.i.y[0];\r\n\t                                    fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n\t                                    keyData.__fnct[i] = fnc;\r\n\t                                } else {\r\n\t                                    fnc = keyData.__fnct[i];\r\n\t                                }\r\n\t                            } else {\r\n\t                                if (!keyData.__fnct) {\r\n\t                                    outX = keyData.o.x;\r\n\t                                    outY = keyData.o.y;\r\n\t                                    inX = keyData.i.x;\r\n\t                                    inY = keyData.i.y;\r\n\t                                    fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n\t                                    keyData.__fnct = fnc;\r\n\t                                } else{\r\n\t                                    fnc = keyData.__fnct;\r\n\t                                }\r\n\t                            }\r\n\t                            perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n\t\r\n\t                    if(len === 1){\r\n\t                        newValue = keyValue;\r\n\t                    }else{\r\n\t                        newValue[i] = keyValue;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        caching.lastIndex = iterationIndex;\r\n\t        return newValue;\r\n\t    }\r\n\t\r\n\t    //based on @Toji's https://github.com/toji/gl-matrix/\r\n\t    function slerp(a, b, t) {\r\n\t        var out = [];\r\n\t        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n\t        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\t\r\n\t        var omega, cosom, sinom, scale0, scale1;\r\n\t\r\n\t        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n\t        if (cosom < 0.0) {\r\n\t            cosom = -cosom;\r\n\t            bx = -bx;\r\n\t            by = -by;\r\n\t            bz = -bz;\r\n\t            bw = -bw;\r\n\t        }\r\n\t        if ((1.0 - cosom) > 0.000001) {\r\n\t            omega = Math.acos(cosom);\r\n\t            sinom = Math.sin(omega);\r\n\t            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n\t            scale1 = Math.sin(t * omega) / sinom;\r\n\t        } else {\r\n\t            scale0 = 1.0 - t;\r\n\t            scale1 = t;\r\n\t        }\r\n\t        out[0] = scale0 * ax + scale1 * bx;\r\n\t        out[1] = scale0 * ay + scale1 * by;\r\n\t        out[2] = scale0 * az + scale1 * bz;\r\n\t        out[3] = scale0 * aw + scale1 * bw;\r\n\t\r\n\t        return out;\r\n\t    }\r\n\t\r\n\t    function quaternionToEuler(out, quat) {\r\n\t        var qx = quat[0];\r\n\t        var qy = quat[1];\r\n\t        var qz = quat[2];\r\n\t        var qw = quat[3];\r\n\t        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n\t        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n\t        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n\t        out[0] = heading/degToRads;\r\n\t        out[1] = attitude/degToRads;\r\n\t        out[2] = bank/degToRads;\r\n\t    }\r\n\t\r\n\t    function createQuaternion(values) {\r\n\t        var heading = values[0] * degToRads;\r\n\t        var attitude = values[1] * degToRads;\r\n\t        var bank = values[2] * degToRads;\r\n\t        var c1 = Math.cos(heading / 2);\r\n\t        var c2 = Math.cos(attitude / 2);\r\n\t        var c3 = Math.cos(bank / 2);\r\n\t        var s1 = Math.sin(heading / 2);\r\n\t        var s2 = Math.sin(attitude / 2);\r\n\t        var s3 = Math.sin(bank / 2);\r\n\t        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n\t        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\r\n\t        return [x,y,z,w];\r\n\t    }\r\n\t\r\n\t    function getValueAtCurrentTime(){\r\n\t        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n\t        var initTime = this.keyframes[0].t - this.offsetTime;\r\n\t        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n\t        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n\t            this._caching.lastIndex = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n\t            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n\t            this.pv = renderResult;\r\n\t        }\r\n\t        this._caching.lastFrame = frameNum;\r\n\t        return this.pv;\r\n\t    }\r\n\t\r\n\t    function setVValue(val) {\r\n\t        var multipliedValue;\r\n\t        if(this.propType === 'unidimensional') {\r\n\t            multipliedValue = val * this.mult;\r\n\t            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n\t                this.v = multipliedValue;\r\n\t                this._mdf = true;\r\n\t            }\r\n\t        } else {\r\n\t            var i = 0, len = this.v.length;\r\n\t            while (i < len) {\r\n\t                multipliedValue = val[i] * this.mult;\r\n\t                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n\t                    this.v[i] = multipliedValue;\r\n\t                    this._mdf = true;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function processEffectsSequence() {\r\n\t        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n\t            return;\r\n\t        }        \r\n\t        if(this.lock) {\r\n\t            this.setVValue(this.pv);\r\n\t            return;\r\n\t        }\r\n\t        this.lock = true;\r\n\t        this._mdf = this._isFirstFrame;\r\n\t        var multipliedValue;\r\n\t        var i, len = this.effectsSequence.length;\r\n\t        var finalValue = this.kf ? this.pv : this.data.k;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            finalValue = this.effectsSequence[i](finalValue);\r\n\t        }\r\n\t        this.setVValue(finalValue);\r\n\t        this._isFirstFrame = false;\r\n\t        this.lock = false;\r\n\t        this.frameId = this.elem.globalData.frameId;\r\n\t    }\r\n\t\r\n\t    function addEffect(effectFunction) {\r\n\t        this.effectsSequence.push(effectFunction);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    }\r\n\t\r\n\t    function ValueProperty(elem, data, mult, container){\r\n\t        this.propType = 'unidimensional';\r\n\t        this.mult = mult || 1;\r\n\t        this.data = data;\r\n\t        this.v = mult ? data.k * mult : data.k;\r\n\t        this.pv = data.k;\r\n\t        this._mdf = false;\r\n\t        this.elem = elem;\r\n\t        this.container = container;\r\n\t        this.comp = elem.comp;\r\n\t        this.k = false;\r\n\t        this.kf = false;\r\n\t        this.vel = 0;\r\n\t        this.effectsSequence = [];\r\n\t        this._isFirstFrame = true;\r\n\t        this.getValue = processEffectsSequence;\r\n\t        this.setVValue = setVValue;\r\n\t        this.addEffect = addEffect;\r\n\t    }\r\n\t\r\n\t    function MultiDimensionalProperty(elem, data, mult, container) {\r\n\t        this.propType = 'multidimensional';\r\n\t        this.mult = mult || 1;\r\n\t        this.data = data;\r\n\t        this._mdf = false;\r\n\t        this.elem = elem;\r\n\t        this.container = container;\r\n\t        this.comp = elem.comp;\r\n\t        this.k = false;\r\n\t        this.kf = false;\r\n\t        this.frameId = -1;\r\n\t        var i, len = data.k.length;\r\n\t        this.v = createTypedArray('float32', len);\r\n\t        this.pv = createTypedArray('float32', len);\r\n\t        var arr = createTypedArray('float32', len);\r\n\t        this.vel = createTypedArray('float32', len);\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            this.v[i] = data.k[i] * this.mult;\r\n\t            this.pv[i] = data.k[i];\r\n\t        }\r\n\t        this._isFirstFrame = true;\r\n\t        this.effectsSequence = [];\r\n\t        this.getValue = processEffectsSequence;\r\n\t        this.setVValue = setVValue;\r\n\t        this.addEffect = addEffect;\r\n\t    }\r\n\t\r\n\t    function KeyframedValueProperty(elem, data, mult, container) {\r\n\t        this.propType = 'unidimensional';\r\n\t        this.keyframes = data.k;\r\n\t        this.offsetTime = elem.data.st;\r\n\t        this.frameId = -1;\r\n\t        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0};\r\n\t        this.k = true;\r\n\t        this.kf = true;\r\n\t        this.data = data;\r\n\t        this.mult = mult || 1;\r\n\t        this.elem = elem;\r\n\t        this.container = container;\r\n\t        this.comp = elem.comp;\r\n\t        this.v = initFrame;\r\n\t        this.pv = initFrame;\r\n\t        this._isFirstFrame = true;\r\n\t        this.getValue = processEffectsSequence;\r\n\t        this.setVValue = setVValue;\r\n\t        this.interpolateValue = interpolateValue;\r\n\t        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n\t        this.addEffect = addEffect;\r\n\t    }\r\n\t\r\n\t    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n\t        this.propType = 'multidimensional';\r\n\t        var i, len = data.k.length;\r\n\t        var s, e,to,ti;\r\n\t        for (i = 0; i < len - 1; i += 1) {\r\n\t            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n\t                s = data.k[i].s;\r\n\t                e = data.k[i].e;\r\n\t                to = data.k[i].to;\r\n\t                ti = data.k[i].ti;\r\n\t                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n\t                    data.k[i].to = null;\r\n\t                    data.k[i].ti = null;\r\n\t                }\r\n\t                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n\t                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n\t                        data.k[i].to = null;\r\n\t                        data.k[i].ti = null;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n\t        this.keyframes = data.k;\r\n\t        this.offsetTime = elem.data.st;\r\n\t        this.k = true;\r\n\t        this.kf = true;\r\n\t        this._isFirstFrame = true;\r\n\t        this.mult = mult || 1;\r\n\t        this.elem = elem;\r\n\t        this.container = container;\r\n\t        this.comp = elem.comp;\r\n\t        this.getValue = processEffectsSequence;\r\n\t        this.setVValue = setVValue;\r\n\t        this.interpolateValue = interpolateValue;\r\n\t        this.frameId = -1;\r\n\t        var arrLen = data.k[0].s.length;\r\n\t        this.v = createTypedArray('float32', arrLen);\r\n\t        this.pv = createTypedArray('float32', arrLen);\r\n\t        for (i = 0; i < arrLen; i += 1) {\r\n\t            this.v[i] = initFrame;\r\n\t            this.pv[i] = initFrame;\r\n\t        }\r\n\t        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n\t        this.addEffect = addEffect;\r\n\t    }\r\n\t\r\n\t    function getProp(elem,data,type, mult, container) {\r\n\t        var p;\r\n\t        if(data.a === 0){\r\n\t            if(type === 0) {\r\n\t                p = new ValueProperty(elem,data,mult, container);\r\n\t            } else {\r\n\t                p = new MultiDimensionalProperty(elem,data, mult, container);\r\n\t            }\r\n\t        } else if(data.a === 1){\r\n\t            if(type === 0) {\r\n\t                p = new KeyframedValueProperty(elem,data,mult, container);\r\n\t            } else {\r\n\t                p = new KeyframedMultidimensionalProperty(elem,data, mult, container);\r\n\t            }\r\n\t        } else if(!data.k.length){\r\n\t            p = new ValueProperty(elem,data, mult, container);\r\n\t        }else if(typeof(data.k[0]) === 'number'){\r\n\t            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n\t        }else{\r\n\t            switch(type){\r\n\t                case 0:\r\n\t                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n\t                    break;\r\n\t                case 1:\r\n\t                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        if(p.effectsSequence.length){\r\n\t            container.addDynamicProperty(p);\r\n\t        }\r\n\t        return p;\r\n\t    }\r\n\t\r\n\t    var ob = {\r\n\t        getProp: getProp\r\n\t    };\r\n\t    return ob;\r\n\t}());\n\tvar TransformPropertyFactory = (function() {\r\n\t\r\n\t    function applyToMatrix(mat) {\r\n\t        var _mdf = this._mdf;\r\n\t        this.iterateDynamicProperties();\r\n\t        this._mdf = this._mdf || _mdf;\r\n\t        if (this.a) {\r\n\t            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n\t        }\r\n\t        if (this.s) {\r\n\t            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n\t        }\r\n\t        if (this.sk) {\r\n\t            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n\t        }\r\n\t        if (this.r) {\r\n\t            mat.rotate(-this.r.v);\r\n\t        } else {\r\n\t            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n\t        }\r\n\t        if (this.data.p.s) {\r\n\t            if (this.data.p.z) {\r\n\t                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n\t            } else {\r\n\t                mat.translate(this.px.v, this.py.v, 0);\r\n\t            }\r\n\t        } else {\r\n\t            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n\t        }\r\n\t    }\r\n\t    function processKeys(forceRender){\r\n\t        if (this.elem.globalData.frameId === this.frameId) {\r\n\t            return;\r\n\t        }\r\n\t        if(this._isDirty) {\r\n\t            this.precalculateMatrix();\r\n\t            this._isDirty = false;\r\n\t        }\r\n\t\r\n\t        this.iterateDynamicProperties();\r\n\t\r\n\t        if (this._mdf || forceRender) {\r\n\t            this.v.cloneFromProps(this.pre.props);\r\n\t            if (this.appliedTransformations < 1) {\r\n\t                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n\t            }\r\n\t            if(this.appliedTransformations < 2) {\r\n\t                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n\t            }\r\n\t            if (this.sk && this.appliedTransformations < 3) {\r\n\t                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n\t            }\r\n\t            if (this.r && this.appliedTransformations < 4) {\r\n\t                this.v.rotate(-this.r.v);\r\n\t            } else if (!this.r && this.appliedTransformations < 4){\r\n\t                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n\t            }\r\n\t            if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n\t                var v1,v2;\r\n\t                if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n\t                    v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n\t                    v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n\t                } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n\t                    v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n\t                    v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n\t                } else {\r\n\t                    v1 = this.p.pv;\r\n\t                    v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n\t                }\r\n\t                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n\t            }\r\n\t            if(this.data.p.s){\r\n\t                if(this.data.p.z) {\r\n\t                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n\t                } else {\r\n\t                    this.v.translate(this.px.v, this.py.v, 0);\r\n\t                }\r\n\t            }else{\r\n\t                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n\t            }\r\n\t        }\r\n\t        this.frameId = this.elem.globalData.frameId;\r\n\t    }\r\n\t\r\n\t    function precalculateMatrix() {\r\n\t        if(!this.a.k) {\r\n\t            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n\t            this.appliedTransformations = 1;\r\n\t        } else {\r\n\t            return;\r\n\t        }\r\n\t        if(!this.s.effectsSequence.length) {\r\n\t            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n\t            this.appliedTransformations = 2;\r\n\t        } else {\r\n\t            return;\r\n\t        }\r\n\t        if(this.sk) {\r\n\t            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n\t                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n\t            this.appliedTransformations = 3;\r\n\t            } else {\r\n\t                return;\r\n\t            }\r\n\t        }\r\n\t        if (this.r) {\r\n\t            if(!this.r.effectsSequence.length) {\r\n\t                this.pre.rotate(-this.r.v);\r\n\t                this.appliedTransformations = 4;\r\n\t            } else {\r\n\t                return;\r\n\t            }\r\n\t        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n\t            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n\t            this.appliedTransformations = 4;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function autoOrient(){\r\n\t        //\r\n\t        //var prevP = this.getValueAtTime();\r\n\t    }\r\n\t\r\n\t    function addDynamicProperty(prop) {\r\n\t        this._addDynamicProperty(prop);\r\n\t        this.elem.addDynamicProperty(prop);\r\n\t        this._isDirty = true;\r\n\t    }\r\n\t\r\n\t    function TransformProperty(elem,data,container){\r\n\t        this.elem = elem;\r\n\t        this.frameId = -1;\r\n\t        this.propType = 'transform';\r\n\t        this.data = data;\r\n\t        this.v = new Matrix();\r\n\t        //Precalculated matrix with non animated properties\r\n\t        this.pre = new Matrix();\r\n\t        this.appliedTransformations = 0;\r\n\t        this.initDynamicPropertyContainer(container || elem);\r\n\t        if(data.p.s){\r\n\t            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n\t            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n\t            if(data.p.z){\r\n\t                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n\t            }\r\n\t        }else{\r\n\t            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n\t        }\r\n\t        if(data.r) {\r\n\t            this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\r\n\t        } else if(data.rx) {\r\n\t            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n\t            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n\t            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n\t            if(data.or.k[0].ti) {\r\n\t                var i, len = data.or.k.length;\r\n\t                for(i=0;i<len;i+=1) {\r\n\t                    data.or.k[i].to = data.or.k[i].ti = null;\r\n\t                }\r\n\t            }\r\n\t            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n\t            //sh Indicates it needs to be capped between -180 and 180\r\n\t            this.or.sh = true;\r\n\t        }\r\n\t        if(data.sk){\r\n\t            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n\t            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n\t        }\r\n\t        if(data.a) {\r\n\t            this.a = PropertyFactory.getProp(elem,data.a,1,0,this);\r\n\t        }\r\n\t        if(data.s) {\r\n\t            this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this);\r\n\t        }\r\n\t        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n\t        if(data.o){\r\n\t            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n\t        } else {\r\n\t            this.o = {_mdf:false,v:1};\r\n\t        }\r\n\t        this._isDirty = true;\r\n\t        if(!this.dynamicProperties.length){\r\n\t            this.getValue(true);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    TransformProperty.prototype = {\r\n\t        applyToMatrix: applyToMatrix,\r\n\t        getValue: processKeys,\r\n\t        precalculateMatrix: precalculateMatrix,\r\n\t        autoOrient: autoOrient\r\n\t    }\r\n\t\r\n\t    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n\t    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n\t    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\t\r\n\t    function getTransformProperty(elem,data,container){\r\n\t        return new TransformProperty(elem,data,container);\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        getTransformProperty: getTransformProperty\r\n\t    };\r\n\t\r\n\t}());\n\tfunction ShapePath(){\r\n\t\tthis.c = false;\r\n\t\tthis._length = 0;\r\n\t\tthis._maxLength = 8;\r\n\t\tthis.v = createSizedArray(this._maxLength);\r\n\t\tthis.o = createSizedArray(this._maxLength);\r\n\t\tthis.i = createSizedArray(this._maxLength);\r\n\t}\r\n\t\r\n\tShapePath.prototype.setPathData = function(closed, len) {\r\n\t\tthis.c = closed;\r\n\t\tthis.setLength(len);\r\n\t\tvar i = 0;\r\n\t\twhile(i < len){\r\n\t\t\tthis.v[i] = point_pool.newElement();\r\n\t\t\tthis.o[i] = point_pool.newElement();\r\n\t\t\tthis.i[i] = point_pool.newElement();\r\n\t\t\ti += 1;\r\n\t\t}\r\n\t};\r\n\t\r\n\tShapePath.prototype.setLength = function(len) {\r\n\t\twhile(this._maxLength < len) {\r\n\t\t\tthis.doubleArrayLength();\r\n\t\t}\r\n\t\tthis._length = len;\r\n\t};\r\n\t\r\n\tShapePath.prototype.doubleArrayLength = function() {\r\n\t\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\t\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\t\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t};\r\n\t\r\n\tShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\t\tvar arr;\r\n\t\tthis._length = Math.max(this._length, pos + 1);\r\n\t\tif(this._length >= this._maxLength) {\r\n\t\t\tthis.doubleArrayLength();\r\n\t\t}\r\n\t\tswitch(type){\r\n\t\t\tcase 'v':\r\n\t\t\t\tarr = this.v;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'i':\r\n\t\t\t\tarr = this.i;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'o':\r\n\t\t\t\tarr = this.o;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\t\tarr[pos] = point_pool.newElement();\r\n\t\t}\r\n\t\tarr[pos][0] = x;\r\n\t\tarr[pos][1] = y;\r\n\t};\r\n\t\r\n\tShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\t\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\t\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\t\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n\t};\r\n\t\r\n\tShapePath.prototype.reverse = function() {\r\n\t\tvar newPath = new ShapePath();\r\n\t\tnewPath.setPathData(this.c, this._length);\r\n\t\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\t\tvar init = 0;\r\n\t\tif (this.c) {\r\n\t\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n\t        init = 1;\r\n\t    }\r\n\t    var cnt = this._length - 1;\r\n\t    var len = this._length;\r\n\t\r\n\t    var i;\r\n\t    for (i = init; i < len; i += 1) {\r\n\t    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n\t        cnt -= 1;\r\n\t    }\r\n\t    return newPath;\r\n\t};\n\tvar ShapePropertyFactory = (function(){\r\n\t\r\n\t    var initFrame = -999999;\r\n\t\r\n\t    function interpolateShape(frameNum, previousValue, caching) {\r\n\t        var iterationIndex = caching.lastIndex;\r\n\t        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n\t        var kf = this.keyframes;\r\n\t        if(frameNum < kf[0].t-this.offsetTime){\r\n\t            keyPropS = kf[0].s[0];\r\n\t            isHold = true;\r\n\t            iterationIndex = 0;\r\n\t        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n\t            if(kf[kf.length - 2].h === 1){\r\n\t                keyPropS = kf[kf.length - 1].s[0];\r\n\t            }else{\r\n\t                keyPropS = kf[kf.length - 2].e[0];\r\n\t            }\r\n\t            isHold = true;\r\n\t        }else{\r\n\t            var i = iterationIndex;\r\n\t            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n\t            while(flag){\r\n\t                keyData = kf[i];\r\n\t                nextKeyData = kf[i+1];\r\n\t                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n\t                    break;\r\n\t                }\r\n\t                if(i < len - 1){\r\n\t                    i += 1;\r\n\t                }else{\r\n\t                    flag = false;\r\n\t                }\r\n\t            }\r\n\t            isHold = keyData.h === 1;\r\n\t            iterationIndex = i;\r\n\t            if(!isHold){\r\n\t                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n\t                    perc = 1;\r\n\t                }else if(frameNum < keyData.t-this.offsetTime){\r\n\t                    perc = 0;\r\n\t                }else{\r\n\t                    var fnc;\r\n\t                    if(keyData.__fnct){\r\n\t                        fnc = keyData.__fnct;\r\n\t                    }else{\r\n\t                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n\t                        keyData.__fnct = fnc;\r\n\t                    }\r\n\t                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n\t                }\r\n\t                keyPropE = keyData.e[0];\r\n\t            }\r\n\t            keyPropS = keyData.s[0];\r\n\t        }\r\n\t        jLen = previousValue._length;\r\n\t        kLen = keyPropS.i[0].length;\r\n\t        caching.lastIndex = iterationIndex;\r\n\t\r\n\t        for(j=0;j<jLen;j+=1){\r\n\t            for(k=0;k<kLen;k+=1){\r\n\t                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n\t                previousValue.i[j][k] = vertexValue;\r\n\t                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n\t                previousValue.o[j][k] = vertexValue;\r\n\t                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n\t                previousValue.v[j][k] = vertexValue;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function interpolateShapeCurrentTime(){\r\n\t        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n\t        var initTime = this.keyframes[0].t - this.offsetTime;\r\n\t        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n\t        var lastFrame = this._caching.lastFrame;\r\n\t        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n\t            ////\r\n\t            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n\t            this.interpolateShape(frameNum, this.pv, this._caching);\r\n\t            ////\r\n\t        }\r\n\t        this._caching.lastFrame = frameNum;\r\n\t        return this.pv;\r\n\t    }\r\n\t\r\n\t    function resetShape(){\r\n\t        this.paths = this.localShapeCollection;\r\n\t    }\r\n\t\r\n\t    function shapesEqual(shape1, shape2) {\r\n\t        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n\t            return false;\r\n\t        }\r\n\t        var i, len = shape1._length;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            if(shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]){\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    }\r\n\t\r\n\t    function processEffectsSequence() {\r\n\t        if(this.lock || this.elem.globalData.frameId === this.frameId) {\r\n\t            return;\r\n\t        }\r\n\t        this.lock = true;\r\n\t        this.frameId = this.elem.globalData.frameId;\r\n\t        this._mdf = false;\r\n\t        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n\t        var i, len = this.effectsSequence.length;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            finalValue = this.effectsSequence[i](finalValue);\r\n\t        }\r\n\t        if(!shapesEqual(this.v, finalValue)) {\r\n\t            this.v = shape_pool.clone(finalValue);\r\n\t            this.localShapeCollection.releaseShapes();\r\n\t            this.localShapeCollection.addShape(this.v);\r\n\t            this._mdf = true;\r\n\t            this.paths = this.localShapeCollection;\r\n\t        }\r\n\t        this.lock = false;\r\n\t    };\r\n\t\r\n\t    function ShapeProperty(elem, data, type){\r\n\t        this.propType = 'shape';\r\n\t        this.comp = elem.comp;\r\n\t        this.container = elem;\r\n\t        this.elem = elem;\r\n\t        this.data = data;\r\n\t        this.k = false;\r\n\t        this.kf = false;\r\n\t        this._mdf = false;\r\n\t        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n\t        this.v = shape_pool.clone(pathData);\r\n\t        this.pv = shape_pool.clone(this.v);\r\n\t        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n\t        this.paths = this.localShapeCollection;\r\n\t        this.paths.addShape(this.v);\r\n\t        this.reset = resetShape;\r\n\t        this.effectsSequence = [];\r\n\t    }\r\n\t\r\n\t    function addEffect(effectFunction) {\r\n\t        this.effectsSequence.push(effectFunction);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    }\r\n\t\r\n\t    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\t    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n\t    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n\t    ShapeProperty.prototype.addEffect = addEffect;\r\n\t\r\n\t    function KeyframedShapeProperty(elem,data,type){\r\n\t        this.propType = 'shape';\r\n\t        this.comp = elem.comp;\r\n\t        this.elem = elem;\r\n\t        this.container = elem;\r\n\t        this.offsetTime = elem.data.st;\r\n\t        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n\t        this.k = true;\r\n\t        this.kf = true;\r\n\t        var i, len = this.keyframes[0].s[0].i.length;\r\n\t        var jLen = this.keyframes[0].s[0].i[0].length;\r\n\t        this.v = shape_pool.newElement();\r\n\t        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n\t        this.pv = shape_pool.clone(this.v);\r\n\t        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n\t        this.paths = this.localShapeCollection;\r\n\t        this.paths.addShape(this.v);\r\n\t        this.lastFrame = initFrame;\r\n\t        this.reset = resetShape;\r\n\t        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n\t        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n\t    }\r\n\t    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n\t    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\t    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\t\r\n\t    var EllShapeProperty = (function(){\r\n\t\r\n\t        var cPoint = roundCorner;\r\n\t\r\n\t        function EllShapeProperty(elem,data) {\r\n\t            /*this.v = {\r\n\t                v: createSizedArray(4),\r\n\t                i: createSizedArray(4),\r\n\t                o: createSizedArray(4),\r\n\t                c: true\r\n\t            };*/\r\n\t            this.v = shape_pool.newElement();\r\n\t            this.v.setPathData(true, 4);\r\n\t            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n\t            this.paths = this.localShapeCollection;\r\n\t            this.localShapeCollection.addShape(this.v);\r\n\t            this.d = data.d;\r\n\t            this.elem = elem;\r\n\t            this.comp = elem.comp;\r\n\t            this.frameId = -1;\r\n\t            this.initDynamicPropertyContainer(elem);\r\n\t            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n\t            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n\t            if(this.dynamicProperties.length){\r\n\t                this.k = true;\r\n\t            }else{\r\n\t                this.k = false;\r\n\t                this.convertEllToPath();\r\n\t            }\r\n\t        };\r\n\t\r\n\t        EllShapeProperty.prototype = {\r\n\t            reset: resetShape,\r\n\t            getValue: function (){\r\n\t                if(this.elem.globalData.frameId === this.frameId){\r\n\t                    return;\r\n\t                }\r\n\t                this.frameId = this.elem.globalData.frameId;\r\n\t                this.iterateDynamicProperties();\r\n\t\r\n\t                if(this._mdf){\r\n\t                    this.convertEllToPath();\r\n\t                }\r\n\t            },\r\n\t            convertEllToPath: function() {\r\n\t                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n\t                var _cw = this.d !== 3;\r\n\t                var _v = this.v;\r\n\t                _v.v[0][0] = p0;\r\n\t                _v.v[0][1] = p1 - s1;\r\n\t                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n\t                _v.v[1][1] = p1;\r\n\t                _v.v[2][0] = p0;\r\n\t                _v.v[2][1] = p1 + s1;\r\n\t                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n\t                _v.v[3][1] = p1;\r\n\t                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n\t                _v.i[0][1] = p1 - s1;\r\n\t                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n\t                _v.i[1][1] = p1 - s1 * cPoint;\r\n\t                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n\t                _v.i[2][1] = p1 + s1;\r\n\t                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n\t                _v.i[3][1] = p1 + s1 * cPoint;\r\n\t                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n\t                _v.o[0][1] = p1 - s1;\r\n\t                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n\t                _v.o[1][1] = p1 + s1 * cPoint;\r\n\t                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n\t                _v.o[2][1] = p1 + s1;\r\n\t                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n\t                _v.o[3][1] = p1 - s1 * cPoint;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\t\r\n\t        return EllShapeProperty;\r\n\t    }());\r\n\t\r\n\t    var StarShapeProperty = (function() {\r\n\t\r\n\t        function StarShapeProperty(elem,data) {\r\n\t            this.v = shape_pool.newElement();\r\n\t            this.v.setPathData(true, 0);\r\n\t            this.elem = elem;\r\n\t            this.comp = elem.comp;\r\n\t            this.data = data;\r\n\t            this.frameId = -1;\r\n\t            this.d = data.d;\r\n\t            this.initDynamicPropertyContainer(elem);\r\n\t            if(data.sy === 1){\r\n\t                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n\t                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n\t                this.convertToPath = this.convertStarToPath;\r\n\t            } else {\r\n\t                this.convertToPath = this.convertPolygonToPath;\r\n\t            }\r\n\t            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n\t            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n\t            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n\t            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n\t            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n\t            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n\t            this.localShapeCollection.addShape(this.v);\r\n\t            this.paths = this.localShapeCollection;\r\n\t            if(this.dynamicProperties.length){\r\n\t                this.k = true;\r\n\t            }else{\r\n\t                this.k = false;\r\n\t                this.convertToPath();\r\n\t            }\r\n\t        };\r\n\t\r\n\t        StarShapeProperty.prototype = {\r\n\t            reset: resetShape,\r\n\t            getValue: function() {\r\n\t                if(this.elem.globalData.frameId === this.frameId){\r\n\t                    return;\r\n\t                }\r\n\t                this.frameId = this.elem.globalData.frameId;\r\n\t                this.iterateDynamicProperties();\r\n\t                if(this._mdf){\r\n\t                    this.convertToPath();\r\n\t                }\r\n\t            },\r\n\t            convertStarToPath: function() {\r\n\t                var numPts = Math.floor(this.pt.v)*2;\r\n\t                var angle = Math.PI*2/numPts;\r\n\t                /*this.v.v.length = numPts;\r\n\t                this.v.i.length = numPts;\r\n\t                this.v.o.length = numPts;*/\r\n\t                var longFlag = true;\r\n\t                var longRad = this.or.v;\r\n\t                var shortRad = this.ir.v;\r\n\t                var longRound = this.os.v;\r\n\t                var shortRound = this.is.v;\r\n\t                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n\t                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n\t                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n\t                currentAng += this.r.v;\r\n\t                var dir = this.data.d === 3 ? -1 : 1;\r\n\t                this.v._length = 0;\r\n\t                for(i=0;i<numPts;i+=1){\r\n\t                    rad = longFlag ? longRad : shortRad;\r\n\t                    roundness = longFlag ? longRound : shortRound;\r\n\t                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n\t                    var x = rad * Math.cos(currentAng);\r\n\t                    var y = rad * Math.sin(currentAng);\r\n\t                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n\t                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n\t                    x +=  + this.p.v[0];\r\n\t                    y +=  + this.p.v[1];\r\n\t                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\t\r\n\t                    /*this.v.v[i] = [x,y];\r\n\t                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n\t                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n\t                    this.v._length = numPts;*/\r\n\t                    longFlag = !longFlag;\r\n\t                    currentAng += angle*dir;\r\n\t                }\r\n\t            },\r\n\t            convertPolygonToPath: function() {\r\n\t                var numPts = Math.floor(this.pt.v);\r\n\t                var angle = Math.PI*2/numPts;\r\n\t                var rad = this.or.v;\r\n\t                var roundness = this.os.v;\r\n\t                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n\t                var i, currentAng = -Math.PI/ 2;\r\n\t                var dir = this.data.d === 3 ? -1 : 1;\r\n\t                currentAng += this.r.v;\r\n\t                this.v._length = 0;\r\n\t                for(i=0;i<numPts;i+=1){\r\n\t                    var x = rad * Math.cos(currentAng);\r\n\t                    var y = rad * Math.sin(currentAng);\r\n\t                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n\t                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n\t                    x +=  + this.p.v[0];\r\n\t                    y +=  + this.p.v[1];\r\n\t                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\t                    currentAng += angle*dir;\r\n\t                }\r\n\t                this.paths.length = 0;\r\n\t                this.paths[0] = this.v;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\t\r\n\t        return StarShapeProperty;\r\n\t    }());\r\n\t\r\n\t    var RectShapeProperty = (function() {\r\n\t\r\n\t         function RectShapeProperty(elem,data) {\r\n\t            this.v = shape_pool.newElement();\r\n\t            this.v.c = true;\r\n\t            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n\t            this.localShapeCollection.addShape(this.v);\r\n\t            this.paths = this.localShapeCollection;\r\n\t            this.elem = elem;\r\n\t            this.comp = elem.comp;\r\n\t            this.frameId = -1;\r\n\t            this.d = data.d;\r\n\t            this.initDynamicPropertyContainer(elem);\r\n\t            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n\t            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n\t            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n\t            if(this.dynamicProperties.length){\r\n\t                this.k = true;\r\n\t            }else{\r\n\t                this.k = false;\r\n\t                this.convertRectToPath();\r\n\t            }\r\n\t        };\r\n\t\r\n\t        RectShapeProperty.prototype = {\r\n\t            convertRectToPath: function (){\r\n\t                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n\t                var round = bm_min(v0,v1,this.r.v);\r\n\t                var cPoint = round*(1-roundCorner);\r\n\t                this.v._length = 0;\r\n\t\r\n\t                if(this.d === 2 || this.d === 1) {\r\n\t                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n\t                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n\t                    if(round!== 0){\r\n\t                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n\t                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n\t                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n\t                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n\t                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n\t                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n\t                    } else {\r\n\t                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n\t                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n\t                    }\r\n\t                }else{\r\n\t                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n\t                    if(round!== 0){\r\n\t                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n\t                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n\t                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n\t                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n\t                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n\t                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n\t                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n\t                    } else {\r\n\t                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n\t                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n\t                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\t\r\n\t                    }\r\n\t                }\r\n\t            },\r\n\t            getValue: function(frameNum){\r\n\t                if(this.elem.globalData.frameId === this.frameId){\r\n\t                    return;\r\n\t                }\r\n\t                this.frameId = this.elem.globalData.frameId;\r\n\t                this.iterateDynamicProperties();\r\n\t                if(this._mdf){\r\n\t                    this.convertRectToPath();\r\n\t                }\r\n\t\r\n\t            },\r\n\t            reset: resetShape\r\n\t        }\r\n\t        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\t\r\n\t        return RectShapeProperty;\r\n\t    }());\r\n\t\r\n\t    function getShapeProp(elem,data,type){\r\n\t        var prop;\r\n\t        if(type === 3 || type === 4){\r\n\t            var dataProp = type === 3 ? data.pt : data.ks;\r\n\t            var keys = dataProp.k;\r\n\t            if(dataProp.a === 1 || keys.length){\r\n\t                prop = new KeyframedShapeProperty(elem, data, type);\r\n\t            }else{\r\n\t                prop = new ShapeProperty(elem, data, type);\r\n\t            }\r\n\t        }else if(type === 5){\r\n\t            prop = new RectShapeProperty(elem, data);\r\n\t        }else if(type === 6){\r\n\t            prop = new EllShapeProperty(elem, data);\r\n\t        }else if(type === 7){\r\n\t            prop = new StarShapeProperty(elem, data);\r\n\t        }\r\n\t        if(prop.k){\r\n\t            elem.addDynamicProperty(prop);\r\n\t        }\r\n\t        return prop;\r\n\t    }\r\n\t\r\n\t    function getConstructorFunction() {\r\n\t        return ShapeProperty;\r\n\t    }\r\n\t\r\n\t    function getKeyframedConstructorFunction() {\r\n\t        return KeyframedShapeProperty;\r\n\t    }\r\n\t\r\n\t    var ob = {};\r\n\t    ob.getShapeProp = getShapeProp;\r\n\t    ob.getConstructorFunction = getConstructorFunction;\r\n\t    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n\t    return ob;\r\n\t}());\n\tvar ShapeModifiers = (function(){\r\n\t    var ob = {};\r\n\t    var modifiers = {};\r\n\t    ob.registerModifier = registerModifier;\r\n\t    ob.getModifier = getModifier;\r\n\t\r\n\t    function registerModifier(nm,factory){\r\n\t        if(!modifiers[nm]){\r\n\t            modifiers[nm] = factory;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getModifier(nm,elem, data){\r\n\t        return new modifiers[nm](elem, data);\r\n\t    }\r\n\t\r\n\t    return ob;\r\n\t}());\r\n\t\r\n\tfunction ShapeModifier(){}\r\n\tShapeModifier.prototype.initModifierProperties = function(){};\r\n\tShapeModifier.prototype.addShapeToModifier = function(){};\r\n\tShapeModifier.prototype.addShape = function(data){\r\n\t    if(!this.closed){\r\n\t        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n\t        this.shapes.push(shapeData);\r\n\t        this.addShapeToModifier(shapeData);\r\n\t        if(this._isAnimated) {\r\n\t            data.setAsAnimated();\r\n\t        }\r\n\t    }\r\n\t};\r\n\tShapeModifier.prototype.init = function(elem,data){\r\n\t    this.shapes = [];\r\n\t    this.elem = elem;\r\n\t    this.initDynamicPropertyContainer(elem);\r\n\t    this.initModifierProperties(elem,data);\r\n\t    this.frameId = initialDefaultFrame;\r\n\t    this.closed = false;\r\n\t    this.k = false;\r\n\t    if(this.dynamicProperties.length){\r\n\t        this.k = true;\r\n\t    }else{\r\n\t        this.getValue(true);\r\n\t    }\r\n\t};\r\n\tShapeModifier.prototype.processKeys = function(){\r\n\t    if(this.elem.globalData.frameId === this.frameId){\r\n\t        return;\r\n\t    }\r\n\t    this.frameId = this.elem.globalData.frameId;\r\n\t    this.iterateDynamicProperties();\r\n\t};\r\n\t\r\n\textendPrototype([DynamicPropertyContainer], ShapeModifier);\n\tfunction TrimModifier(){\r\n\t}\r\n\textendPrototype([ShapeModifier], TrimModifier);\r\n\tTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n\t    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n\t    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n\t    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n\t    this.sValue = 0;\r\n\t    this.eValue = 0;\r\n\t    this.getValue = this.processKeys;\r\n\t    this.m = data.m;\r\n\t    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n\t    shapeData.pathsData = [];\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n\t    var segments = [];\r\n\t    if (e <= 1) {\r\n\t        segments.push({\r\n\t            s: s,\r\n\t            e: e\r\n\t        });\r\n\t    } else if (s >= 1) {\r\n\t        segments.push({\r\n\t            s: s - 1,\r\n\t            e: e - 1\r\n\t        });\r\n\t    } else {\r\n\t        segments.push({\r\n\t            s: s,\r\n\t            e: 1\r\n\t        });\r\n\t        segments.push({\r\n\t            s: 0,\r\n\t            e: e - 1\r\n\t        });\r\n\t    }\r\n\t    var shapeSegments = [];\r\n\t    var i, len = segments.length, segmentOb;\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        segmentOb = segments[i];\r\n\t        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n\t            \r\n\t        } else {\r\n\t            var shapeS, shapeE;\r\n\t            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n\t                shapeS = 0;\r\n\t            } else {\r\n\t                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n\t            }\r\n\t            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n\t                shapeE = 1;\r\n\t            } else {\r\n\t                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n\t            }\r\n\t            shapeSegments.push([shapeS, shapeE]);\r\n\t        }\r\n\t    }\r\n\t    if (!shapeSegments.length) {\r\n\t        shapeSegments.push([0, 0]);\r\n\t    }\r\n\t    return shapeSegments;\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n\t    var i, len = pathsData.length;\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        segments_length_pool.release(pathsData[i]);\r\n\t    }\r\n\t    pathsData.length = 0;\r\n\t    return pathsData;\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n\t    var s, e;\r\n\t    if (this._mdf || _isFirstFrame) {\r\n\t        var o = (this.o.v % 360) / 360;\r\n\t        if (o < 0) {\r\n\t            o += 1;\r\n\t        }\r\n\t        s = this.s.v + o;\r\n\t        e = this.e.v + o;\r\n\t        if (s === e) {\r\n\t\r\n\t        }\r\n\t        if (s > e) {\r\n\t            var _s = s;\r\n\t            s = e;\r\n\t            e = _s;\r\n\t        }\r\n\t        s = Math.round(s*1000)/1000;\r\n\t        e = Math.round(e*1000)/1000;\r\n\t        this.sValue = s;\r\n\t        this.eValue = e;\r\n\t    } else {\r\n\t        s = this.sValue;\r\n\t        e = this.eValue;\r\n\t    }\r\n\t    var shapePaths;\r\n\t    var i, len = this.shapes.length, j, jLen;\r\n\t    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\t\r\n\t    if (e === s) {\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            this.shapes[i].localShapeCollection.releaseShapes();\r\n\t            this.shapes[i].shape._mdf = true;\r\n\t            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n\t        }\r\n\t    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n\t        var segments = [], shapeData, localShapeCollection;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            shapeData = this.shapes[i];\r\n\t            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n\t            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n\t                shapeData.shape.paths = shapeData.localShapeCollection;\r\n\t            } else {\r\n\t                shapePaths = shapeData.shape.paths;\r\n\t                jLen = shapePaths._length;\r\n\t                totalShapeLength = 0;\r\n\t                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n\t                    totalShapeLength = shapeData.totalShapeLength;\r\n\t                } else {\r\n\t                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n\t                    for (j = 0; j < jLen; j += 1) {\r\n\t                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n\t                        pathsData.push(pathData);\r\n\t                        totalShapeLength += pathData.totalLength;\r\n\t                    }\r\n\t                    shapeData.totalShapeLength = totalShapeLength;\r\n\t                    shapeData.pathsData = pathsData;\r\n\t                }\r\n\t\r\n\t                totalModifierLength += totalShapeLength;\r\n\t                shapeData.shape._mdf = true;\r\n\t            }\r\n\t        }\r\n\t        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n\t        for (i = len - 1; i >= 0; i -= 1) {\r\n\t            shapeData = this.shapes[i];\r\n\t            if (shapeData.shape._mdf) {\r\n\t                localShapeCollection = shapeData.localShapeCollection;\r\n\t                localShapeCollection.releaseShapes();\r\n\t                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n\t                if (this.m === 2 && len > 1) {\r\n\t                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n\t                    addedLength += shapeData.totalShapeLength;\r\n\t                } else {\r\n\t                    edges = [[shapeS, shapeE]];\r\n\t                }\r\n\t                jLen = edges.length;\r\n\t                for (j = 0; j < jLen; j += 1) {\r\n\t                    shapeS = edges[j][0];\r\n\t                    shapeE = edges[j][1];\r\n\t                    segments.length = 0;\r\n\t                    if (shapeE <= 1) {\r\n\t                        segments.push({\r\n\t                            s:shapeData.totalShapeLength * shapeS,\r\n\t                            e:shapeData.totalShapeLength * shapeE\r\n\t                        });\r\n\t                    } else if (shapeS >= 1) {\r\n\t                        segments.push({\r\n\t                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n\t                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n\t                        });\r\n\t                    } else {\r\n\t                        segments.push({\r\n\t                            s:shapeData.totalShapeLength * shapeS,\r\n\t                            e:shapeData.totalShapeLength\r\n\t                        });\r\n\t                        segments.push({\r\n\t                            s:0,\r\n\t                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n\t                        });\r\n\t                    }\r\n\t                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n\t                    if (segments[0].s !== segments[0].e) {\r\n\t                        if (segments.length > 1) {\r\n\t                            if (shapeData.shape.v.c) {\r\n\t                                var lastShape = newShapesData.pop();\r\n\t                                this.addPaths(newShapesData, localShapeCollection);\r\n\t                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n\t                            } else {\r\n\t                                this.addPaths(newShapesData, localShapeCollection);\r\n\t                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n\t                            }\r\n\t                        } \r\n\t                        this.addPaths(newShapesData, localShapeCollection);\r\n\t                    }\r\n\t                    \r\n\t                }\r\n\t                shapeData.shape.paths = localShapeCollection;\r\n\t            }\r\n\t        }\r\n\t    } else if (this._mdf) {\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            this.shapes[i].shape._mdf = true;\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n\t    var i, len = newPaths.length;\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        localShapeCollection.addShape(newPaths[i]);\r\n\t    }\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n\t    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n\t    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n\t    if(newShape){\r\n\t        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n\t    }\r\n\t    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n\t    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n\t    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n\t    if(newShape){\r\n\t        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n\t    }\r\n\t    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n\t};\r\n\t\r\n\tTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n\t    var pathsData = shapeData.pathsData;\r\n\t    var shapePaths = shapeData.shape.paths.shapes;\r\n\t    var i, len = shapeData.shape.paths._length, j, jLen;\r\n\t    var addedLength = 0;\r\n\t    var currentLengthData,segmentCount;\r\n\t    var lengths;\r\n\t    var segment;\r\n\t    var shapes = [];\r\n\t    var initPos;\r\n\t    var newShape = true;\r\n\t    if (!shapePath) {\r\n\t        shapePath = shape_pool.newElement();\r\n\t        segmentCount = 0;\r\n\t        initPos = 0;\r\n\t    } else {\r\n\t        segmentCount = shapePath._length;\r\n\t        initPos = shapePath._length;\r\n\t    }\r\n\t    shapes.push(shapePath);\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        lengths = pathsData[i].lengths;\r\n\t        shapePath.c = shapePaths[i].c;\r\n\t        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n\t        for (j = 1; j < jLen; j +=1) {\r\n\t            currentLengthData = lengths[j-1];\r\n\t            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n\t                addedLength += currentLengthData.addedLength;\r\n\t                shapePath.c = false;\r\n\t            } else if(addedLength > shapeSegment.e) {\r\n\t                shapePath.c = false;\r\n\t                break;\r\n\t            } else {\r\n\t                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n\t                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n\t                    newShape = false;\r\n\t                } else {\r\n\t                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n\t                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n\t                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n\t                    newShape = false;\r\n\t                    shapePath.c = false;\r\n\t                }\r\n\t                addedLength += currentLengthData.addedLength;\r\n\t                segmentCount += 1;\r\n\t            }\r\n\t        }\r\n\t        if (shapePaths[i].c) {\r\n\t            currentLengthData = lengths[j - 1];\r\n\t            if (addedLength <= shapeSegment.e) {\r\n\t                var segmentLength = lengths[j - 1].addedLength;\r\n\t                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n\t                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n\t                    newShape = false;\r\n\t                } else {\r\n\t                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n\t                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n\t                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n\t                    newShape = false;\r\n\t                    shapePath.c = false;\r\n\t                }\r\n\t            } else {\r\n\t                shapePath.c = false;\r\n\t            }\r\n\t            addedLength += currentLengthData.addedLength;\r\n\t            segmentCount += 1;\r\n\t        }\r\n\t        if (shapePath._length) {\r\n\t            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n\t            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n\t        }\r\n\t        if (addedLength > shapeSegment.e) {\r\n\t            break;\r\n\t        }\r\n\t        if (i < len - 1) {\r\n\t            shapePath = shape_pool.newElement();\r\n\t            newShape = true;\r\n\t            shapes.push(shapePath);\r\n\t            segmentCount = 0;\r\n\t        }\r\n\t    }\r\n\t    return shapes;\r\n\t};\r\n\t\r\n\t\r\n\tShapeModifiers.registerModifier('tm', TrimModifier);\n\tfunction RoundCornersModifier(){}\r\n\textendPrototype([ShapeModifier],RoundCornersModifier);\r\n\tRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n\t    this.getValue = this.processKeys;\r\n\t    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n\t    this._isAnimated = !!this.rd.effectsSequence.length;\r\n\t};\r\n\t\r\n\tRoundCornersModifier.prototype.processPath = function(path, round){\r\n\t    var cloned_path = shape_pool.newElement();\r\n\t    cloned_path.c = path.c;\r\n\t    var i, len = path._length;\r\n\t    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n\t    var vX,vY,oX,oY,iX,iY;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        currentV = path.v[i];\r\n\t        currentO = path.o[i];\r\n\t        currentI = path.i[i];\r\n\t        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n\t            if((i===0 || i === len - 1) && !path.c){\r\n\t                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n\t                /*cloned_path.v[index] = currentV;\r\n\t                cloned_path.o[index] = currentO;\r\n\t                cloned_path.i[index] = currentI;*/\r\n\t                index += 1;\r\n\t            } else {\r\n\t                if(i===0){\r\n\t                    closerV = path.v[len-1];\r\n\t                } else {\r\n\t                    closerV = path.v[i-1];\r\n\t                }\r\n\t                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n\t                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n\t                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n\t                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n\t                oX = vX-(vX-currentV[0])*roundCorner;\r\n\t                oY = vY-(vY-currentV[1])*roundCorner;\r\n\t                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n\t                index += 1;\r\n\t\r\n\t                if(i === len - 1){\r\n\t                    closerV = path.v[0];\r\n\t                } else {\r\n\t                    closerV = path.v[i+1];\r\n\t                }\r\n\t                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n\t                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n\t                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n\t                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n\t                iX = vX-(vX-currentV[0])*roundCorner;\r\n\t                iY = vY-(vY-currentV[1])*roundCorner;\r\n\t                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n\t                index += 1;\r\n\t            }\r\n\t        } else {\r\n\t            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n\t            index += 1;\r\n\t        }\r\n\t    }\r\n\t    return cloned_path;\r\n\t};\r\n\t\r\n\tRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n\t    var shapePaths;\r\n\t    var i, len = this.shapes.length;\r\n\t    var j, jLen;\r\n\t    var rd = this.rd.v;\r\n\t\r\n\t    if(rd !== 0){\r\n\t        var shapeData, newPaths, localShapeCollection;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            shapeData = this.shapes[i];\r\n\t            newPaths = shapeData.shape.paths;\r\n\t            localShapeCollection = shapeData.localShapeCollection;\r\n\t            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n\t                localShapeCollection.releaseShapes();\r\n\t                shapeData.shape._mdf = true;\r\n\t                shapePaths = shapeData.shape.paths.shapes;\r\n\t                jLen = shapeData.shape.paths._length;\r\n\t                for(j=0;j<jLen;j+=1){\r\n\t                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n\t                }\r\n\t            }\r\n\t            shapeData.shape.paths = shapeData.localShapeCollection;\r\n\t        }\r\n\t\r\n\t    }\r\n\t    if(!this.dynamicProperties.length){\r\n\t        this._mdf = false;\r\n\t    }\r\n\t};\r\n\t\r\n\tShapeModifiers.registerModifier('rd',RoundCornersModifier);\n\tfunction RepeaterModifier(){}\r\n\textendPrototype([ShapeModifier], RepeaterModifier);\r\n\t\r\n\tRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n\t    this.getValue = this.processKeys;\r\n\t    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n\t    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n\t    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n\t    this.data = data;\r\n\t    if(!this.dynamicProperties.length){\r\n\t        this.getValue(true);\r\n\t    }\r\n\t    this._isAnimated = !!this.dynamicProperties.length;\r\n\t    this.pMatrix = new Matrix();\r\n\t    this.rMatrix = new Matrix();\r\n\t    this.sMatrix = new Matrix();\r\n\t    this.tMatrix = new Matrix();\r\n\t    this.matrix = new Matrix();\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n\t    var dir = inv ? -1 : 1;\r\n\t    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n\t    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n\t    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n\t    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n\t    rMatrix.rotate(-transform.r.v * dir * perc);\r\n\t    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n\t    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n\t    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n\t    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n\t    this.elem = elem;\r\n\t    this.arr = arr;\r\n\t    this.pos = pos;\r\n\t    this.elemsData = elemsData;\r\n\t    this._currentCopies = 0;\r\n\t    this._elements = [];\r\n\t    this._groups = [];\r\n\t    this.frameId = -1;\r\n\t    this.initDynamicPropertyContainer(elem);\r\n\t    this.initModifierProperties(elem,arr[pos]);\r\n\t    var cont = 0;\r\n\t    while(pos>0){\r\n\t        pos -= 1;\r\n\t        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n\t        this._elements.unshift(arr[pos]);\r\n\t        cont += 1;\r\n\t    }\r\n\t    if(this.dynamicProperties.length){\r\n\t        this.k = true;\r\n\t    }else{\r\n\t        this.getValue(true);\r\n\t    }\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.resetElements = function(elements){\r\n\t    var i, len = elements.length;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        elements[i]._processed = false;\r\n\t        if(elements[i].ty === 'gr'){\r\n\t            this.resetElements(elements[i].it);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.cloneElements = function(elements){\r\n\t    var i, len = elements.length;\r\n\t    var newElements = JSON.parse(JSON.stringify(elements));\r\n\t    this.resetElements(newElements);\r\n\t    return newElements;\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n\t    var i, len = elements.length;\r\n\t    for(i = 0; i < len ; i += 1) {\r\n\t        elements[i]._render = renderFlag;\r\n\t        if(elements[i].ty === 'gr') {\r\n\t            this.changeGroupRender(elements[i].it, renderFlag);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n\t    var items, itemsTransform, i, dir, cont;\r\n\t    if(this._mdf || _isFirstFrame){\r\n\t        var copies = Math.ceil(this.c.v);\r\n\t        if(this._groups.length < copies){\r\n\t            while(this._groups.length < copies){\r\n\t                var group = {\r\n\t                    it:this.cloneElements(this._elements),\r\n\t                    ty:'gr'\r\n\t                };\r\n\t                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n\t                \r\n\t                this.arr.splice(0,0,group);\r\n\t                this._groups.splice(0,0,group);\r\n\t                this._currentCopies += 1;\r\n\t            }\r\n\t            this.elem.reloadShapes();\r\n\t        }\r\n\t        cont = 0;\r\n\t        var renderFlag;\r\n\t        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n\t            renderFlag = cont < copies;\r\n\t            this._groups[i]._render = renderFlag;\r\n\t            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n\t            cont += 1;\r\n\t        }\r\n\t        \r\n\t        this._currentCopies = copies;\r\n\t        ////\r\n\t\r\n\t        var offset = this.o.v;\r\n\t        var offsetModulo = offset%1;\r\n\t        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n\t        var k;\r\n\t        var tMat = this.tr.v.props;\r\n\t        var pProps = this.pMatrix.props;\r\n\t        var rProps = this.rMatrix.props;\r\n\t        var sProps = this.sMatrix.props;\r\n\t        this.pMatrix.reset();\r\n\t        this.rMatrix.reset();\r\n\t        this.sMatrix.reset();\r\n\t        this.tMatrix.reset();\r\n\t        this.matrix.reset();\r\n\t        var iteration = 0;\r\n\t\r\n\t        if(offset > 0) {\r\n\t            while(iteration<roundOffset){\r\n\t                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n\t                iteration += 1;\r\n\t            }\r\n\t            if(offsetModulo){\r\n\t                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n\t                iteration += offsetModulo;\r\n\t            }\r\n\t        } else if(offset < 0) {\r\n\t            while(iteration>roundOffset){\r\n\t                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n\t                iteration -= 1;\r\n\t            }\r\n\t            if(offsetModulo){\r\n\t                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n\t                iteration -= offsetModulo;\r\n\t            }\r\n\t        }\r\n\t        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n\t        dir = this.data.m === 1 ? 1 : -1;\r\n\t        cont = this._currentCopies;\r\n\t        var j, jLen;\r\n\t        while(cont){\r\n\t            items = this.elemsData[i].it;\r\n\t            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n\t            jLen = itemsTransform.length;\r\n\t            items[items.length - 1].transform.mProps._mdf = true;\r\n\t            items[items.length - 1].transform.op._mdf = true;\r\n\t            if(iteration !== 0){\r\n\t                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n\t                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n\t                }\r\n\t                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n\t                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n\t                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n\t                \r\n\t                for(j=0;j<jLen;j+=1) {\r\n\t                    itemsTransform[j] = this.matrix.props[j];\r\n\t                }\r\n\t                this.matrix.reset();\r\n\t            } else {\r\n\t                this.matrix.reset();\r\n\t                for(j=0;j<jLen;j+=1) {\r\n\t                    itemsTransform[j] = this.matrix.props[j];\r\n\t                }\r\n\t            }\r\n\t            iteration += 1;\r\n\t            cont -= 1;\r\n\t            i += dir;\r\n\t        }\r\n\t    } else {\r\n\t        cont = this._currentCopies;\r\n\t        i = 0;\r\n\t        dir = 1;\r\n\t        while(cont){\r\n\t            items = this.elemsData[i].it;\r\n\t            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n\t            items[items.length - 1].transform.mProps._mdf = false;\r\n\t            items[items.length - 1].transform.op._mdf = false;\r\n\t            cont -= 1;\r\n\t            i += dir;\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tRepeaterModifier.prototype.addShape = function(){};\r\n\t\r\n\tShapeModifiers.registerModifier('rp',RepeaterModifier);\n\tfunction ShapeCollection(){\r\n\t\tthis._length = 0;\r\n\t\tthis._maxLength = 4;\r\n\t\tthis.shapes = createSizedArray(this._maxLength);\r\n\t}\r\n\t\r\n\tShapeCollection.prototype.addShape = function(shapeData){\r\n\t\tif(this._length === this._maxLength){\r\n\t\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\t\tthis._maxLength *= 2;\r\n\t\t}\r\n\t\tthis.shapes[this._length] = shapeData;\r\n\t\tthis._length += 1;\r\n\t};\r\n\t\r\n\tShapeCollection.prototype.releaseShapes = function(){\r\n\t\tvar i;\r\n\t\tfor(i = 0; i < this._length; i += 1) {\r\n\t\t\tshape_pool.release(this.shapes[i]);\r\n\t\t}\r\n\t\tthis._length = 0;\r\n\t};\n\tfunction DashProperty(elem, data, renderer) {\r\n\t    this.elem = elem;\r\n\t    this.frameId = -1;\r\n\t    this.dataProps = createSizedArray(data.length);\r\n\t    this.renderer = renderer;\r\n\t    this.k = false;\r\n\t    this.dashStr = '';\r\n\t    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n\t    this.dashoffset = createTypedArray('float32',  1);\r\n\t    this.initDynamicPropertyContainer(elem);\r\n\t    var i, len = data.length || 0, prop;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n\t        this.k = prop.k || this.k;\r\n\t        this.dataProps[i] = {n:data[i].n,p:prop};\r\n\t    }\r\n\t    if(!this.k){\r\n\t        this.getValue(true);\r\n\t    }\r\n\t    this._isAnimated = this.k;\r\n\t}\r\n\t\r\n\tDashProperty.prototype.getValue = function(forceRender) {\r\n\t    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n\t        return;\r\n\t    }\r\n\t    this.frameId = this.elem.globalData.frameId;\r\n\t    this.iterateDynamicProperties();\r\n\t    this._mdf = this._mdf || forceRender;\r\n\t    if (this._mdf) {\r\n\t        var i = 0, len = this.dataProps.length;\r\n\t        if(this.renderer === 'svg') {\r\n\t            this.dashStr = '';\r\n\t        }\r\n\t        for(i=0;i<len;i+=1){\r\n\t            if(this.dataProps[i].n != 'o'){\r\n\t                if(this.renderer === 'svg') {\r\n\t                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n\t                }else{\r\n\t                    this.dashArray[i] = this.dataProps[i].p.v;\r\n\t                }\r\n\t            }else{\r\n\t                this.dashoffset[0] = this.dataProps[i].p.v;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\r\n\textendPrototype([DynamicPropertyContainer], DashProperty);\n\tfunction GradientProperty(elem,data){\r\n\t    this.data = data;\r\n\t    this.c = createTypedArray('uint8c', data.p*4);\r\n\t    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n\t    this.o = createTypedArray('float32', cLength);\r\n\t    this._cmdf = false;\r\n\t    this._omdf = false;\r\n\t    this._collapsable = this.checkCollapsable();\r\n\t    this._hasOpacity = cLength;\r\n\t    this.initDynamicPropertyContainer(elem);\r\n\t    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n\t    this.k = this.prop.k;\r\n\t    this.getValue(true);\r\n\t}\r\n\t\r\n\tGradientProperty.prototype.comparePoints = function(values, points) {\r\n\t    var i = 0, len = this.o.length/2, diff;\r\n\t    while(i < len) {\r\n\t        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n\t        if(diff > 0.01){\r\n\t            return false;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    return true;\r\n\t};\r\n\t\r\n\tGradientProperty.prototype.checkCollapsable = function() {\r\n\t    if (this.o.length/2 !== this.c.length/4) {\r\n\t        return false;\r\n\t    }\r\n\t    if (this.data.k.k[0].s) {\r\n\t        var i = 0, len = this.data.k.k.length;\r\n\t        while (i < len) {\r\n\t            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n\t                return false;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n\t        return false;\r\n\t    }\r\n\t    return true;\r\n\t};\r\n\t\r\n\tGradientProperty.prototype.getValue = function(forceRender){\r\n\t    this.prop.getValue();\r\n\t    this._mdf = false;\r\n\t    this._cmdf = false;\r\n\t    this._omdf = false;\r\n\t    if(this.prop._mdf || forceRender){\r\n\t        var i, len = this.data.p*4;\r\n\t        var mult, val;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            mult = i%4 === 0 ? 100 : 255;\r\n\t            val = Math.round(this.prop.v[i]*mult);\r\n\t            if(this.c[i] !== val){\r\n\t                this.c[i] = val;\r\n\t                this._cmdf = !forceRender;\r\n\t            }\r\n\t        }\r\n\t        if(this.o.length){\r\n\t            len = this.prop.v.length;\r\n\t            for(i=this.data.p*4;i<len;i+=1){\r\n\t                mult = i%2 === 0 ? 100 : 1;\r\n\t                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n\t                if(this.o[i-this.data.p*4] !== val){\r\n\t                    this.o[i-this.data.p*4] = val;\r\n\t                    this._omdf = !forceRender;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this._mdf = !forceRender;\r\n\t    }\r\n\t};\r\n\t\r\n\textendPrototype([DynamicPropertyContainer], GradientProperty);\n\tvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\t\tif(length === 0) {\r\n\t            return '';\r\n\t        }\r\n\t        var _o = pathNodes.o;\r\n\t        var _i = pathNodes.i;\r\n\t        var _v = pathNodes.v;\r\n\t        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n\t        for(i = 1; i < length; i += 1) {\r\n\t            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n\t        }\r\n\t        if (closed && length) {\r\n\t            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n\t            shapeString += 'z';\r\n\t        }\r\n\t        return shapeString;\r\n\t}\n\tvar ImagePreloader = (function(){\r\n\t\r\n\t    function imageLoaded(){\r\n\t        this.loadedAssets += 1;\r\n\t        if(this.loadedAssets === this.totalImages){\r\n\t            if(this.imagesLoadedCb) {\r\n\t                this.imagesLoadedCb(null);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getAssetsPath(assetData){\r\n\t        var path = '';\r\n\t        if(this.assetsPath){\r\n\t            var imagePath = assetData.p;\r\n\t            if(imagePath.indexOf('images/') !== -1){\r\n\t                imagePath = imagePath.split('/')[1];\r\n\t            }\r\n\t            path = this.assetsPath + imagePath;\r\n\t        } else {\r\n\t            path = this.path;\r\n\t            path += assetData.u ? assetData.u : '';\r\n\t            path += assetData.p;\r\n\t        }\r\n\t        return path;\r\n\t    }\r\n\t\r\n\t    function loadImage(path){\r\n\t        var img = createTag('img');\r\n\t        img.addEventListener('load', imageLoaded.bind(this), false);\r\n\t        img.addEventListener('error', imageLoaded.bind(this), false);\r\n\t        img.src = path;\r\n\t    }\r\n\t    function loadAssets(assets, cb){\r\n\t        this.imagesLoadedCb = cb;\r\n\t        this.totalAssets = assets.length;\r\n\t        var i;\r\n\t        for(i=0;i<this.totalAssets;i+=1){\r\n\t            if(!assets[i].layers){\r\n\t                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n\t                this.totalImages += 1;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function setPath(path){\r\n\t        this.path = path || '';\r\n\t    }\r\n\t\r\n\t    function setAssetsPath(path){\r\n\t        this.assetsPath = path || '';\r\n\t    }\r\n\t\r\n\t    function destroy() {\r\n\t        this.imagesLoadedCb = null;\r\n\t    }\r\n\t\r\n\t    return function ImagePreloader(){\r\n\t        this.loadAssets = loadAssets;\r\n\t        this.setAssetsPath = setAssetsPath;\r\n\t        this.setPath = setPath;\r\n\t        this.destroy = destroy;\r\n\t        this.assetsPath = '';\r\n\t        this.path = '';\r\n\t        this.totalAssets = 0;\r\n\t        this.totalImages = 0;\r\n\t        this.loadedAssets = 0;\r\n\t        this.imagesLoadedCb = null;\r\n\t    };\r\n\t}());\n\tvar featureSupport = (function(){\r\n\t\tvar ob = {\r\n\t\t\tmaskType: true\r\n\t\t};\r\n\t\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t\t   ob.maskType = false;\r\n\t\t}\r\n\t\treturn ob;\r\n\t}());\n\tvar filtersFactory = (function(){\r\n\t\tvar ob = {};\r\n\t\tob.createFilter = createFilter;\r\n\t\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\t\r\n\t\tfunction createFilter(filId){\r\n\t        \tvar fil = createNS('filter');\r\n\t        \tfil.setAttribute('id',filId);\r\n\t                fil.setAttribute('filterUnits','objectBoundingBox');\r\n\t                fil.setAttribute('x','0%');\r\n\t                fil.setAttribute('y','0%');\r\n\t                fil.setAttribute('width','100%');\r\n\t                fil.setAttribute('height','100%');\r\n\t                return fil;\r\n\t\t}\r\n\t\r\n\t\tfunction createAlphaToLuminanceFilter(){\r\n\t                var feColorMatrix = createNS('feColorMatrix');\r\n\t                feColorMatrix.setAttribute('type','matrix');\r\n\t                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n\t                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n\t                return feColorMatrix;\r\n\t\t}\r\n\t\r\n\t\treturn ob;\r\n\t}());\n\tfunction TextAnimatorProperty(textData, renderType, elem){\r\n\t    this._isFirstFrame = true;\r\n\t\tthis._hasMaskedPath = false;\r\n\t\tthis._frameId = -1;\r\n\t\tthis._textData = textData;\r\n\t\tthis._renderType = renderType;\r\n\t    this._elem = elem;\r\n\t\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\t\tthis._pathData = {};\r\n\t\tthis._moreOptions = {\r\n\t\t\talignment: {}\r\n\t\t};\r\n\t\tthis.renderedLetters = [];\r\n\t    this.lettersChangedFlag = false;\r\n\t    this.initDynamicPropertyContainer(elem);\r\n\t\r\n\t}\r\n\t\r\n\tTextAnimatorProperty.prototype.searchProperties = function(){\r\n\t    var i, len = this._textData.a.length, animatorProps;\r\n\t    var getProp = PropertyFactory.getProp;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        animatorProps = this._textData.a[i];\r\n\t        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n\t    }\r\n\t    if(this._textData.p && 'm' in this._textData.p){\r\n\t        this._pathData = {\r\n\t            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n\t            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n\t            r: this._textData.p.r,\r\n\t            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n\t        };\r\n\t        this._hasMaskedPath = true;\r\n\t    } else {\r\n\t        this._hasMaskedPath = false;\r\n\t    }\r\n\t    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n\t};\r\n\t\r\n\tTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n\t    this.lettersChangedFlag = lettersChangedFlag;\r\n\t    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n\t        return;\r\n\t    }\r\n\t    this._isFirstFrame = false;\r\n\t    var alignment = this._moreOptions.alignment.v;\r\n\t    var animators = this._animatorsData;\r\n\t    var textData = this._textData;\r\n\t    var matrixHelper = this.mHelper;\r\n\t    var renderType = this._renderType;\r\n\t    var renderedLettersCount = this.renderedLetters.length;\r\n\t    var data = this.data;\r\n\t    var xPos,yPos;\r\n\t    var i, len;\r\n\t    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n\t    if(this._hasMaskedPath) {\r\n\t        mask = this._pathData.m;\r\n\t        if(!this._pathData.n || this._pathData._mdf){\r\n\t            var paths = mask.v;\r\n\t            if(this._pathData.r){\r\n\t                paths = paths.reverse();\r\n\t            }\r\n\t            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n\t            pathInfo = {\r\n\t                tLength: 0,\r\n\t                segments: []\r\n\t            };\r\n\t            len = paths._length - 1;\r\n\t            var pathData;\r\n\t            totalLength = 0;\r\n\t            for (i = 0; i < len; i += 1) {\r\n\t                pathData = {\r\n\t                    s: paths.v[i],\r\n\t                    e: paths.v[i + 1],\r\n\t                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n\t                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n\t                };\r\n\t                bez.buildBezierData(pathData);\r\n\t                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n\t                pathInfo.segments.push(pathData);\r\n\t                totalLength += pathData.bezierData.segmentLength;\r\n\t            }\r\n\t            i = len;\r\n\t            if (mask.v.c) {\r\n\t                pathData = {\r\n\t                    s: paths.v[i],\r\n\t                    e: paths.v[0],\r\n\t                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n\t                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n\t                };\r\n\t                bez.buildBezierData(pathData);\r\n\t                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n\t                pathInfo.segments.push(pathData);\r\n\t                totalLength += pathData.bezierData.segmentLength;\r\n\t            }\r\n\t            this._pathData.pi = pathInfo;\r\n\t        }\r\n\t        pathInfo = this._pathData.pi;\r\n\t\r\n\t        currentLength = this._pathData.f.v;\r\n\t        segmentInd = 0;\r\n\t        pointInd = 1;\r\n\t        segmentLength = 0;\r\n\t        flag = true;\r\n\t        segments = pathInfo.segments;\r\n\t        if (currentLength < 0 && mask.v.c) {\r\n\t            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n\t                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n\t            }\r\n\t            segmentInd = segments.length - 1;\r\n\t            points = segments[segmentInd].bezierData.points;\r\n\t            pointInd = points.length - 1;\r\n\t            while (currentLength < 0) {\r\n\t                currentLength += points[pointInd].partialLength;\r\n\t                pointInd -= 1;\r\n\t                if (pointInd < 0) {\r\n\t                    segmentInd -= 1;\r\n\t                    points = segments[segmentInd].bezierData.points;\r\n\t                    pointInd = points.length - 1;\r\n\t                }\r\n\t            }\r\n\t\r\n\t        }\r\n\t        points = segments[segmentInd].bezierData.points;\r\n\t        prevPoint = points[pointInd - 1];\r\n\t        currentPoint = points[pointInd];\r\n\t        partialLength = currentPoint.partialLength;\r\n\t    }\r\n\t\r\n\t\r\n\t    len = letters.length;\r\n\t    xPos = 0;\r\n\t    yPos = 0;\r\n\t    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n\t    var firstLine = true;\r\n\t    var animatorProps, animatorSelector;\r\n\t    var j, jLen;\r\n\t    var letterValue;\r\n\t\r\n\t    jLen = animators.length;\r\n\t    var lastLetter;\r\n\t\r\n\t    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n\t    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n\t    var elemOpacity;\r\n\t    var sc,sw,fc,k;\r\n\t    var lineLength = 0;\r\n\t    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\t\r\n\t    //\r\n\t    if(documentData.j === 2 || documentData.j === 1) {\r\n\t        var animatorJustifyOffset = 0;\r\n\t        var animatorFirstCharOffset = 0;\r\n\t        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n\t        var lastIndex = 0;\r\n\t        var isNewLine = true;\r\n\t\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            if (letters[i].n) {\r\n\t                if(animatorJustifyOffset) {\r\n\t                    animatorJustifyOffset += animatorFirstCharOffset;\r\n\t                }\r\n\t                while (lastIndex < i) {\r\n\t                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n\t                    lastIndex += 1;\r\n\t                }\r\n\t                animatorJustifyOffset = 0;\r\n\t                isNewLine = true;\r\n\t            } else {\r\n\t                for (j = 0; j < jLen; j += 1) {\r\n\t                    animatorProps = animators[j].a;\r\n\t                    if (animatorProps.t.propType) {\r\n\t                        if (isNewLine && documentData.j === 2) {\r\n\t                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n\t                        }\r\n\t                        animatorSelector = animators[j].s;\r\n\t                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n\t                        if (mult.length) {\r\n\t                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n\t                        } else {\r\n\t                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                isNewLine = false;\r\n\t            }\r\n\t        }\r\n\t        if(animatorJustifyOffset) {\r\n\t            animatorJustifyOffset += animatorFirstCharOffset;\r\n\t        }\r\n\t        while(lastIndex < i) {\r\n\t            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n\t            lastIndex += 1;\r\n\t        }\r\n\t    }\r\n\t    //\r\n\t\r\n\t    for( i = 0; i < len; i += 1) {\r\n\t\r\n\t        matrixHelper.reset();\r\n\t        elemOpacity = 1;\r\n\t        if(letters[i].n) {\r\n\t            xPos = 0;\r\n\t            yPos += documentData.yOffset;\r\n\t            yPos += firstLine ? 1 : 0;\r\n\t            currentLength = initPathPos ;\r\n\t            firstLine = false;\r\n\t            lineLength = 0;\r\n\t            if(this._hasMaskedPath) {\r\n\t                segmentInd = initSegmentInd;\r\n\t                pointInd = initPointInd;\r\n\t                points = segments[segmentInd].bezierData.points;\r\n\t                prevPoint = points[pointInd - 1];\r\n\t                currentPoint = points[pointInd];\r\n\t                partialLength = currentPoint.partialLength;\r\n\t                segmentLength = 0;\r\n\t            }\r\n\t            letterO = letterSw = letterFc = letterM = '';\r\n\t            letterP = this.defaultPropsArray;\r\n\t        }else{\r\n\t            if(this._hasMaskedPath) {\r\n\t                if(currentLine !== letters[i].line){\r\n\t                    switch(documentData.j){\r\n\t                        case 1:\r\n\t                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n\t                            break;\r\n\t                        case 2:\r\n\t                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n\t                            break;\r\n\t                    }\r\n\t                    currentLine = letters[i].line;\r\n\t                }\r\n\t                if (ind !== letters[i].ind) {\r\n\t                    if (letters[ind]) {\r\n\t                        currentLength += letters[ind].extra;\r\n\t                    }\r\n\t                    currentLength += letters[i].an / 2;\r\n\t                    ind = letters[i].ind;\r\n\t                }\r\n\t                currentLength += alignment[0] * letters[i].an / 200;\r\n\t                var animatorOffset = 0;\r\n\t                for (j = 0; j < jLen; j += 1) {\r\n\t                    animatorProps = animators[j].a;\r\n\t                    if (animatorProps.p.propType) {\r\n\t                        animatorSelector = animators[j].s;\r\n\t                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                        if(mult.length){\r\n\t                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n\t                        } else{\r\n\t                            animatorOffset += animatorProps.p.v[0] * mult;\r\n\t                        }\r\n\t\r\n\t                    }\r\n\t                    if (animatorProps.a.propType) {\r\n\t                        animatorSelector = animators[j].s;\r\n\t                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                        if(mult.length){\r\n\t                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n\t                        } else{\r\n\t                            animatorOffset += animatorProps.a.v[0] * mult;\r\n\t                        }\r\n\t\r\n\t                    }\r\n\t                }\r\n\t                flag = true;\r\n\t                while (flag) {\r\n\t                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n\t                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n\t                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n\t                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n\t                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n\t                        flag = false;\r\n\t                    } else if (points) {\r\n\t                        segmentLength += currentPoint.partialLength;\r\n\t                        pointInd += 1;\r\n\t                        if (pointInd >= points.length) {\r\n\t                            pointInd = 0;\r\n\t                            segmentInd += 1;\r\n\t                            if (!segments[segmentInd]) {\r\n\t                                if (mask.v.c) {\r\n\t                                    pointInd = 0;\r\n\t                                    segmentInd = 0;\r\n\t                                    points = segments[segmentInd].bezierData.points;\r\n\t                                } else {\r\n\t                                    segmentLength -= currentPoint.partialLength;\r\n\t                                    points = null;\r\n\t                                }\r\n\t                            } else {\r\n\t                                points = segments[segmentInd].bezierData.points;\r\n\t                            }\r\n\t                        }\r\n\t                        if (points) {\r\n\t                            prevPoint = currentPoint;\r\n\t                            currentPoint = points[pointInd];\r\n\t                            partialLength = currentPoint.partialLength;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                offf = letters[i].an / 2 - letters[i].add;\r\n\t                matrixHelper.translate(-offf, 0, 0);\r\n\t            } else {\r\n\t                offf = letters[i].an/2 - letters[i].add;\r\n\t                matrixHelper.translate(-offf,0,0);\r\n\t\r\n\t                // Grouping alignment\r\n\t                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n\t            }\r\n\t\r\n\t            lineLength += letters[i].l/2;\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                animatorProps = animators[j].a;\r\n\t                if (animatorProps.t.propType) {\r\n\t                    animatorSelector = animators[j].s;\r\n\t                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n\t                    if(xPos !== 0 || documentData.j !== 0) {\r\n\t                        if(this._hasMaskedPath) {\r\n\t                            if(mult.length) {\r\n\t                                currentLength += animatorProps.t.v*mult[0];\r\n\t                            } else {\r\n\t                                currentLength += animatorProps.t.v*mult;\r\n\t                            }\r\n\t                        }else{\r\n\t                            if(mult.length) {\r\n\t                                xPos += animatorProps.t.v*mult[0];\r\n\t                            } else {\r\n\t                                xPos += animatorProps.t.v*mult;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            lineLength += letters[i].l/2;\r\n\t            if(documentData.strokeWidthAnim) {\r\n\t                sw = documentData.sw || 0;\r\n\t            }\r\n\t            if(documentData.strokeColorAnim) {\r\n\t                if(documentData.sc){\r\n\t                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n\t                }else{\r\n\t                    sc = [0,0,0];\r\n\t                }\r\n\t            }\r\n\t            if(documentData.fillColorAnim && documentData.fc) {\r\n\t                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n\t            }\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                animatorProps = animators[j].a;\r\n\t                if (animatorProps.a.propType) {\r\n\t                    animatorSelector = animators[j].s;\r\n\t                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t\r\n\t                    if(mult.length){\r\n\t                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n\t                    } else {\r\n\t                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                animatorProps = animators[j].a;\r\n\t                if (animatorProps.s.propType) {\r\n\t                    animatorSelector = animators[j].s;\r\n\t                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                    if(mult.length){\r\n\t                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n\t                    } else {\r\n\t                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            for(j=0;j<jLen;j+=1) {\r\n\t                animatorProps = animators[j].a;\r\n\t                animatorSelector = animators[j].s;\r\n\t                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                if (animatorProps.sk.propType) {\r\n\t                    if(mult.length) {\r\n\t                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n\t                    } else {\r\n\t                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n\t                    }\r\n\t                }\r\n\t                if (animatorProps.r.propType) {\r\n\t                    if(mult.length) {\r\n\t                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n\t                    } else {\r\n\t                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n\t                    }\r\n\t                }\r\n\t                if (animatorProps.ry.propType) {\r\n\t\r\n\t                    if(mult.length) {\r\n\t                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n\t                    }else{\r\n\t                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n\t                    }\r\n\t                }\r\n\t                if (animatorProps.rx.propType) {\r\n\t                    if(mult.length) {\r\n\t                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n\t                    } else {\r\n\t                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n\t                    }\r\n\t                }\r\n\t                if (animatorProps.o.propType) {\r\n\t                    if(mult.length) {\r\n\t                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n\t                    } else {\r\n\t                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n\t                    }\r\n\t                }\r\n\t                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n\t                    if(mult.length) {\r\n\t                        sw += animatorProps.sw.v*mult[0];\r\n\t                    } else {\r\n\t                        sw += animatorProps.sw.v*mult;\r\n\t                    }\r\n\t                }\r\n\t                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n\t                    for(k=0;k<3;k+=1){\r\n\t                        if(mult.length) {\r\n\t                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n\t                        } else {\r\n\t                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                if (documentData.fillColorAnim && documentData.fc) {\r\n\t                    if(animatorProps.fc.propType){\r\n\t                        for(k=0;k<3;k+=1){\r\n\t                            if(mult.length) {\r\n\t                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n\t                            } else {\r\n\t                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                    if(animatorProps.fh.propType){\r\n\t                        if(mult.length) {\r\n\t                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n\t                        } else {\r\n\t                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n\t                        }\r\n\t                    }\r\n\t                    if(animatorProps.fs.propType){\r\n\t                        if(mult.length) {\r\n\t                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n\t                        } else {\r\n\t                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n\t                        }\r\n\t                    }\r\n\t                    if(animatorProps.fb.propType){\r\n\t                        if(mult.length) {\r\n\t                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n\t                        } else {\r\n\t                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                animatorProps = animators[j].a;\r\n\t\r\n\t                if (animatorProps.p.propType) {\r\n\t                    animatorSelector = animators[j].s;\r\n\t                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\t                    if(this._hasMaskedPath) {\r\n\t                        if(mult.length) {\r\n\t                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n\t                        } else {\r\n\t                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n\t                        }\r\n\t                    }else{\r\n\t                        if(mult.length) {\r\n\t                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n\t                        } else {\r\n\t                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n\t                        \r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            if(documentData.strokeWidthAnim){\r\n\t                letterSw = sw < 0 ? 0 : sw;\r\n\t            }\r\n\t            if(documentData.strokeColorAnim){\r\n\t                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n\t            }\r\n\t            if(documentData.fillColorAnim && documentData.fc){\r\n\t                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n\t            }\r\n\t\r\n\t            if(this._hasMaskedPath) {\r\n\t                matrixHelper.translate(0,-documentData.ls);\r\n\t\r\n\t                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n\t                if (textData.p.p) {\r\n\t                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n\t                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n\t                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n\t                        rot += 180;\r\n\t                    }\r\n\t                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n\t                }\r\n\t                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n\t                currentLength -= alignment[0]*letters[i].an/200;\r\n\t                if(letters[i+1] && ind !== letters[i+1].ind){\r\n\t                    currentLength += letters[i].an / 2;\r\n\t                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n\t                }\r\n\t            }else{\r\n\t\r\n\t                matrixHelper.translate(xPos,yPos,0);\r\n\t\r\n\t                if(documentData.ps){\r\n\t                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n\t                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n\t                }\r\n\t                switch(documentData.j){\r\n\t                    case 1:\r\n\t                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n\t                        break;\r\n\t                    case 2:\r\n\t                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n\t                        break;\r\n\t                }\r\n\t                matrixHelper.translate(0,-documentData.ls);\r\n\t                matrixHelper.translate(offf,0,0);\r\n\t                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n\t                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n\t            }\r\n\t            if(renderType === 'html'){\r\n\t                letterM = matrixHelper.toCSS();\r\n\t            }else if(renderType === 'svg'){\r\n\t                letterM = matrixHelper.to2dCSS();\r\n\t            }else{\r\n\t                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n\t            }\r\n\t            letterO = elemOpacity;\r\n\t        }\r\n\t\r\n\t        if(renderedLettersCount <= i) {\r\n\t            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n\t            this.renderedLetters.push(letterValue);\r\n\t            renderedLettersCount += 1;\r\n\t            this.lettersChangedFlag = true;\r\n\t        } else {\r\n\t            letterValue = this.renderedLetters[i];\r\n\t            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tTextAnimatorProperty.prototype.getValue = function(){\r\n\t\tif(this._elem.globalData.frameId === this._frameId){\r\n\t        return;\r\n\t    }\r\n\t    this._frameId = this._elem.globalData.frameId;\r\n\t    this.iterateDynamicProperties();\r\n\t};\r\n\t\r\n\tTextAnimatorProperty.prototype.mHelper = new Matrix();\r\n\tTextAnimatorProperty.prototype.defaultPropsArray = [];\r\n\textendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\n\tfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\t\tvar defaultData = {propType:false};\r\n\t\tvar getProp = PropertyFactory.getProp;\r\n\t\tvar textAnimator_animatables = animatorProps.a;\r\n\t\tthis.a = {\r\n\t\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t\t};\r\n\t\r\n\t\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n\t    this.s.t = animatorProps.s.t;\r\n\t}\n\tfunction LetterProps(o, sw, sc, fc, m, p){\r\n\t    this.o = o;\r\n\t    this.sw = sw;\r\n\t    this.sc = sc;\r\n\t    this.fc = fc;\r\n\t    this.m = m;\r\n\t    this.p = p;\r\n\t    this._mdf = {\r\n\t    \to: true,\r\n\t    \tsw: !!sw,\r\n\t    \tsc: !!sc,\r\n\t    \tfc: !!fc,\r\n\t    \tm: true,\r\n\t    \tp: true\r\n\t    };\r\n\t}\r\n\t\r\n\tLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\t\tthis._mdf.o = false;\r\n\t\tthis._mdf.sw = false;\r\n\t\tthis._mdf.sc = false;\r\n\t\tthis._mdf.fc = false;\r\n\t\tthis._mdf.m = false;\r\n\t\tthis._mdf.p = false;\r\n\t\tvar updated = false;\r\n\t\r\n\t\tif(this.o !== o) {\r\n\t\t\tthis.o = o;\r\n\t\t\tthis._mdf.o = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif(this.sw !== sw) {\r\n\t\t\tthis.sw = sw;\r\n\t\t\tthis._mdf.sw = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif(this.sc !== sc) {\r\n\t\t\tthis.sc = sc;\r\n\t\t\tthis._mdf.sc = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif(this.fc !== fc) {\r\n\t\t\tthis.fc = fc;\r\n\t\t\tthis._mdf.fc = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif(this.m !== m) {\r\n\t\t\tthis.m = m;\r\n\t\t\tthis._mdf.m = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\t\tthis.p = p;\r\n\t\t\tthis._mdf.p = true;\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\treturn updated;\r\n\t};\n\tfunction TextProperty(elem, data){\r\n\t\tthis._frameId = initialDefaultFrame;\r\n\t\tthis.pv = '';\r\n\t\tthis.v = '';\r\n\t\tthis.kf = false;\r\n\t\tthis._isFirstFrame = true;\r\n\t\tthis._mdf = false;\r\n\t\tthis.data = data;\r\n\t\tthis.elem = elem;\r\n\t    this.comp = this.elem.comp;\r\n\t\tthis.keysIndex = -1;\r\n\t    this.canResize = false;\r\n\t    this.minimumFontSize = 1;\r\n\t    this.effectsSequence = [];\r\n\t\tthis.currentData = {\r\n\t\t\tascent: 0,\r\n\t        boxWidth: this.defaultBoxWidth,\r\n\t        f: '',\r\n\t        fStyle: '',\r\n\t        fWeight: '',\r\n\t        fc: '',\r\n\t        j: '',\r\n\t        justifyOffset: '',\r\n\t        l: [],\r\n\t        lh: 0,\r\n\t        lineWidths: [],\r\n\t        ls: '',\r\n\t        of: '',\r\n\t        s: '',\r\n\t        sc: '',\r\n\t        sw: 0,\r\n\t        t: 0,\r\n\t        tr: 0,\r\n\t        sz:0,\r\n\t        ps:null,\r\n\t        fillColorAnim: false,\r\n\t        strokeColorAnim: false,\r\n\t        strokeWidthAnim: false,\r\n\t        yOffset: 0,\r\n\t        finalSize:0,\r\n\t        finalText:[],\r\n\t        finalLineHeight: 0,\r\n\t        __test: true\r\n\t\r\n\t\t};\r\n\t    this.copyFromDocumentData(this.data.d.k[0].s);\r\n\t    \r\n\t    if(!this.searchProperty()) {\r\n\t        this.completeTextData(this.currentData);\r\n\t        this.keysIndex = 0;\r\n\t    }\r\n\t}\r\n\t\r\n\tTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\t\r\n\tTextProperty.prototype.copyFromDocumentData = function(data) {\r\n\t    for(var s in data) {\r\n\t        this.currentData[s] = data[s];\r\n\t    }\r\n\t}\r\n\t\r\n\tTextProperty.prototype.setCurrentData = function(data, currentTextValue){\r\n\t        if(this.currentData !== data) {\r\n\t            if(!data.__complete) {\r\n\t                this.completeTextData(data);\r\n\t            }\r\n\t            this.copyFromDocumentData(data);\r\n\t            this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n\t            this.currentData.fillColorAnim = data.fillColorAnim || this.currentData.fillColorAnim;\r\n\t            this.currentData.strokeColorAnim = data.strokeColorAnim || this.currentData.strokeColorAnim;\r\n\t            this.currentData.strokeWidthAnim = data.strokeWidthAnim || this.currentData.strokeWidthAnim;\r\n\t            this._mdf = true;\r\n\t        } else if(currentTextValue !== this.currentData.t) {\r\n\t            this._mdf = true;\r\n\t            this.completeTextData(data);\r\n\t        }\r\n\t\t\t/*var currentData = this.currentData;\r\n\t        currentData.ascent = data.ascent;\r\n\t        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n\t        currentData.f = data.f;\r\n\t        currentData.fStyle = data.fStyle;\r\n\t        currentData.fWeight = data.fWeight;\r\n\t        currentData.fc = data.fc;\r\n\t        currentData.j = data.j;\r\n\t        currentData.justifyOffset = data.justifyOffset;\r\n\t        currentData.l = data.l;\r\n\t        currentData.lh = data.lh;\r\n\t        currentData.lineWidths = data.lineWidths;\r\n\t        currentData.ls = data.ls;\r\n\t        currentData.of = data.of;\r\n\t        currentData.s = data.s;\r\n\t        currentData.sc = data.sc;\r\n\t        currentData.sw = data.sw;\r\n\t        currentData.sz = data.sz;\r\n\t        currentData.ps = data.ps;\r\n\t        currentData.t = data.t;\r\n\t        currentData.tr = data.tr;\r\n\t        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n\t        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n\t        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n\t        currentData.yOffset = data.yOffset;\r\n\t        currentData.finalSize = data.finalSize;\r\n\t        currentData.finalLineHeight = data.finalLineHeight;\r\n\t        currentData.finalText = data.finalText;*/\r\n\t};\r\n\t\r\n\tTextProperty.prototype.searchProperty = function() {\r\n\t    return this.searchKeyframes();\r\n\t};\r\n\t\r\n\tTextProperty.prototype.searchKeyframes = function() {\r\n\t    this.kf = this.data.d.k.length > 1;\r\n\t    if(this.kf) {\r\n\t        this.addEffect(this.getKeyframeValue.bind(this));\r\n\t    }\r\n\t    return this.kf;\r\n\t}\r\n\t\r\n\tTextProperty.prototype.addEffect = function(effectFunction) {\r\n\t\tthis.effectsSequence.push(effectFunction);\r\n\t    this.elem.addDynamicProperty(this);\r\n\t};\r\n\t\r\n\tTextProperty.prototype.getValue = function(_finalValue) {\r\n\t    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n\t        return;\r\n\t    }\r\n\t    var currentTextValue = this.currentData.t;        \r\n\t    if(this.lock) {\r\n\t        this.setCurrentData(this.currentData, currentTextValue);\r\n\t        return;\r\n\t    }\r\n\t    this.lock = true;\r\n\t    this._mdf = false;\r\n\t    var multipliedValue;\r\n\t    var i, len = this.effectsSequence.length;\r\n\t    var finalValue = _finalValue || this.currentData;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        finalValue = this.effectsSequence[i](finalValue);\r\n\t    }\r\n\t    this.setCurrentData(finalValue, currentTextValue);\r\n\t    this.pv = this.v = this.currentData;\r\n\t    this.lock = false;\r\n\t    this.frameId = this.elem.globalData.frameId;\r\n\t}\r\n\t\r\n\tTextProperty.prototype.getKeyframeValue = function(currentValue) {\r\n\t    var textKeys = this.data.d.k, textDocumentData;\r\n\t    var frameNum = this.elem.comp.renderedFrame;\r\n\t    var i = 0, len = textKeys.length;\r\n\t    while(i <= len - 1) {\r\n\t        textDocumentData = textKeys[i].s;\r\n\t        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n\t            break;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    if(this.keysIndex !== i) {\r\n\t        currentValue = textDocumentData;\r\n\t        this.keysIndex = i;\r\n\t    }\r\n\t    return currentValue;\r\n\t};\r\n\t\r\n\tTextProperty.prototype.buildFinalText = function(text) {\r\n\t    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n\t    var charactersArray = [];\r\n\t    var i = 0, len = text.length;\r\n\t    while (i < len) {\r\n\t        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n\t            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n\t        } else {\r\n\t            charactersArray.push(text.charAt(i));\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    return charactersArray;\r\n\t}\r\n\t\r\n\tTextProperty.prototype.completeTextData = function(documentData) {\r\n\t    documentData.__complete = true;\r\n\t    var fontManager = this.elem.globalData.fontManager;\r\n\t    var data = this.data;\r\n\t    var letters = [];\r\n\t    var i, len;\r\n\t    var newLineFlag, index = 0, val;\r\n\t    var anchorGrouping = data.m.g;\r\n\t    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n\t    var lineWidth = 0;\r\n\t    var maxLineWidth = 0;\r\n\t    var j, jLen;\r\n\t    var fontData = fontManager.getFontByName(documentData.f);\r\n\t    var charData, cLength = 0;\r\n\t    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\t\r\n\t    var fWeight = 'normal', fStyle = 'normal';\r\n\t    len = styles.length;\r\n\t    var styleName;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        styleName = styles[i].toLowerCase();\r\n\t        switch(styleName) {\r\n\t            case 'italic':\r\n\t            fStyle = 'italic';\r\n\t            break;\r\n\t            case 'bold':\r\n\t            fWeight = '700';\r\n\t            break;\r\n\t            case 'black':\r\n\t            fWeight = '900';\r\n\t            break;\r\n\t            case 'medium':\r\n\t            fWeight = '500';\r\n\t            break;\r\n\t            case 'regular':\r\n\t            case 'normal':\r\n\t            fWeight = '400';\r\n\t            break;\r\n\t            case 'light':\r\n\t            case 'thin':\r\n\t            fWeight = '200';\r\n\t            break;\r\n\t        }\r\n\t    }\r\n\t    documentData.fWeight = fontData.fWeight || fWeight;\r\n\t    documentData.fStyle = fStyle;\r\n\t    len = documentData.t.length;\r\n\t    documentData.finalSize = documentData.s;\r\n\t    documentData.finalText = this.buildFinalText(documentData.t);\r\n\t    documentData.finalLineHeight = documentData.lh;\r\n\t    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n\t    if(documentData.sz){\r\n\t        var flag = true;\r\n\t        var boxWidth = documentData.sz[0];\r\n\t        var boxHeight = documentData.sz[1];\r\n\t        var currentHeight, finalText;\r\n\t        while(flag) {\r\n\t            finalText = this.buildFinalText(documentData.t);\r\n\t            currentHeight = 0;\r\n\t            lineWidth = 0;\r\n\t            len = finalText.length;\r\n\t            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n\t            var lastSpaceIndex = -1;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                newLineFlag = false;\r\n\t                if(finalText[i] === ' '){\r\n\t                    lastSpaceIndex = i;\r\n\t                }else if(finalText[i].charCodeAt(0) === 13){\r\n\t                    lineWidth = 0;\r\n\t                    newLineFlag = true;\r\n\t                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n\t                }\r\n\t                if(fontManager.chars){\r\n\t                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n\t                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n\t                }else{\r\n\t                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n\t                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n\t                }\r\n\t                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n\t                    if(lastSpaceIndex === -1){\r\n\t                        len += 1;\r\n\t                    } else {\r\n\t                        i = lastSpaceIndex;\r\n\t                    }\r\n\t                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n\t                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n\t                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n\t                    lastSpaceIndex = -1;\r\n\t                    lineWidth = 0;\r\n\t                }else {\r\n\t                    lineWidth += cLength;\r\n\t                    lineWidth += trackingOffset;\r\n\t                }\r\n\t            }\r\n\t            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n\t            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n\t                documentData.finalSize -= 1;\r\n\t                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n\t            } else {\r\n\t                documentData.finalText = finalText;\r\n\t                len = documentData.finalText.length;\r\n\t                flag = false;\r\n\t            }\r\n\t        }\r\n\t\r\n\t    }\r\n\t    lineWidth = - trackingOffset;\r\n\t    cLength = 0;\r\n\t    var uncollapsedSpaces = 0;\r\n\t    var currentChar;\r\n\t    for (i = 0;i < len ;i += 1) {\r\n\t        newLineFlag = false;\r\n\t        currentChar = documentData.finalText[i];\r\n\t        if(currentChar === ' '){\r\n\t            val = '\\u00A0';\r\n\t        }else if(currentChar.charCodeAt(0) === 13){\r\n\t            uncollapsedSpaces = 0;\r\n\t            lineWidths.push(lineWidth);\r\n\t            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n\t            lineWidth = - 2 * trackingOffset;\r\n\t            val = '';\r\n\t            newLineFlag = true;\r\n\t            currentLine += 1;\r\n\t        }else{\r\n\t            val = documentData.finalText[i];\r\n\t        }\r\n\t        if(fontManager.chars){\r\n\t            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n\t            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n\t        }else{\r\n\t            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n\t            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n\t            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n\t        }\r\n\t\r\n\t        //\r\n\t        if(currentChar === ' '){\r\n\t            uncollapsedSpaces += cLength + trackingOffset;\r\n\t        } else {\r\n\t            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n\t            uncollapsedSpaces = 0;\r\n\t        }\r\n\t        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n\t        if(anchorGrouping == 2){\r\n\t            currentSize += cLength;\r\n\t            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n\t                if(val === '' || val === '\\u00A0'){\r\n\t                    currentSize -= cLength;\r\n\t                }\r\n\t                while(currentPos<=i){\r\n\t                    letters[currentPos].an = currentSize;\r\n\t                    letters[currentPos].ind = index;\r\n\t                    letters[currentPos].extra = cLength;\r\n\t                    currentPos += 1;\r\n\t                }\r\n\t                index += 1;\r\n\t                currentSize = 0;\r\n\t            }\r\n\t        }else if(anchorGrouping == 3){\r\n\t            currentSize += cLength;\r\n\t            if(val === '' || i === len - 1){\r\n\t                if(val === ''){\r\n\t                    currentSize -= cLength;\r\n\t                }\r\n\t                while(currentPos<=i){\r\n\t                    letters[currentPos].an = currentSize;\r\n\t                    letters[currentPos].ind = index;\r\n\t                    letters[currentPos].extra = cLength;\r\n\t                    currentPos += 1;\r\n\t                }\r\n\t                currentSize = 0;\r\n\t                index += 1;\r\n\t            }\r\n\t        }else{\r\n\t            letters[index].ind = index;\r\n\t            letters[index].extra = 0;\r\n\t            index += 1;\r\n\t        }\r\n\t    }\r\n\t    documentData.l = letters;\r\n\t    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n\t    lineWidths.push(lineWidth);\r\n\t    if(documentData.sz){\r\n\t        documentData.boxWidth = documentData.sz[0];\r\n\t        documentData.justifyOffset = 0;\r\n\t    }else{\r\n\t        documentData.boxWidth = maxLineWidth;\r\n\t        switch(documentData.j){\r\n\t            case 1:\r\n\t                documentData.justifyOffset = - documentData.boxWidth;\r\n\t                break;\r\n\t            case 2:\r\n\t                documentData.justifyOffset = - documentData.boxWidth/2;\r\n\t                break;\r\n\t            default:\r\n\t                documentData.justifyOffset = 0;\r\n\t        }\r\n\t    }\r\n\t    documentData.lineWidths = lineWidths;\r\n\t\r\n\t    var animators = data.a, animatorData, letterData;\r\n\t    jLen = animators.length;\r\n\t    var based, ind, indexes = [];\r\n\t    for(j=0;j<jLen;j+=1){\r\n\t        animatorData = animators[j];\r\n\t        if(animatorData.a.sc){\r\n\t            documentData.strokeColorAnim = true;\r\n\t        }\r\n\t        if(animatorData.a.sw){\r\n\t            documentData.strokeWidthAnim = true;\r\n\t        }\r\n\t        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n\t            documentData.fillColorAnim = true;\r\n\t        }\r\n\t        ind = 0;\r\n\t        based = animatorData.s.b;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            letterData = letters[i];\r\n\t            letterData.anIndexes[j] = ind;\r\n\t            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n\t                if(animatorData.s.rn === 1){\r\n\t                    indexes.push(ind);\r\n\t                }\r\n\t                ind += 1;\r\n\t            }\r\n\t        }\r\n\t        data.a[j].s.totalChars = ind;\r\n\t        var currentInd = -1, newInd;\r\n\t        if(animatorData.s.rn === 1){\r\n\t            for(i = 0; i < len; i += 1){\r\n\t                letterData = letters[i];\r\n\t                if(currentInd != letterData.anIndexes[j]){\r\n\t                    currentInd = letterData.anIndexes[j];\r\n\t                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n\t                }\r\n\t                letterData.anIndexes[j] = newInd;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n\t    documentData.ls = documentData.ls || 0;\r\n\t    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n\t};\r\n\t\r\n\tTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\t\tindex = index === undefined \r\n\t    ? this.keysIndex === -1 \r\n\t        ? 0 \r\n\t        : this.keysIndex \r\n\t    : index;\r\n\t    var dData = this.data.d.k[index].s;\r\n\t    for(var s in newData) {\r\n\t        dData[s] = newData[s];\r\n\t    }\r\n\t    this.recalculate(index);\r\n\t};\r\n\t\r\n\tTextProperty.prototype.recalculate = function(index) {\r\n\t    var dData = this.data.d.k[index].s;\r\n\t    dData.__complete = false;\r\n\t    this.keysIndex = this.kf ? -1 : 0;\r\n\t    this._isFirstFrame = true;\r\n\t    this.getValue(dData);\r\n\t}\r\n\t\r\n\tTextProperty.prototype.canResizeFont = function(_canResize) {\r\n\t    this.canResize = _canResize;\r\n\t    this.recalculate(this.keysIndex);\r\n\t};\r\n\t\r\n\tTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n\t    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n\t    this.recalculate(this.keysIndex);\r\n\t};\r\n\t\n\tvar TextSelectorProp = (function(){\r\n\t    var max = Math.max;\r\n\t    var min = Math.min;\r\n\t    var floor = Math.floor;\r\n\t\r\n\t    function TextSelectorProp(elem,data){\r\n\t        this._currentTextLength = -1;\r\n\t        this.k = false;\r\n\t        this.data = data;\r\n\t        this.elem = elem;\r\n\t        this.comp = elem.comp;\r\n\t        this.finalS = 0;\r\n\t        this.finalE = 0;\r\n\t        this.initDynamicPropertyContainer(elem);\r\n\t        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n\t        if('e' in data){\r\n\t            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n\t        }else{\r\n\t            this.e = {v:100};\r\n\t        }\r\n\t        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n\t        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n\t        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n\t        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n\t        if(!this.dynamicProperties.length){\r\n\t            this.getValue();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    TextSelectorProp.prototype = {\r\n\t        getMult: function(ind) {\r\n\t            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n\t                this.getValue();\r\n\t            }\r\n\t            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n\t            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n\t            var mult = 0;\r\n\t            var s = this.finalS;\r\n\t            var e = this.finalE;\r\n\t            var type = this.data.sh;\r\n\t            if(type == 2){\r\n\t                if(e === s){\r\n\t                    mult = ind >= e ? 1 : 0;\r\n\t                }else{\r\n\t                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n\t                }\r\n\t                mult = easer(mult);\r\n\t            }else if(type == 3){\r\n\t                if(e === s){\r\n\t                    mult = ind >= e ? 0 : 1;\r\n\t                }else{\r\n\t                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n\t                }\r\n\t\r\n\t                mult = easer(mult);\r\n\t            }else if(type == 4){\r\n\t                if(e === s){\r\n\t                    mult = 0;\r\n\t                }else{\r\n\t                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n\t                    if(mult<0.5){\r\n\t                        mult *= 2;\r\n\t                    }else{\r\n\t                        mult = 1 - 2*(mult-0.5);\r\n\t                    }\r\n\t                }\r\n\t                mult = easer(mult);\r\n\t            }else if(type == 5){\r\n\t                if(e === s){\r\n\t                    mult = 0;\r\n\t                }else{\r\n\t                    var tot = e - s;\r\n\t                    /*ind += 0.5;\r\n\t                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n\t                    ind = min(max(0,ind+0.5-s),e-s);\r\n\t                    var x = -tot/2+ind;\r\n\t                    var a = tot/2;\r\n\t                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n\t                }\r\n\t                mult = easer(mult);\r\n\t            }else if(type == 6){\r\n\t                if(e === s){\r\n\t                    mult = 0;\r\n\t                }else{\r\n\t                    ind = min(max(0,ind+0.5-s),e-s);\r\n\t                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n\t                    /*\r\n\t                     ind = Math.min(Math.max(s,ind),e-1);\r\n\t                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n\t                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n\t                }\r\n\t                mult = easer(mult);\r\n\t            }else {\r\n\t                if(ind >= floor(s)){\r\n\t                    if(ind-s < 0){\r\n\t                        mult = 1 - (s - ind);\r\n\t                    }else{\r\n\t                        mult = max(0,min(e-ind,1));\r\n\t                    }\r\n\t                }\r\n\t                mult = easer(mult);\r\n\t            }\r\n\t            return mult*this.a.v;\r\n\t        },\r\n\t        getValue: function(newCharsFlag) {\r\n\t            this.iterateDynamicProperties();\r\n\t            this._mdf = newCharsFlag || this._mdf;\r\n\t            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n\t            if(newCharsFlag && this.data.r === 2) {\r\n\t                this.e.v = this._currentTextLength;\r\n\t            }\r\n\t            var divisor = this.data.r === 2 ? 1 : 100 / this._currentTextLength;\r\n\t            var o = this.o.v/divisor;\r\n\t            var s = this.s.v/divisor + o;\r\n\t            var e = (this.e.v/divisor) + o;\r\n\t            if(s>e){\r\n\t                var _s = s;\r\n\t                s = e;\r\n\t                e = _s;\r\n\t            }\r\n\t            this.finalS = s;\r\n\t            this.finalE = e;\r\n\t        }\r\n\t    }\r\n\t    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\t\r\n\t    function getTextSelectorProp(elem, data,arr) {\r\n\t        return new TextSelectorProp(elem, data, arr);\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        getTextSelectorProp: getTextSelectorProp\r\n\t    };\r\n\t}());\r\n\t\r\n\t    \n\tvar pool_factory = (function() {\r\n\t\treturn function(initialLength, _create, _release, _clone) {\r\n\t\r\n\t\t\tvar _length = 0;\r\n\t\t\tvar _maxLength = initialLength;\r\n\t\t\tvar pool = createSizedArray(_maxLength);\r\n\t\r\n\t\t\tvar ob = {\r\n\t\t\t\tnewElement: newElement,\r\n\t\t\t\trelease: release\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction newElement(){\r\n\t\t\t\tvar element;\r\n\t\t\t\tif(_length){\r\n\t\t\t\t\t_length -= 1;\r\n\t\t\t\t\telement = pool[_length];\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement = _create();\r\n\t\t\t\t}\r\n\t\t\t\treturn element;\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction release(element) {\r\n\t\t\t\tif(_length === _maxLength) {\r\n\t\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t\t}\r\n\t\t\t\tif (_release) {\r\n\t\t\t\t\t_release(element);\r\n\t\t\t\t}\r\n\t\t\t\tpool[_length] = element;\r\n\t\t\t\t_length += 1;\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction clone() {\r\n\t\t\t\tvar clonedElement = newElement();\r\n\t\t\t\treturn _clone(clonedElement);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn ob;\r\n\t\t};\r\n\t}());\r\n\t\n\tvar pooling = (function(){\r\n\t\r\n\t\tfunction double(arr){\r\n\t\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t\t}\r\n\t\r\n\t\treturn {\r\n\t\t\tdouble: double\r\n\t\t};\r\n\t}());\n\tvar point_pool = (function(){\r\n\t\r\n\t\tfunction create() {\r\n\t\t\treturn createTypedArray('float32', 2);\r\n\t\t}\r\n\t\treturn pool_factory(8, create);\r\n\t}());\n\tvar shape_pool = (function(){\r\n\t\r\n\t\tfunction create() {\r\n\t\t\treturn new ShapePath();\r\n\t\t}\r\n\t\r\n\t\tfunction release(shapePath) {\r\n\t\t\tvar len = shapePath._length, i;\r\n\t\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\t\tshapePath.v[i] = null;\r\n\t\t\t\tshapePath.i[i] = null;\r\n\t\t\t\tshapePath.o[i] = null;\r\n\t\t\t}\r\n\t\t\tshapePath._length = 0;\r\n\t\t\tshapePath.c = false;\r\n\t\t}\r\n\t\r\n\t\tfunction clone(shape) {\r\n\t\t\tvar cloned = factory.newElement();\r\n\t\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\t\tcloned.setLength(len);\r\n\t\t\tcloned.c = shape.c;\r\n\t\t\tvar pt;\r\n\t\t\t\r\n\t\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t\t}\r\n\t\t\treturn cloned;\r\n\t\t}\r\n\t\r\n\t\tvar factory = pool_factory(4, create, release);\r\n\t\tfactory.clone = clone;\r\n\t\r\n\t\treturn factory;\r\n\t}());\n\tvar shapeCollection_pool = (function(){\r\n\t\tvar ob = {\r\n\t\t\tnewShapeCollection: newShapeCollection,\r\n\t\t\trelease: release\r\n\t\t};\r\n\t\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = 4;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\t\r\n\t\tfunction newShapeCollection(){\r\n\t\t\tvar shapeCollection;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\tshapeCollection = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t\t}\r\n\t\t\treturn shapeCollection;\r\n\t\t}\r\n\t\r\n\t\tfunction release(shapeCollection) {\r\n\t\t\tvar i, len = shapeCollection._length;\r\n\t\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t\t}\r\n\t\t\tshapeCollection._length = 0;\r\n\t\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tpool[_length] = shapeCollection;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\t\r\n\t\treturn ob;\r\n\t}());\n\tvar segments_length_pool = (function(){\r\n\t\r\n\t\tfunction create() {\r\n\t\t\treturn {\r\n\t\t\t\tlengths: [],\r\n\t\t\t\ttotalLength: 0\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tfunction release(element) {\r\n\t\t\tvar i, len = element.lengths.length;\r\n\t\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t\t}\r\n\t\t\telement.lengths.length = 0;\r\n\t\t}\r\n\t\r\n\t\treturn pool_factory(8, create, release);\r\n\t}());\n\tvar bezier_length_pool = (function(){\r\n\t\r\n\t\tfunction create() {\r\n\t\t\treturn {\r\n\t            addedLength: 0,\r\n\t            percents: createTypedArray('float32', defaultCurveSegments),\r\n\t            lengths: createTypedArray('float32', defaultCurveSegments),\r\n\t        };\r\n\t\t}\r\n\t\treturn pool_factory(8, create);\r\n\t}());\n\tfunction BaseRenderer(){}\r\n\tBaseRenderer.prototype.checkLayers = function(num){\r\n\t    var i, len = this.layers.length, data;\r\n\t    this.completeLayers = true;\r\n\t    for (i = len - 1; i >= 0; i--) {\r\n\t        if (!this.elements[i]) {\r\n\t            data = this.layers[i];\r\n\t            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n\t            {\r\n\t                this.buildItem(i);\r\n\t            }\r\n\t        }\r\n\t        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n\t    }\r\n\t    this.checkPendingElements();\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.createItem = function(layer){\r\n\t    switch(layer.ty){\r\n\t        case 2:\r\n\t            return this.createImage(layer);\r\n\t        case 0:\r\n\t            return this.createComp(layer);\r\n\t        case 1:\r\n\t            return this.createSolid(layer);\r\n\t        case 3:\r\n\t            return this.createNull(layer);\r\n\t        case 4:\r\n\t            return this.createShape(layer);\r\n\t        case 5:\r\n\t            return this.createText(layer);\r\n\t        case 13:\r\n\t            return this.createCamera(layer);\r\n\t    }\r\n\t    return this.createNull(layer);\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.createCamera = function(){\r\n\t    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.buildAllItems = function(){\r\n\t    var i, len = this.layers.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.buildItem(i);\r\n\t    }\r\n\t    this.checkPendingElements();\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.includeLayers = function(newLayers){\r\n\t    this.completeLayers = false;\r\n\t    var i, len = newLayers.length;\r\n\t    var j, jLen = this.layers.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        j = 0;\r\n\t        while(j<jLen){\r\n\t            if(this.layers[j].id == newLayers[i].id){\r\n\t                this.layers[j] = newLayers[i];\r\n\t                break;\r\n\t            }\r\n\t            j += 1;\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n\t    this.globalData.projectInterface = pInterface;\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.initItems = function(){\r\n\t    if(!this.globalData.progressiveLoad){\r\n\t        this.buildAllItems();\r\n\t    }\r\n\t};\r\n\tBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n\t    var elements = this.elements;\r\n\t    var layers = this.layers;\r\n\t    var i=0, len = layers.length;\r\n\t    while (i < len) {\r\n\t        if (layers[i].ind == parentName) {\r\n\t            if (!elements[i] || elements[i] === true) {\r\n\t                this.buildItem(i);\r\n\t                this.addPendingElement(element);\r\n\t            } else {\r\n\t                hierarchy.push(elements[i]);\r\n\t                elements[i].setAsParent();\r\n\t                if(layers[i].parent !== undefined) {\r\n\t                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n\t                } else {\r\n\t                    element.setHierarchy(hierarchy);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.addPendingElement = function(element){\r\n\t    this.pendingElements.push(element);\r\n\t};\r\n\t\r\n\tBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n\t    var i, len = assets.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(assets[i].xt){\r\n\t            var comp = this.createComp(assets[i]);\r\n\t            comp.initExpressions();\r\n\t            this.globalData.projectInterface.registerComposition(comp);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\n\tfunction SVGRenderer(animationItem, config){\r\n\t    this.animationItem = animationItem;\r\n\t    this.layers = null;\r\n\t    this.renderedFrame = -1;\r\n\t    this.svgElement = createNS('svg');\r\n\t    var maskElement = createNS('g');\r\n\t    this.svgElement.appendChild(maskElement);\r\n\t    this.layerElement = maskElement;\r\n\t    var defs = createNS( 'defs');\r\n\t    this.svgElement.appendChild(defs);\r\n\t    this.renderConfig = {\r\n\t        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n\t        progressiveLoad: (config && config.progressiveLoad) || false,\r\n\t        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n\t        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n\t        viewBoxSize: (config && config.viewBoxSize) || false,\r\n\t        className: (config && config.className) || ''\r\n\t    };\r\n\t    this.globalData = {\r\n\t        _mdf: false,\r\n\t        frameNum: -1,\r\n\t        defs: defs,\r\n\t        frameId: 0,\r\n\t        compSize: {w:0,h:0},\r\n\t        renderConfig: this.renderConfig,\r\n\t        fontManager: new FontManager()\r\n\t    };\r\n\t    this.elements = [];\r\n\t    this.pendingElements = [];\r\n\t    this.destroyed = false;\r\n\t\r\n\t}\r\n\t\r\n\textendPrototype([BaseRenderer],SVGRenderer);\r\n\t\r\n\tSVGRenderer.prototype.createNull = function (data) {\r\n\t    return new NullElement(data,this.globalData,this);\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.createShape = function (data) {\r\n\t    return new SVGShapeElement(data,this.globalData,this);\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.createText = function (data) {\r\n\t    return new SVGTextElement(data,this.globalData,this);\r\n\t\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.createImage = function (data) {\r\n\t    return new IImageElement(data,this.globalData,this);\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.createComp = function (data) {\r\n\t    return new SVGCompElement(data,this.globalData,this);\r\n\t\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.createSolid = function (data) {\r\n\t    return new ISolidElement(data,this.globalData,this);\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.configAnimation = function(animData){\r\n\t    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n\t    if(this.renderConfig.viewBoxSize) {\r\n\t        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n\t    } else {\r\n\t        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n\t    }\r\n\t\r\n\t    if(!this.renderConfig.viewBoxOnly) {\r\n\t        this.svgElement.setAttribute('width',animData.w);\r\n\t        this.svgElement.setAttribute('height',animData.h);\r\n\t        this.svgElement.style.width = '100%';\r\n\t        this.svgElement.style.height = '100%';\r\n\t        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n\t    }\r\n\t    if(this.renderConfig.className) {\r\n\t        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n\t    }\r\n\t    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n\t    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n\t    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n\t    this.animationItem.wrapper.appendChild(this.svgElement);\r\n\t    //Mask animation\r\n\t    var defs = this.globalData.defs;\r\n\t\r\n\t    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n\t    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n\t    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n\t    this.globalData.nm = animData.nm;\r\n\t    this.globalData.compSize.w = animData.w;\r\n\t    this.globalData.compSize.h = animData.h;\r\n\t    this.globalData.frameRate = animData.fr;\r\n\t    this.data = animData;\r\n\t\r\n\t    var maskElement = createNS( 'clipPath');\r\n\t    var rect = createNS('rect');\r\n\t    rect.setAttribute('width',animData.w);\r\n\t    rect.setAttribute('height',animData.h);\r\n\t    rect.setAttribute('x',0);\r\n\t    rect.setAttribute('y',0);\r\n\t    var maskId = 'animationMask_'+randomString(10);\r\n\t    maskElement.setAttribute('id', maskId);\r\n\t    maskElement.appendChild(rect);\r\n\t    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\t\r\n\t    defs.appendChild(maskElement);\r\n\t    this.layers = animData.layers;\r\n\t    this.globalData.fontManager.addChars(animData.chars);\r\n\t    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n\t    this.elements = createSizedArray(animData.layers.length);\r\n\t};\r\n\t\r\n\t\r\n\tSVGRenderer.prototype.destroy = function () {\r\n\t    this.animationItem.wrapper.innerHTML = '';\r\n\t    this.layerElement = null;\r\n\t    this.globalData.defs = null;\r\n\t    var i, len = this.layers ? this.layers.length : 0;\r\n\t    for (i = 0; i < len; i++) {\r\n\t        if(this.elements[i]){\r\n\t            this.elements[i].destroy();\r\n\t        }\r\n\t    }\r\n\t    this.elements.length = 0;\r\n\t    this.destroyed = true;\r\n\t    this.animationItem = null;\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.updateContainerSize = function () {\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.buildItem  = function(pos){\r\n\t    var elements = this.elements;\r\n\t    if(elements[pos] || this.layers[pos].ty == 99){\r\n\t        return;\r\n\t    }\r\n\t    elements[pos] = true;\r\n\t    var element = this.createItem(this.layers[pos]);\r\n\t\r\n\t    elements[pos] = element;\r\n\t    if(expressionsPlugin){\r\n\t        if(this.layers[pos].ty === 0){\r\n\t            this.globalData.projectInterface.registerComposition(element);\r\n\t        }\r\n\t        element.initExpressions();\r\n\t    }\r\n\t    this.appendElementInPos(element,pos);\r\n\t    if(this.layers[pos].tt){\r\n\t        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n\t            this.buildItem(pos - 1);\r\n\t            this.addPendingElement(element);\r\n\t        } else {\r\n\t            element.setMatte(elements[pos - 1].layerId);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.checkPendingElements  = function(){\r\n\t    while(this.pendingElements.length){\r\n\t        var element = this.pendingElements.pop();\r\n\t        element.checkParenting();\r\n\t        if(element.data.tt){\r\n\t            var i = 0, len = this.elements.length;\r\n\t            while(i<len){\r\n\t                if(this.elements[i] === element){\r\n\t                    element.setMatte(this.elements[i - 1].layerId);\r\n\t                    break;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.renderFrame = function(num){\r\n\t    if(this.renderedFrame === num || this.destroyed){\r\n\t        return;\r\n\t    }\r\n\t    if(num === null){\r\n\t        num = this.renderedFrame;\r\n\t    }else{\r\n\t        this.renderedFrame = num;\r\n\t    }\r\n\t    // console.log('-------');\r\n\t    // console.log('FRAME ',num);\r\n\t    this.globalData.frameNum = num;\r\n\t    this.globalData.frameId += 1;\r\n\t    this.globalData.projectInterface.currentFrame = num;\r\n\t    this.globalData._mdf = false;\r\n\t    var i, len = this.layers.length;\r\n\t    if(!this.completeLayers){\r\n\t        this.checkLayers(num);\r\n\t    }\r\n\t    for (i = len - 1; i >= 0; i--) {\r\n\t        if(this.completeLayers || this.elements[i]){\r\n\t            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n\t        }\r\n\t    }\r\n\t    if(this.globalData._mdf) {\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            if(this.completeLayers || this.elements[i]){\r\n\t                this.elements[i].renderFrame();\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n\t    var newElement = element.getBaseElement();\r\n\t    if(!newElement){\r\n\t        return;\r\n\t    }\r\n\t    var i = 0;\r\n\t    var nextElement;\r\n\t    while(i<pos){\r\n\t        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n\t            nextElement = this.elements[i].getBaseElement();\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    if(nextElement){\r\n\t        this.layerElement.insertBefore(newElement, nextElement);\r\n\t    } else {\r\n\t        this.layerElement.appendChild(newElement);\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.hide = function(){\r\n\t    this.layerElement.style.display = 'none';\r\n\t};\r\n\t\r\n\tSVGRenderer.prototype.show = function(){\r\n\t    this.layerElement.style.display = 'block';\r\n\t};\r\n\t\n\tfunction MaskElement(data,element,globalData) {\r\n\t    this.data = data;\r\n\t    this.element = element;\r\n\t    this.globalData = globalData;\r\n\t    this.storedData = [];\r\n\t    this.masksProperties = this.data.masksProperties || [];\r\n\t    this.maskElement = null;\r\n\t    var defs = this.globalData.defs;\r\n\t    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n\t    this.viewData = createSizedArray(len);\r\n\t    this.solidPath = '';\r\n\t\r\n\t\r\n\t    var path, properties = this.masksProperties;\r\n\t    var count = 0;\r\n\t    var currentMasks = [];\r\n\t    var j, jLen;\r\n\t    var layerId = randomString(10);\r\n\t    var rect, expansor, feMorph,x;\r\n\t    var maskType = 'clipPath', maskRef = 'clip-path';\r\n\t    for (i = 0; i < len; i++) {\r\n\t\r\n\t        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n\t            maskType = 'mask';\r\n\t            maskRef = 'mask';\r\n\t        }\r\n\t\r\n\t        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n\t            rect = createNS( 'rect');\r\n\t            rect.setAttribute('fill', '#ffffff');\r\n\t            rect.setAttribute('width', this.element.comp.data.w);\r\n\t            rect.setAttribute('height', this.element.comp.data.h);\r\n\t            currentMasks.push(rect);\r\n\t        } else {\r\n\t            rect = null;\r\n\t        }\r\n\t\r\n\t        path = createNS( 'path');\r\n\t        if(properties[i].mode == 'n') {\r\n\t            // TODO move this to a factory or to a constructor\r\n\t            this.viewData[i] = {\r\n\t                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n\t                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n\t                elem: path,\r\n\t                lastPath: ''\r\n\t            };\r\n\t            defs.appendChild(path);\r\n\t            continue;\r\n\t        }\r\n\t        count += 1;\r\n\t\r\n\t        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n\t        path.setAttribute('clip-rule','nonzero');\r\n\t        var filterID;\r\n\t\r\n\t        if (properties[i].x.k !== 0) {\r\n\t            maskType = 'mask';\r\n\t            maskRef = 'mask';\r\n\t            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n\t            filterID = 'fi_'+randomString(10);\r\n\t            expansor = createNS('filter');\r\n\t            expansor.setAttribute('id',filterID);\r\n\t            feMorph = createNS('feMorphology');\r\n\t            feMorph.setAttribute('operator','dilate');\r\n\t            feMorph.setAttribute('in','SourceGraphic');\r\n\t            feMorph.setAttribute('radius','0');\r\n\t            expansor.appendChild(feMorph);\r\n\t            defs.appendChild(expansor);\r\n\t            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n\t        } else {\r\n\t            feMorph = null;\r\n\t            x = null;\r\n\t        }\r\n\t\r\n\t        // TODO move this to a factory or to a constructor\r\n\t        this.storedData[i] = {\r\n\t             elem: path,\r\n\t             x: x,\r\n\t             expan: feMorph,\r\n\t            lastPath: '',\r\n\t            lastOperator:'',\r\n\t            filterId:filterID,\r\n\t            lastRadius:0\r\n\t        };\r\n\t        if(properties[i].mode == 'i'){\r\n\t            jLen = currentMasks.length;\r\n\t            var g = createNS('g');\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                g.appendChild(currentMasks[j]);\r\n\t            }\r\n\t            var mask = createNS('mask');\r\n\t            mask.setAttribute('mask-type','alpha');\r\n\t            mask.setAttribute('id',layerId+'_'+count);\r\n\t            mask.appendChild(path);\r\n\t            defs.appendChild(mask);\r\n\t            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\t\r\n\t            currentMasks.length = 0;\r\n\t            currentMasks.push(g);\r\n\t        }else{\r\n\t            currentMasks.push(path);\r\n\t        }\r\n\t        if(properties[i].inv && !this.solidPath){\r\n\t            this.solidPath = this.createLayerSolidPath();\r\n\t        }\r\n\t        // TODO move this to a factory or to a constructor\r\n\t        this.viewData[i] = {\r\n\t            elem: path,\r\n\t            lastPath: '',\r\n\t            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n\t            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n\t            invRect: rect\r\n\t        };\r\n\t        if(!this.viewData[i].prop.k){\r\n\t            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    this.maskElement = createNS( maskType);\r\n\t\r\n\t    len = currentMasks.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.maskElement.appendChild(currentMasks[i]);\r\n\t    }\r\n\t\r\n\t    if(count > 0){\r\n\t        this.maskElement.setAttribute('id', layerId);\r\n\t        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n\t        defs.appendChild(this.maskElement);\r\n\t    }\r\n\t    if (this.viewData.length) {\r\n\t        this.element.addRenderableComponent(this);\r\n\t    }\r\n\t\r\n\t}\r\n\t\r\n\tMaskElement.prototype.getMaskProperty = function(pos){\r\n\t    return this.viewData[pos].prop;\r\n\t};\r\n\t\r\n\tMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n\t    var finalMat = this.element.finalTransform.mat;\r\n\t    var i, len = this.masksProperties.length;\r\n\t    for (i = 0; i < len; i++) {\r\n\t        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n\t            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n\t        }\r\n\t        if(this.viewData[i].op._mdf || isFirstFrame){\r\n\t            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n\t        }\r\n\t        if(this.masksProperties[i].mode !== 'n'){\r\n\t            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n\t                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n\t                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n\t            }\r\n\t            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n\t                var feMorph = this.storedData[i].expan;\r\n\t                if(this.storedData[i].x.v < 0){\r\n\t                    if(this.storedData[i].lastOperator !== 'erode'){\r\n\t                        this.storedData[i].lastOperator = 'erode';\r\n\t                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n\t                    }\r\n\t                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n\t                }else{\r\n\t                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n\t                        this.storedData[i].lastOperator = 'dilate';\r\n\t                        this.storedData[i].elem.setAttribute('filter',null);\r\n\t                    }\r\n\t                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\t\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tMaskElement.prototype.getMaskelement = function () {\r\n\t    return this.maskElement;\r\n\t};\r\n\t\r\n\tMaskElement.prototype.createLayerSolidPath = function(){\r\n\t    var path = 'M0,0 ';\r\n\t    path += ' h' + this.globalData.compSize.w ;\r\n\t    path += ' v' + this.globalData.compSize.h ;\r\n\t    path += ' h-' + this.globalData.compSize.w ;\r\n\t    path += ' v-' + this.globalData.compSize.h + ' ';\r\n\t    return path;\r\n\t};\r\n\t\r\n\tMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n\t    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n\t    var i, len;\r\n\t    len = pathNodes._length;\r\n\t    for(i=1;i<len;i+=1){\r\n\t        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n\t        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n\t    }\r\n\t        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n\t    if(pathNodes.c && len > 1){\r\n\t        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n\t    }\r\n\t    //pathNodes.__renderedString = pathString;\r\n\t\r\n\t\r\n\t    if(viewData.lastPath !== pathString){\r\n\t        var pathShapeValue = '';\r\n\t        if(viewData.elem){\r\n\t            if(pathNodes.c){\r\n\t                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n\t            }\r\n\t            viewData.elem.setAttribute('d',pathShapeValue);\r\n\t        }\r\n\t        viewData.lastPath = pathString;\r\n\t    }\r\n\t};\r\n\t\r\n\tMaskElement.prototype.destroy = function(){\r\n\t    this.element = null;\r\n\t    this.globalData = null;\r\n\t    this.maskElement = null;\r\n\t    this.data = null;\r\n\t    this.masksProperties = null;\r\n\t};\n\t/**\r\n\t * @file \r\n\t * Handles AE's layer parenting property.\r\n\t *\r\n\t */\r\n\t\r\n\tfunction HierarchyElement(){}\r\n\t\r\n\tHierarchyElement.prototype = {\r\n\t\t/**\r\n\t     * @function \r\n\t     * Initializes hierarchy properties\r\n\t     *\r\n\t     */\r\n\t\tinitHierarchy: function() {\r\n\t\t\t//element's parent list\r\n\t\t    this.hierarchy = [];\r\n\t\t    //if element is parent of another layer _isParent will be true\r\n\t\t    this._isParent = false;\r\n\t\t    this.checkParenting();\r\n\t\t},\r\n\t\t/**\r\n\t     * @function \r\n\t     * Sets layer's hierarchy.\r\n\t     * @param {array} hierarch\r\n\t     * layer's parent list\r\n\t     *\r\n\t     */ \r\n\t\tsetHierarchy: function(hierarchy){\r\n\t\t    this.hierarchy = hierarchy;\r\n\t\t},\r\n\t\t/**\r\n\t     * @function \r\n\t     * Sets layer as parent.\r\n\t     *\r\n\t     */ \r\n\t\tsetAsParent: function() {\r\n\t\t    this._isParent = true;\r\n\t\t},\r\n\t\t/**\r\n\t     * @function \r\n\t     * Searches layer's parenting chain\r\n\t     *\r\n\t     */ \r\n\t\tcheckParenting: function(){\r\n\t\t    if (this.data.parent !== undefined){\r\n\t\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t\t    }\r\n\t\t}\r\n\t};\n\t/**\r\n\t * @file \r\n\t * Handles element's layer frame update.\r\n\t * Checks layer in point and out point\r\n\t *\r\n\t */\r\n\t\r\n\tfunction FrameElement(){}\r\n\t\r\n\tFrameElement.prototype = {\r\n\t    /**\r\n\t     * @function \r\n\t     * Initializes frame related properties.\r\n\t     *\r\n\t     */\r\n\t    initFrame: function(){\r\n\t        //set to true when inpoint is rendered\r\n\t        this._isFirstFrame = false;\r\n\t        //list of animated properties\r\n\t        this.dynamicProperties = [];\r\n\t        // If layer has been modified in current tick this will be true\r\n\t        this._mdf = false;\r\n\t    },\r\n\t    /**\r\n\t     * @function \r\n\t     * Calculates all dynamic values\r\n\t     *\r\n\t     * @param {number} num\r\n\t     * current frame number in Layer's time\r\n\t     * @param {boolean} isVisible\r\n\t     * if layers is currently in range\r\n\t     * \r\n\t     */\r\n\t    prepareProperties: function(num, isVisible) {\r\n\t        var i, len = this.dynamicProperties.length;\r\n\t        for (i = 0;i < len; i += 1) {\r\n\t            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n\t                this.dynamicProperties[i].getValue();\r\n\t                if (this.dynamicProperties[i]._mdf) {\r\n\t                    this.globalData._mdf = true;\r\n\t                    this._mdf = true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    },\r\n\t    addDynamicProperty: function(prop) {\r\n\t        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t            this.dynamicProperties.push(prop);\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction TransformElement(){}\r\n\t\r\n\tTransformElement.prototype = {\r\n\t    initTransform: function() {\r\n\t        this.finalTransform = {\r\n\t            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n\t            _matMdf: false,\r\n\t            _opMdf: false,\r\n\t            mat: new Matrix()\r\n\t        };\r\n\t        if (this.data.ao) {\r\n\t            this.finalTransform.mProp.autoOriented = true;\r\n\t        }\r\n\t\r\n\t        //TODO: check TYPE 11: Guided elements\r\n\t        if (this.data.ty !== 11) {\r\n\t            //this.createElements();\r\n\t        }\r\n\t    },\r\n\t    renderTransform: function() {\r\n\t\r\n\t        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n\t        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\t\r\n\t        if (this.hierarchy) {\r\n\t            var mat;\r\n\t            var finalMat = this.finalTransform.mat;\r\n\t            var i = 0, len = this.hierarchy.length;\r\n\t            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n\t            if (!this.finalTransform._matMdf) {\r\n\t                while (i < len) {\r\n\t                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n\t                        this.finalTransform._matMdf = true;\r\n\t                        break;\r\n\t                    }\r\n\t                    i += 1;\r\n\t                }\r\n\t            }\r\n\t            \r\n\t            if (this.finalTransform._matMdf) {\r\n\t                mat = this.finalTransform.mProp.v.props;\r\n\t                finalMat.cloneFromProps(mat);\r\n\t                for (i = 0; i < len; i += 1) {\r\n\t                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n\t                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    },\r\n\t    globalToLocal: function(pt) {\r\n\t        var transforms = [];\r\n\t        transforms.push(this.finalTransform);\r\n\t        var flag = true;\r\n\t        var comp = this.comp;\r\n\t        while (flag) {\r\n\t            if (comp.finalTransform) {\r\n\t                if (comp.data.hasMask) {\r\n\t                    transforms.splice(0, 0, comp.finalTransform);\r\n\t                }\r\n\t                comp = comp.comp;\r\n\t            } else {\r\n\t                flag = false;\r\n\t            }\r\n\t        }\r\n\t        var i, len = transforms.length,ptNew;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n\t            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n\t            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n\t        }\r\n\t        return pt;\r\n\t    },\r\n\t    mHelper: new Matrix()\r\n\t};\n\tfunction RenderableElement(){\r\n\t\r\n\t}\r\n\t\r\n\tRenderableElement.prototype = {\r\n\t    initRenderable: function() {\r\n\t        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n\t        this.isInRange = false;\r\n\t        //layer's display state\r\n\t        this.hidden = false;\r\n\t        // If layer's transparency equals 0, it can be hidden\r\n\t        this.isTransparent = false;\r\n\t        //list of animated components\r\n\t        this.renderableComponents = [];\r\n\t    },\r\n\t    addRenderableComponent: function(component) {\r\n\t        if(this.renderableComponents.indexOf(component) === -1) {\r\n\t            this.renderableComponents.push(component);\r\n\t        }\r\n\t    },\r\n\t    removeRenderableComponent: function(component) {\r\n\t        if(this.renderableComponents.indexOf(component) !== -1) {\r\n\t            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n\t        }\r\n\t    },\r\n\t    prepareRenderableFrame: function(num) {\r\n\t        this.checkLayerLimits(num);\r\n\t    },\r\n\t    checkTransparency: function(){\r\n\t        if(this.finalTransform.mProp.o.v <= 0) {\r\n\t            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n\t                this.isTransparent = true;\r\n\t                this.hide();\r\n\t            }\r\n\t        } else if(this.isTransparent) {\r\n\t            this.isTransparent = false;\r\n\t            this.show();\r\n\t        }\r\n\t    },\r\n\t    /**\r\n\t     * @function \r\n\t     * Initializes frame related properties.\r\n\t     *\r\n\t     * @param {number} num\r\n\t     * current frame number in Layer's time\r\n\t     * \r\n\t     */\r\n\t    checkLayerLimits: function(num) {\r\n\t        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n\t        {\r\n\t            if(this.isInRange !== true){\r\n\t                this.globalData._mdf = true;\r\n\t                this._mdf = true;\r\n\t                this.isInRange = true;\r\n\t                this.show();\r\n\t            }\r\n\t        } else {\r\n\t            if(this.isInRange !== false){\r\n\t                this.globalData._mdf = true;\r\n\t                this.isInRange = false;\r\n\t                this.hide();\r\n\t            }\r\n\t        }\r\n\t    },\r\n\t    renderRenderable: function() {\r\n\t        var i, len = this.renderableComponents.length;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n\t        }\r\n\t        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n\t        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n\t    },\r\n\t    sourceRectAtTime: function(){\r\n\t        return {\r\n\t            top:0,\r\n\t            left:0,\r\n\t            width:100,\r\n\t            height:100\r\n\t        };\r\n\t    },\r\n\t    getLayerSize: function(){\r\n\t        if(this.data.ty === 5){\r\n\t            return {w:this.data.textData.width,h:this.data.textData.height};\r\n\t        }else{\r\n\t            return {w:this.data.width,h:this.data.height};\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction RenderableDOMElement() {}\r\n\t\r\n\t(function(){\r\n\t    var _prototype = {\r\n\t        initElement: function(data,globalData,comp) {\r\n\t            this.initFrame();\r\n\t            this.initBaseData(data, globalData, comp);\r\n\t            this.initTransform(data, globalData, comp);\r\n\t            this.initHierarchy();\r\n\t            this.initRenderable();\r\n\t            this.initRendererElement();\r\n\t            this.createContainerElements();\r\n\t            this.addMasks();\r\n\t            this.createContent();\r\n\t            this.hide();\r\n\t        },\r\n\t        hide: function(){\r\n\t            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n\t                var elem = this.baseElement || this.layerElement;\r\n\t                elem.style.display = 'none';\r\n\t                this.hidden = true;\r\n\t            }\r\n\t        },\r\n\t        show: function(){\r\n\t            if (this.isInRange && !this.isTransparent){\r\n\t                if (!this.data.hd) {\r\n\t                    var elem = this.baseElement || this.layerElement;\r\n\t                    elem.style.display = 'block';\r\n\t                }\r\n\t                this.hidden = false;\r\n\t                this._isFirstFrame = true;\r\n\t            }\r\n\t        },\r\n\t        renderFrame: function() {\r\n\t            //If it is exported as hidden (data.hd === true) no need to render\r\n\t            //If it is not visible no need to render\r\n\t            if (this.data.hd || this.hidden) {\r\n\t                return;\r\n\t            }\r\n\t            this.renderTransform();\r\n\t            this.renderRenderable();\r\n\t            this.renderElement();\r\n\t            this.renderInnerContent();\r\n\t            if (this._isFirstFrame) {\r\n\t                this._isFirstFrame = false;\r\n\t            }\r\n\t        },\r\n\t        renderInnerContent: function() {},\r\n\t        prepareFrame: function(num) {\r\n\t            this._mdf = false;\r\n\t            this.prepareRenderableFrame(num);\r\n\t            this.prepareProperties(num, this.isInRange);\r\n\t            this.checkTransparency();\r\n\t        },\r\n\t        destroy: function(){\r\n\t            this.innerElem =  null;\r\n\t            this.destroyBaseElement();\r\n\t        }\r\n\t    };\r\n\t    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n\t}());\n\tfunction ProcessedElement(element, position) {\r\n\t\tthis.elem = element;\r\n\t\tthis.pos = position;\r\n\t}\n\tfunction SVGStyleData(data, level) {\r\n\t\tthis.data = data;\r\n\t\tthis.type = data.ty;\r\n\t\tthis.d = '';\r\n\t\tthis.lvl = level;\r\n\t\tthis._mdf = false;\r\n\t\tthis.closed = false;\r\n\t\tthis.pElem = createNS('path');\r\n\t\tthis.msElem = null;\r\n\t}\r\n\t\r\n\tSVGStyleData.prototype.reset = function() {\r\n\t\tthis.d = '';\r\n\t\tthis._mdf = false;\r\n\t};\n\tfunction SVGShapeData(transformers, level, shape) {\r\n\t    this.caches = [];\r\n\t    this.styles = [];\r\n\t    this.transformers = transformers;\r\n\t    this.lStr = '';\r\n\t    this.sh = shape;\r\n\t    this.lvl = level;\r\n\t    //TODO find if there are some cases where _isAnimated can be false. \r\n\t    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n\t    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n\t    this._isAnimated = !!shape.k;\r\n\t    // TODO: commenting this for now since all shapes are animated\r\n\t    var i = 0, len = transformers.length;\r\n\t    while(i < len) {\r\n\t    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n\t    \t\tthis._isAnimated = true;\r\n\t    \t\tbreak;\r\n\t    \t}\r\n\t    \ti += 1;\r\n\t    }\r\n\t}\r\n\t\r\n\tSVGShapeData.prototype.setAsAnimated = function() {\r\n\t    this._isAnimated = true;\r\n\t}\n\tfunction SVGTransformData(mProps, op, container) {\r\n\t\tthis.transform = {\r\n\t\t\tmProps: mProps,\r\n\t\t\top: op,\r\n\t\t\tcontainer: container\r\n\t\t};\r\n\t\tthis.elements = [];\r\n\t    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n\t}\n\tfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\t\tthis.initDynamicPropertyContainer(elem);\r\n\t\tthis.getValue = this.iterateDynamicProperties;\r\n\t\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\t\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\t\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\t\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\t\tthis.style = styleOb;\r\n\t    this._isAnimated = !!this._isAnimated;\r\n\t}\r\n\t\r\n\textendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\n\tfunction SVGFillStyleData(elem, data, styleOb){\r\n\t\tthis.initDynamicPropertyContainer(elem);\r\n\t\tthis.getValue = this.iterateDynamicProperties;\r\n\t\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\t\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\t\tthis.style = styleOb;\r\n\t}\r\n\t\r\n\textendPrototype([DynamicPropertyContainer], SVGFillStyleData);\n\tfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n\t    this.initDynamicPropertyContainer(elem);\r\n\t    this.getValue = this.iterateDynamicProperties;\r\n\t    this.initGradientData(elem, data, styleOb);\r\n\t}\r\n\t\r\n\tSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n\t    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\t    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n\t    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n\t    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n\t    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n\t    this.g = new GradientProperty(elem,data.g,this);\r\n\t    this.style = styleOb;\r\n\t    this.stops = [];\r\n\t    this.setGradientData(styleOb.pElem, data);\r\n\t    this.setGradientOpacity(data, styleOb);\r\n\t    this._isAnimated = !!this._isAnimated;\r\n\t\r\n\t};\r\n\t\r\n\tSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\t\r\n\t    var gradientId = 'gr_'+randomString(10);\r\n\t    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n\t    gfill.setAttribute('id',gradientId);\r\n\t    gfill.setAttribute('spreadMethod','pad');\r\n\t    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n\t    var stops = [];\r\n\t    var stop, j, jLen;\r\n\t    jLen = data.g.p*4;\r\n\t    for(j=0;j<jLen;j+=4){\r\n\t        stop = createNS('stop');\r\n\t        gfill.appendChild(stop);\r\n\t        stops.push(stop);\r\n\t    }\r\n\t    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n\t    \r\n\t    this.gf = gfill;\r\n\t    this.cst = stops;\r\n\t};\r\n\t\r\n\tSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n\t    if(this.g._hasOpacity && !this.g._collapsable){\r\n\t        var stop, j, jLen;\r\n\t        var mask = createNS(\"mask\");\r\n\t        var maskElement = createNS( 'path');\r\n\t        mask.appendChild(maskElement);\r\n\t        var opacityId = 'op_'+randomString(10);\r\n\t        var maskId = 'mk_'+randomString(10);\r\n\t        mask.setAttribute('id',maskId);\r\n\t        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n\t        opFill.setAttribute('id',opacityId);\r\n\t        opFill.setAttribute('spreadMethod','pad');\r\n\t        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n\t        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n\t        var stops = this.stops;\r\n\t        for(j=data.g.p*4;j<jLen;j+=2){\r\n\t            stop = createNS('stop');\r\n\t            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n\t            opFill.appendChild(stop);\r\n\t            stops.push(stop);\r\n\t        }\r\n\t        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n\t        this.of = opFill;\r\n\t        this.ms = mask;\r\n\t        this.ost = stops;\r\n\t        this.maskId = maskId;\r\n\t        styleOb.msElem = maskElement;\r\n\t    }\r\n\t};\r\n\t\r\n\textendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\n\tfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\t\tthis.initDynamicPropertyContainer(elem);\r\n\t\tthis.getValue = this.iterateDynamicProperties;\r\n\t\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\t\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\t    this.initGradientData(elem, data, styleOb);\r\n\t    this._isAnimated = !!this._isAnimated;\r\n\t}\r\n\t\r\n\textendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\n\tfunction ShapeGroupData() {\r\n\t\tthis.it = [];\r\n\t    this.prevViewData = [];\r\n\t    this.gr = createNS('g');\r\n\t}\n\tvar SVGElementsRenderer = (function() {\r\n\t\tvar _identityMatrix = new Matrix();\r\n\t\tvar _matrixHelper = new Matrix();\r\n\t\r\n\t\tvar ob = {\r\n\t\t\tcreateRenderFunction: createRenderFunction\r\n\t\t}\r\n\t\r\n\t\tfunction createRenderFunction(data) {\r\n\t\t    var ty = data.ty;\r\n\t\t    switch(data.ty) {\r\n\t\t        case 'fl':\r\n\t\t        return renderFill;\r\n\t\t        case 'gf':\r\n\t\t        return renderGradient;\r\n\t\t        case 'gs':\r\n\t\t        return renderGradientStroke;\r\n\t\t        case 'st':\r\n\t\t        return renderStroke;\r\n\t\t        case 'sh':\r\n\t\t        case 'el':\r\n\t\t        case 'rc':\r\n\t\t        case 'sr':\r\n\t\t        return renderPath;\r\n\t\t        case 'tr':\r\n\t\t        return renderContentTransform;\r\n\t\t    }\r\n\t\t}\r\n\t\r\n\t\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t\t    }\r\n\t\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t\t    }\r\n\t\t}\r\n\t\r\n\t\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t\t    var lvl = itemData.lvl;\r\n\t\t    var paths, mat, props, iterations, k;\r\n\t\t    for(l=0;l<lLen;l+=1){\r\n\t\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t\t        if(itemData.styles[l].lvl < lvl){\r\n\t\t            mat = _matrixHelper.reset();\r\n\t\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t\t            k = itemData.transformers.length-1;\r\n\t\t            while(!redraw && iterations > 0) {\r\n\t\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t\t                iterations --;\r\n\t\t                k --;\r\n\t\t            }\r\n\t\t            if(redraw) {\r\n\t\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t\t                k = itemData.transformers.length-1;\r\n\t\t                while(iterations > 0) {\r\n\t\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t\t                    iterations --;\r\n\t\t                    k --;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        } else {\r\n\t\t            mat = _identityMatrix;\r\n\t\t        }\r\n\t\t        paths = itemData.sh.paths;\r\n\t\t        jLen = paths._length;\r\n\t\t        if(redraw){\r\n\t\t            pathStringTransformed = '';\r\n\t\t            for(j=0;j<jLen;j+=1){\r\n\t\t                pathNodes = paths.shapes[j];\r\n\t\t                if(pathNodes && pathNodes._length){\r\n\t\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t\t                }\r\n\t\t            }\r\n\t\t            itemData.caches[l] = pathStringTransformed;\r\n\t\t        } else {\r\n\t\t            pathStringTransformed = itemData.caches[l];\r\n\t\t        }\r\n\t\t        itemData.styles[l].d += pathStringTransformed;\r\n\t\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t\t    }\r\n\t\t}\r\n\t\r\n\t\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t\t    var styleElem = itemData.style;\r\n\t\r\n\t\t    if(itemData.c._mdf || isFirstFrame){\r\n\t\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t\t    }\r\n\t\t    if(itemData.o._mdf || isFirstFrame){\r\n\t\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t\t    }\r\n\t\t};\r\n\t\r\n\t\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t\t}\r\n\t\r\n\t\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t\t    var gfill = itemData.gf;\r\n\t\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\t\r\n\t\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t\t    }\r\n\t\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t\t        }\r\n\t\t    }\r\n\t\t    var stops, i, len, stop;\r\n\t\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t\t        stops = itemData.cst;\r\n\t\t        var cValues = itemData.g.c;\r\n\t\t        len = stops.length;\r\n\t\t        for (i = 0; i < len; i += 1){\r\n\t\t            stop = stops[i];\r\n\t\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t\t        }\r\n\t\t    }\r\n\t\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t\t        var oValues = itemData.g.o;\r\n\t\t        if(itemData.g._collapsable) {\r\n\t\t            stops = itemData.cst;\r\n\t\t        } else {\r\n\t\t            stops = itemData.ost;\r\n\t\t        }\r\n\t\t        len = stops.length;\r\n\t\t        for (i = 0; i < len; i += 1) {\r\n\t\t            stop = stops[i];\r\n\t\t            if(!itemData.g._collapsable) {\r\n\t\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t\t            }\r\n\t\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t\t        }\r\n\t\t    }\r\n\t\t    if (styleData.t === 1) {\r\n\t\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t\t            gfill.setAttribute('x2', pt2[0]);\r\n\t\t            gfill.setAttribute('y2', pt2[1]);\r\n\t\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t\t            }\r\n\t\t        }\r\n\t\t    } else {\r\n\t\t        var rad;\r\n\t\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t\t            gfill.setAttribute('r', rad);\r\n\t\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t\t                itemData.of.setAttribute('r', rad);\r\n\t\t            }\r\n\t\t        }\r\n\t\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t\t            if (!rad) {\r\n\t\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t\t            }\r\n\t\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\t\r\n\t\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t\t            var dist = rad * percent;\r\n\t\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t\t            gfill.setAttribute('fx', x);\r\n\t\t            gfill.setAttribute('fy', y);\r\n\t\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t\t                itemData.of.setAttribute('fx', x);\r\n\t\t                itemData.of.setAttribute('fy', y);\r\n\t\t            }\r\n\t\t        }\r\n\t\t        //gfill.setAttribute('fy','200');\r\n\t\t    }\r\n\t\t};\r\n\t\r\n\t\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t\t    var styleElem = itemData.style;\r\n\t\t    var d = itemData.d;\r\n\t\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t\t    }\r\n\t\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t\t    }\r\n\t\t    if(itemData.o._mdf || isFirstFrame){\r\n\t\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t\t    }\r\n\t\t    if(itemData.w._mdf || isFirstFrame){\r\n\t\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t\t        if(styleElem.msElem){\r\n\t\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\r\n\t\treturn ob;\r\n\t}())\n\tfunction BaseElement(){\r\n\t}\r\n\t\r\n\tBaseElement.prototype = {\r\n\t    checkMasks: function(){\r\n\t        if(!this.data.hasMask){\r\n\t            return false;\r\n\t        }\r\n\t        var i = 0, len = this.data.masksProperties.length;\r\n\t        while(i<len) {\r\n\t            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n\t                return true;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        return false;\r\n\t    },\r\n\t    initExpressions: function(){\r\n\t        this.layerInterface = LayerExpressionInterface(this);\r\n\t        if(this.data.hasMask && this.maskManager) {\r\n\t            this.layerInterface.registerMaskInterface(this.maskManager);\r\n\t        }\r\n\t        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n\t        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\t\r\n\t        if(this.data.ty === 0 || this.data.xt){\r\n\t            this.compInterface = CompExpressionInterface(this);\r\n\t        } else if(this.data.ty === 4){\r\n\t            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n\t            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n\t        } else if(this.data.ty === 5){\r\n\t            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n\t            this.layerInterface.text = this.layerInterface.textInterface;\r\n\t        }\r\n\t    },\r\n\t    blendModeEnums: {\r\n\t        1:'multiply',\r\n\t        2:'screen',\r\n\t        3:'overlay',\r\n\t        4:'darken',\r\n\t        5:'lighten',\r\n\t        6:'color-dodge',\r\n\t        7:'color-burn',\r\n\t        8:'hard-light',\r\n\t        9:'soft-light',\r\n\t        10:'difference',\r\n\t        11:'exclusion',\r\n\t        12:'hue',\r\n\t        13:'saturation',\r\n\t        14:'color',\r\n\t        15:'luminosity'\r\n\t    },\r\n\t    getBlendMode: function(){\r\n\t        return this.blendModeEnums[this.data.bm] || '';\r\n\t    },\r\n\t    setBlendMode: function(){\r\n\t        var blendModeValue = this.getBlendMode();\r\n\t        var elem = this.baseElement || this.layerElement;\r\n\t\r\n\t        elem.style['mix-blend-mode'] = blendModeValue;\r\n\t    },\r\n\t    initBaseData: function(data, globalData, comp){\r\n\t        this.globalData = globalData;\r\n\t        this.comp = comp;\r\n\t        this.data = data;\r\n\t        this.layerId = 'ly_'+randomString(10);\r\n\t        \r\n\t        //Stretch factor for old animations missing this property.\r\n\t        if(!this.data.sr){\r\n\t            this.data.sr = 1;\r\n\t        }\r\n\t        // effects manager\r\n\t        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n\t        \r\n\t    },\r\n\t    getType: function(){\r\n\t        return this.type;\r\n\t    }\r\n\t}\n\tfunction NullElement(data,globalData,comp){\r\n\t    this.initFrame();\r\n\t\tthis.initBaseData(data, globalData, comp);\r\n\t    this.initFrame();\r\n\t    this.initTransform(data, globalData, comp);\r\n\t    this.initHierarchy();\r\n\t}\r\n\t\r\n\tNullElement.prototype.prepareFrame = function(num) {\r\n\t    this.prepareProperties(num, true);\r\n\t};\r\n\t\r\n\tNullElement.prototype.renderFrame = function() {\r\n\t};\r\n\t\r\n\tNullElement.prototype.getBaseElement = function() {\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\tNullElement.prototype.destroy = function() {\r\n\t};\r\n\t\r\n\tNullElement.prototype.sourceRectAtTime = function() {\r\n\t};\r\n\t\r\n\tNullElement.prototype.hide = function() {\r\n\t};\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\t\n\tfunction SVGBaseElement(){\r\n\t}\r\n\t\r\n\tSVGBaseElement.prototype = {\r\n\t    initRendererElement: function() {\r\n\t        this.layerElement = createNS('g');\r\n\t    },\r\n\t    createContainerElements: function(){\r\n\t        this.matteElement = createNS('g');\r\n\t        this.transformedElement = this.layerElement;\r\n\t        this.maskedElement = this.layerElement;\r\n\t        this._sizeChanged = false;\r\n\t        var layerElementParent = null;\r\n\t        //If this layer acts as a mask for the following layer\r\n\t        var filId, fil, gg;\r\n\t        if (this.data.td) {\r\n\t            if (this.data.td == 3 || this.data.td == 1) {\r\n\t                var masker = createNS('mask');\r\n\t                masker.setAttribute('id', this.layerId);\r\n\t                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n\t                masker.appendChild(this.layerElement);\r\n\t                layerElementParent = masker;\r\n\t                this.globalData.defs.appendChild(masker);\r\n\t                // This is only for IE and Edge when mask if of type alpha\r\n\t                if (!featureSupport.maskType && this.data.td == 1) {\r\n\t                    masker.setAttribute('mask-type', 'luminance');\r\n\t                    filId = randomString(10);\r\n\t                    fil = filtersFactory.createFilter(filId);\r\n\t                    this.globalData.defs.appendChild(fil);\r\n\t                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n\t                    gg = createNS('g');\r\n\t                    gg.appendChild(this.layerElement);\r\n\t                    layerElementParent = gg;\r\n\t                    masker.appendChild(gg);\r\n\t                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n\t                }\r\n\t            } else if(this.data.td == 2) {\r\n\t                var maskGroup = createNS('mask');\r\n\t                maskGroup.setAttribute('id', this.layerId);\r\n\t                maskGroup.setAttribute('mask-type','alpha');\r\n\t                var maskGrouper = createNS('g');\r\n\t                maskGroup.appendChild(maskGrouper);\r\n\t                filId = randomString(10);\r\n\t                fil = filtersFactory.createFilter(filId);\r\n\t                ////\r\n\t\r\n\t                var feColorMatrix = createNS('feColorMatrix');\r\n\t                feColorMatrix.setAttribute('type', 'matrix');\r\n\t                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n\t                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n\t                fil.appendChild(feColorMatrix);\r\n\t\r\n\t                ////\r\n\t                /*var feCTr = createNS('feComponentTransfer');\r\n\t                feCTr.setAttribute('in','SourceGraphic');\r\n\t                fil.appendChild(feCTr);\r\n\t                var feFunc = createNS('feFuncA');\r\n\t                feFunc.setAttribute('type','table');\r\n\t                feFunc.setAttribute('tableValues','1.0 0.0');\r\n\t                feCTr.appendChild(feFunc);*/\r\n\t                this.globalData.defs.appendChild(fil);\r\n\t                var alphaRect = createNS('rect');\r\n\t                alphaRect.setAttribute('width',  this.comp.data.w);\r\n\t                alphaRect.setAttribute('height', this.comp.data.h);\r\n\t                alphaRect.setAttribute('x','0');\r\n\t                alphaRect.setAttribute('y','0');\r\n\t                alphaRect.setAttribute('fill','#ffffff');\r\n\t                alphaRect.setAttribute('opacity','0');\r\n\t                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n\t                maskGrouper.appendChild(alphaRect);\r\n\t                maskGrouper.appendChild(this.layerElement);\r\n\t                layerElementParent = maskGrouper;\r\n\t                if (!featureSupport.maskType) {\r\n\t                    maskGroup.setAttribute('mask-type', 'luminance');\r\n\t                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n\t                    gg = createNS('g');\r\n\t                    maskGrouper.appendChild(alphaRect);\r\n\t                    gg.appendChild(this.layerElement);\r\n\t                    layerElementParent = gg;\r\n\t                    maskGrouper.appendChild(gg);\r\n\t                }\r\n\t                this.globalData.defs.appendChild(maskGroup);\r\n\t            }\r\n\t        } else if (this.data.tt) {\r\n\t            this.matteElement.appendChild(this.layerElement);\r\n\t            layerElementParent = this.matteElement;\r\n\t            this.baseElement = this.matteElement;\r\n\t        } else {\r\n\t            this.baseElement = this.layerElement;\r\n\t        }\r\n\t        if (this.data.ln) {\r\n\t            this.layerElement.setAttribute('id', this.data.ln);\r\n\t        }\r\n\t        if (this.data.cl) {\r\n\t            this.layerElement.setAttribute('class', this.data.cl);\r\n\t        }\r\n\t        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n\t        if (this.data.ty === 0 && !this.data.hd) {\r\n\t            var cp = createNS( 'clipPath');\r\n\t            var pt = createNS('path');\r\n\t            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n\t            var clipId = 'cp_'+randomString(8);\r\n\t            cp.setAttribute('id',clipId);\r\n\t            cp.appendChild(pt);\r\n\t            this.globalData.defs.appendChild(cp);\r\n\t\r\n\t            if (this.checkMasks()) {\r\n\t                var cpGroup = createNS('g');\r\n\t                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n\t                cpGroup.appendChild(this.layerElement);\r\n\t                this.transformedElement = cpGroup;\r\n\t                if (layerElementParent) {\r\n\t                    layerElementParent.appendChild(this.transformedElement);\r\n\t                } else {\r\n\t                    this.baseElement = this.transformedElement;\r\n\t                }\r\n\t            } else {\r\n\t                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n\t            }\r\n\t            \r\n\t        }\r\n\t        if (this.data.bm !== 0) {\r\n\t            this.setBlendMode();\r\n\t        }\r\n\t        this.renderableEffectsManager = new SVGEffects(this);\r\n\t\r\n\t    },\r\n\t    renderElement: function() {\r\n\t        if (this.finalTransform._matMdf) {\r\n\t            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n\t        }\r\n\t        if (this.finalTransform._opMdf) {\r\n\t            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n\t        }\r\n\t    },\r\n\t    destroyBaseElement: function() {\r\n\t        this.layerElement = null;\r\n\t        this.matteElement = null;\r\n\t        this.maskManager.destroy();\r\n\t    },\r\n\t    getBaseElement: function() {\r\n\t        if (this.data.hd) {\r\n\t            return null;\r\n\t        }\r\n\t        return this.baseElement;\r\n\t    },\r\n\t    addMasks: function() {\r\n\t        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n\t    },\r\n\t    setMatte: function(id) {\r\n\t        if (!this.matteElement) {\r\n\t            return;\r\n\t        }\r\n\t        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n\t    }\r\n\t};\n\tfunction IShapeElement(){\r\n\t}\r\n\t\r\n\tIShapeElement.prototype = {\r\n\t    addShapeToModifiers: function(data) {\r\n\t        var i, len = this.shapeModifiers.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            this.shapeModifiers[i].addShape(data);\r\n\t        }\r\n\t    },\r\n\t    isShapeInAnimatedModifiers: function(data) {\r\n\t        var i = 0, len = this.shapeModifiers.length;\r\n\t        while(i < len) {\r\n\t            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n\t                return true;\r\n\t            }\r\n\t        }\r\n\t        return false;\r\n\t    },\r\n\t    renderModifiers: function() {\r\n\t        if(!this.shapeModifiers.length){\r\n\t            return;\r\n\t        }\r\n\t        var i, len = this.shapes.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            this.shapes[i].sh.reset();\r\n\t        }\r\n\t\r\n\t        len = this.shapeModifiers.length;\r\n\t        for(i=len-1;i>=0;i-=1){\r\n\t            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n\t        }\r\n\t    },\r\n\t    lcEnum: {\r\n\t        '1': 'butt',\r\n\t        '2': 'round',\r\n\t        '3': 'square'\r\n\t    },\r\n\t    ljEnum: {\r\n\t        '1': 'miter',\r\n\t        '2': 'round',\r\n\t        '3': 'butt'\r\n\t    },\r\n\t    searchProcessedElement: function(elem){\r\n\t        var elements = this.processedElements;\r\n\t        var i = 0, len = elements.length;\r\n\t        while(i < len){\r\n\t            if(elements[i].elem === elem){\r\n\t                return elements[i].pos;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        return 0;\r\n\t    },\r\n\t    addProcessedElement: function(elem, pos){\r\n\t        var elements = this.processedElements;\r\n\t        var i = elements.length;\r\n\t        while(i){\r\n\t            i -= 1;\r\n\t            if(elements[i].elem === elem){\r\n\t                elements[i].pos = pos;\r\n\t                return;\r\n\t            }\r\n\t        }\r\n\t        elements.push(new ProcessedElement(elem, pos));\r\n\t    },\r\n\t    prepareFrame: function(num) {\r\n\t        this.prepareRenderableFrame(num);\r\n\t        this.prepareProperties(num, this.isInRange);\r\n\t    }\r\n\t};\n\tfunction ITextElement(){\r\n\t}\r\n\t\r\n\tITextElement.prototype.initElement = function(data,globalData,comp){\r\n\t    this.lettersChangedFlag = true;\r\n\t    this.initFrame();\r\n\t    this.initBaseData(data, globalData, comp);\r\n\t    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n\t    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n\t    this.initTransform(data, globalData, comp);\r\n\t    this.initHierarchy();\r\n\t    this.initRenderable();\r\n\t    this.initRendererElement();\r\n\t    this.createContainerElements();\r\n\t    this.addMasks();\r\n\t    this.createContent();\r\n\t    this.hide();\r\n\t    this.textAnimator.searchProperties(this.dynamicProperties);\r\n\t};\r\n\t\r\n\tITextElement.prototype.prepareFrame = function(num) {\r\n\t    this._mdf = false;\r\n\t    this.prepareRenderableFrame(num);\r\n\t    this.prepareProperties(num, this.isInRange);\r\n\t    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n\t        this.buildNewText();\r\n\t        this.textProperty._isFirstFrame = false;\r\n\t        this.textProperty._mdf = false;\r\n\t    }\r\n\t};\r\n\t\r\n\tITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n\t    var j,jLen = shapes.length;\r\n\t    var k, kLen, pathNodes;\r\n\t    var shapeStr = '';\r\n\t    for(j=0;j<jLen;j+=1){\r\n\t        pathNodes = shapes[j].ks.k;\r\n\t        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n\t    }\r\n\t    return shapeStr;\r\n\t};\r\n\t\r\n\tITextElement.prototype.updateDocumentData = function(newData, index) {\r\n\t    this.textProperty.updateDocumentData(newData, index);\r\n\t};\r\n\t\r\n\tITextElement.prototype.canResizeFont = function(_canResize) {\r\n\t    this.textProperty.canResizeFont(_canResize);\r\n\t};\r\n\t\r\n\tITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n\t    this.textProperty.setMinimumFontSize(_fontSize);\r\n\t};\r\n\t\r\n\tITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n\t    if(documentData.ps){\r\n\t        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n\t    }\r\n\t    matrixHelper.translate(0,-documentData.ls,0);\r\n\t    switch(documentData.j){\r\n\t        case 1:\r\n\t            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n\t            break;\r\n\t        case 2:\r\n\t            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n\t            break;\r\n\t    }\r\n\t    matrixHelper.translate(xPos, yPos, 0);\r\n\t};\r\n\t\r\n\t\r\n\tITextElement.prototype.buildColor = function(colorData) {\r\n\t    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n\t};\r\n\t\r\n\tITextElement.prototype.emptyProp = new LetterProps();\r\n\t\r\n\tITextElement.prototype.destroy = function(){\r\n\t    \r\n\t};\n\tfunction ICompElement(){}\r\n\t\r\n\textendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\t\r\n\tICompElement.prototype.initElement = function(data,globalData,comp) {\r\n\t    this.initFrame();\r\n\t    this.initBaseData(data, globalData, comp);\r\n\t    this.initTransform(data, globalData, comp);\r\n\t    this.initRenderable();\r\n\t    this.initHierarchy();\r\n\t    this.initRendererElement();\r\n\t    this.createContainerElements();\r\n\t    this.addMasks();\r\n\t    if(this.data.xt || !globalData.progressiveLoad){\r\n\t        this.buildAllItems();\r\n\t    }\r\n\t    this.hide();\r\n\t};\r\n\t\r\n\t/*ICompElement.prototype.hide = function(){\r\n\t    if(!this.hidden){\r\n\t        this.hideElement();\r\n\t        var i,len = this.elements.length;\r\n\t        for( i = 0; i < len; i+=1 ){\r\n\t            if(this.elements[i]){\r\n\t                this.elements[i].hide();\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};*/\r\n\t\r\n\tICompElement.prototype.prepareFrame = function(num){\r\n\t    this._mdf = false;\r\n\t    this.prepareRenderableFrame(num);\r\n\t    this.prepareProperties(num, this.isInRange);\r\n\t    if(!this.isInRange && !this.data.xt){\r\n\t        return;\r\n\t    }\r\n\t\r\n\t    if (!this.tm._placeholder) {\r\n\t        var timeRemapped = this.tm.v;\r\n\t        if(timeRemapped === this.data.op){\r\n\t            timeRemapped = this.data.op - 1;\r\n\t        }\r\n\t        this.renderedFrame = timeRemapped;\r\n\t    } else {\r\n\t        this.renderedFrame = num/this.data.sr;\r\n\t    }\r\n\t    var i,len = this.elements.length;\r\n\t    if(!this.completeLayers){\r\n\t        this.checkLayers(this.renderedFrame);\r\n\t    }\r\n\t    for( i = 0; i < len; i+=1 ){\r\n\t        if(this.completeLayers || this.elements[i]){\r\n\t            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n\t            if(this.elements[i]._mdf) {\r\n\t                this._mdf = true;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tICompElement.prototype.renderInnerContent = function() {\r\n\t    var i,len = this.layers.length;\r\n\t    for( i = 0; i < len; i += 1 ){\r\n\t        if(this.completeLayers || this.elements[i]){\r\n\t            this.elements[i].renderFrame();\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tICompElement.prototype.setElements = function(elems){\r\n\t    this.elements = elems;\r\n\t};\r\n\t\r\n\tICompElement.prototype.getElements = function(){\r\n\t    return this.elements;\r\n\t};\r\n\t\r\n\tICompElement.prototype.destroyElements = function(){\r\n\t    var i,len = this.layers.length;\r\n\t    for( i = 0; i < len; i+=1 ){\r\n\t        if(this.elements[i]){\r\n\t            this.elements[i].destroy();\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tICompElement.prototype.destroy = function(){\r\n\t    this.destroyElements();\r\n\t    this.destroyBaseElement();\r\n\t};\r\n\t\n\tfunction IImageElement(data,globalData,comp){\r\n\t    this.assetData = globalData.getAssetData(data.refId);\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\t\r\n\tIImageElement.prototype.createContent = function(){\r\n\t\r\n\t    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\t\r\n\t    this.innerElem = createNS('image');\r\n\t    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n\t    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n\t    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n\t    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n\t    \r\n\t    this.layerElement.appendChild(this.innerElem);\r\n\t};\r\n\t\n\tfunction ISolidElement(data,globalData,comp){\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\textendPrototype([IImageElement], ISolidElement);\r\n\t\r\n\tISolidElement.prototype.createContent = function(){\r\n\t\r\n\t    var rect = createNS('rect');\r\n\t    ////rect.style.width = this.data.sw;\r\n\t    ////rect.style.height = this.data.sh;\r\n\t    ////rect.style.fill = this.data.sc;\r\n\t    rect.setAttribute('width',this.data.sw);\r\n\t    rect.setAttribute('height',this.data.sh);\r\n\t    rect.setAttribute('fill',this.data.sc);\r\n\t    this.layerElement.appendChild(rect);\r\n\t};\n\tfunction SVGCompElement(data,globalData,comp){\r\n\t    this.layers = data.layers;\r\n\t    this.supports3d = true;\r\n\t    this.completeLayers = false;\r\n\t    this.pendingElements = [];\r\n\t    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n\t    //this.layerElement = createNS('g');\r\n\t    this.initElement(data,globalData,comp);\r\n\t    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n\t}\r\n\t\r\n\textendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\n\tfunction SVGTextElement(data,globalData,comp){\r\n\t    this.textSpans = [];\r\n\t    this.renderType = 'svg';\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\t\r\n\tSVGTextElement.prototype.createContent = function(){\r\n\t\r\n\t    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n\t        this.textContainer = createNS('text');\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n\t    var i = 0, len = textArray.length;\r\n\t    var textContents = [], currentTextContent = '';\r\n\t    while (i < len) {\r\n\t        if(textArray[i] === String.fromCharCode(13)) {\r\n\t            textContents.push(currentTextContent);\r\n\t            currentTextContent = '';\r\n\t        } else {\r\n\t            currentTextContent += textArray[i];\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    textContents.push(currentTextContent);\r\n\t    return textContents;\r\n\t}\r\n\t\r\n\tSVGTextElement.prototype.buildNewText = function(){\r\n\t    var i, len;\r\n\t\r\n\t    var documentData = this.textProperty.currentData;\r\n\t    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n\t    if(documentData.fc) {\r\n\t        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n\t    }else{\r\n\t        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n\t    }\r\n\t    if(documentData.sc){\r\n\t        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n\t        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n\t    }\r\n\t    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n\t    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n\t    if(fontData.fClass){\r\n\t        this.layerElement.setAttribute('class',fontData.fClass);\r\n\t    } else {\r\n\t        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n\t        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n\t        this.layerElement.setAttribute('font-style', fStyle);\r\n\t        this.layerElement.setAttribute('font-weight', fWeight);\r\n\t    }\r\n\t\r\n\t    var letters = documentData.l || [];\r\n\t    var usesGlyphs = this.globalData.fontManager.chars;\r\n\t    len = letters.length;\r\n\t    if(!len){\r\n\t        return;\r\n\t    }\r\n\t    var tSpan;\r\n\t    var matrixHelper = this.mHelper;\r\n\t    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n\t    var xPos = 0, yPos = 0, firstLine = true;\r\n\t    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n\t    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n\t        var tElement = this.textContainer;\r\n\t        var justify = 'start';\r\n\t        switch(documentData.j) {\r\n\t            case 1:\r\n\t                justify = 'end';\r\n\t                break;\r\n\t            case 2:\r\n\t                justify = 'middle';\r\n\t                break;\r\n\t        }\r\n\t        tElement.setAttribute('text-anchor',justify);\r\n\t        tElement.setAttribute('letter-spacing',trackingOffset);\r\n\t        var textContent = this.buildTextContents(documentData.finalText);\r\n\t        len = textContent.length;\r\n\t        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n\t        for ( i = 0; i < len; i += 1) {\r\n\t            tSpan = this.textSpans[i] || createNS('tspan');\r\n\t            tSpan.textContent = textContent[i];\r\n\t            tSpan.setAttribute('x', 0);\r\n\t            tSpan.setAttribute('y', yPos);\r\n\t            tSpan.style.display = 'inherit';\r\n\t            tElement.appendChild(tSpan);\r\n\t            this.textSpans[i] = tSpan;\r\n\t            yPos += documentData.finalLineHeight;\r\n\t        }\r\n\t        \r\n\t        this.layerElement.appendChild(tElement);\r\n\t    } else {\r\n\t        var cachedSpansLength = this.textSpans.length;\r\n\t        var shapeData, charData;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            if(!usesGlyphs || !singleShape || i === 0){\r\n\t                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n\t                if (cachedSpansLength <= i) {\r\n\t                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n\t                    tSpan.setAttribute('stroke-linejoin','round');\r\n\t                    tSpan.setAttribute('stroke-miterlimit','4');\r\n\t                    this.textSpans[i] = tSpan;\r\n\t                    this.layerElement.appendChild(tSpan);\r\n\t                }\r\n\t                tSpan.style.display = 'inherit';\r\n\t            }\r\n\t            \r\n\t            matrixHelper.reset();\r\n\t            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n\t            if (singleShape) {\r\n\t                if(letters[i].n) {\r\n\t                    xPos = -trackingOffset;\r\n\t                    yPos += documentData.yOffset;\r\n\t                    yPos += firstLine ? 1 : 0;\r\n\t                    firstLine = false;\r\n\t                }\r\n\t                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n\t                xPos += letters[i].l || 0;\r\n\t                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n\t                xPos += trackingOffset;\r\n\t            }\r\n\t            if(usesGlyphs) {\r\n\t                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n\t                shapeData = charData && charData.data || {};\r\n\t                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n\t                if(!singleShape){\r\n\t                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n\t                } else {\r\n\t                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n\t                }\r\n\t            } else {\r\n\t                if(singleShape) {\r\n\t                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n\t                }\r\n\t                tSpan.textContent = letters[i].val;\r\n\t                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n\t            }\r\n\t            //\r\n\t        }\r\n\t        if (singleShape) {\r\n\t            tSpan.setAttribute('d',shapeStr);\r\n\t        }\r\n\t    }\r\n\t    while (i < this.textSpans.length){\r\n\t        this.textSpans[i].style.display = 'none';\r\n\t        i += 1;\r\n\t    }\r\n\t    \r\n\t    this._sizeChanged = true;\r\n\t};\r\n\t\r\n\tSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n\t    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n\t    this.renderInnerContent();\r\n\t    if(this._sizeChanged){\r\n\t        this._sizeChanged = false;\r\n\t        var textBox = this.layerElement.getBBox();\r\n\t        this.bbox = {\r\n\t            top: textBox.y,\r\n\t            left: textBox.x,\r\n\t            width: textBox.width,\r\n\t            height: textBox.height\r\n\t        };\r\n\t    }\r\n\t    return this.bbox;\r\n\t};\r\n\t\r\n\tSVGTextElement.prototype.renderInnerContent = function(){\r\n\t\r\n\t    if(!this.data.singleShape){\r\n\t        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n\t        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n\t            this._sizeChanged = true;\r\n\t            var  i,len;\r\n\t            var renderedLetters = this.textAnimator.renderedLetters;\r\n\t\r\n\t            var letters = this.textProperty.currentData.l;\r\n\t\r\n\t            len = letters.length;\r\n\t            var renderedLetter, textSpan;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                if(letters[i].n){\r\n\t                    continue;\r\n\t                }\r\n\t                renderedLetter = renderedLetters[i];\r\n\t                textSpan = this.textSpans[i];\r\n\t                if(renderedLetter._mdf.m) {\r\n\t                    textSpan.setAttribute('transform',renderedLetter.m);\r\n\t                }\r\n\t                if(renderedLetter._mdf.o) {\r\n\t                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n\t                }\r\n\t                if(renderedLetter._mdf.sw){\r\n\t                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n\t                }\r\n\t                if(renderedLetter._mdf.sc){\r\n\t                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n\t                }\r\n\t                if(renderedLetter._mdf.fc){\r\n\t                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction SVGShapeElement(data,globalData,comp){\r\n\t    //List of drawable elements\r\n\t    this.shapes = [];\r\n\t    // Full shape data\r\n\t    this.shapesData = data.shapes;\r\n\t    //List of styles that will be applied to shapes\r\n\t    this.stylesList = [];\r\n\t    //List of modifiers that will be applied to shapes\r\n\t    this.shapeModifiers = [];\r\n\t    //List of items in shape tree\r\n\t    this.itemsData = [];\r\n\t    //List of items in previous shape tree\r\n\t    this.processedElements = [];\r\n\t    // List of animated components\r\n\t    this.animatedContents = [];\r\n\t    this.initElement(data,globalData,comp);\r\n\t    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n\t    // List of elements that have been created\r\n\t    this.prevViewData = [];\r\n\t    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n\t}\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\t\r\n\tSVGShapeElement.prototype.initSecondaryElement = function() {\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\t\r\n\tSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\t\r\n\tSVGShapeElement.prototype.createContent = function(){\r\n\t    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n\t    this.filterUniqueShapes();\r\n\t};\r\n\t\r\n\t/*\r\n\tThis method searches for multiple shapes that affect a single element and one of them is animated\r\n\t*/\r\n\tSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n\t    var i, len = this.shapes.length, shape;\r\n\t    var j, jLen = this.stylesList.length;\r\n\t    var style, count = 0;\r\n\t    var tempShapes = [];\r\n\t    var areAnimated = false;\r\n\t    for(j = 0; j < jLen; j += 1) {\r\n\t        style = this.stylesList[j];\r\n\t        areAnimated = false;\r\n\t        tempShapes.length = 0;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            shape = this.shapes[i];\r\n\t            if(shape.styles.indexOf(style) !== -1) {\r\n\t                tempShapes.push(shape);\r\n\t                areAnimated = shape._isAnimated || areAnimated;\r\n\t            }\r\n\t        }\r\n\t        if(tempShapes.length > 1 && areAnimated) {\r\n\t            this.setShapesAsAnimated(tempShapes);\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n\t    var i, len = shapes.length;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        shapes[i].setAsAnimated();\r\n\t    }\r\n\t}\r\n\t\r\n\tSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n\t    //TODO: prevent drawing of hidden styles\r\n\t    var elementData;\r\n\t    var styleOb = new SVGStyleData(data, level);\r\n\t\r\n\t    var pathElement = styleOb.pElem;\r\n\t    if(data.ty === 'st') {\r\n\t        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n\t    } else if(data.ty === 'fl') {\r\n\t        elementData = new SVGFillStyleData(this, data, styleOb);\r\n\t    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n\t        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n\t        elementData = new gradientConstructor(this, data, styleOb);\r\n\t        this.globalData.defs.appendChild(elementData.gf);\r\n\t        if (elementData.maskId) {\r\n\t            this.globalData.defs.appendChild(elementData.ms);\r\n\t            this.globalData.defs.appendChild(elementData.of);\r\n\t            pathElement.setAttribute('mask','url(#' + elementData.maskId + ')');\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    if(data.ty === 'st' || data.ty === 'gs') {\r\n\t        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n\t        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n\t        pathElement.setAttribute('fill-opacity','0');\r\n\t        if(data.lj === 1) {\r\n\t            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    if(data.r === 2) {\r\n\t        pathElement.setAttribute('fill-rule', 'evenodd');\r\n\t    }\r\n\t\r\n\t    if(data.ln){\r\n\t        pathElement.setAttribute('id',data.ln);\r\n\t    }\r\n\t    if(data.cl){\r\n\t        pathElement.setAttribute('class',data.cl);\r\n\t    }\r\n\t    this.stylesList.push(styleOb);\r\n\t    this.addToAnimatedContents(data, elementData);\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.createGroupElement = function(data) {\r\n\t    var elementData = new ShapeGroupData();\r\n\t    if(data.ln){\r\n\t        elementData.gr.setAttribute('id',data.ln);\r\n\t    }\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n\t    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n\t    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n\t    this.addToAnimatedContents(data, elementData);\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n\t    var ty = 4;\r\n\t    if(data.ty === 'rc'){\r\n\t        ty = 5;\r\n\t    }else if(data.ty === 'el'){\r\n\t        ty = 6;\r\n\t    }else if(data.ty === 'sr'){\r\n\t        ty = 7;\r\n\t    }\r\n\t    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n\t    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n\t    this.shapes.push(elementData);\r\n\t    this.addShapeToModifiers(elementData);\r\n\t    this.addToAnimatedContents(data, elementData);\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n\t    var i = 0, len = this.animatedContents.length;\r\n\t    while(i < len) {\r\n\t        if(this.animatedContents[i].element === element) {\r\n\t            return;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    this.animatedContents.push({\r\n\t        fn: SVGElementsRenderer.createRenderFunction(data),\r\n\t        element: element,\r\n\t        data: data\r\n\t    });\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n\t    var arr = elementData.styles;\r\n\t    var j, jLen = this.stylesList.length;\r\n\t    for (j = 0; j < jLen; j += 1) {\r\n\t        if (!this.stylesList[j].closed) {\r\n\t            arr.push(this.stylesList[j]);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.reloadShapes = function(){\r\n\t    this._isFirstFrame = true;\r\n\t    var i, len = this.itemsData.length;\r\n\t    for( i = 0; i < len; i += 1) {\r\n\t        this.prevViewData[i] = this.itemsData[i];\r\n\t    }\r\n\t    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n\t    this.filterUniqueShapes();\r\n\t    len = this.dynamicProperties.length;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        this.dynamicProperties[i].getValue();\r\n\t    }\r\n\t    this.renderModifiers();\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n\t    var ownTransformers = [].concat(transformers);\r\n\t    var i, len = arr.length - 1;\r\n\t    var j, jLen;\r\n\t    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n\t    for(i=len;i>=0;i-=1){\r\n\t        processedPos = this.searchProcessedElement(arr[i]);\r\n\t        if(!processedPos){\r\n\t            arr[i]._render = render;\r\n\t        } else {\r\n\t            itemsData[i] = prevViewData[processedPos - 1];\r\n\t        }\r\n\t        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createStyleElement(arr[i], level);\r\n\t            } else {\r\n\t                itemsData[i].style.closed = false;\r\n\t            }\r\n\t            if(arr[i]._render){\r\n\t                container.appendChild(itemsData[i].style.pElem);\r\n\t            }\r\n\t            ownStyles.push(itemsData[i].style);\r\n\t        }else if(arr[i].ty == 'gr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createGroupElement(arr[i]);\r\n\t            } else {\r\n\t                jLen = itemsData[i].it.length;\r\n\t                for(j=0;j<jLen;j+=1){\r\n\t                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n\t                }\r\n\t            }\r\n\t            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n\t            if(arr[i]._render){\r\n\t                container.appendChild(itemsData[i].gr);\r\n\t            }\r\n\t        }else if(arr[i].ty == 'tr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createTransformElement(arr[i], container);\r\n\t            }\r\n\t            currentTransform = itemsData[i].transform;\r\n\t            ownTransformers.push(currentTransform);\r\n\t        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n\t            }\r\n\t            this.setElementStyles(itemsData[i]);\r\n\t\r\n\t        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n\t            if(!processedPos){\r\n\t                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n\t                modifier.init(this,arr[i]);\r\n\t                itemsData[i] = modifier;\r\n\t                this.shapeModifiers.push(modifier);\r\n\t            } else {\r\n\t                modifier = itemsData[i];\r\n\t                modifier.closed = false;\r\n\t            }\r\n\t            ownModifiers.push(modifier);\r\n\t        }else if(arr[i].ty == 'rp'){\r\n\t            if(!processedPos){\r\n\t                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n\t                itemsData[i] = modifier;\r\n\t                modifier.init(this,arr,i,itemsData);\r\n\t                this.shapeModifiers.push(modifier);\r\n\t                render = false;\r\n\t            }else{\r\n\t                modifier = itemsData[i];\r\n\t                modifier.closed = true;\r\n\t            }\r\n\t            ownModifiers.push(modifier);\r\n\t        }\r\n\t        this.addProcessedElement(arr[i], i + 1);\r\n\t    }\r\n\t    len = ownStyles.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        ownStyles[i].closed = true;\r\n\t    }\r\n\t    len = ownModifiers.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        ownModifiers[i].closed = true;\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.renderInnerContent = function() {\r\n\t    this.renderModifiers();\r\n\t    var i, len = this.stylesList.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.stylesList[i].reset();\r\n\t    }\r\n\t    this.renderShape();\r\n\t\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n\t            if(this.stylesList[i].msElem){\r\n\t                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n\t                //Adding M0 0 fixes same mask bug on all browsers\r\n\t                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n\t            }\r\n\t            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGShapeElement.prototype.renderShape = function() {\r\n\t    var i, len = this.animatedContents.length;\r\n\t    var animatedContent;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        animatedContent = this.animatedContents[i];\r\n\t        if(this._isFirstFrame || animatedContent.element._isAnimated) {\r\n\t            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tSVGShapeElement.prototype.destroy = function(){\r\n\t    this.destroyBaseElement();\r\n\t    this.shapeData = null;\r\n\t    this.itemsData = null;\r\n\t};\r\n\t\n\tfunction SVGTintFilter(filter, filterManager){\r\n\t    this.filterManager = filterManager;\r\n\t    var feColorMatrix = createNS('feColorMatrix');\r\n\t    feColorMatrix.setAttribute('type','matrix');\r\n\t    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n\t    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n\t    feColorMatrix.setAttribute('result','f1');\r\n\t    filter.appendChild(feColorMatrix);\r\n\t    feColorMatrix = createNS('feColorMatrix');\r\n\t    feColorMatrix.setAttribute('type','matrix');\r\n\t    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n\t    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n\t    feColorMatrix.setAttribute('result','f2');\r\n\t    filter.appendChild(feColorMatrix);\r\n\t    this.matrixFilter = feColorMatrix;\r\n\t    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n\t        var feMerge = createNS('feMerge');\r\n\t        filter.appendChild(feMerge);\r\n\t        var feMergeNode;\r\n\t        feMergeNode = createNS('feMergeNode');\r\n\t        feMergeNode.setAttribute('in','SourceGraphic');\r\n\t        feMerge.appendChild(feMergeNode);\r\n\t        feMergeNode = createNS('feMergeNode');\r\n\t        feMergeNode.setAttribute('in','f2');\r\n\t        feMerge.appendChild(feMergeNode);\r\n\t    }\r\n\t}\r\n\t\r\n\tSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n\t    if(forceRender || this.filterManager._mdf){\r\n\t        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n\t        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n\t        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n\t        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n\t    }\r\n\t};\n\tfunction SVGFillFilter(filter, filterManager){\r\n\t    this.filterManager = filterManager;\r\n\t    var feColorMatrix = createNS('feColorMatrix');\r\n\t    feColorMatrix.setAttribute('type','matrix');\r\n\t    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n\t    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n\t    filter.appendChild(feColorMatrix);\r\n\t    this.matrixFilter = feColorMatrix;\r\n\t}\r\n\tSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n\t    if(forceRender || this.filterManager._mdf){\r\n\t        var color = this.filterManager.effectElements[2].p.v;\r\n\t        var opacity = this.filterManager.effectElements[6].p.v;\r\n\t        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n\t    }\r\n\t};\n\tfunction SVGStrokeEffect(elem, filterManager){\r\n\t    this.initialized = false;\r\n\t    this.filterManager = filterManager;\r\n\t    this.elem = elem;\r\n\t    this.paths = [];\r\n\t}\r\n\t\r\n\tSVGStrokeEffect.prototype.initialize = function(){\r\n\t\r\n\t    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n\t    var path,groupPath, i, len;\r\n\t    if(this.filterManager.effectElements[1].p.v === 1){\r\n\t        len = this.elem.maskManager.masksProperties.length;\r\n\t        i = 0;\r\n\t    } else {\r\n\t        i = this.filterManager.effectElements[0].p.v - 1;\r\n\t        len = i + 1;\r\n\t    }\r\n\t    groupPath = createNS('g'); \r\n\t    groupPath.setAttribute('fill','none');\r\n\t    groupPath.setAttribute('stroke-linecap','round');\r\n\t    groupPath.setAttribute('stroke-dashoffset',1);\r\n\t    for(i;i<len;i+=1){\r\n\t        path = createNS('path');\r\n\t        groupPath.appendChild(path);\r\n\t        this.paths.push({p:path,m:i});\r\n\t    }\r\n\t    if(this.filterManager.effectElements[10].p.v === 3){\r\n\t        var mask = createNS('mask');\r\n\t        var id = 'stms_' + randomString(10);\r\n\t        mask.setAttribute('id',id);\r\n\t        mask.setAttribute('mask-type','alpha');\r\n\t        mask.appendChild(groupPath);\r\n\t        this.elem.globalData.defs.appendChild(mask);\r\n\t        var g = createNS('g');\r\n\t        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n\t        if(elemChildren[0]){\r\n\t            g.appendChild(elemChildren[0]);\r\n\t        }\r\n\t        this.elem.layerElement.appendChild(g);\r\n\t        this.masker = mask;\r\n\t        groupPath.setAttribute('stroke','#fff');\r\n\t    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n\t        if(this.filterManager.effectElements[10].p.v === 2){\r\n\t            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n\t            while(elemChildren.length){\r\n\t                this.elem.layerElement.removeChild(elemChildren[0]);\r\n\t            }\r\n\t        }\r\n\t        this.elem.layerElement.appendChild(groupPath);\r\n\t        this.elem.layerElement.removeAttribute('mask');\r\n\t        groupPath.setAttribute('stroke','#fff');\r\n\t    }\r\n\t    this.initialized = true;\r\n\t    this.pathMasker = groupPath;\r\n\t};\r\n\t\r\n\tSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n\t    if(!this.initialized){\r\n\t        this.initialize();\r\n\t    }\r\n\t    var i, len = this.paths.length;\r\n\t    var mask, path;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(this.paths[i].m === -1) {\r\n\t            continue;\r\n\t        }\r\n\t        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n\t        path = this.paths[i].p;\r\n\t        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n\t            path.setAttribute('d',mask.lastPath);\r\n\t        }\r\n\t        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n\t            var dasharrayValue;\r\n\t            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n\t                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n\t                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n\t                var l = path.getTotalLength();\r\n\t                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n\t                var lineLength = l*(e-s);\r\n\t                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n\t                var units = Math.floor(lineLength/segment);\r\n\t                var j;\r\n\t                for(j=0;j<units;j+=1){\r\n\t                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n\t                }\r\n\t                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n\t            } else {\r\n\t                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n\t            }\r\n\t            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n\t        }\r\n\t    }\r\n\t    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n\t        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n\t    }\r\n\t    \r\n\t    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n\t        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n\t    }\r\n\t    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n\t        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n\t            var color = this.filterManager.effectElements[3].p.v;\r\n\t            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction SVGTritoneFilter(filter, filterManager){\r\n\t    this.filterManager = filterManager;\r\n\t    var feColorMatrix = createNS('feColorMatrix');\r\n\t    feColorMatrix.setAttribute('type','matrix');\r\n\t    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n\t    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n\t    feColorMatrix.setAttribute('result','f1');\r\n\t    filter.appendChild(feColorMatrix);\r\n\t    var feComponentTransfer = createNS('feComponentTransfer');\r\n\t    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n\t    filter.appendChild(feComponentTransfer);\r\n\t    this.matrixFilter = feComponentTransfer;\r\n\t    var feFuncR = createNS('feFuncR');\r\n\t    feFuncR.setAttribute('type','table');\r\n\t    feComponentTransfer.appendChild(feFuncR);\r\n\t    this.feFuncR = feFuncR;\r\n\t    var feFuncG = createNS('feFuncG');\r\n\t    feFuncG.setAttribute('type','table');\r\n\t    feComponentTransfer.appendChild(feFuncG);\r\n\t    this.feFuncG = feFuncG;\r\n\t    var feFuncB = createNS('feFuncB');\r\n\t    feFuncB.setAttribute('type','table');\r\n\t    feComponentTransfer.appendChild(feFuncB);\r\n\t    this.feFuncB = feFuncB;\r\n\t}\r\n\t\r\n\tSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n\t    if(forceRender || this.filterManager._mdf){\r\n\t        var color1 = this.filterManager.effectElements[0].p.v;\r\n\t        var color2 = this.filterManager.effectElements[1].p.v;\r\n\t        var color3 = this.filterManager.effectElements[2].p.v;\r\n\t        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n\t        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n\t        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n\t        this.feFuncR.setAttribute('tableValues', tableR);\r\n\t        this.feFuncG.setAttribute('tableValues', tableG);\r\n\t        this.feFuncB.setAttribute('tableValues', tableB);\r\n\t        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n\t        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n\t    }\r\n\t};\n\tfunction SVGProLevelsFilter(filter, filterManager){\r\n\t    this.filterManager = filterManager;\r\n\t    var effectElements = this.filterManager.effectElements;\r\n\t    var feComponentTransfer = createNS('feComponentTransfer');\r\n\t    var feFuncR, feFuncG, feFuncB;\r\n\t    \r\n\t    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n\t        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n\t    }\r\n\t    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n\t        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n\t    }\r\n\t    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n\t        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n\t    }\r\n\t    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n\t        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n\t    }\r\n\t    \r\n\t    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n\t        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n\t        filter.appendChild(feComponentTransfer);\r\n\t        feComponentTransfer = createNS('feComponentTransfer');\r\n\t    }\r\n\t\r\n\t    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\t\r\n\t        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n\t        filter.appendChild(feComponentTransfer);\r\n\t        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n\t        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n\t        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n\t    }\r\n\t}\r\n\t\r\n\tSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n\t    var feFunc = createNS(type);\r\n\t    feFunc.setAttribute('type','table');\r\n\t    feComponentTransfer.appendChild(feFunc);\r\n\t    return feFunc;\r\n\t};\r\n\t\r\n\tSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n\t    var cnt = 0;\r\n\t    var segments = 256;\r\n\t    var perc;\r\n\t    var min = Math.min(inputBlack, inputWhite);\r\n\t    var max = Math.max(inputBlack, inputWhite);\r\n\t    var table = Array.call(null,{length:segments});\r\n\t    var colorValue;\r\n\t    var pos = 0;\r\n\t    var outputDelta = outputWhite - outputBlack; \r\n\t    var inputDelta = inputWhite - inputBlack; \r\n\t    while(cnt <= 256) {\r\n\t        perc = cnt/256;\r\n\t        if(perc <= min){\r\n\t            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n\t        } else if(perc >= max){\r\n\t            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n\t        } else {\r\n\t            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n\t        }\r\n\t        table[pos++] = colorValue;\r\n\t        cnt += 256/(segments-1);\r\n\t    }\r\n\t    return table.join(' ');\r\n\t};\r\n\t\r\n\tSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n\t    if(forceRender || this.filterManager._mdf){\r\n\t        var val, cnt, perc, bezier;\r\n\t        var effectElements = this.filterManager.effectElements;\r\n\t        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n\t            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n\t            this.feFuncRComposed.setAttribute('tableValues',val);\r\n\t            this.feFuncGComposed.setAttribute('tableValues',val);\r\n\t            this.feFuncBComposed.setAttribute('tableValues',val);\r\n\t        }\r\n\t\r\n\t\r\n\t        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n\t            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n\t            this.feFuncR.setAttribute('tableValues',val);\r\n\t        }\r\n\t\r\n\t        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n\t            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n\t            this.feFuncG.setAttribute('tableValues',val);\r\n\t        }\r\n\t\r\n\t        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n\t            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n\t            this.feFuncB.setAttribute('tableValues',val);\r\n\t        }\r\n\t\r\n\t        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n\t            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n\t            this.feFuncA.setAttribute('tableValues',val);\r\n\t        }\r\n\t        \r\n\t    }\r\n\t};\n\tfunction SVGDropShadowEffect(filter, filterManager){\r\n\t    filter.setAttribute('x','-100%');\r\n\t    filter.setAttribute('y','-100%');\r\n\t    filter.setAttribute('width','400%');\r\n\t    filter.setAttribute('height','400%');\r\n\t    this.filterManager = filterManager;\r\n\t\r\n\t    var feGaussianBlur = createNS('feGaussianBlur');\r\n\t    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n\t    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n\t    feGaussianBlur.setAttribute('stdDeviation','0');\r\n\t    this.feGaussianBlur = feGaussianBlur;\r\n\t    filter.appendChild(feGaussianBlur);\r\n\t\r\n\t    var feOffset = createNS('feOffset');\r\n\t    feOffset.setAttribute('dx','25');\r\n\t    feOffset.setAttribute('dy','0');\r\n\t    feOffset.setAttribute('in','drop_shadow_1');\r\n\t    feOffset.setAttribute('result','drop_shadow_2');\r\n\t    this.feOffset = feOffset;\r\n\t    filter.appendChild(feOffset);\r\n\t    var feFlood = createNS('feFlood');\r\n\t    feFlood.setAttribute('flood-color','#00ff00');\r\n\t    feFlood.setAttribute('flood-opacity','1');\r\n\t    feFlood.setAttribute('result','drop_shadow_3');\r\n\t    this.feFlood = feFlood;\r\n\t    filter.appendChild(feFlood);\r\n\t\r\n\t    var feComposite = createNS('feComposite');\r\n\t    feComposite.setAttribute('in','drop_shadow_3');\r\n\t    feComposite.setAttribute('in2','drop_shadow_2');\r\n\t    feComposite.setAttribute('operator','in');\r\n\t    feComposite.setAttribute('result','drop_shadow_4');\r\n\t    filter.appendChild(feComposite);\r\n\t\r\n\t\r\n\t    var feMerge = createNS('feMerge');\r\n\t    filter.appendChild(feMerge);\r\n\t    var feMergeNode;\r\n\t    feMergeNode = createNS('feMergeNode');\r\n\t    feMerge.appendChild(feMergeNode);\r\n\t    feMergeNode = createNS('feMergeNode');\r\n\t    feMergeNode.setAttribute('in','SourceGraphic');\r\n\t    this.feMergeNode = feMergeNode;\r\n\t    this.feMerge = feMerge;\r\n\t    this.originalNodeAdded = false;\r\n\t    feMerge.appendChild(feMergeNode);\r\n\t}\r\n\t\r\n\tSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n\t    if(forceRender || this.filterManager._mdf){\r\n\t        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n\t            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n\t        }\r\n\t        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n\t            var col = this.filterManager.effectElements[0].p.v;\r\n\t            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n\t        }\r\n\t        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n\t            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n\t        }\r\n\t        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n\t            var distance = this.filterManager.effectElements[3].p.v;\r\n\t            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n\t            var x = distance * Math.cos(angle);\r\n\t            var y = distance * Math.sin(angle);\r\n\t            this.feOffset.setAttribute('dx', x);\r\n\t            this.feOffset.setAttribute('dy', y);\r\n\t        }\r\n\t        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n\t            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n\t                this.feMerge.removeChild(this.feMergeNode);\r\n\t                this.originalNodeAdded = false;\r\n\t            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n\t                this.feMerge.appendChild(this.feMergeNode);\r\n\t                this.originalNodeAdded = true;\r\n\t            }\r\n\t        }*/\r\n\t    }\r\n\t};\n\tvar _svgMatteSymbols = [];\r\n\tvar _svgMatteMaskCounter = 0;\r\n\t\r\n\tfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n\t    this.initialized = false;\r\n\t    this.filterManager = filterManager;\r\n\t    this.filterElem = filterElem;\r\n\t    this.elem = elem;\r\n\t    elem.matteElement = createNS('g');\r\n\t    elem.matteElement.appendChild(elem.layerElement);\r\n\t    elem.matteElement.appendChild(elem.transformedElement);\r\n\t    elem.baseElement = elem.matteElement;\r\n\t}\r\n\t\r\n\tSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n\t    var i = 0, len = _svgMatteSymbols.length;\r\n\t    while(i < len) {\r\n\t        if(_svgMatteSymbols[i] === mask) {\r\n\t            return _svgMatteSymbols[i];\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    return null;\r\n\t};\r\n\t\r\n\tSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n\t    var parentNode = mask.layerElement.parentNode;\r\n\t    if(!parentNode) {\r\n\t        return;\r\n\t    }\r\n\t    var children = parentNode.children;\r\n\t    var i = 0, len = children.length;\r\n\t    while (i < len) {\r\n\t        if (children[i] === mask.layerElement) {\r\n\t            break;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t    var nextChild;\r\n\t    if (i <= len - 2) {\r\n\t        nextChild = children[i + 1];\r\n\t    }\r\n\t    var useElem = createNS('use');\r\n\t    useElem.setAttribute('href', '#' + symbolId);\r\n\t    if(nextChild) {\r\n\t        parentNode.insertBefore(useElem, nextChild);\r\n\t    } else {\r\n\t        parentNode.appendChild(useElem);\r\n\t    }\r\n\t};\r\n\t\r\n\tSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n\t    if(!this.findSymbol(mask)) {\r\n\t        var symbolId = 'matte_' + randomString(5) + '_' + _svgMatteMaskCounter++;\r\n\t        var masker = createNS('mask');\r\n\t        masker.setAttribute('id', mask.layerId);\r\n\t        masker.setAttribute('mask-type', 'alpha');\r\n\t        _svgMatteSymbols.push(mask);\r\n\t        var defs = elem.globalData.defs;\r\n\t        defs.appendChild(masker);\r\n\t        var symbol = createNS('symbol');\r\n\t        symbol.setAttribute('id', symbolId);\r\n\t        this.replaceInParent(mask, symbolId);\r\n\t        symbol.appendChild(mask.layerElement);\r\n\t        defs.appendChild(symbol);\r\n\t        var useElem = createNS('use');\r\n\t        useElem.setAttribute('href', '#' + symbolId);\r\n\t        masker.appendChild(useElem);\r\n\t        mask.data.hd = false;\r\n\t        mask.show();\r\n\t    }\r\n\t    elem.setMatte(mask.layerId);\r\n\t};\r\n\t\r\n\tSVGMatte3Effect.prototype.initialize = function() {\r\n\t    var ind = this.filterManager.effectElements[0].p.v;\r\n\t    var i = 0, len = this.elem.comp.elements.length;\r\n\t    while (i < len) {\r\n\t    \tif (this.elem.comp.elements[i].data.ind === ind) {\r\n\t    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n\t    \t}\r\n\t    \ti += 1;\r\n\t    }\r\n\t    this.initialized = true;\r\n\t};\r\n\t\r\n\tSVGMatte3Effect.prototype.renderFrame = function() {\r\n\t\tif(!this.initialized) {\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t};\n\tfunction SVGEffects(elem){\r\n\t    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n\t    var filId = randomString(10);\r\n\t    var fil = filtersFactory.createFilter(filId);\r\n\t    var count = 0;\r\n\t    this.filters = [];\r\n\t    var filterManager;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        filterManager = null;\r\n\t        if(elem.data.ef[i].ty === 20){\r\n\t            count += 1;\r\n\t            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 21){\r\n\t            count += 1;\r\n\t            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 22){\r\n\t            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 23){\r\n\t            count += 1;\r\n\t            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 24){\r\n\t            count += 1;\r\n\t            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 25){\r\n\t            count += 1;\r\n\t            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n\t        }else if(elem.data.ef[i].ty === 28){\r\n\t            //count += 1;\r\n\t            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n\t        }\r\n\t        if(filterManager) {\r\n\t            this.filters.push(filterManager);\r\n\t        }\r\n\t    }\r\n\t    if(count){\r\n\t        elem.globalData.defs.appendChild(fil);\r\n\t        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n\t    }\r\n\t    if (this.filters.length) {\r\n\t        elem.addRenderableComponent(this);\r\n\t    }\r\n\t}\r\n\t\r\n\tSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n\t    var i, len = this.filters.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.filters[i].renderFrame(_isFirstFrame);\r\n\t    }\r\n\t};\n\tvar animationManager = (function(){\r\n\t    var moduleOb = {};\r\n\t    var registeredAnimations = [];\r\n\t    var initTime = 0;\r\n\t    var len = 0;\r\n\t    var idled = true;\r\n\t    var playingAnimationsNum = 0;\r\n\t    var _stopped = true;\r\n\t\r\n\t    function removeElement(ev){\r\n\t        var i = 0;\r\n\t        var animItem = ev.target;\r\n\t        while(i<len) {\r\n\t            if (registeredAnimations[i].animation === animItem) {\r\n\t                registeredAnimations.splice(i, 1);\r\n\t                i -= 1;\r\n\t                len -= 1;\r\n\t                if(!animItem.isPaused){\r\n\t                    subtractPlayingCount();\r\n\t                }\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function registerAnimation(element, animationData){\r\n\t        if(!element){\r\n\t            return null;\r\n\t        }\r\n\t        var i=0;\r\n\t        while(i<len){\r\n\t            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n\t                return registeredAnimations[i].animation;\r\n\t            }\r\n\t            i+=1;\r\n\t        }\r\n\t        var animItem = new AnimationItem();\r\n\t        setupAnimation(animItem, element);\r\n\t        animItem.setData(element, animationData);\r\n\t        return animItem;\r\n\t    }\r\n\t\r\n\t    function addPlayingCount(){\r\n\t        playingAnimationsNum += 1;\r\n\t        activate();\r\n\t    }\r\n\t\r\n\t    function subtractPlayingCount(){\r\n\t        playingAnimationsNum -= 1;\r\n\t        if(playingAnimationsNum === 0){\r\n\t            idled = true;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function setupAnimation(animItem, element){\r\n\t        animItem.addEventListener('destroy',removeElement);\r\n\t        animItem.addEventListener('_active',addPlayingCount);\r\n\t        animItem.addEventListener('_idle',subtractPlayingCount);\r\n\t        registeredAnimations.push({elem: element,animation:animItem});\r\n\t        len += 1;\r\n\t    }\r\n\t\r\n\t    function loadAnimation(params){\r\n\t        var animItem = new AnimationItem();\r\n\t        setupAnimation(animItem, null);\r\n\t        animItem.setParams(params);\r\n\t        return animItem;\r\n\t    }\r\n\t\r\n\t\r\n\t    function setSpeed(val,animation){\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.setSpeed(val, animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function setDirection(val, animation){\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.setDirection(val, animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function play(animation){\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.play(animation);\r\n\t        }\r\n\t    }\r\n\t    function resume(nowTime) {\r\n\t        var elapsedTime = nowTime - initTime;\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n\t        }\r\n\t        initTime = nowTime;\r\n\t        if(!idled) {\r\n\t            window.requestAnimationFrame(resume);\r\n\t        } else {\r\n\t            _stopped = true;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function first(nowTime){\r\n\t        initTime = nowTime;\r\n\t        window.requestAnimationFrame(resume);\r\n\t    }\r\n\t\r\n\t    function pause(animation) {\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.pause(animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function goToAndStop(value,isFrame,animation) {\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function stop(animation) {\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.stop(animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function togglePause(animation) {\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.togglePause(animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function destroy(animation) {\r\n\t        var i;\r\n\t        for(i=(len-1);i>=0;i-=1){\r\n\t            registeredAnimations[i].animation.destroy(animation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function searchAnimations(animationData, standalone, renderer){\r\n\t        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n\t                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n\t        var i, len = animElements.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            if(renderer){\r\n\t                animElements[i].setAttribute('data-bm-type',renderer);\r\n\t            }\r\n\t            registerAnimation(animElements[i], animationData);\r\n\t        }\r\n\t        if(standalone && len === 0){\r\n\t            if(!renderer){\r\n\t                renderer = 'svg';\r\n\t            }\r\n\t            var body = document.getElementsByTagName('body')[0];\r\n\t            body.innerHTML = '';\r\n\t            var div = createTag('div');\r\n\t            div.style.width = '100%';\r\n\t            div.style.height = '100%';\r\n\t            div.setAttribute('data-bm-type',renderer);\r\n\t            body.appendChild(div);\r\n\t            registerAnimation(div, animationData);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function resize(){\r\n\t        var i;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            registeredAnimations[i].animation.resize();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    /*function start(){\r\n\t        window.requestAnimationFrame(first);\r\n\t    }*/\r\n\t\r\n\t    function activate(){\r\n\t        if(idled){\r\n\t            idled = false;\r\n\t            if(_stopped) {\r\n\t                window.requestAnimationFrame(first);\r\n\t                _stopped = false;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    //start();\r\n\t\r\n\t    //setTimeout(start,0);\r\n\t\r\n\t    moduleOb.registerAnimation = registerAnimation;\r\n\t    moduleOb.loadAnimation = loadAnimation;\r\n\t    moduleOb.setSpeed = setSpeed;\r\n\t    moduleOb.setDirection = setDirection;\r\n\t    moduleOb.play = play;\r\n\t    moduleOb.pause = pause;\r\n\t    moduleOb.stop = stop;\r\n\t    moduleOb.togglePause = togglePause;\r\n\t    moduleOb.searchAnimations = searchAnimations;\r\n\t    moduleOb.resize = resize;\r\n\t    //moduleOb.start = start;\r\n\t    moduleOb.goToAndStop = goToAndStop;\r\n\t    moduleOb.destroy = destroy;\r\n\t    return moduleOb;\r\n\t}());\r\n\t\n\tvar AnimationItem = function () {\r\n\t    this._cbs = [];\r\n\t    this.name = '';\r\n\t    this.path = '';\r\n\t    this.isLoaded = false;\r\n\t    this.currentFrame = 0;\r\n\t    this.currentRawFrame = 0;\r\n\t    this.totalFrames = 0;\r\n\t    this.frameRate = 0;\r\n\t    this.frameMult = 0;\r\n\t    this.playSpeed = 1;\r\n\t    this.playDirection = 1;\r\n\t    this.pendingElements = 0;\r\n\t    this.playCount = 0;\r\n\t    this.animationData = {};\r\n\t    this.layers = [];\r\n\t    this.assets = [];\r\n\t    this.isPaused = true;\r\n\t    this.autoplay = false;\r\n\t    this.loop = true;\r\n\t    this.renderer = null;\r\n\t    this.animationID = randomString(10);\r\n\t    this.assetsPath = '';\r\n\t    this.timeCompleted = 0;\r\n\t    this.segmentPos = 0;\r\n\t    this.subframeEnabled = subframeEnabled;\r\n\t    this.segments = [];\r\n\t    this._idle = true;\r\n\t    this.projectInterface = ProjectInterface();\r\n\t};\r\n\t\r\n\textendPrototype([BaseEvent], AnimationItem);\r\n\t\r\n\tAnimationItem.prototype.setParams = function(params) {\r\n\t    var self = this;\r\n\t    if(params.context){\r\n\t        this.context = params.context;\r\n\t    }\r\n\t    if(params.wrapper || params.container){\r\n\t        this.wrapper = params.wrapper || params.container;\r\n\t    }\r\n\t    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n\t    switch(animType){\r\n\t        case 'canvas':\r\n\t            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n\t            break;\r\n\t        case 'svg':\r\n\t            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n\t            break;\r\n\t        default:\r\n\t            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n\t            break;\r\n\t    }\r\n\t    this.renderer.setProjectInterface(this.projectInterface);\r\n\t    this.animType = animType;\r\n\t\r\n\t    if(params.loop === '' || params.loop === null){\r\n\t    }else if(params.loop === false){\r\n\t        this.loop = false;\r\n\t    }else if(params.loop === true){\r\n\t        this.loop = true;\r\n\t    }else{\r\n\t        this.loop = parseInt(params.loop);\r\n\t    }\r\n\t    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n\t    this.name = params.name ? params.name :  '';\r\n\t    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n\t    this.assetsPath = params.assetsPath;\r\n\t    if(params.animationData){\r\n\t        self.configAnimation(params.animationData);\r\n\t    }else if(params.path){\r\n\t        if(params.path.substr(-4) != 'json'){\r\n\t            if (params.path.substr(-1, 1) != '/') {\r\n\t                params.path += '/';\r\n\t            }\r\n\t            params.path += 'data.json';\r\n\t        }\r\n\t\r\n\t        var xhr = new XMLHttpRequest();\r\n\t        if(params.path.lastIndexOf('\\\\') != -1){\r\n\t            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n\t        }else{\r\n\t            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n\t        }\r\n\t        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n\t        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\t        xhr.open('GET', params.path, true);\r\n\t        xhr.send();\r\n\t        xhr.onreadystatechange = function () {\r\n\t            if (xhr.readyState == 4) {\r\n\t                if(xhr.status == 200){\r\n\t                    self.configAnimation(JSON.parse(xhr.responseText));\r\n\t                }else{\r\n\t                    try{\r\n\t                        var response = JSON.parse(xhr.responseText);\r\n\t                        self.configAnimation(response);\r\n\t                    }catch(err){\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n\t    var params = {\r\n\t        wrapper: wrapper,\r\n\t        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n\t    };\r\n\t    var wrapperAttributes = wrapper.attributes;\r\n\t\r\n\t    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n\t    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\t\r\n\t    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n\t    if(loop === ''){\r\n\t    }else if(loop === 'false'){\r\n\t        params.loop = false;\r\n\t    }else if(loop === 'true'){\r\n\t        params.loop = true;\r\n\t    }else{\r\n\t        params.loop = parseInt(loop);\r\n\t    }\r\n\t    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n\t    params.autoplay = autoplay !== \"false\";\r\n\t\r\n\t    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n\t    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\t\r\n\t    if(prerender === 'false'){\r\n\t        params.prerender = false;\r\n\t    }\r\n\t    this.setParams(params);\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.includeLayers = function(data) {\r\n\t    if(data.op > this.animationData.op){\r\n\t        this.animationData.op = data.op;\r\n\t        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n\t        this.animationData.tf = this.totalFrames;\r\n\t    }\r\n\t    var layers = this.animationData.layers;\r\n\t    var i, len = layers.length;\r\n\t    var newLayers = data.layers;\r\n\t    var j, jLen = newLayers.length;\r\n\t    for(j=0;j<jLen;j+=1){\r\n\t        i = 0;\r\n\t        while(i<len){\r\n\t            if(layers[i].id == newLayers[j].id){\r\n\t                layers[i] = newLayers[j];\r\n\t                break;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t    }\r\n\t    if(data.chars || data.fonts){\r\n\t        this.renderer.globalData.fontManager.addChars(data.chars);\r\n\t        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n\t    }\r\n\t    if(data.assets){\r\n\t        len = data.assets.length;\r\n\t        for(i = 0; i < len; i += 1){\r\n\t            this.animationData.assets.push(data.assets[i]);\r\n\t        }\r\n\t    }\r\n\t    //this.totalFrames = 50;\r\n\t    //this.animationData.tf = 50;\r\n\t    this.animationData.__complete = false;\r\n\t    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n\t    this.renderer.includeLayers(data.layers);\r\n\t    if(expressionsPlugin){\r\n\t        expressionsPlugin.initExpressions(this);\r\n\t    }\r\n\t    this.renderer.renderFrame(-1);\r\n\t    this.loadNextSegment();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.loadNextSegment = function() {\r\n\t    var segments = this.animationData.segments;\r\n\t    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n\t        this.trigger('data_ready');\r\n\t        this.timeCompleted = this.animationData.tf;\r\n\t        return;\r\n\t    }\r\n\t    var segment = segments.shift();\r\n\t    this.timeCompleted = segment.time * this.frameRate;\r\n\t    var xhr = new XMLHttpRequest();\r\n\t    var self = this;\r\n\t    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n\t    this.segmentPos += 1;\r\n\t    xhr.open('GET', segmentPath, true);\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t                self.includeLayers(JSON.parse(xhr.responseText));\r\n\t            }else{\r\n\t                try{\r\n\t                    var response = JSON.parse(xhr.responseText);\r\n\t                    self.includeLayers(response);\r\n\t                }catch(err){\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.loadSegments = function() {\r\n\t    var segments = this.animationData.segments;\r\n\t    if(!segments) {\r\n\t        this.timeCompleted = this.animationData.tf;\r\n\t    }\r\n\t    this.loadNextSegment();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.configAnimation = function (animData) {\r\n\t    var _this = this;\r\n\t    if(!this.renderer){\r\n\t        return;\r\n\t    }\r\n\t    this.animationData = animData;\r\n\t    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n\t    this.animationData.tf = this.totalFrames;\r\n\t    this.renderer.configAnimation(animData);\r\n\t    if(!animData.assets){\r\n\t        animData.assets = [];\r\n\t    }\r\n\t    if(animData.comps) {\r\n\t        animData.assets = animData.assets.concat(animData.comps);\r\n\t        animData.comps = null;\r\n\t    }\r\n\t    this.renderer.searchExtraCompositions(animData.assets);\r\n\t\r\n\t    this.layers = this.animationData.layers;\r\n\t    this.assets = this.animationData.assets;\r\n\t    this.frameRate = this.animationData.fr;\r\n\t    this.firstFrame = Math.round(this.animationData.ip);\r\n\t    this.frameMult = this.animationData.fr / 1000;\r\n\t    this.trigger('config_ready');\r\n\t    this.imagePreloader = new ImagePreloader();\r\n\t    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n\t    this.imagePreloader.setPath(this.path);\r\n\t    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n\t        if(!err) {\r\n\t            _this.trigger('loaded_images');\r\n\t        }\r\n\t    });\r\n\t    this.loadSegments();\r\n\t    this.updaFrameModifier();\r\n\t    if(this.renderer.globalData.fontManager){\r\n\t        this.waitForFontsLoaded();\r\n\t    }else{\r\n\t        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n\t        this.checkLoaded();\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n\t    function checkFontsLoaded(){\r\n\t        if(this.renderer.globalData.fontManager.loaded){\r\n\t            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n\t            //this.renderer.buildItems(this.animationData.layers);\r\n\t            this.checkLoaded();\r\n\t        }else{\r\n\t            setTimeout(checkFontsLoaded.bind(this),20);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    return function(){\r\n\t        checkFontsLoaded.bind(this)();\r\n\t    };\r\n\t}());\r\n\t\r\n\tAnimationItem.prototype.addPendingElement = function () {\r\n\t    this.pendingElements += 1;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.elementLoaded = function () {\r\n\t    this.pendingElements--;\r\n\t    this.checkLoaded();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.checkLoaded = function () {\r\n\t    if (this.pendingElements === 0) {\r\n\t        if(expressionsPlugin){\r\n\t            expressionsPlugin.initExpressions(this);\r\n\t        }\r\n\t        this.renderer.initItems();\r\n\t        setTimeout(function(){\r\n\t            this.trigger('DOMLoaded');\r\n\t        }.bind(this),0);\r\n\t        this.isLoaded = true;\r\n\t        this.gotoFrame();\r\n\t        if(this.autoplay){\r\n\t            this.play();\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.resize = function () {\r\n\t    this.renderer.updateContainerSize();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.setSubframe = function(flag){\r\n\t    this.subframeEnabled = flag ? true : false;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.gotoFrame = function () {\r\n\t    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\t\r\n\t    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n\t        this.currentFrame = this.timeCompleted;\r\n\t    }\r\n\t    this.trigger('enterFrame');\r\n\t    this.renderFrame();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.renderFrame = function () {\r\n\t    if(this.isLoaded === false){\r\n\t        return;\r\n\t    }\r\n\t    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.play = function (name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    if(this.isPaused === true){\r\n\t        this.isPaused = false;\r\n\t        if(this._idle){\r\n\t            this._idle = false;\r\n\t            this.trigger('_active');\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.pause = function (name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    if(this.isPaused === false){\r\n\t        this.isPaused = true;\r\n\t        this._idle = true;\r\n\t        this.trigger('_idle');\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.togglePause = function (name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    if(this.isPaused === true){\r\n\t        this.play();\r\n\t    }else{\r\n\t        this.pause();\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.stop = function (name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    this.pause();\r\n\t    this.playCount = 0;\r\n\t    this.setCurrentRawFrameValue(0);\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n\t    if(name && this.name != name){\r\n\t        return;\r\n\t    }\r\n\t    if(isFrame){\r\n\t        this.setCurrentRawFrameValue(value);\r\n\t    }else{\r\n\t        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n\t    }\r\n\t    this.pause();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n\t    this.goToAndStop(value, isFrame, name);\r\n\t    this.play();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.advanceTime = function (value) {\r\n\t    if (this.isPaused === true || this.isLoaded === false) {\r\n\t        return;\r\n\t    }\r\n\t    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n\t    var _isComplete = false;\r\n\t    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n\t    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n\t    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n\t        if (!this.loop || this.playCount === this.loop) {\r\n\t            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n\t                _isComplete = true;\r\n\t                nextValue = this.totalFrames - 1;\r\n\t            }\r\n\t        } else if (nextValue >= this.totalFrames) {\r\n\t            this.playCount += 1;\r\n\t            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n\t                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n\t                this.trigger('loopComplete');\r\n\t            }\r\n\t        } else {\r\n\t            this.setCurrentRawFrameValue(nextValue);\r\n\t        }\r\n\t    } else if(nextValue < 0) {\r\n\t        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n\t            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n\t                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n\t                this.trigger('loopComplete');\r\n\t            } else {\r\n\t                _isComplete = true;\r\n\t                nextValue = 0;\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        this.setCurrentRawFrameValue(nextValue);\r\n\t    }\r\n\t    if (_isComplete) {\r\n\t        this.setCurrentRawFrameValue(nextValue);\r\n\t        this.pause();\r\n\t        this.trigger('complete');\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n\t    this.playCount = 0;\r\n\t    if(arr[1] < arr[0]){\r\n\t        if(this.frameModifier > 0){\r\n\t            if(this.playSpeed < 0){\r\n\t                this.setSpeed(-this.playSpeed);\r\n\t            } else {\r\n\t                this.setDirection(-1);\r\n\t            }\r\n\t        }\r\n\t        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n\t        this.firstFrame = arr[1];\r\n\t        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n\t    } else if(arr[1] > arr[0]){\r\n\t        if(this.frameModifier < 0){\r\n\t            if(this.playSpeed < 0){\r\n\t                this.setSpeed(-this.playSpeed);\r\n\t            } else {\r\n\t                this.setDirection(1);\r\n\t            }\r\n\t        }\r\n\t        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n\t        this.firstFrame = arr[0];\r\n\t        this.setCurrentRawFrameValue(0.001 + offset);\r\n\t    }\r\n\t    this.trigger('segmentStart');\r\n\t};\r\n\tAnimationItem.prototype.setSegment = function (init,end) {\r\n\t    var pendingFrame = -1;\r\n\t    if(this.isPaused) {\r\n\t        if (this.currentRawFrame + this.firstFrame < init) {\r\n\t            pendingFrame = init;\r\n\t        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n\t            pendingFrame = end - init;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    this.firstFrame = init;\r\n\t    this.timeCompleted = this.totalFrames = end - init;\r\n\t    if(pendingFrame !== -1) {\r\n\t        this.goToAndStop(pendingFrame,true);\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n\t    if(typeof arr[0] === 'object'){\r\n\t        var i, len = arr.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            this.segments.push(arr[i]);\r\n\t        }\r\n\t    }else{\r\n\t        this.segments.push(arr);\r\n\t    }\r\n\t    if(forceFlag){\r\n\t        this.checkSegments(0);\r\n\t    }\r\n\t    if(this.isPaused){\r\n\t        this.play();\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n\t    this.segments.length = 0;\r\n\t    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n\t    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n\t    if(forceFlag){\r\n\t        this.checkSegments(0);\r\n\t    }\r\n\t};\r\n\tAnimationItem.prototype.checkSegments = function(offset){\r\n\t    if(this.segments.length) {\r\n\t        this.adjustSegment(this.segments.shift(), offset);\r\n\t        return true;\r\n\t    }\r\n\t    return false;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.destroy = function (name) {\r\n\t    if((name && this.name != name) || !this.renderer){\r\n\t        return;\r\n\t    }\r\n\t    this.renderer.destroy();\r\n\t    this.trigger('destroy');\r\n\t    this._cbs = null;\r\n\t    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n\t    this.renderer = null;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n\t    this.currentRawFrame = value;\r\n\t    this.gotoFrame();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.setSpeed = function (val) {\r\n\t    this.playSpeed = val;\r\n\t    this.updaFrameModifier();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.setDirection = function (val) {\r\n\t    this.playDirection = val < 0 ? -1 : 1;\r\n\t    this.updaFrameModifier();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.updaFrameModifier = function () {\r\n\t    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.getPath = function () {\r\n\t    return this.path;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n\t    var path = '';\r\n\t    if(this.assetsPath){\r\n\t        var imagePath = assetData.p;\r\n\t        if(imagePath.indexOf('images/') !== -1){\r\n\t            imagePath = imagePath.split('/')[1];\r\n\t        }\r\n\t        path = this.assetsPath + imagePath;\r\n\t    } else {\r\n\t        path = this.path;\r\n\t        path += assetData.u ? assetData.u : '';\r\n\t        path += assetData.p;\r\n\t    }\r\n\t    return path;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.getAssetData = function (id) {\r\n\t    var i = 0, len = this.assets.length;\r\n\t    while (i < len) {\r\n\t        if(id == this.assets[i].id){\r\n\t            return this.assets[i];\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.hide = function () {\r\n\t    this.renderer.hide();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.show = function () {\r\n\t    this.renderer.show();\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.getAssets = function () {\r\n\t    return this.assets;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.getDuration = function (isFrame) {\r\n\t    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n\t};\r\n\t\r\n\tAnimationItem.prototype.trigger = function(name){\r\n\t    if(this._cbs && this._cbs[name]){\r\n\t        switch(name){\r\n\t            case 'enterFrame':\r\n\t                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n\t                break;\r\n\t            case 'loopComplete':\r\n\t                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n\t                break;\r\n\t            case 'complete':\r\n\t                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n\t                break;\r\n\t            case 'segmentStart':\r\n\t                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n\t                break;\r\n\t            case 'destroy':\r\n\t                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n\t                break;\r\n\t            default:\r\n\t                this.triggerEvent(name);\r\n\t        }\r\n\t    }\r\n\t    if(name === 'enterFrame' && this.onEnterFrame){\r\n\t        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n\t    }\r\n\t    if(name === 'loopComplete' && this.onLoopComplete){\r\n\t        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n\t    }\r\n\t    if(name === 'complete' && this.onComplete){\r\n\t        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n\t    }\r\n\t    if(name === 'segmentStart' && this.onSegmentStart){\r\n\t        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n\t    }\r\n\t    if(name === 'destroy' && this.onDestroy){\r\n\t        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n\t    }\r\n\t};\r\n\t\n\tfunction EffectsManager(){}\n\tfunction CanvasRenderer(animationItem, config){\r\n\t    this.animationItem = animationItem;\r\n\t    this.renderConfig = {\r\n\t        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n\t        context: (config && config.context) || null,\r\n\t        progressiveLoad: (config && config.progressiveLoad) || false,\r\n\t        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n\t        className: (config && config.className) || ''\r\n\t    };\r\n\t    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n\t    if (this.animationItem.wrapper) {\r\n\t        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n\t    }\r\n\t    this.renderedFrame = -1;\r\n\t    this.globalData = {\r\n\t        frameNum: -1,\r\n\t        _mdf: false,\r\n\t        renderConfig: this.renderConfig,\r\n\t        currentGlobalAlpha: -1\r\n\t    };\r\n\t    var i, len = 15;\r\n\t    this.contextData = new CVContextData();\r\n\t    this.elements = [];\r\n\t    this.pendingElements = [];\r\n\t    this.transformMat = new Matrix();\r\n\t    this.completeLayers = false;\r\n\t}\r\n\textendPrototype([BaseRenderer],CanvasRenderer);\r\n\t\r\n\tCanvasRenderer.prototype.createShape = function (data) {\r\n\t    return new CVShapeElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.createText = function (data) {\r\n\t    return new CVTextElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.createImage = function (data) {\r\n\t    return new CVImageElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.createComp = function (data) {\r\n\t    return new CVCompElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.createSolid = function (data) {\r\n\t    return new CVSolidElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\t\r\n\tCanvasRenderer.prototype.ctxTransform = function(props){\r\n\t    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n\t        return;\r\n\t    }\r\n\t    if(!this.renderConfig.clearCanvas){\r\n\t        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n\t        return;\r\n\t    }\r\n\t    this.transformMat.cloneFromProps(props);\r\n\t    var cProps = this.contextData.cTr.props;\r\n\t    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n\t    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n\t    var trProps = this.contextData.cTr.props;\r\n\t    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.ctxOpacity = function(op){\r\n\t    /*if(op === 1){\r\n\t        return;\r\n\t    }*/\r\n\t    if(!this.renderConfig.clearCanvas){\r\n\t        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n\t        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n\t        return;\r\n\t    }\r\n\t    this.contextData.cO *= op < 0 ? 0 : op;\r\n\t    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n\t        this.canvasContext.globalAlpha = this.contextData.cO;\r\n\t        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n\t    }\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.reset = function(){\r\n\t    if(!this.renderConfig.clearCanvas){\r\n\t        this.canvasContext.restore();\r\n\t        return;\r\n\t    }\r\n\t    this.contextData.reset();\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.save = function(actionFlag){\r\n\t    if(!this.renderConfig.clearCanvas){\r\n\t        this.canvasContext.save();\r\n\t        return;\r\n\t    }\r\n\t    if(actionFlag){\r\n\t        this.canvasContext.save();\r\n\t    }\r\n\t    var props = this.contextData.cTr.props;\r\n\t    if(this.contextData._length <= this.contextData.cArrPos) {\r\n\t        this.contextData.duplicate();\r\n\t    }\r\n\t    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n\t    for (i = 0; i < 16; i += 1) {\r\n\t        arr[i] = props[i];\r\n\t    }\r\n\t    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n\t    this.contextData.cArrPos += 1;\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.restore = function(actionFlag){\r\n\t    if(!this.renderConfig.clearCanvas){\r\n\t        this.canvasContext.restore();\r\n\t        return;\r\n\t    }\r\n\t    if(actionFlag){\r\n\t        this.canvasContext.restore();\r\n\t        this.globalData.blendMode = 'source-over';\r\n\t    }\r\n\t    this.contextData.cArrPos -= 1;\r\n\t    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n\t    var i,arr = this.contextData.cTr.props;\r\n\t    for(i=0;i<16;i+=1){\r\n\t        arr[i] = popped[i];\r\n\t    }\r\n\t    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n\t    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n\t    this.contextData.cO = popped;\r\n\t    if(this.globalData.currentGlobalAlpha !== popped) {\r\n\t        this.canvasContext.globalAlpha = popped;\r\n\t        this.globalData.currentGlobalAlpha = popped;\r\n\t    }\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.configAnimation = function(animData){\r\n\t    if(this.animationItem.wrapper){\r\n\t        this.animationItem.container = createTag('canvas');\r\n\t        this.animationItem.container.style.width = '100%';\r\n\t        this.animationItem.container.style.height = '100%';\r\n\t        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n\t        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n\t        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n\t        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n\t        this.canvasContext = this.animationItem.container.getContext('2d');\r\n\t        if(this.renderConfig.className) {\r\n\t            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n\t        }\r\n\t    }else{\r\n\t        this.canvasContext = this.renderConfig.context;\r\n\t    }\r\n\t    this.data = animData;\r\n\t    this.globalData.canvasContext = this.canvasContext;\r\n\t    this.globalData.renderer = this;\r\n\t    this.globalData.isDashed = false;\r\n\t    this.globalData.totalFrames = Math.floor(animData.tf);\r\n\t    this.globalData.compWidth = animData.w;\r\n\t    this.globalData.compHeight = animData.h;\r\n\t    this.globalData.frameRate = animData.fr;\r\n\t    this.globalData.frameId = 0;\r\n\t    this.globalData.compSize = {\r\n\t        w: animData.w,\r\n\t        h: animData.h\r\n\t    };\r\n\t    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n\t    this.layers = animData.layers;\r\n\t    this.transformCanvas = {\r\n\t        w: animData.w,\r\n\t        h:animData.h,\r\n\t        sx:0,\r\n\t        sy:0,\r\n\t        tx:0,\r\n\t        ty:0\r\n\t    };\r\n\t    this.globalData.fontManager = new FontManager();\r\n\t    this.globalData.fontManager.addChars(animData.chars);\r\n\t    this.globalData.fontManager.addFonts(animData.fonts,document.body);\r\n\t    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n\t    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n\t    this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem);\r\n\t    this.globalData.addPendingElement = this.animationItem.addPendingElement.bind(this.animationItem);\r\n\t    this.globalData.transformCanvas = this.transformCanvas;\r\n\t    this.elements = createSizedArray(animData.layers.length);\r\n\t\r\n\t    this.updateContainerSize();\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.updateContainerSize = function () {\r\n\t    this.reset();\r\n\t    var elementWidth,elementHeight;\r\n\t    if(this.animationItem.wrapper && this.animationItem.container){\r\n\t        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n\t        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n\t        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n\t        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n\t    }else{\r\n\t        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n\t        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n\t    }\r\n\t    var elementRel,animationRel;\r\n\t    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n\t        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n\t        var fillType = par[1] || 'meet';\r\n\t        var pos = par[0] || 'xMidYMid';\r\n\t        var xPos = pos.substr(0,4);\r\n\t        var yPos = pos.substr(4);\r\n\t        elementRel = elementWidth/elementHeight;\r\n\t        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n\t        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n\t            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n\t            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n\t        }else{\r\n\t            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n\t            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n\t        }\r\n\t\r\n\t        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n\t            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n\t        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n\t            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n\t        } else {\r\n\t            this.transformCanvas.tx = 0;\r\n\t        }\r\n\t        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n\t            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n\t        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n\t            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n\t        } else {\r\n\t            this.transformCanvas.ty = 0;\r\n\t        }\r\n\t\r\n\t    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n\t        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n\t        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n\t        this.transformCanvas.tx = 0;\r\n\t        this.transformCanvas.ty = 0;\r\n\t    }else{\r\n\t        this.transformCanvas.sx = this.renderConfig.dpr;\r\n\t        this.transformCanvas.sy = this.renderConfig.dpr;\r\n\t        this.transformCanvas.tx = 0;\r\n\t        this.transformCanvas.ty = 0;\r\n\t    }\r\n\t    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n\t    /*var i, len = this.elements.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n\t            this.elements[i].resize(this.globalData.transformCanvas);\r\n\t        }\r\n\t    }*/\r\n\t    this.ctxTransform(this.transformCanvas.props);\r\n\t    this.canvasContext.beginPath();\r\n\t    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n\t    this.canvasContext.closePath();\r\n\t    this.canvasContext.clip();\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.destroy = function () {\r\n\t    if(this.renderConfig.clearCanvas) {\r\n\t        this.animationItem.wrapper.innerHTML = '';\r\n\t    }\r\n\t    var i, len = this.layers ? this.layers.length : 0;\r\n\t    for (i = len - 1; i >= 0; i-=1) {\r\n\t        if(this.elements[i]) {\r\n\t            this.elements[i].destroy();\r\n\t        }\r\n\t    }\r\n\t    this.elements.length = 0;\r\n\t    this.globalData.canvasContext = null;\r\n\t    this.animationItem.container = null;\r\n\t    this.destroyed = true;\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.renderFrame = function(num){\r\n\t    if((this.renderedFrame == num && this.renderConfig.clearCanvas === true) || this.destroyed || num === -1){\r\n\t        return;\r\n\t    }\r\n\t    this.renderedFrame = num;\r\n\t    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n\t    this.globalData.frameId += 1;\r\n\t    this.globalData._mdf = false;\r\n\t    this.globalData.projectInterface.currentFrame = num;\r\n\t\r\n\t     // console.log('--------');\r\n\t     // console.log('NEW: ',num);\r\n\t    var i, len = this.layers.length;\r\n\t    if(!this.completeLayers){\r\n\t        this.checkLayers(num);\r\n\t    }\r\n\t\r\n\t    for (i = 0; i < len; i++) {\r\n\t        if(this.completeLayers || this.elements[i]){\r\n\t            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n\t        }\r\n\t    }\r\n\t    if(this.globalData._mdf) {\r\n\t        if(this.renderConfig.clearCanvas === true){\r\n\t            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n\t        }else{\r\n\t            this.save();\r\n\t        }\r\n\t        for (i = len - 1; i >= 0; i-=1) {\r\n\t            if(this.completeLayers || this.elements[i]){\r\n\t                this.elements[i].renderFrame();\r\n\t            }\r\n\t        }\r\n\t        if(this.renderConfig.clearCanvas !== true){\r\n\t            this.restore();\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.buildItem = function(pos){\r\n\t    var elements = this.elements;\r\n\t    if(elements[pos] || this.layers[pos].ty == 99){\r\n\t        return;\r\n\t    }\r\n\t    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n\t    elements[pos] = element;\r\n\t    element.initExpressions();\r\n\t    /*if(this.layers[pos].ty === 0){\r\n\t        element.resize(this.globalData.transformCanvas);\r\n\t    }*/\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.checkPendingElements  = function(){\r\n\t    while(this.pendingElements.length){\r\n\t        var element = this.pendingElements.pop();\r\n\t        element.checkParenting();\r\n\t    }\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.hide = function(){\r\n\t    this.animationItem.container.style.display = 'none';\r\n\t};\r\n\t\r\n\tCanvasRenderer.prototype.show = function(){\r\n\t    this.animationItem.container.style.display = 'block';\r\n\t};\r\n\t\n\tfunction HybridRenderer(animationItem, config){\r\n\t    this.animationItem = animationItem;\r\n\t    this.layers = null;\r\n\t    this.renderedFrame = -1;\r\n\t    this.renderConfig = {\r\n\t        className: (config && config.className) || '',\r\n\t        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n\t    };\r\n\t    this.globalData = {\r\n\t        _mdf: false,\r\n\t        frameNum: -1,\r\n\t        renderConfig: this.renderConfig\r\n\t    };\r\n\t    this.pendingElements = [];\r\n\t    this.elements = [];\r\n\t    this.threeDElements = [];\r\n\t    this.destroyed = false;\r\n\t    this.camera = null;\r\n\t    this.supports3d = true;\r\n\t\r\n\t}\r\n\t\r\n\textendPrototype([BaseRenderer],HybridRenderer);\r\n\t\r\n\tHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\t\r\n\tHybridRenderer.prototype.checkPendingElements  = function(){\r\n\t    while(this.pendingElements.length){\r\n\t        var element = this.pendingElements.pop();\r\n\t        element.checkParenting();\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n\t    var newDOMElement = element.getBaseElement();\r\n\t    if(!newDOMElement){\r\n\t        return;\r\n\t    }\r\n\t    var layer = this.layers[pos];\r\n\t    if(!layer.ddd || !this.supports3d){\r\n\t        if(this.threeDElements) {\r\n\t            this.addTo3dContainer(newDOMElement,pos);\r\n\t        } else {\r\n\t            var i = 0;\r\n\t            var nextDOMElement, nextLayer, tmpDOMElement;\r\n\t            while(i<pos){\r\n\t                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n\t                    nextLayer = this.elements[i];\r\n\t                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n\t                    nextDOMElement = tmpDOMElement || nextDOMElement;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            if(nextDOMElement){\r\n\t                if(!layer.ddd || !this.supports3d){\r\n\t                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n\t                }\r\n\t            } else {\r\n\t                if(!layer.ddd || !this.supports3d){\r\n\t                    this.layerElement.appendChild(newDOMElement);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        \r\n\t    } else {\r\n\t        this.addTo3dContainer(newDOMElement,pos);\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createShape = function (data) {\r\n\t    if(!this.supports3d){\r\n\t        return new SVGShapeElement(data, this.globalData, this);\r\n\t    }\r\n\t    return new HShapeElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createText = function (data) {\r\n\t    if(!this.supports3d){\r\n\t        return new SVGTextElement(data, this.globalData, this);\r\n\t    }\r\n\t    return new HTextElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createCamera = function (data) {\r\n\t    this.camera = new HCameraElement(data, this.globalData, this);\r\n\t    return this.camera;\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createImage = function (data) {\r\n\t    if(!this.supports3d){\r\n\t        return new IImageElement(data, this.globalData, this);\r\n\t    }\r\n\t    return new HImageElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createComp = function (data) {\r\n\t    if(!this.supports3d){\r\n\t        return new SVGCompElement(data, this.globalData, this);\r\n\t    }\r\n\t    return new HCompElement(data, this.globalData, this);\r\n\t\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createSolid = function (data) {\r\n\t    if(!this.supports3d){\r\n\t        return new ISolidElement(data, this.globalData, this);\r\n\t    }\r\n\t    return new HSolidElement(data, this.globalData, this);\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\t\r\n\tHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n\t    var i = 0, len = this.threeDElements.length;\r\n\t    while(i<len) {\r\n\t        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n\t            return this.threeDElements[i].perspectiveElem;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.createThreeDContainer = function(pos, type){\r\n\t    var perspectiveElem = createTag('div');\r\n\t    styleDiv(perspectiveElem);\r\n\t    var container = createTag('div');\r\n\t    styleDiv(container);\r\n\t    if(type === '3d') {\r\n\t        perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n\t        perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n\t        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n\t        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n\t    }\r\n\t    \r\n\t    perspectiveElem.appendChild(container);\r\n\t    //this.resizerElem.appendChild(perspectiveElem);\r\n\t    var threeDContainerData = {\r\n\t        container:container,\r\n\t        perspectiveElem:perspectiveElem,\r\n\t        startPos: pos,\r\n\t        endPos: pos,\r\n\t        type: type\r\n\t    };\r\n\t    this.threeDElements.push(threeDContainerData);\r\n\t    return threeDContainerData;\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.build3dContainers = function(){\r\n\t    var i, len = this.layers.length;\r\n\t    var lastThreeDContainerData;\r\n\t    var currentContainer = '';\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n\t            if(currentContainer !== '3d'){\r\n\t                currentContainer = '3d';\r\n\t                lastThreeDContainerData = this.createThreeDContainer(i,'3d');\r\n\t            }\r\n\t            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n\t        } else {\r\n\t            if(currentContainer !== '2d'){\r\n\t                currentContainer = '2d';\r\n\t                lastThreeDContainerData = this.createThreeDContainer(i,'2d');\r\n\t            }\r\n\t            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n\t        }\r\n\t    }\r\n\t    len = this.threeDElements.length;\r\n\t    for(i = len - 1; i >= 0; i --) {\r\n\t        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n\t    var i = 0, len = this.threeDElements.length;\r\n\t    while(i<len){\r\n\t        if(pos <= this.threeDElements[i].endPos){\r\n\t            var j = this.threeDElements[i].startPos;\r\n\t            var nextElement;\r\n\t            while(j<pos){\r\n\t                if(this.elements[j] && this.elements[j].getBaseElement){\r\n\t                    nextElement = this.elements[j].getBaseElement();\r\n\t                }\r\n\t                j += 1;\r\n\t            }\r\n\t            if(nextElement){\r\n\t                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n\t            } else {\r\n\t                this.threeDElements[i].container.appendChild(elem);\r\n\t            }\r\n\t            break;\r\n\t        }\r\n\t        i += 1;\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.configAnimation = function(animData){\r\n\t    var resizerElem = createTag('div');\r\n\t    var wrapper = this.animationItem.wrapper;\r\n\t    resizerElem.style.width = animData.w+'px';\r\n\t    resizerElem.style.height = animData.h+'px';\r\n\t    this.resizerElem = resizerElem;\r\n\t    styleDiv(resizerElem);\r\n\t    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n\t    if(this.renderConfig.className) {\r\n\t      resizerElem.setAttribute('class', this.renderConfig.className);\r\n\t    }\r\n\t    wrapper.appendChild(resizerElem);\r\n\t\r\n\t    resizerElem.style.overflow = 'hidden';\r\n\t    var svg = createNS('svg');\r\n\t    svg.setAttribute('width','1');\r\n\t    svg.setAttribute('height','1');\r\n\t    styleDiv(svg);\r\n\t    this.resizerElem.appendChild(svg);\r\n\t    var defs = createNS('defs');\r\n\t    svg.appendChild(defs);\r\n\t    this.globalData.defs = defs;\r\n\t    this.data = animData;\r\n\t    //Mask animation\r\n\t    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n\t    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n\t    this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem);\r\n\t    this.globalData.frameId = 0;\r\n\t    this.globalData.compSize = {\r\n\t        w: animData.w,\r\n\t        h: animData.h\r\n\t    };\r\n\t    this.globalData.frameRate = animData.fr;\r\n\t    this.layers = animData.layers;\r\n\t    this.globalData.fontManager = new FontManager();\r\n\t    this.globalData.fontManager.addChars(animData.chars);\r\n\t    this.globalData.fontManager.addFonts(animData.fonts,svg);\r\n\t    this.layerElement = this.resizerElem;\r\n\t    this.build3dContainers();\r\n\t    this.updateContainerSize();\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.destroy = function () {\r\n\t    this.animationItem.wrapper.innerHTML = '';\r\n\t    this.animationItem.container = null;\r\n\t    this.globalData.defs = null;\r\n\t    var i, len = this.layers ? this.layers.length : 0;\r\n\t    for (i = 0; i < len; i++) {\r\n\t        this.elements[i].destroy();\r\n\t    }\r\n\t    this.elements.length = 0;\r\n\t    this.destroyed = true;\r\n\t    this.animationItem = null;\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.updateContainerSize = function () {\r\n\t    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n\t    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n\t    var elementRel = elementWidth/elementHeight;\r\n\t    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n\t    var sx,sy,tx,ty;\r\n\t    if(animationRel>elementRel){\r\n\t        sx = elementWidth/(this.globalData.compSize.w);\r\n\t        sy = elementWidth/(this.globalData.compSize.w);\r\n\t        tx = 0;\r\n\t        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n\t    }else{\r\n\t        sx = elementHeight/(this.globalData.compSize.h);\r\n\t        sy = elementHeight/(this.globalData.compSize.h);\r\n\t        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n\t        ty = 0;\r\n\t    }\r\n\t    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\t\r\n\tHybridRenderer.prototype.hide = function(){\r\n\t    this.resizerElem.style.display = 'none';\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.show = function(){\r\n\t    this.resizerElem.style.display = 'block';\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.initItems = function(){\r\n\t    this.buildAllItems();\r\n\t    if(this.camera){\r\n\t        this.camera.setup();\r\n\t    } else {\r\n\t        var cWidth = this.globalData.compSize.w;\r\n\t        var cHeight = this.globalData.compSize.h;\r\n\t        var i, len = this.threeDElements.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n\t    var i, len = assets.length;\r\n\t    var floatingContainer = createTag('div');\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(assets[i].xt){\r\n\t            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n\t            comp.initExpressions();\r\n\t            this.globalData.projectInterface.registerComposition(comp);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\n\tfunction CVShapeData(element, data) {\r\n\t    this.nodes = [];\r\n\t    this.trNodes = [];\r\n\t    this.tr = [0,0,0,0,0,0];\r\n\t    var ty = 4;\r\n\t    if(data.ty == 'rc'){\r\n\t        ty = 5;\r\n\t    }else if(data.ty == 'el'){\r\n\t        ty = 6;\r\n\t    }else if(data.ty == 'sr'){\r\n\t        ty = 7;\r\n\t    }\r\n\t    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);\r\n\t    this.st = false;\r\n\t    this.fl = false;\r\n\t}\r\n\t\r\n\tCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\n\tfunction CVContextData() {\r\n\t\tthis.saved = [];\r\n\t    this.cArrPos = 0;\r\n\t    this.cTr = new Matrix();\r\n\t    this.cO = 1;\r\n\t    var i, len = 15;\r\n\t    this.savedOp = createTypedArray('float32', len);\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.saved[i] = createTypedArray('float32', 16);\r\n\t    }\r\n\t    this._length = len;\r\n\t}\r\n\t\r\n\tCVContextData.prototype.duplicate = function() {\r\n\t\tvar newLength = this._length * 2;\r\n\t\tvar currentSavedOp = this.savedOp;\r\n\t    this.savedOp = createTypedArray('float32', newLength);\r\n\t    this.savedOp.set(currentSavedOp);\r\n\t    var i = 0;\r\n\t    for(i = this._length; i < newLength; i += 1) {\r\n\t        this.saved[i] = createTypedArray('float32', 16);\r\n\t    }\r\n\t    this._length = newLength;\r\n\t};\r\n\t\r\n\tCVContextData.prototype.reset = function() {\r\n\t\tthis.cArrPos = 0;\r\n\t\tthis.cTr.reset();\r\n\t    this.cO = 1;\r\n\t};\n\tfunction CVBaseElement(){\r\n\t}\r\n\t\r\n\tCVBaseElement.prototype = {\r\n\t    createElements: function(){},\r\n\t    initRendererElement: function(){},\r\n\t    createContainerElements: function(){\r\n\t        this.canvasContext = this.globalData.canvasContext;\r\n\t        this.renderableEffectsManager = new CVEffects(this);\r\n\t    },\r\n\t    createContent: function(){},\r\n\t    setBlendMode: function(){\r\n\t        var globalData = this.globalData;\r\n\t        if(globalData.blendMode !== this.data.bm) {\r\n\t            globalData.blendMode = this.data.bm;\r\n\t            var blendModeValue = this.getBlendMode();\r\n\t            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n\t        }\r\n\t    },\r\n\t    addMasks: function(){\r\n\t        this.maskManager = new CVMaskElement(this.data, this);\r\n\t    },\r\n\t    hideElement: function(){\r\n\t        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n\t            this.hidden = true;\r\n\t        }\r\n\t    },\r\n\t    showElement: function(){\r\n\t        if (this.isInRange && !this.isTransparent){\r\n\t            this.hidden = false;\r\n\t            this._isFirstFrame = true;\r\n\t            this.maskManager._isFirstFrame = true;\r\n\t        }\r\n\t    },\r\n\t    renderFrame: function() {\r\n\t        if (this.hidden) {\r\n\t            return;\r\n\t        }\r\n\t        this.renderTransform();\r\n\t        this.renderRenderable();\r\n\t        this.setBlendMode();\r\n\t        this.globalData.renderer.save();\r\n\t        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n\t        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n\t        this.renderInnerContent();\r\n\t        this.globalData.renderer.restore();\r\n\t        if(this.maskManager.hasMasks) {\r\n\t            this.globalData.renderer.restore(true);\r\n\t        }\r\n\t        if (this._isFirstFrame) {\r\n\t            this._isFirstFrame = false;\r\n\t        }\r\n\t    },\r\n\t    destroy: function(){\r\n\t        this.canvasContext = null;\r\n\t        this.data = null;\r\n\t        this.globalData = null;\r\n\t        this.maskManager.destroy();\r\n\t    },\r\n\t    mHelper: new Matrix()\r\n\t};\r\n\tCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\n\tCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\t\n\tfunction CVImageElement(data, globalData, comp){\r\n\t    this.failed = false;\r\n\t    this.img = new Image();\r\n\t    this.assetData = globalData.getAssetData(data.refId);\r\n\t    this.initElement(data,globalData,comp);\r\n\t    this.globalData.addPendingElement();\r\n\t}\r\n\textendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\t\r\n\tCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\n\tCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\t\r\n\tCVImageElement.prototype.imageLoaded = function() {\r\n\t    this.globalData.elementLoaded();\r\n\t    if(this.assetData.w !== this.img.width || this.assetData.h !== this.img.height){\r\n\t        var canvas = createTag('canvas');\r\n\t        canvas.width = this.assetData.w;\r\n\t        canvas.height = this.assetData.h;\r\n\t        var ctx = canvas.getContext('2d');\r\n\t\r\n\t        var imgW = this.img.width;\r\n\t        var imgH = this.img.height;\r\n\t        var imgRel = imgW / imgH;\r\n\t        var canvasRel = this.assetData.w/this.assetData.h;\r\n\t        var widthCrop, heightCrop;\r\n\t        if(imgRel>canvasRel){\r\n\t            heightCrop = imgH;\r\n\t            widthCrop = heightCrop*canvasRel;\r\n\t        } else {\r\n\t            widthCrop = imgW;\r\n\t            heightCrop = widthCrop/canvasRel;\r\n\t        }\r\n\t        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n\t        this.img = canvas;\r\n\t    }\r\n\t};\r\n\t\r\n\tCVImageElement.prototype.imageFailed = function() {\r\n\t    this.failed = true;\r\n\t    this.globalData.elementLoaded();\r\n\t};\r\n\t\r\n\tCVImageElement.prototype.createContent = function(){\r\n\t    var img = this.img;\r\n\t    img.addEventListener('load', this.imageLoaded.bind(this), false);\r\n\t    img.addEventListener('error', this.imageFailed.bind(this), false);\r\n\t    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\t    img.src = assetPath;\r\n\t\r\n\t};\r\n\t\r\n\tCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n\t    if (this.failed) {\r\n\t        return;\r\n\t    }\r\n\t    this.canvasContext.drawImage(this.img, 0, 0);\r\n\t};\r\n\t\r\n\tCVImageElement.prototype.destroy = function(){\r\n\t    this.img = null;\r\n\t};\n\tfunction CVCompElement(data, globalData, comp) {\r\n\t    this.completeLayers = false;\r\n\t    this.layers = data.layers;\r\n\t    this.pendingElements = [];\r\n\t    this.elements = createSizedArray(this.layers.length);\r\n\t    this.initElement(data, globalData, comp);\r\n\t    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n\t}\r\n\t\r\n\textendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\t\r\n\tCVCompElement.prototype.renderInnerContent = function() {\r\n\t    var i,len = this.layers.length;\r\n\t    for( i = len - 1; i >= 0; i -= 1 ){\r\n\t        if(this.completeLayers || this.elements[i]){\r\n\t            this.elements[i].renderFrame();\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tCVCompElement.prototype.destroy = function(){\r\n\t    var i,len = this.layers.length;\r\n\t    for( i = len - 1; i >= 0; i -= 1 ){\r\n\t        if(this.elements[i]) {\r\n\t            this.elements[i].destroy();\r\n\t        }\r\n\t    }\r\n\t    this.layers = null;\r\n\t    this.elements = null;\r\n\t};\n\t\r\n\tfunction CVMaskElement(data,element){\r\n\t    this.data = data;\r\n\t    this.element = element;\r\n\t    this.masksProperties = this.data.masksProperties || [];\r\n\t    this.viewData = createSizedArray(this.masksProperties.length);\r\n\t    var i, len = this.masksProperties.length, hasMasks = false;\r\n\t    for (i = 0; i < len; i++) {\r\n\t        if(this.masksProperties[i].mode !== 'n'){\r\n\t            hasMasks = true;\r\n\t        }\r\n\t        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n\t    }\r\n\t    this.hasMasks = hasMasks;\r\n\t    if(hasMasks) {\r\n\t        this.element.addRenderableComponent(this);\r\n\t    }\r\n\t}\r\n\t\r\n\tCVMaskElement.prototype.renderFrame = function () {\r\n\t    if(!this.hasMasks){\r\n\t        return;\r\n\t    }\r\n\t    var transform = this.element.finalTransform.mat;\r\n\t    var ctx = this.element.canvasContext;\r\n\t    var i, len = this.masksProperties.length;\r\n\t    var pt,pts,data;\r\n\t    ctx.beginPath();\r\n\t    for (i = 0; i < len; i++) {\r\n\t        if(this.masksProperties[i].mode !== 'n'){\r\n\t            if (this.masksProperties[i].inv) {\r\n\t                ctx.moveTo(0, 0);\r\n\t                ctx.lineTo(this.element.globalData.compWidth, 0);\r\n\t                ctx.lineTo(this.element.globalData.compWidth, this.element.globalData.compHeight);\r\n\t                ctx.lineTo(0, this.element.globalData.compHeight);\r\n\t                ctx.lineTo(0, 0);\r\n\t            }\r\n\t            data = this.viewData[i].v;\r\n\t            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n\t            ctx.moveTo(pt[0], pt[1]);\r\n\t            var j, jLen = data._length;\r\n\t            for (j = 1; j < jLen; j++) {\r\n\t                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n\t                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n\t            }\r\n\t            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n\t            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n\t        }\r\n\t    }\r\n\t    this.element.globalData.renderer.save(true);\r\n\t    ctx.clip();\r\n\t};\r\n\t\r\n\tCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\t\r\n\tCVMaskElement.prototype.destroy = function(){\r\n\t    this.element = null;\r\n\t};\n\tfunction CVShapeElement(data, globalData, comp) {\r\n\t    this.shapes = [];\r\n\t    this.shapesData = data.shapes;\r\n\t    this.stylesList = [];\r\n\t    this.itemsData = [];\r\n\t    this.prevViewData = [];\r\n\t    this.shapeModifiers = [];\r\n\t    this.processedElements = [];\r\n\t    this.initElement(data, globalData, comp);\r\n\t}\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\t\r\n\tCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\t\r\n\tCVShapeElement.prototype.transformHelper = {opacity:1,mat:new Matrix(),_matMdf:false,_opMdf:false};\r\n\t\r\n\tCVShapeElement.prototype.dashResetter = [];\r\n\t\r\n\tCVShapeElement.prototype.createContent = function(){\r\n\t    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true);\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.createStyleElement = function(data){\r\n\t    var styleElem = {\r\n\t        data: data,\r\n\t        type: data.ty,\r\n\t        elements: []\r\n\t    };\r\n\t    var elementData = {};\r\n\t    if(data.ty == 'fl' || data.ty == 'st'){\r\n\t        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n\t        if(!elementData.c.k){\r\n\t            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n\t        }\r\n\t    }\r\n\t    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n\t    if(data.ty == 'st') {\r\n\t        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n\t        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n\t        if(data.lj == 1) {\r\n\t            styleElem.ml = data.ml;\r\n\t        }\r\n\t        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n\t        if(!elementData.w.k){\r\n\t            styleElem.wi = elementData.w.v;\r\n\t        }\r\n\t        if(data.d){\r\n\t            var d = new DashProperty(this,data.d,'canvas');\r\n\t            elementData.d = d;\r\n\t            if(!elementData.d.k){\r\n\t                styleElem.da = elementData.d.dashArray;\r\n\t                styleElem.do = elementData.d.dashoffset[0];\r\n\t            }\r\n\t        }\r\n\t\r\n\t    } else {\r\n\t\r\n\t        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n\t    }\r\n\t    this.stylesList.push(styleElem);\r\n\t    elementData.style = styleElem;\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.createGroupElement = function(data) {\r\n\t    var elementData = {\r\n\t        it: [],\r\n\t        prevViewData: []\r\n\t    };\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.createTransformElement = function(data) {\r\n\t    var elementData = {\r\n\t        transform : {\r\n\t            mat: new Matrix(),\r\n\t            opacity: 1,\r\n\t            _matMdf:false,\r\n\t            _opMdf:false,\r\n\t            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n\t            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n\t        },\r\n\t        elements: []\r\n\t    };\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.createShapeElement = function(data) {\r\n\t    var elementData = new CVShapeData(this, data);\r\n\t    \r\n\t    this.shapes.push(elementData);\r\n\t    this.addShapeToModifiers(elementData);\r\n\t    var j, jLen = this.stylesList.length;\r\n\t    var hasStrokes = false, hasFills = false;\r\n\t    for(j=0;j<jLen;j+=1){\r\n\t        if(!this.stylesList[j].closed){\r\n\t            this.stylesList[j].elements.push(elementData);\r\n\t            if(this.stylesList[j].type === 'st'){\r\n\t                hasStrokes = true;\r\n\t            }else{\r\n\t                hasFills = true;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    elementData.st = hasStrokes;\r\n\t    elementData.fl = hasFills;\r\n\t    return elementData;\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.reloadShapes = function(){\r\n\t    this._isFirstFrame = true;\r\n\t    var i, len = this.itemsData.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.prevViewData[i] = this.itemsData[i];\r\n\t    }\r\n\t    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true);\r\n\t    len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t    }\r\n\t    this.renderModifiers();\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, render){\r\n\t    var i, len = arr.length - 1;\r\n\t    var j, jLen;\r\n\t    var ownArrays = [], ownModifiers = [], processedPos, modifier;\r\n\t    for(i=len;i>=0;i-=1){\r\n\t        processedPos = this.searchProcessedElement(arr[i]);\r\n\t        if(!processedPos){\r\n\t            arr[i]._render = render;\r\n\t        } else {\r\n\t            itemsData[i] = prevViewData[processedPos - 1];\r\n\t        }\r\n\t        if(arr[i].ty == 'fl' || arr[i].ty == 'st'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createStyleElement(arr[i]);\r\n\t            } else {\r\n\t                itemsData[i].style.closed = false;\r\n\t            }\r\n\t            \r\n\t            ownArrays.push(itemsData[i].style);\r\n\t        }else if(arr[i].ty == 'gr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createGroupElement(arr[i]);\r\n\t            } else {\r\n\t                jLen = itemsData[i].it.length;\r\n\t                for(j=0;j<jLen;j+=1){\r\n\t                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n\t                }\r\n\t            }\r\n\t            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, render);\r\n\t        }else if(arr[i].ty == 'tr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createTransformElement(arr[i]);\r\n\t            }\r\n\t        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n\t            if(!processedPos){\r\n\t                itemsData[i] = this.createShapeElement(arr[i]);\r\n\t            }\r\n\t            \r\n\t        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n\t            if(!processedPos){\r\n\t                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n\t                modifier.init(this,arr[i]);\r\n\t                itemsData[i] = modifier;\r\n\t                this.shapeModifiers.push(modifier);\r\n\t            } else {\r\n\t                modifier = itemsData[i];\r\n\t                modifier.closed = false;\r\n\t            }\r\n\t            ownModifiers.push(modifier);\r\n\t        } else if(arr[i].ty == 'rp'){\r\n\t            if(!processedPos){\r\n\t                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n\t                itemsData[i] = modifier;\r\n\t                modifier.init(this,arr,i,itemsData);\r\n\t                this.shapeModifiers.push(modifier);\r\n\t                render = false;\r\n\t            }else{\r\n\t                modifier = itemsData[i];\r\n\t                modifier.closed = true;\r\n\t            }\r\n\t            ownModifiers.push(modifier);\r\n\t        }\r\n\t        this.addProcessedElement(arr[i], i + 1);\r\n\t    }\r\n\t    len = ownArrays.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        ownArrays[i].closed = true;\r\n\t    }\r\n\t    len = ownModifiers.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        ownModifiers[i].closed = true;\r\n\t    }\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.renderInnerContent = function() {\r\n\t\r\n\t    this.transformHelper.mat.reset();\r\n\t    this.transformHelper.opacity = 1;\r\n\t    this.transformHelper._matMdf = false;\r\n\t    this.transformHelper._opMdf = false;\r\n\t    this.renderModifiers();\r\n\t    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n\t    var props, groupMatrix;\r\n\t    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n\t        groupTransform.opacity = parentTransform.opacity;\r\n\t        groupTransform.opacity *= groupTransform.op.v;\r\n\t        groupTransform._opMdf = true;\r\n\t    }\r\n\t    if(parentTransform._matMdf || groupTransform.mProps._mdf || this._isFirstFrame) {\r\n\t        groupMatrix = groupTransform.mat;\r\n\t        groupMatrix.cloneFromProps(groupTransform.mProps.v.props);\r\n\t        groupTransform._matMdf = true;\r\n\t        props = parentTransform.mat.props;\r\n\t        groupMatrix.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t    }\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.drawLayer = function() {\r\n\t    var i, len = this.stylesList.length;\r\n\t    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        currentStyle = this.stylesList[i];\r\n\t        type = currentStyle.type;\r\n\t        if((type === 'st' && currentStyle.wi === 0) || !currentStyle.data._render || currentStyle.coOp === 0){\r\n\t            continue;\r\n\t        }\r\n\t        renderer.save();\r\n\t        elems = currentStyle.elements;\r\n\t        if(type === 'st'){\r\n\t            ctx.strokeStyle = currentStyle.co;\r\n\t            ctx.lineWidth = currentStyle.wi;\r\n\t            ctx.lineCap = currentStyle.lc;\r\n\t            ctx.lineJoin = currentStyle.lj;\r\n\t            ctx.miterLimit = currentStyle.ml || 0;\r\n\t        }else{\r\n\t            ctx.fillStyle = currentStyle.co;\r\n\t        }\r\n\t        renderer.ctxOpacity(currentStyle.coOp);\r\n\t        if(this.globalData.currentGlobalAlpha !== 0) {\r\n\t            if(type !== 'st'){\r\n\t                ctx.beginPath();\r\n\t            }\r\n\t            jLen = elems.length;\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                if(type === 'st'){\r\n\t                    ctx.beginPath();\r\n\t                    if(currentStyle.da){\r\n\t                        ctx.setLineDash(currentStyle.da);\r\n\t                        ctx.lineDashOffset = currentStyle.do;\r\n\t                        this.globalData.isDashed = true;\r\n\t                    }else if(this.globalData.isDashed){\r\n\t                        ctx.setLineDash(this.dashResetter);\r\n\t                        this.globalData.isDashed = false;\r\n\t                    }\r\n\t                }\r\n\t                nodes = elems[j].trNodes;\r\n\t                kLen = nodes.length;\r\n\t\r\n\t                for(k=0;k<kLen;k+=1){\r\n\t                    if(nodes[k].t == 'm'){\r\n\t                        ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n\t                    }else if(nodes[k].t == 'c'){\r\n\t                        ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n\t                    }else{\r\n\t                        ctx.closePath();\r\n\t                    }\r\n\t                }\r\n\t                if(type === 'st'){\r\n\t                    ctx.stroke();\r\n\t                }\r\n\t            }\r\n\t            if(type !== 'st'){\r\n\t                ctx.fill(currentStyle.r);\r\n\t            }\r\n\t            \r\n\t        }\r\n\t        renderer.restore();\r\n\t    }\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n\t    var i, len = items.length - 1;\r\n\t    var groupTransform;\r\n\t    groupTransform = parentTransform;\r\n\t    for(i=len;i>=0;i-=1){\r\n\t        if(items[i].ty == 'tr'){\r\n\t            groupTransform = data[i].transform;\r\n\t            this.renderShapeTransform(parentTransform, groupTransform);\r\n\t        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n\t            this.renderPath(items[i],data[i],groupTransform);\r\n\t        }else if(items[i].ty == 'fl'){\r\n\t            this.renderFill(items[i],data[i],groupTransform);\r\n\t        }else if(items[i].ty == 'st'){\r\n\t            this.renderStroke(items[i],data[i],groupTransform);\r\n\t        }else if(items[i].ty == 'gr'){\r\n\t            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n\t        }else if(items[i].ty == 'tm'){\r\n\t            //\r\n\t        }\r\n\t    }\r\n\t    if(isMain){\r\n\t        this.drawLayer();\r\n\t    }\r\n\t    \r\n\t};\r\n\tCVShapeElement.prototype.renderPath = function(pathData,itemData,groupTransform){\r\n\t    var len, i, j,jLen;\r\n\t    var redraw = groupTransform._matMdf || itemData.sh._mdf || this._isFirstFrame;\r\n\t    if(redraw) {\r\n\t        var paths = itemData.sh.paths, groupTransformMat = groupTransform.mat;\r\n\t        jLen = pathData._render === false ? 0 : paths._length;\r\n\t        var pathStringTransformed = itemData.trNodes;\r\n\t        pathStringTransformed.length = 0;\r\n\t        for(j=0;j<jLen;j+=1){\r\n\t            var pathNodes = paths.shapes[j];\r\n\t            if(pathNodes && pathNodes.v){\r\n\t                len = pathNodes._length;\r\n\t                for (i = 1; i < len; i += 1) {\r\n\t                    if (i == 1) {\r\n\t                        pathStringTransformed.push({\r\n\t                            t: 'm',\r\n\t                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n\t                        });\r\n\t                    }\r\n\t                    pathStringTransformed.push({\r\n\t                        t: 'c',\r\n\t                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n\t                    });\r\n\t                }\r\n\t                if (len == 1) {\r\n\t                    pathStringTransformed.push({\r\n\t                        t: 'm',\r\n\t                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n\t                    });\r\n\t                }\r\n\t                if (pathNodes.c && len) {\r\n\t                    pathStringTransformed.push({\r\n\t                        t: 'c',\r\n\t                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n\t                    });\r\n\t                    pathStringTransformed.push({\r\n\t                        t: 'z'\r\n\t                    });\r\n\t                }\r\n\t                itemData.lStr = pathStringTransformed;\r\n\t            }\r\n\t\r\n\t        }\r\n\t\r\n\t        if (itemData.st) {\r\n\t            for (i = 0; i < 16; i += 1) {\r\n\t                itemData.tr[i] = groupTransform.mat.props[i];\r\n\t            }\r\n\t        }\r\n\t        itemData.trNodes = pathStringTransformed;\r\n\t\r\n\t    }\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\tCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n\t    var styleElem = itemData.style;\r\n\t\r\n\t    if(itemData.c._mdf || this._isFirstFrame){\r\n\t        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n\t    }\r\n\t    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n\t        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n\t    }\r\n\t};\r\n\t\r\n\tCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if(d && (d._mdf  || this._isFirstFrame)){\r\n\t        styleElem.da = d.dashArray;\r\n\t        styleElem.do = d.dashoffset[0];\r\n\t    }\r\n\t    if(itemData.c._mdf || this._isFirstFrame){\r\n\t        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n\t    }\r\n\t    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n\t        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n\t    }\r\n\t    if(itemData.w._mdf || this._isFirstFrame){\r\n\t        styleElem.wi = itemData.w.v;\r\n\t    }\r\n\t};\r\n\t\r\n\t\r\n\tCVShapeElement.prototype.destroy = function(){\r\n\t    this.shapesData = null;\r\n\t    this.globalData = null;\r\n\t    this.canvasContext = null;\r\n\t    this.stylesList.length = 0;\r\n\t    this.itemsData.length = 0;\r\n\t};\r\n\t\r\n\t\n\tfunction CVSolidElement(data, globalData, comp) {\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\textendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\t\r\n\tCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\n\tCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\t\r\n\tCVSolidElement.prototype.renderInnerContent = function() {\r\n\t    var ctx = this.canvasContext;\r\n\t    ctx.fillStyle = this.data.sc;\r\n\t    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n\t    //\r\n\t};\n\tfunction CVTextElement(data, globalData, comp){\r\n\t    this.textSpans = [];\r\n\t    this.yOffset = 0;\r\n\t    this.fillColorAnim = false;\r\n\t    this.strokeColorAnim = false;\r\n\t    this.strokeWidthAnim = false;\r\n\t    this.stroke = false;\r\n\t    this.fill = false;\r\n\t    this.justifyOffset = 0;\r\n\t    this.currentRender = null;\r\n\t    this.renderType = 'canvas';\r\n\t    this.values = {\r\n\t        fill: 'rgba(0,0,0,0)',\r\n\t        stroke: 'rgba(0,0,0,0)',\r\n\t        sWidth: 0,\r\n\t        fValue: ''\r\n\t    };\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\textendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\t\r\n\tCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\t\r\n\tCVTextElement.prototype.buildNewText = function(){\r\n\t    var documentData = this.textProperty.currentData;\r\n\t    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\t\r\n\t    var hasFill = false;\r\n\t    if(documentData.fc) {\r\n\t        hasFill = true;\r\n\t        this.values.fill = this.buildColor(documentData.fc);\r\n\t    }else{\r\n\t        this.values.fill = 'rgba(0,0,0,0)';\r\n\t    }\r\n\t    this.fill = hasFill;\r\n\t    var hasStroke = false;\r\n\t    if(documentData.sc){\r\n\t        hasStroke = true;\r\n\t        this.values.stroke = this.buildColor(documentData.sc);\r\n\t        this.values.sWidth = documentData.sw;\r\n\t    }\r\n\t    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n\t    var i, len;\r\n\t    var letters = documentData.l;\r\n\t    var matrixHelper = this.mHelper;\r\n\t    this.stroke = hasStroke;\r\n\t    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n\t    len = documentData.finalText.length;\r\n\t    //this.tHelper.font = this.values.fValue;\r\n\t    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n\t    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n\t    var xPos = 0, yPos = 0, firstLine = true;\r\n\t    var cnt = 0;\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n\t        shapeData = charData && charData.data || {};\r\n\t        matrixHelper.reset();\r\n\t        if(singleShape && letters[i].n) {\r\n\t            xPos = -trackingOffset;\r\n\t            yPos += documentData.yOffset;\r\n\t            yPos += firstLine ? 1 : 0;\r\n\t            firstLine = false;\r\n\t        }\r\n\t\r\n\t        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n\t        jLen = shapes.length;\r\n\t        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n\t        if(singleShape){\r\n\t            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n\t        }\r\n\t        commands = createSizedArray(jLen);\r\n\t        for(j=0;j<jLen;j+=1){\r\n\t            kLen = shapes[j].ks.k.i.length;\r\n\t            pathNodes = shapes[j].ks.k;\r\n\t            pathArr = [];\r\n\t            for(k=1;k<kLen;k+=1){\r\n\t                if(k==1){\r\n\t                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n\t                }\r\n\t                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n\t            }\r\n\t            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n\t            commands[j] = pathArr;\r\n\t        }\r\n\t        if(singleShape){\r\n\t            xPos += letters[i].l;\r\n\t            xPos += trackingOffset;\r\n\t        }\r\n\t        if(this.textSpans[cnt]){\r\n\t            this.textSpans[cnt].elem = commands;\r\n\t        } else {\r\n\t            this.textSpans[cnt] = {elem: commands};\r\n\t        }\r\n\t        cnt +=1;\r\n\t    }\r\n\t};\r\n\t\r\n\tCVTextElement.prototype.renderInnerContent = function(){\r\n\t    var ctx = this.canvasContext;\r\n\t    var finalMat = this.finalTransform.mat.props;\r\n\t    ctx.font = this.values.fValue;\r\n\t    ctx.lineCap = 'butt';\r\n\t    ctx.lineJoin = 'miter';\r\n\t    ctx.miterLimit = 4;\r\n\t\r\n\t    if(!this.data.singleShape){\r\n\t        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n\t    }\r\n\t\r\n\t    var  i,len, j, jLen, k, kLen;\r\n\t    var renderedLetters = this.textAnimator.renderedLetters;\r\n\t\r\n\t    var letters = this.textProperty.currentData.l;\r\n\t\r\n\t    len = letters.length;\r\n\t    var renderedLetter;\r\n\t    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(letters[i].n){\r\n\t            continue;\r\n\t        }\r\n\t        renderedLetter = renderedLetters[i];\r\n\t        if(renderedLetter){\r\n\t            this.globalData.renderer.save();\r\n\t            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n\t            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n\t        }\r\n\t        if(this.fill){\r\n\t            if(renderedLetter && renderedLetter.fc){\r\n\t                if(lastFill !== renderedLetter.fc){\r\n\t                    lastFill = renderedLetter.fc;\r\n\t                    ctx.fillStyle = renderedLetter.fc;\r\n\t                }\r\n\t            }else if(lastFill !== this.values.fill){\r\n\t                lastFill = this.values.fill;\r\n\t                ctx.fillStyle = this.values.fill;\r\n\t            }\r\n\t            commands = this.textSpans[i].elem;\r\n\t            jLen = commands.length;\r\n\t            this.globalData.canvasContext.beginPath();\r\n\t            for(j=0;j<jLen;j+=1) {\r\n\t                pathArr = commands[j];\r\n\t                kLen = pathArr.length;\r\n\t                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n\t                for (k = 2; k < kLen; k += 6) {\r\n\t                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n\t                }\r\n\t            }\r\n\t            this.globalData.canvasContext.closePath();\r\n\t            this.globalData.canvasContext.fill();\r\n\t            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n\t        }\r\n\t        if(this.stroke){\r\n\t            if(renderedLetter && renderedLetter.sw){\r\n\t                if(lastStrokeW !== renderedLetter.sw){\r\n\t                    lastStrokeW = renderedLetter.sw;\r\n\t                    ctx.lineWidth = renderedLetter.sw;\r\n\t                }\r\n\t            }else if(lastStrokeW !== this.values.sWidth){\r\n\t                lastStrokeW = this.values.sWidth;\r\n\t                ctx.lineWidth = this.values.sWidth;\r\n\t            }\r\n\t            if(renderedLetter && renderedLetter.sc){\r\n\t                if(lastStroke !== renderedLetter.sc){\r\n\t                    lastStroke = renderedLetter.sc;\r\n\t                    ctx.strokeStyle = renderedLetter.sc;\r\n\t                }\r\n\t            }else if(lastStroke !== this.values.stroke){\r\n\t                lastStroke = this.values.stroke;\r\n\t                ctx.strokeStyle = this.values.stroke;\r\n\t            }\r\n\t            commands = this.textSpans[i].elem;\r\n\t            jLen = commands.length;\r\n\t            this.globalData.canvasContext.beginPath();\r\n\t            for(j=0;j<jLen;j+=1) {\r\n\t                pathArr = commands[j];\r\n\t                kLen = pathArr.length;\r\n\t                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n\t                for (k = 2; k < kLen; k += 6) {\r\n\t                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n\t                }\r\n\t            }\r\n\t            this.globalData.canvasContext.closePath();\r\n\t            this.globalData.canvasContext.stroke();\r\n\t            ///ctx.strokeText(letters[i].val,0,0);\r\n\t        }\r\n\t        if(renderedLetter) {\r\n\t            this.globalData.renderer.restore();\r\n\t        }\r\n\t    }\r\n\t    /*if(this.data.hasMask){\r\n\t     this.globalData.renderer.restore(true);\r\n\t     }*/\r\n\t};\n\tfunction CVEffects() {\r\n\t\r\n\t}\r\n\tCVEffects.prototype.renderFrame = function(){};\n\tfunction HBaseElement(data,globalData,comp){}\r\n\tHBaseElement.prototype = {\r\n\t    checkBlendMode: function(){},\r\n\t    initRendererElement: function(){\r\n\t        this.baseElement = createTag(this.data.tg || 'div');\r\n\t        if(this.data.hasMask) {\r\n\t            this.svgElement = createNS('svg');\r\n\t            this.layerElement = createNS('g');\r\n\t            this.maskedElement = this.layerElement;\r\n\t            this.svgElement.appendChild(this.layerElement);\r\n\t            this.baseElement.appendChild(this.svgElement);\r\n\t        } else {\r\n\t            this.layerElement = this.baseElement;\r\n\t        }\r\n\t        styleDiv(this.baseElement);\r\n\t    },\r\n\t    createContainerElements: function(){\r\n\t        this.renderableEffectsManager = new CVEffects(this);\r\n\t        this.transformedElement = this.baseElement;\r\n\t        this.maskedElement = this.layerElement;\r\n\t        if (this.data.ln) {\r\n\t            this.layerElement.setAttribute('id',this.data.ln);\r\n\t        }\r\n\t        if (this.data.cl) {\r\n\t            this.layerElement.setAttribute('class', this.data.cl);\r\n\t        }\r\n\t        if (this.data.bm !== 0) {\r\n\t            this.setBlendMode();\r\n\t        }\r\n\t    },\r\n\t    renderElement: function() {\r\n\t        if(this.finalTransform._matMdf){\r\n\t            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n\t        }\r\n\t        if(this.finalTransform._opMdf){\r\n\t            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n\t        }\r\n\t    },\r\n\t    renderFrame: function() {\r\n\t        //If it is exported as hidden (data.hd === true) no need to render\r\n\t        //If it is not visible no need to render\r\n\t        if (this.data.hd || this.hidden) {\r\n\t            return;\r\n\t        }\r\n\t        this.renderTransform();\r\n\t        this.renderRenderable();\r\n\t        this.renderElement();\r\n\t        this.renderInnerContent();\r\n\t        if (this._isFirstFrame) {\r\n\t            this._isFirstFrame = false;\r\n\t        }\r\n\t    },\r\n\t    destroy: function(){\r\n\t        this.layerElement = null;\r\n\t        this.transformedElement = null;\r\n\t        if(this.matteElement) {\r\n\t            this.matteElement = null;\r\n\t        }\r\n\t        if(this.maskManager) {\r\n\t            this.maskManager.destroy();\r\n\t            this.maskManager = null;\r\n\t        }\r\n\t    },\r\n\t    addMasks: function(){\r\n\t        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n\t    },\r\n\t    setMatte: function(){}\r\n\t};\r\n\tHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\n\tHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\n\tHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\n\tfunction HSolidElement(data,globalData,comp){\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\textendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\t\r\n\tHSolidElement.prototype.createContent = function(){\r\n\t    var rect;\r\n\t    if(this.data.hasMask){\r\n\t        rect = createNS('rect');\r\n\t        rect.setAttribute('width',this.data.sw);\r\n\t        rect.setAttribute('height',this.data.sh);\r\n\t        rect.setAttribute('fill',this.data.sc);\r\n\t        this.svgElement.setAttribute('width',this.data.sw);\r\n\t        this.svgElement.setAttribute('height',this.data.sh);\r\n\t    } else {\r\n\t        rect = createTag('div');\r\n\t        rect.style.width = this.data.sw + 'px';\r\n\t        rect.style.height = this.data.sh + 'px';\r\n\t        rect.style.backgroundColor = this.data.sc;\r\n\t    }\r\n\t    this.layerElement.appendChild(rect);\r\n\t};\r\n\t\n\tfunction HCompElement(data,globalData,comp){\r\n\t    this.layers = data.layers;\r\n\t    this.supports3d = !data.hasMask;\r\n\t    this.completeLayers = false;\r\n\t    this.pendingElements = [];\r\n\t    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n\t    this.initElement(data,globalData,comp);\r\n\t    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n\t}\r\n\t\r\n\textendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\n\tHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\t\r\n\tHCompElement.prototype.createContainerElements = function(){\r\n\t    this._createBaseContainerElements();\r\n\t    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n\t    if(this.data.hasMask){\r\n\t        this.svgElement.setAttribute('width',this.data.w);\r\n\t        this.svgElement.setAttribute('height',this.data.h);\r\n\t        this.transformedElement = this.baseElement;\r\n\t    } else {\r\n\t        this.transformedElement = this.layerElement;\r\n\t    }\r\n\t};\r\n\t\r\n\tHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n\t    var j = 0;\r\n\t    var nextElement;\r\n\t    while(j<pos){\r\n\t        if(this.elements[j] && this.elements[j].getBaseElement){\r\n\t            nextElement = this.elements[j].getBaseElement();\r\n\t        }\r\n\t        j += 1;\r\n\t    }\r\n\t    if(nextElement){\r\n\t        this.layerElement.insertBefore(elem, nextElement);\r\n\t    } else {\r\n\t        this.layerElement.appendChild(elem);\r\n\t    }\r\n\t}\r\n\t\n\tfunction HShapeElement(data,globalData,comp){\r\n\t    //List of drawable elements\r\n\t    this.shapes = [];\r\n\t    // Full shape data\r\n\t    this.shapesData = data.shapes;\r\n\t    //List of styles that will be applied to shapes\r\n\t    this.stylesList = [];\r\n\t    //List of modifiers that will be applied to shapes\r\n\t    this.shapeModifiers = [];\r\n\t    //List of items in shape tree\r\n\t    this.itemsData = [];\r\n\t    //List of items in previous shape tree\r\n\t    this.processedElements = [];\r\n\t    // List of animated components\r\n\t    this.animatedContents = [];\r\n\t    this.shapesContainer = createNS('g');\r\n\t    this.initElement(data,globalData,comp);\r\n\t    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n\t    // List of elements that have been created\r\n\t    this.prevViewData = [];\r\n\t    this.currentBBox = {\r\n\t        x:999999,\r\n\t        y: -999999,\r\n\t        h: 0,\r\n\t        w: 0\r\n\t    };\r\n\t}\r\n\textendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\n\tHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\t\r\n\tHShapeElement.prototype.createContent = function(){\r\n\t    var cont;\r\n\t    this.baseElement.style.fontSize = 0;\r\n\t    if (this.data.hasMask) {\r\n\t        this.layerElement.appendChild(this.shapesContainer);\r\n\t        cont = this.svgElement;\r\n\t    } else {\r\n\t        cont = createNS('svg');\r\n\t        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n\t        cont.setAttribute('width',size.w);\r\n\t        cont.setAttribute('height',size.h);\r\n\t        cont.appendChild(this.shapesContainer);\r\n\t        this.layerElement.appendChild(cont);\r\n\t    }\r\n\t\r\n\t    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n\t    this.filterUniqueShapes();\r\n\t    this.shapeCont = cont;\r\n\t};\r\n\t\r\n\tHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n\t    var i, len = transformers.length;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n\t    }\r\n\t    return point;\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n\t    var shape = item.sh.v;\r\n\t    var transformers = item.transformers;\r\n\t    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n\t    if (len <= 1) {\r\n\t        return;\r\n\t    }\r\n\t    for (i = 0; i < len - 1; i += 1) {\r\n\t        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n\t        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n\t        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n\t        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n\t        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n\t    }\r\n\t    if(shape.c) {\r\n\t        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n\t        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n\t        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n\t        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n\t        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n\t    }\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n\t    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n\t    var bounds = this.shapeBoundingBox;\r\n\t    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n\t    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n\t    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n\t    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.shapeBoundingBox = {\r\n\t    left:0,\r\n\t    right:0,\r\n\t    top:0,\r\n\t    bottom:0,\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.tempBoundingBox = {\r\n\t    x:0,\r\n\t    xMax:0,\r\n\t    y:0,\r\n\t    yMax:0,\r\n\t    width:0,\r\n\t    height:0\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\t\r\n\t    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\t\r\n\t    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\t\r\n\t      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n\t      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n\t      c = 3 * p1[i] - 3 * p0[i];\r\n\t\r\n\t      b = b | 0;\r\n\t      a = a | 0;\r\n\t      c = c | 0;\r\n\t\r\n\t      if (a === 0) {\r\n\t\r\n\t        if (b === 0) {\r\n\t          continue;\r\n\t        }\r\n\t\r\n\t        t = -c / b;\r\n\t\r\n\t        if (0 < t && t < 1) {\r\n\t          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n\t        }\r\n\t        continue;\r\n\t      }\r\n\t\r\n\t      b2ac = b * b - 4 * c * a;\r\n\t\r\n\t      if (b2ac < 0) {\r\n\t        continue;\r\n\t      }\r\n\t\r\n\t      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n\t      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\t\r\n\t      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n\t      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\t\r\n\t    }\r\n\t\r\n\t    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n\t    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n\t    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n\t    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n\t  };\r\n\t\r\n\t  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n\t    return bm_pow(1-t, 3) * p0[i]\r\n\t        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n\t        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n\t        + bm_pow(t, 3) * p3[i];\r\n\t  }\r\n\t\r\n\tHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n\t    var i, len = itemsData.length, path;\r\n\t    for(i = 0; i < len; i += 1) {\r\n\t        if(itemsData[i] && itemsData[i].sh) {\r\n\t            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n\t        } else if(itemsData[i] && itemsData[i].it) {\r\n\t            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.currentBoxContains = function(box) {\r\n\t    return this.currentBBox.x <= box.x \r\n\t    && this.currentBBox.y <= box.y \r\n\t    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n\t    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height\r\n\t}\r\n\t\r\n\tHShapeElement.prototype.renderInnerContent = function() {\r\n\t    this._renderShapeFrame();\r\n\t\r\n\t    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n\t        var tempBoundingBox = this.tempBoundingBox;\r\n\t        var max = 999999;\r\n\t        tempBoundingBox.x = max;\r\n\t        tempBoundingBox.xMax = -max;\r\n\t        tempBoundingBox.y = max;\r\n\t        tempBoundingBox.yMax = -max;\r\n\t        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n\t        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n\t        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n\t        //var tempBoundingBox = this.shapeCont.getBBox();\r\n\t        if(this.currentBoxContains(tempBoundingBox)) {\r\n\t            return;\r\n\t        }\r\n\t        var changed = false;\r\n\t        if(this.currentBBox.w !== tempBoundingBox.width){\r\n\t            this.currentBBox.w = tempBoundingBox.width;\r\n\t            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n\t            changed = true;\r\n\t        }\r\n\t        if(this.currentBBox.h !== tempBoundingBox.height){\r\n\t            this.currentBBox.h = tempBoundingBox.height;\r\n\t            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n\t            changed = true;\r\n\t        }\r\n\t        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n\t            this.currentBBox.w = tempBoundingBox.width;\r\n\t            this.currentBBox.h = tempBoundingBox.height;\r\n\t            this.currentBBox.x = tempBoundingBox.x;\r\n\t            this.currentBBox.y = tempBoundingBox.y;\r\n\t\r\n\t            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n\t            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n\t        }\r\n\t    }\r\n\t\r\n\t};\n\tfunction HTextElement(data,globalData,comp){\r\n\t    this.textSpans = [];\r\n\t    this.textPaths = [];\r\n\t    this.currentBBox = {\r\n\t        x:999999,\r\n\t        y: -999999,\r\n\t        h: 0,\r\n\t        w: 0\r\n\t    };\r\n\t    this.renderType = 'svg';\r\n\t    this.isMasked = false;\r\n\t    this.initElement(data,globalData,comp);\r\n\t\r\n\t}\r\n\textendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\t\r\n\tHTextElement.prototype.createContent = function(){\r\n\t    this.isMasked = this.checkMasks();\r\n\t    if(this.isMasked){\r\n\t        this.renderType = 'svg';\r\n\t        this.compW = this.comp.data.w;\r\n\t        this.compH = this.comp.data.h;\r\n\t        this.svgElement.setAttribute('width',this.compW);\r\n\t        this.svgElement.setAttribute('height',this.compH);\r\n\t        var g = createNS('g');\r\n\t        this.maskedElement.appendChild(g);\r\n\t        this.innerElem = g;\r\n\t    } else {\r\n\t        this.renderType = 'html';\r\n\t        this.innerElem = this.layerElement;\r\n\t    }\r\n\t\r\n\t    this.checkParenting();\r\n\t\r\n\t};\r\n\t\r\n\tHTextElement.prototype.buildNewText = function(){\r\n\t    var documentData = this.textProperty.currentData;\r\n\t    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\t    var innerElemStyle = this.innerElem.style;\r\n\t    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n\t    if(documentData.sc){\r\n\t        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n\t        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n\t    }\r\n\t    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n\t    if(!this.globalData.fontManager.chars){\r\n\t        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n\t        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n\t        if(fontData.fClass){\r\n\t            this.innerElem.className = fontData.fClass;\r\n\t        } else {\r\n\t            innerElemStyle.fontFamily = fontData.fFamily;\r\n\t            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n\t            innerElemStyle.fontStyle = fStyle;\r\n\t            innerElemStyle.fontWeight = fWeight;\r\n\t        }\r\n\t    }\r\n\t    var i, len;\r\n\t\r\n\t    var letters = documentData.l;\r\n\t    len = letters.length;\r\n\t    var tSpan,tParent,tCont;\r\n\t    var matrixHelper = this.mHelper;\r\n\t    var shapes, shapeStr = '';\r\n\t    var cnt = 0;\r\n\t    for (i = 0;i < len ;i += 1) {\r\n\t        if(this.globalData.fontManager.chars){\r\n\t            if(!this.textPaths[cnt]){\r\n\t                tSpan = createNS('path');\r\n\t                tSpan.setAttribute('stroke-linecap', 'butt');\r\n\t                tSpan.setAttribute('stroke-linejoin','round');\r\n\t                tSpan.setAttribute('stroke-miterlimit','4');\r\n\t            } else {\r\n\t                tSpan = this.textPaths[cnt];\r\n\t            }\r\n\t            if(!this.isMasked){\r\n\t                if(this.textSpans[cnt]){\r\n\t                    tParent = this.textSpans[cnt];\r\n\t                    tCont = tParent.children[0];\r\n\t                } else {\r\n\t\r\n\t                    tParent = createTag('div');\r\n\t                    tCont = createNS('svg');\r\n\t                    tCont.appendChild(tSpan);\r\n\t                    styleDiv(tParent);\r\n\t                }\r\n\t            }\r\n\t        }else{\r\n\t            if(!this.isMasked){\r\n\t                if(this.textSpans[cnt]){\r\n\t                    tParent = this.textSpans[cnt];\r\n\t                    tSpan = this.textPaths[cnt];\r\n\t                } else {\r\n\t                    tParent = createTag('span');\r\n\t                    styleDiv(tParent);\r\n\t                    tSpan = createTag('span');\r\n\t                    styleDiv(tSpan);\r\n\t                    tParent.appendChild(tSpan);\r\n\t                }\r\n\t            } else {\r\n\t                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n\t            }\r\n\t        }\r\n\t        //tSpan.setAttribute('visibility', 'hidden');\r\n\t        if(this.globalData.fontManager.chars){\r\n\t            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n\t            var shapeData;\r\n\t            if(charData){\r\n\t                shapeData = charData.data;\r\n\t            } else {\r\n\t                shapeData = null;\r\n\t            }\r\n\t            matrixHelper.reset();\r\n\t            if(shapeData && shapeData.shapes){\r\n\t                shapes = shapeData.shapes[0].it;\r\n\t                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n\t                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n\t                tSpan.setAttribute('d',shapeStr);\r\n\t            }\r\n\t            if(!this.isMasked){\r\n\t                this.innerElem.appendChild(tParent);\r\n\t                if(shapeData && shapeData.shapes){\r\n\t\r\n\t                    //document.body.appendChild is needed to get exact measure of shape\r\n\t                    document.body.appendChild(tCont);\r\n\t                    var boundingBox = tCont.getBBox();\r\n\t                    tCont.setAttribute('width',boundingBox.width + 2);\r\n\t                    tCont.setAttribute('height',boundingBox.height + 2);\r\n\t                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n\t                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\t\r\n\t                    letters[i].yOffset = boundingBox.y-1;\r\n\t\r\n\t                } else{\r\n\t                    tCont.setAttribute('width',1);\r\n\t                    tCont.setAttribute('height',1);\r\n\t                }\r\n\t                    tParent.appendChild(tCont);\r\n\t            }else{\r\n\t                this.innerElem.appendChild(tSpan);\r\n\t            }\r\n\t        }else{\r\n\t            tSpan.textContent = letters[i].val;\r\n\t            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n\t            if(!this.isMasked){\r\n\t                this.innerElem.appendChild(tParent);\r\n\t                //\r\n\t                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n\t            } else {\r\n\t                this.innerElem.appendChild(tSpan);\r\n\t            }\r\n\t        }\r\n\t        //\r\n\t        if(!this.isMasked){\r\n\t            this.textSpans[cnt] = tParent;\r\n\t        }else{\r\n\t            this.textSpans[cnt] = tSpan;\r\n\t        }\r\n\t        this.textSpans[cnt].style.display = 'block';\r\n\t        this.textPaths[cnt] = tSpan;\r\n\t        cnt += 1;\r\n\t    }\r\n\t    while(cnt < this.textSpans.length){\r\n\t        this.textSpans[cnt].style.display = 'none';\r\n\t        cnt += 1;\r\n\t    }\r\n\t};\r\n\t\r\n\tHTextElement.prototype.renderInnerContent = function() {\r\n\t\r\n\t    if(this.data.singleShape){\r\n\t        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n\t            return;\r\n\t        } else {\r\n\t            // Todo Benchmark if using this is better than getBBox\r\n\t             if(this.isMasked && this.finalTransform._matMdf){\r\n\t                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n\t                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n\t             }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n\t    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n\t        return;\r\n\t    }\r\n\t    var  i,len, count = 0;\r\n\t    var renderedLetters = this.textAnimator.renderedLetters;\r\n\t\r\n\t    var letters = this.textProperty.currentData.l;\r\n\t\r\n\t    len = letters.length;\r\n\t    var renderedLetter, textSpan, textPath;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        if(letters[i].n){\r\n\t            count += 1;\r\n\t            continue;\r\n\t        }\r\n\t        textSpan = this.textSpans[i];\r\n\t        textPath = this.textPaths[i];\r\n\t        renderedLetter = renderedLetters[count];\r\n\t        count += 1;\r\n\t        if(renderedLetter._mdf.m) {\r\n\t            if(!this.isMasked){\r\n\t                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n\t            }else{\r\n\t                textSpan.setAttribute('transform',renderedLetter.m);\r\n\t            }\r\n\t        }\r\n\t        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n\t        textSpan.style.opacity = renderedLetter.o;\r\n\t        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n\t            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n\t        }\r\n\t        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n\t            textPath.setAttribute('stroke',renderedLetter.sc);\r\n\t        }\r\n\t        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n\t            textPath.setAttribute('fill',renderedLetter.fc);\r\n\t            textPath.style.color = renderedLetter.fc;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n\t        var boundingBox = this.innerElem.getBBox();\r\n\t\r\n\t        if(this.currentBBox.w !== boundingBox.width){\r\n\t            this.currentBBox.w = boundingBox.width;\r\n\t            this.svgElement.setAttribute('width',boundingBox.width);\r\n\t        }\r\n\t        if(this.currentBBox.h !== boundingBox.height){\r\n\t            this.currentBBox.h = boundingBox.height;\r\n\t            this.svgElement.setAttribute('height',boundingBox.height);\r\n\t        }\r\n\t\r\n\t        var margin = 1;\r\n\t        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n\t            this.currentBBox.w = boundingBox.width + margin*2;\r\n\t            this.currentBBox.h = boundingBox.height + margin*2;\r\n\t            this.currentBBox.x = boundingBox.x - margin;\r\n\t            this.currentBBox.y = boundingBox.y - margin;\r\n\t\r\n\t            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n\t            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n\t        }\r\n\t    }\r\n\t};\n\tfunction HImageElement(data,globalData,comp){\r\n\t    this.assetData = globalData.getAssetData(data.refId);\r\n\t    this.initElement(data,globalData,comp);\r\n\t}\r\n\t\r\n\textendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\t\r\n\t\r\n\tHImageElement.prototype.createContent = function(){\r\n\t    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\t    var img = new Image();\r\n\t\r\n\t    if(this.data.hasMask){\r\n\t        this.imageElem = createNS('image');\r\n\t        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n\t        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n\t        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n\t        this.layerElement.appendChild(this.imageElem);\r\n\t        this.baseElement.setAttribute('width',this.assetData.w);\r\n\t        this.baseElement.setAttribute('height',this.assetData.h);\r\n\t    } else {\r\n\t        this.layerElement.appendChild(img);\r\n\t    }\r\n\t    img.src = assetPath;\r\n\t    if(this.data.ln){\r\n\t        this.baseElement.setAttribute('id',this.data.ln);\r\n\t    }\r\n\t};\n\tfunction HCameraElement(data,globalData,comp){\r\n\t    this.initFrame();\r\n\t    this.initBaseData(data,globalData,comp);\r\n\t    this.initHierarchy();\r\n\t    var getProp = PropertyFactory.getProp;\r\n\t    this.pe = getProp(this,data.pe,0,0,this);\r\n\t    if(data.ks.p.s){\r\n\t        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n\t        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n\t        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n\t    }else{\r\n\t        this.p = getProp(this,data.ks.p,1,0,this);\r\n\t    }\r\n\t    if(data.ks.a){\r\n\t        this.a = getProp(this,data.ks.a,1,0,this);\r\n\t    }\r\n\t    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n\t        var i,len = data.ks.or.k.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            data.ks.or.k[i].to = null;\r\n\t            data.ks.or.k[i].ti = null;\r\n\t        }\r\n\t    }\r\n\t    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n\t    this.or.sh = true;\r\n\t    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n\t    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n\t    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n\t    this.mat = new Matrix();\r\n\t    this._prevMat = new Matrix();\r\n\t    this._isFirstFrame = true;\r\n\t}\r\n\textendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\t\r\n\tHCameraElement.prototype.setup = function() {\r\n\t    var i, len = this.comp.threeDElements.length, comp;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        //[perspectiveElem,container]\r\n\t        comp = this.comp.threeDElements[i];\r\n\t        if(comp.type === '3d') {\r\n\t            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n\t            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n\t            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tHCameraElement.prototype.createElements = function(){\r\n\t};\r\n\t\r\n\tHCameraElement.prototype.hide = function(){\r\n\t};\r\n\t\r\n\tHCameraElement.prototype.renderFrame = function(){\r\n\t    var _mdf = this._isFirstFrame;\r\n\t    var i, len;\r\n\t    if(this.hierarchy){\r\n\t        len = this.hierarchy.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n\t        }\r\n\t    }\r\n\t    if(_mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n\t        this.mat.reset();\r\n\t\r\n\t        if(this.hierarchy){\r\n\t            var mat;\r\n\t            len = this.hierarchy.length - 1;\r\n\t            for (i = len; i >= 0; i -= 1) {\r\n\t                /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n\t                console.log(mat)\r\n\t                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n\t                console.log(this.mat.props)*/\r\n\t                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n\t                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n\t                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n\t                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n\t                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n\t            }\r\n\t        }\r\n\t\r\n\t        if(this.p){\r\n\t            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n\t        }else{\r\n\t            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n\t        }\r\n\t        if(this.a){\r\n\t            var diffVector = [this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];\r\n\t            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n\t            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n\t            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n\t            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n\t            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n\t            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n\t            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\t\r\n\t        }\r\n\t        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n\t        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n\t        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n\t        this.mat.translate(0,0,this.pe.v);\r\n\t\r\n\t\r\n\t        \r\n\t\r\n\t\r\n\t        if(!this._prevMat.equals(this.mat) && this.comp.threeDElements) {\r\n\t            len = this.comp.threeDElements.length;\r\n\t            var comp;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                comp = this.comp.threeDElements[i];\r\n\t                if(comp.type === '3d') {\r\n\t                    comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n\t                }\r\n\t            }\r\n\t            this.mat.clone(this._prevMat);\r\n\t        }\r\n\t    }\r\n\t    this._isFirstFrame = false;\r\n\t};\r\n\t\r\n\tHCameraElement.prototype.prepareFrame = function(num) {\r\n\t    this.prepareProperties(num, true);\r\n\t};\r\n\t\r\n\tHCameraElement.prototype.destroy = function(){\r\n\t};\r\n\tHCameraElement.prototype.initExpressions = function(){};\r\n\tHCameraElement.prototype.getBaseElement = function(){return null;};\n\tfunction HEffects() {\r\n\t}\r\n\tHEffects.prototype.renderFrame = function(){};\n\tvar Expressions = (function(){\r\n\t    var ob = {};\r\n\t    ob.initExpressions = initExpressions;\r\n\t\r\n\t\r\n\t    function initExpressions(animation){\r\n\t        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n\t        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n\t    }\r\n\t   return ob;\r\n\t}());\r\n\t\r\n\texpressionsPlugin = Expressions;\r\n\t\n\tvar ExpressionManager = (function(){\r\n\t    'use strict';\r\n\t    var ob = {};\r\n\t    var Math = BMMath;\r\n\t    var window = null;\r\n\t    var document = null;\r\n\t\r\n\t    function duplicatePropertyValue(value, mult) {\r\n\t        mult = mult || 1;\r\n\t\r\n\t        if (typeof value === 'number'  || value instanceof Number) {\r\n\t            return value * mult;\r\n\t        } else if(value.i) {\r\n\t            return shape_pool.clone(value);\r\n\t        } else {\r\n\t            var arr = createTypedArray('float32', value.length);\r\n\t            var i, len = value.length;\r\n\t            for (i = 0; i < len; i += 1) {\r\n\t                arr[i] = value[i] * mult;\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function isTypeOfArray(arr) {\r\n\t        return arr.constructor === Array || arr.constructor === Float32Array;\r\n\t    }\r\n\t\r\n\t    function isNumerable(tOfV, v) {\r\n\t        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n\t    }\r\n\t\r\n\t    function $bm_neg(a){\r\n\t        var tOfA = typeof a;\r\n\t        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n\t            return -a;\r\n\t        }\r\n\t        if(isTypeOfArray(a)){\r\n\t            var i, lenA = a.length;\r\n\t            var retArr = [];\r\n\t            for(i=0;i<lenA;i+=1){\r\n\t                retArr[i] = -a[i];\r\n\t            }\r\n\t            return retArr;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function sum(a,b) {\r\n\t        var tOfA = typeof a;\r\n\t        var tOfB = typeof b;\r\n\t        if(tOfA === 'string' || tOfB === 'string'){\r\n\t            return a + b;\r\n\t        }\r\n\t        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n\t            return a + b;\r\n\t        }\r\n\t        if(isTypeOfArray(a) && isNumerable(tOfB, b)){\r\n\t            a = a.slice(0);\r\n\t            a[0] = a[0] + b;\r\n\t            return a;\r\n\t        }\r\n\t        if(isNumerable(tOfA, a) && isTypeOfArray(b)){\r\n\t            b = b.slice(0);\r\n\t            b[0] = a + b[0];\r\n\t            return b;\r\n\t        }\r\n\t        if(isTypeOfArray(a) && isTypeOfArray(b)){\r\n\t            \r\n\t            var i = 0, lenA = a.length, lenB = b.length;\r\n\t            var retArr = [];\r\n\t            while(i<lenA || i < lenB){\r\n\t                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n\t                    retArr[i] = a[i] + b[i];\r\n\t                }else{\r\n\t                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            return retArr;\r\n\t        }\r\n\t        return 0;\r\n\t    }\r\n\t    var add = sum;\r\n\t\r\n\t    function sub(a,b) {\r\n\t        var tOfA = typeof a;\r\n\t        var tOfB = typeof b;\r\n\t        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n\t            if(tOfA === 'string') {\r\n\t                a = parseInt(a);\r\n\t            }\r\n\t            if(tOfB === 'string') {\r\n\t                b = parseInt(b);\r\n\t            }\r\n\t            return a - b;\r\n\t        }\r\n\t        if( isTypeOfArray(a) && isNumerable(tOfB, b)){\r\n\t            a = a.slice(0);\r\n\t            a[0] = a[0] - b;\r\n\t            return a;\r\n\t        }\r\n\t        if(isNumerable(tOfA, a) &&  isTypeOfArray(b)){\r\n\t            b = b.slice(0);\r\n\t            b[0] = a - b[0];\r\n\t            return b;\r\n\t        }\r\n\t        if(isTypeOfArray(a) && isTypeOfArray(b)){\r\n\t            var i = 0, lenA = a.length, lenB = b.length;\r\n\t            var retArr = [];\r\n\t            while(i<lenA || i < lenB){\r\n\t                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n\t                    retArr[i] = a[i] - b[i];\r\n\t                }else{\r\n\t                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            return retArr;\r\n\t        }\r\n\t        return 0;\r\n\t    }\r\n\t\r\n\t    function mul(a,b) {\r\n\t        var tOfA = typeof a;\r\n\t        var tOfB = typeof b;\r\n\t        var arr;\r\n\t        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n\t            return a * b;\r\n\t        }\r\n\t\r\n\t        var i, len;\r\n\t        if(isTypeOfArray(a) && isNumerable(tOfB, b)){\r\n\t            len = a.length;\r\n\t            arr = createTypedArray('float32', len);\r\n\t            for(i=0;i<len;i+=1){\r\n\t                arr[i] = a[i] * b;\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t        if(isNumerable(tOfA, a) && isTypeOfArray(b)){\r\n\t            len = b.length;\r\n\t            arr = createTypedArray('float32', len);\r\n\t            for(i=0;i<len;i+=1){\r\n\t                arr[i] = a * b[i];\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t        return 0;\r\n\t    }\r\n\t\r\n\t    function div(a,b) {\r\n\t        var tOfA = typeof a;\r\n\t        var tOfB = typeof b;\r\n\t        var arr;\r\n\t        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n\t            return a / b;\r\n\t        }\r\n\t        var i, len;\r\n\t        if(isTypeOfArray(a) && isNumerable(tOfB, b)){\r\n\t            len = a.length;\r\n\t            arr = createTypedArray('float32', len);\r\n\t            for(i=0;i<len;i+=1){\r\n\t                arr[i] = a[i] / b;\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t        if(isNumerable(tOfA, a) && isTypeOfArray(b)){\r\n\t            len = b.length;\r\n\t            arr = createTypedArray('float32', len);\r\n\t            for(i=0;i<len;i+=1){\r\n\t                arr[i] = a / b[i];\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t        return 0;\r\n\t    }\r\n\t    function mod(a,b) {\r\n\t        if(typeof a === 'string') {\r\n\t            a = parseInt(a);\r\n\t        }\r\n\t        if(typeof b === 'string') {\r\n\t            b = parseInt(b);\r\n\t        }\r\n\t        return a % b;\r\n\t    }\r\n\t\r\n\t    function clamp(num, min, max) {\r\n\t        if(min > max){\r\n\t            var mm = max;\r\n\t            max = min;\r\n\t            min = mm;\r\n\t        }\r\n\t        return Math.min(Math.max(num, min), max);\r\n\t    }\r\n\t\r\n\t    function radiansToDegrees(val) {\r\n\t        return val/degToRads;\r\n\t    }\r\n\t    var radians_to_degrees = radiansToDegrees;\r\n\t\r\n\t    function degreesToRadians(val) {\r\n\t        return val*degToRads;\r\n\t    }\r\n\t    var degrees_to_radians = radiansToDegrees;\r\n\t\r\n\t    var helperLengthArray = [0,0,0,0,0,0];\r\n\t\r\n\t    function length(arr1, arr2) {\r\n\t        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n\t            arr2 = arr2 || 0;\r\n\t            return Math.abs(arr1 - arr2);\r\n\t        }\r\n\t        if(!arr2) {\r\n\t            arr2 = helperLengthArray;\r\n\t        }\r\n\t        var i, len = Math.min(arr1.length, arr2.length);\r\n\t        var addedLength = 0;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n\t        }\r\n\t        return Math.sqrt(addedLength);\r\n\t    }\r\n\t\r\n\t    function normalize(vec) {\r\n\t        return div(vec, length(vec));\r\n\t    }\r\n\t\r\n\t    function rgbToHsl(val) {\r\n\t        var r = val[0]; var g = val[1]; var b = val[2];\r\n\t        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n\t        var h, s, l = (max + min) / 2;\r\n\t\r\n\t        if(max == min){\r\n\t            h = s = 0; // achromatic\r\n\t        }else{\r\n\t            var d = max - min;\r\n\t            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\t            switch(max){\r\n\t                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t                case g: h = (b - r) / d + 2; break;\r\n\t                case b: h = (r - g) / d + 4; break;\r\n\t            }\r\n\t            h /= 6;\r\n\t        }\r\n\t\r\n\t        return [h, s, l,val[3]];\r\n\t    }\r\n\t\r\n\t    function hue2rgb(p, q, t){\r\n\t        if(t < 0) t += 1;\r\n\t        if(t > 1) t -= 1;\r\n\t        if(t < 1/6) return p + (q - p) * 6 * t;\r\n\t        if(t < 1/2) return q;\r\n\t        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n\t        return p;\r\n\t    }\r\n\t\r\n\t    function hslToRgb(val){\r\n\t        var h = val[0];\r\n\t        var s = val[1];\r\n\t        var l = val[2];\r\n\t\r\n\t        var r, g, b;\r\n\t\r\n\t        if(s === 0){\r\n\t            r = g = b = l; // achromatic\r\n\t        }else{\r\n\t\r\n\t            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t            var p = 2 * l - q;\r\n\t            r = hue2rgb(p, q, h + 1/3);\r\n\t            g = hue2rgb(p, q, h);\r\n\t            b = hue2rgb(p, q, h - 1/3);\r\n\t        }\r\n\t\r\n\t        return [r, g , b, val[3]];\r\n\t    }\r\n\t\r\n\t    function linear(t, tMin, tMax, value1, value2){\r\n\t        if(value1 === undefined || value2 === undefined){\r\n\t            return linear(t,0,1,tMin,tMax);\r\n\t        }\r\n\t        if(t <= tMin) {\r\n\t            return value1;\r\n\t        }else if(t >= tMax){\r\n\t            return value2;\r\n\t        }\r\n\t        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n\t        if(!value1.length){\r\n\t            return value1 + (value2-value1)*perc;\r\n\t        }\r\n\t        var i, len = value1.length;\r\n\t        var arr = createTypedArray('float32', len);\r\n\t        for(i=0;i<len;i+=1){\r\n\t            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n\t        }\r\n\t        return arr;\r\n\t    }\r\n\t    function random(min,max){\r\n\t        if(max === undefined){\r\n\t            if(min === undefined){\r\n\t                min = 0;\r\n\t                max = 1;\r\n\t            } else {\r\n\t                max = min;\r\n\t                min = undefined;\r\n\t            }\r\n\t        }\r\n\t        if(max.length){\r\n\t            var i, len = max.length;\r\n\t            if(!min){\r\n\t                min = createTypedArray('float32', len);\r\n\t            }\r\n\t            var arr = createTypedArray('float32', len);\r\n\t            var rnd = BMMath.random();\r\n\t            for(i=0;i<len;i+=1){\r\n\t                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n\t            }\r\n\t            return arr;\r\n\t        }\r\n\t        if(min === undefined){\r\n\t            min = 0;\r\n\t        }\r\n\t        var rndm = BMMath.random();\r\n\t        return min + rndm*(max-min);\r\n\t    }\r\n\t\r\n\t    function createPath(points, inTangents, outTangents, closed) {\r\n\t        var i, len = points.length;\r\n\t        var path = shape_pool.newElement();\r\n\t        path.setPathData(!!closed, len);\r\n\t        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n\t        for(i = 0; i < len; i += 1) {\r\n\t            inVertexPoint = inTangents ? inTangents[i] : arrPlaceholder;\r\n\t            outVertexPoint = outTangents ? outTangents[i] : arrPlaceholder;\r\n\t            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n\t        }\r\n\t        return path;\r\n\t    }\r\n\t\r\n\t    function initiateExpression(elem,data,property){\r\n\t        var val = data.x;\r\n\t        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n\t        var _needsRandom = val.indexOf('random') !== -1;\r\n\t        var elemType = elem.data.ty;\r\n\t        var transform,content,effect;\r\n\t        var thisProperty = property;\r\n\t        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n\t        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n\t        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n\t        var width = elem.data.sw ? elem.data.sw : 0;\r\n\t        var height = elem.data.sh ? elem.data.sh : 0;\r\n\t        var loopIn, loop_in, loopOut, loop_out;\r\n\t        var toWorld,fromWorld,fromComp,fromCompToSurface,anchorPoint,thisLayer,thisComp,mask,valueAtTime,velocityAtTime;\r\n\t        var __expression_functions = [];\r\n\t        if(data.xf) {\r\n\t            var i, len = data.xf.length;\r\n\t            for(i = 0; i < len; i += 1) {\r\n\t                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\r\n\t            }\r\n\t        }\r\n\t\r\n\t        var scoped_bm_rt;\r\n\t        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n\t        var numKeys = property.kf ? data.k.length : 0;\r\n\t\r\n\t        var wiggle = function wiggle(freq,amp){\r\n\t            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n\t            var addedAmps = createTypedArray('float32', len);\r\n\t            freq = 5;\r\n\t            var iterations = Math.floor(time*freq);\r\n\t            i = 0;\r\n\t            j = 0;\r\n\t            while(i<iterations){\r\n\t                //var rnd = BMMath.random();\r\n\t                for(j=0;j<len;j+=1){\r\n\t                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n\t                    //addedAmps[j] += -amp + amp*2*rnd;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            //var rnd2 = BMMath.random();\r\n\t            var periods = time*freq;\r\n\t            var perc = periods - Math.floor(periods);\r\n\t            var arr = createTypedArray('float32', len);\r\n\t            if(len>1){\r\n\t                for(j=0;j<len;j+=1){\r\n\t                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n\t                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n\t                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n\t                }\r\n\t                return arr;\r\n\t            } else {\r\n\t                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n\t            }\r\n\t        }.bind(this);\r\n\t\r\n\t        if(thisProperty.loopIn) {\r\n\t            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n\t            loop_in = loopIn;\r\n\t        }\r\n\t\r\n\t        if(thisProperty.loopOut) {\r\n\t            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n\t            loop_out = loopOut;\r\n\t        }\r\n\t\r\n\t        function loopInDuration(type,duration){\r\n\t            return loopIn(type,duration,true);\r\n\t        }\r\n\t\r\n\t        function loopOutDuration(type,duration){\r\n\t            return loopOut(type,duration,true);\r\n\t        }\r\n\t\r\n\t        if(this.getValueAtTime) {\r\n\t            valueAtTime = this.getValueAtTime.bind(this);\r\n\t        }\r\n\t\r\n\t        if(this.getVelocityAtTime) {\r\n\t            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n\t        }\r\n\t\r\n\t        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\t\r\n\t        function lookAt(elem1,elem2){\r\n\t            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n\t            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n\t            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n\t            return [yaw,pitch,0];\r\n\t        }\r\n\t\r\n\t        function easeOut(t, tMin, tMax, val1, val2){\r\n\t            if(val1 === undefined){\r\n\t                val1 = tMin;\r\n\t                val2 = tMax;\r\n\t            } else {\r\n\t                t = (t - tMin) / (tMax - tMin);\r\n\t            }\r\n\t            return -(val2-val1) * t*(t-2) + val1;\r\n\t        }\r\n\t\r\n\t        function easeIn(t, tMin, tMax, val1, val2){\r\n\t            if(val1 === undefined){\r\n\t                val1 = tMin;\r\n\t                val2 = tMax;\r\n\t            } else {\r\n\t                t = (t - tMin) / (tMax - tMin);\r\n\t            }\r\n\t            return (val2-val1)*t*t + val1;\r\n\t        }\r\n\t\r\n\t        function nearestKey(time){\r\n\t            var i, len = data.k.length,index,keyTime;\r\n\t            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n\t                index = 0;\r\n\t                keyTime = 0;\r\n\t            } else {\r\n\t                index = -1;\r\n\t                time *= elem.comp.globalData.frameRate;\r\n\t                if (time < data.k[0].t) {\r\n\t                    index = 1;\r\n\t                    keyTime = data.k[0].t;\r\n\t                } else {\r\n\t                    for(i=0;i<len-1;i+=1){\r\n\t                        if(time === data.k[i].t){\r\n\t                            index = i + 1;\r\n\t                            keyTime = data.k[i].t;\r\n\t                            break;\r\n\t                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n\t                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n\t                                index = i + 2;\r\n\t                                keyTime = data.k[i+1].t;\r\n\t                            } else {\r\n\t                                index = i + 1;\r\n\t                                keyTime = data.k[i].t;\r\n\t                            }\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    if(index === -1){\r\n\t                        index = i + 1;\r\n\t                        keyTime = data.k[i].t;\r\n\t                    }\r\n\t                }\r\n\t                \r\n\t            }\r\n\t            var ob = {};\r\n\t            ob.index = index;\r\n\t            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n\t            return ob;\r\n\t        }\r\n\t\r\n\t        function key(ind){\r\n\t            var ob, i, len;\r\n\t            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n\t                throw new Error('The property has no keyframe at index ' + ind);\r\n\t            }\r\n\t            ind -= 1;\r\n\t            ob = {\r\n\t                time: data.k[ind].t/elem.comp.globalData.frameRate\r\n\t            };\r\n\t            var arr;\r\n\t            if(ind === data.k.length - 1 && !data.k[ind].h){\r\n\t                arr = data.k[ind-1].e;\r\n\t            }else{\r\n\t                arr = data.k[ind].s;\r\n\t            }\r\n\t            len = arr.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                ob[i] = arr[i];\r\n\t            }\r\n\t            return ob;\r\n\t        }\r\n\t\r\n\t        function framesToTime(frames, fps) { \r\n\t            if (!fps) {\r\n\t                fps = elem.comp.globalData.frameRate;\r\n\t            }\r\n\t            return frames / fps;\r\n\t        }\r\n\t\r\n\t        function timeToFrames(t, fps) {\r\n\t            if (!t && t !== 0) {\r\n\t                t = time;\r\n\t            }\r\n\t            if (!fps) {\r\n\t                fps = elem.comp.globalData.frameRate;\r\n\t            }\r\n\t            return t * fps;\r\n\t        }\r\n\t\r\n\t        function seedRandom(seed){\r\n\t            BMMath.seedrandom(randSeed + seed);\r\n\t        }\r\n\t\r\n\t        function sourceRectAtTime() {\r\n\t            return elem.sourceRectAtTime();\r\n\t        }\r\n\t\r\n\t        var time, velocity, value, textIndex, textTotal, selectorValue;\r\n\t        var index = elem.data.ind;\r\n\t        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n\t        var parent;\r\n\t        var randSeed = Math.floor(Math.random()*1000000);\r\n\t        function executeExpression(_value) {\r\n\t            value = _value;\r\n\t            if (_needsRandom) {\r\n\t                seedRandom(randSeed);\r\n\t            }\r\n\t            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n\t                return value;\r\n\t            }\r\n\t            if(this.propType === 'textSelector'){\r\n\t                textIndex = this.textIndex;\r\n\t                textTotal = this.textTotal;\r\n\t                selectorValue = this.selectorValue;\r\n\t            }\r\n\t            if (!thisLayer) {\r\n\t                thisLayer = elem.layerInterface;\r\n\t                thisComp = elem.comp.compInterface;\r\n\t                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n\t                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n\t                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n\t                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n\t                fromCompToSurface = fromComp;\r\n\t            }\r\n\t            if (!transform) {\r\n\t                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n\t                anchorPoint = transform.anchorPoint;\r\n\t            }\r\n\t            \r\n\t            if (elemType === 4 && !content) {\r\n\t                content = thisLayer(\"ADBE Root Vectors Group\");\r\n\t            }\r\n\t            if (!effect) {\r\n\t                effect = thisLayer(4);\r\n\t            }\r\n\t            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n\t            if (hasParent && !parent) {\r\n\t                parent = elem.hierarchy[0].layerInterface;\r\n\t            }\r\n\t            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n\t            if (needsVelocity) {\r\n\t                velocity = velocityAtTime(time);\r\n\t            }\r\n\t            expression_function();\r\n\t            this.frameExpressionId = elem.globalData.frameId;\r\n\t\r\n\t            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n\t            if (scoped_bm_rt.propType === \"shape\") {\r\n\t                scoped_bm_rt = shape_pool.clone(scoped_bm_rt.v);\r\n\t            }\r\n\t            return scoped_bm_rt;\r\n\t        }\r\n\t        return executeExpression;\r\n\t    }\r\n\t\r\n\t    ob.initiateExpression = initiateExpression;\r\n\t    return ob;\r\n\t}());\n\t(function addPropertyDecorator() {\r\n\t\r\n\t    function getStaticValueAtTime() {\r\n\t        return this.pv;\r\n\t    }\r\n\t\r\n\t    function loopOut(type,duration,durationFlag){\r\n\t        if(!this.k || !this.keyframes){\r\n\t            return this.pv;\r\n\t        }\r\n\t        type = type ? type.toLowerCase() : '';\r\n\t        var currentFrame = this.comp.renderedFrame;\r\n\t        var keyframes = this.keyframes;\r\n\t        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n\t        if(currentFrame<=lastKeyFrame){\r\n\t            return this.pv;\r\n\t        }else{\r\n\t            var cycleDuration, firstKeyFrame;\r\n\t            if(!durationFlag){\r\n\t                if(!duration || duration > keyframes.length - 1){\r\n\t                    duration = keyframes.length - 1;\r\n\t                }\r\n\t                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n\t                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n\t            } else {\r\n\t                if(!duration){\r\n\t                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n\t                } else {\r\n\t                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n\t                }\r\n\t                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n\t            }\r\n\t            var i, len, ret;\r\n\t            if(type === 'pingpong') {\r\n\t                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n\t                if(iterations % 2 !== 0){\r\n\t                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n\t                }\r\n\t            } else if(type === 'offset'){\r\n\t                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n\t                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n\t                if(this.pv.length){\r\n\t                    ret = new Array(initV.length);\r\n\t                    len = ret.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n\t                    }\r\n\t                    return ret;\r\n\t                }\r\n\t                return (endV-initV)*repeats + current;\r\n\t            } else if(type === 'continue'){\r\n\t                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n\t                if(this.pv.length){\r\n\t                    ret = new Array(lastValue.length);\r\n\t                    len = ret.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n\t                    }\r\n\t                    return ret;\r\n\t                }\r\n\t                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n\t            }\r\n\t            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function loopIn(type,duration, durationFlag) {\r\n\t        if(!this.k){\r\n\t            return this.pv;\r\n\t        }\r\n\t        type = type ? type.toLowerCase() : '';\r\n\t        var currentFrame = this.comp.renderedFrame;\r\n\t        var keyframes = this.keyframes;\r\n\t        var firstKeyFrame = keyframes[0].t;\r\n\t        if(currentFrame>=firstKeyFrame){\r\n\t            return this.pv;\r\n\t        }else{\r\n\t            var cycleDuration, lastKeyFrame;\r\n\t            if(!durationFlag){\r\n\t                if(!duration || duration > keyframes.length - 1){\r\n\t                    duration = keyframes.length - 1;\r\n\t                }\r\n\t                lastKeyFrame = keyframes[duration].t;\r\n\t                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n\t            } else {\r\n\t                if(!duration){\r\n\t                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n\t                } else {\r\n\t                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n\t                }\r\n\t                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n\t            }\r\n\t            var i, len, ret;\r\n\t            if(type === 'pingpong') {\r\n\t                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n\t                if(iterations % 2 === 0){\r\n\t                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n\t                }\r\n\t            } else if(type === 'offset'){\r\n\t                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n\t                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n\t                if(this.pv.length){\r\n\t                    ret = new Array(initV.length);\r\n\t                    len = ret.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n\t                    }\r\n\t                    return ret;\r\n\t                }\r\n\t                return current-(endV-initV)*repeats;\r\n\t            } else if(type === 'continue'){\r\n\t                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n\t                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n\t                if(this.pv.length){\r\n\t                    ret = new Array(firstValue.length);\r\n\t                    len = ret.length;\r\n\t                    for(i=0;i<len;i+=1){\r\n\t                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n\t                    }\r\n\t                    return ret;\r\n\t                }\r\n\t                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n\t            }\r\n\t            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getValueAtTime(frameNum) {\r\n\t        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n\t            frameNum *= this.elem.globalData.frameRate;\r\n\t            frameNum -= this.offsetTime;\r\n\t            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n\t            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n\t            this._cachingAtTime.lastFrame = frameNum;\r\n\t        }\r\n\t        return this._cachingAtTime.value;\r\n\t\r\n\t    }\r\n\t\r\n\t    function getSpeedAtTime(frameNum) {\r\n\t        var delta = -0.01;\r\n\t        var v1 = this.getValueAtTime(frameNum);\r\n\t        var v2 = this.getValueAtTime(frameNum + delta);\r\n\t        var speed = 0;\r\n\t        if(v1.length){\r\n\t            var i;\r\n\t            for(i=0;i<v1.length;i+=1){\r\n\t                speed += Math.pow(v2[i] - v1[i], 2);\r\n\t            }\r\n\t            speed = Math.sqrt(speed) * 100;\r\n\t        } else {\r\n\t            speed = 0;\r\n\t        }\r\n\t        return speed;\r\n\t    }\r\n\t\r\n\t    function getVelocityAtTime(frameNum) {\r\n\t        if(this.vel !== undefined){\r\n\t            return this.vel;\r\n\t        }\r\n\t        var delta = -0.001;\r\n\t        //frameNum += this.elem.data.st;\r\n\t        var v1 = this.getValueAtTime(frameNum);\r\n\t        var v2 = this.getValueAtTime(frameNum + delta);\r\n\t        var velocity;\r\n\t        if(v1.length){\r\n\t            velocity = createTypedArray('float32', v1.length);\r\n\t            var i;\r\n\t            for(i=0;i<v1.length;i+=1){\r\n\t                //removing frameRate\r\n\t                //if needed, don't add it here\r\n\t                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n\t                velocity[i] = (v2[i] - v1[i])/delta;\r\n\t            }\r\n\t        } else {\r\n\t            velocity = (v2 - v1)/delta;\r\n\t        }\r\n\t        return velocity;\r\n\t    }\r\n\t\r\n\t    function setGroupProperty(propertyGroup){\r\n\t        this.propertyGroup = propertyGroup;\r\n\t    }\r\n\t\r\n\t    function searchExpressions(elem,data,prop){\r\n\t        if(data.x){\r\n\t            prop.k = true;\r\n\t            prop.x = true;\r\n\t            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n\t            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getTransformValueAtTime(time) {\r\n\t        console.warn('Transform at time not supported');\r\n\t    }\r\n\t\r\n\t    function getTransformStaticValueAtTime(time) {\r\n\t\r\n\t    }\r\n\t\r\n\t    var TextExpressionSelectorProp = (function(){\r\n\t\r\n\t        function getValueProxy(index,total){\r\n\t            this.textIndex = index+1;\r\n\t            this.textTotal = total;\r\n\t            this.getValue();\r\n\t            return this.v;\r\n\t        }\r\n\t\r\n\t        return function TextExpressionSelectorProp(elem,data){\r\n\t            this.pv = 1;\r\n\t            this.comp = elem.comp;\r\n\t            this.elem = elem;\r\n\t            this.mult = 0.01;\r\n\t            this.propType = 'textSelector';\r\n\t            this.textTotal = data.totalChars;\r\n\t            this.selectorValue = 100;\r\n\t            this.lastValue = [1,1,1];\r\n\t            searchExpressions.bind(this)(elem,data,this);\r\n\t            this.getMult = getValueProxy;\r\n\t            this.getVelocityAtTime = getVelocityAtTime;\r\n\t            if(this.kf){\r\n\t                this.getValueAtTime = getValueAtTime.bind(this);\r\n\t            } else {\r\n\t                this.getValueAtTime = getStaticValueAtTime.bind(this);\r\n\t            }\r\n\t            this.setGroupProperty = setGroupProperty;\r\n\t        };\r\n\t    }());\r\n\t\r\n\t    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n\t    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n\t        var prop = getTransformProperty(elem, data, container);\r\n\t        if(prop.dynamicProperties.length) {\r\n\t            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n\t        } else {\r\n\t            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n\t        }\r\n\t        prop.setGroupProperty = setGroupProperty;\r\n\t        return prop;\r\n\t    };\r\n\t\r\n\t    var propertyGetProp = PropertyFactory.getProp;\r\n\t    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n\t        var prop = propertyGetProp(elem,data,type, mult, container);\r\n\t        //prop.getVelocityAtTime = getVelocityAtTime;\r\n\t        //prop.loopOut = loopOut;\r\n\t        //prop.loopIn = loopIn;\r\n\t        if(prop.kf){\r\n\t            prop.getValueAtTime = getValueAtTime.bind(prop);\r\n\t        } else {\r\n\t            prop.getValueAtTime = getStaticValueAtTime.bind(prop);\r\n\t        }\r\n\t        prop.setGroupProperty = setGroupProperty;\r\n\t        prop.loopOut = loopOut;\r\n\t        prop.loopIn = loopIn;\r\n\t        prop.getVelocityAtTime = getVelocityAtTime.bind(prop);\r\n\t        prop.getSpeedAtTime = getSpeedAtTime.bind(prop);\r\n\t        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n\t        prop.propertyIndex = data.ix;\r\n\t        var value = 0;\r\n\t        if(type !== 0) {\r\n\t            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n\t        }\r\n\t        prop._cachingAtTime = {\r\n\t            lastFrame: initialDefaultFrame,\r\n\t            lastIndex: 0,\r\n\t            value: value\r\n\t        };\r\n\t        searchExpressions(elem,data,prop);\r\n\t        if(prop.k){\r\n\t            container.addDynamicProperty(prop);\r\n\t        }\r\n\t\r\n\t        return prop;\r\n\t    };\r\n\t\r\n\t    function getShapeValueAtTime(frameNum) {\r\n\t        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n\t        if (!this._cachingAtTime) {\r\n\t            this._cachingAtTime = {\r\n\t                shapeValue: shape_pool.clone(this.pv),\r\n\t                lastIndex: 0,\r\n\t                lastTime: initialDefaultFrame\r\n\t            };\r\n\t        }\r\n\t        if(frameNum !== this._cachingAtTime.lastTime) {\r\n\t            this._cachingAtTime.lastTime = frameNum;\r\n\t            frameNum *= this.elem.globalData.frameRate;\r\n\t            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n\t        }\r\n\t        return this._cachingAtTime.shapeValue;\r\n\t    }\r\n\t\r\n\t    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n\t    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\t\r\n\t    function ShapeExpressions(){}\r\n\t    ShapeExpressions.prototype = {\r\n\t        vertices: function(prop, time){\r\n\t            var shapePath = this.v;\r\n\t            if(time !== undefined) {\r\n\t                shapePath = this.getValueAtTime(time, 0);\r\n\t            }\r\n\t            var i, len = shapePath._length;\r\n\t            var vertices = shapePath[prop];\r\n\t            var points = shapePath.v;\r\n\t            var arr = createSizedArray(len);\r\n\t            for(i = 0; i < len; i += 1) {\r\n\t                if(prop === 'i' || prop === 'o') {\r\n\t                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n\t                } else {\r\n\t                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n\t                }\r\n\t                \r\n\t            }\r\n\t            return arr;\r\n\t        },\r\n\t        points: function(time){\r\n\t            return this.vertices('v', time);\r\n\t        },\r\n\t        inTangents: function(time){\r\n\t            return this.vertices('i', time);\r\n\t        },\r\n\t        outTangents: function(time){\r\n\t            return this.vertices('o', time);\r\n\t        },\r\n\t        isClosed: function(){\r\n\t            return this.v.c;\r\n\t        },\r\n\t        pointOnPath: function(perc, time){\r\n\t            var shapePath = this.v;\r\n\t            if(time !== undefined) {\r\n\t                shapePath = this.getValueAtTime(time, 0);\r\n\t            }\r\n\t            if(!this._segmentsLength) {\r\n\t                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n\t            }\r\n\t\r\n\t            var segmentsLength = this._segmentsLength;\r\n\t            var lengths = segmentsLength.lengths;\r\n\t            var lengthPos = segmentsLength.totalLength * perc;\r\n\t            var i = 0, len = lengths.length;\r\n\t            var j = 0, jLen;\r\n\t            var accumulatedLength = 0, pt;\r\n\t            while(i < len) {\r\n\t                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n\t                    var initIndex = i;\r\n\t                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n\t                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n\t                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n\t                    break;\r\n\t                } else {\r\n\t                    accumulatedLength += lengths[i].addedLength;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            if(!pt){\r\n\t                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n\t            }\r\n\t            return pt;\r\n\t        },\r\n\t        vectorOnPath: function(perc, time, vectorType){\r\n\t            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n\t            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n\t            var pt1 = this.pointOnPath(perc, time);\r\n\t            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n\t            var xLength = pt2[0] - pt1[0];\r\n\t            var yLength = pt2[1] - pt1[1];\r\n\t            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n\t            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n\t            return unitVector;\r\n\t        },\r\n\t        tangentOnPath: function(perc, time){\r\n\t            return this.vectorOnPath(perc, time, 'tangent');\r\n\t        },\r\n\t        normalOnPath: function(perc, time){\r\n\t            return this.vectorOnPath(perc, time, 'normal');\r\n\t        },\r\n\t        setGroupProperty: setGroupProperty,\r\n\t        getValueAtTime: getStaticValueAtTime\r\n\t    };\r\n\t    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n\t    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n\t    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n\t    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\t\r\n\t    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n\t    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n\t        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n\t        prop.propertyIndex = data.ix;\r\n\t        prop.lock = false;\r\n\t        if(type === 3){\r\n\t            searchExpressions(elem,data.pt,prop);\r\n\t        } else if(type === 4){\r\n\t            searchExpressions(elem,data.ks,prop);\r\n\t        }\r\n\t        if(prop.k){\r\n\t            elem.addDynamicProperty(prop);\r\n\t        }\r\n\t        return prop;\r\n\t    };\r\n\t\r\n\t    var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n\t    TextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n\t        if(data.t === 1){\r\n\t            return new TextExpressionSelectorProp(elem, data,arr);\r\n\t        } else {\r\n\t            return propertyGetTextProp(elem,data,arr);\r\n\t        }\r\n\t    };\r\n\t}());\n\t(function addDecorator() {\r\n\t\r\n\t    function searchExpressions(){\r\n\t        if(this.data.d.x){\r\n\t            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n\t            this.addEffect(this.getExpressionValue.bind(this));\r\n\t            return true;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    TextProperty.prototype.getExpressionValue = function(currentValue) {\r\n\t        var newValue = this.calculateExpression(currentValue.t);\r\n\t        currentValue.t = newValue;\r\n\t        return currentValue;\r\n\t    }\r\n\t\r\n\t    TextProperty.prototype.searchProperty = function(){\r\n\t\r\n\t        var isKeyframed = this.searchKeyframes();\r\n\t        var hasExpressions = this.searchExpressions();\r\n\t        this.kf = isKeyframed || hasExpressions;\r\n\t        return this.kf;\r\n\t    };\r\n\t\r\n\t    TextProperty.prototype.searchExpressions = searchExpressions;\r\n\t    \r\n\t}());\n\tvar ShapeExpressionInterface = (function(){\r\n\t\r\n\t    function iterateElements(shapes,view, propertyGroup){\r\n\t        var arr = [];\r\n\t        var i, len = shapes ? shapes.length : 0;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            if(shapes[i].ty == 'gr'){\r\n\t                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'fl'){\r\n\t                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'st'){\r\n\t                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'tm'){\r\n\t                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'tr'){\r\n\t                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'el'){\r\n\t                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }else if(shapes[i].ty == 'sr'){\r\n\t                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            } else if(shapes[i].ty == 'sh'){\r\n\t                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            } else if(shapes[i].ty == 'rc'){\r\n\t                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            } else if(shapes[i].ty == 'rd'){\r\n\t                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            } else if(shapes[i].ty == 'rp'){\r\n\t                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n\t            }\r\n\t        }\r\n\t        return arr;\r\n\t    }\r\n\t\r\n\t    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n\t       var interfaces;\r\n\t       var interfaceFunction = function _interfaceFunction(value){\r\n\t           var i = 0, len = interfaces.length;\r\n\t            while(i<len){\r\n\t                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n\t                   return interfaces[i];\r\n\t                }\r\n\t                i+=1;\r\n\t            }\r\n\t            if(typeof value === 'number'){\r\n\t               return interfaces[value-1];\r\n\t            }\r\n\t       };\r\n\t       interfaceFunction.propertyGroup = function(val){\r\n\t           if(val === 1){\r\n\t               return interfaceFunction;\r\n\t           } else{\r\n\t               return propertyGroup(val-1);\r\n\t           }\r\n\t       };\r\n\t       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n\t       interfaceFunction.numProperties = interfaces.length;\r\n\t       interfaceFunction.propertyIndex = shape.cix;\r\n\t       interfaceFunction._name = shape.nm;\r\n\t\r\n\t       return interfaceFunction;\r\n\t   }\r\n\t\r\n\t    function groupInterfaceFactory(shape,view, propertyGroup){\r\n\t        var interfaceFunction = function _interfaceFunction(value){\r\n\t            switch(value){\r\n\t                case 'ADBE Vectors Group':\r\n\t                case 'Contents':\r\n\t                case 2:\r\n\t                    return interfaceFunction.content;\r\n\t                //Not necessary for now. Keeping them here in case a new case appears\r\n\t                //case 'ADBE Vector Transform Group':\r\n\t                //case 3:\r\n\t                default:\r\n\t                    return interfaceFunction.transform;\r\n\t            }\r\n\t        };\r\n\t        interfaceFunction.propertyGroup = function(val){\r\n\t            if(val === 1){\r\n\t                return interfaceFunction;\r\n\t            } else{\r\n\t                return propertyGroup(val-1);\r\n\t            }\r\n\t        };\r\n\t        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n\t        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n\t        interfaceFunction.content = content;\r\n\t        interfaceFunction.transform = transformInterface;\r\n\t        Object.defineProperty(interfaceFunction, '_name', {\r\n\t            get: function(){\r\n\t                return shape.nm;\r\n\t            }\r\n\t        });\r\n\t        //interfaceFunction.content = interfaceFunction;\r\n\t        interfaceFunction.numProperties = shape.np;\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        interfaceFunction.nm = shape.nm;\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function fillInterfaceFactory(shape,view,propertyGroup){\r\n\t        function interfaceFunction(val){\r\n\t            if(val === 'Color' || val === 'color'){\r\n\t                return interfaceFunction.color;\r\n\t            } else if(val === 'Opacity' || val === 'opacity'){\r\n\t                return interfaceFunction.opacity;\r\n\t            }\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'color': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.c, 1 / view.c.mult, 'color');\r\n\t                }\r\n\t            },\r\n\t            'opacity': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.o, 100);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm },\r\n\t            'mn': { value: shape.mn }\r\n\t        });\r\n\t\r\n\t        view.c.setGroupProperty(propertyGroup);\r\n\t        view.o.setGroupProperty(propertyGroup);\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val === 1){\r\n\t                return ob;\r\n\t            } else{\r\n\t                return propertyGroup(val-1);\r\n\t            }\r\n\t        }\r\n\t        function _dashPropertyGroup(val){\r\n\t            if(val === 1){\r\n\t                return dashOb;\r\n\t            } else{\r\n\t                return _propertyGroup(val-1);\r\n\t            }\r\n\t        }\r\n\t        function addPropertyToDashOb(i) {\r\n\t            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.d.dataProps[i].p);\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t        var i, len = shape.d ? shape.d.length : 0;\r\n\t        var dashOb = {};\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            addPropertyToDashOb(i);\r\n\t            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n\t        }\r\n\t\r\n\t        function interfaceFunction(val){\r\n\t            if(val === 'Color' || val === 'color'){\r\n\t                return interfaceFunction.color;\r\n\t            } else if(val === 'Opacity' || val === 'opacity'){\r\n\t                return interfaceFunction.opacity;\r\n\t            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n\t                return interfaceFunction.strokeWidth;\r\n\t            }\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'color': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.c, 1 / view.c.mult, 'color');\r\n\t                }\r\n\t            },\r\n\t            'opacity': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.o, 100);\r\n\t                }\r\n\t            },\r\n\t            'strokeWidth': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.w);\r\n\t                }\r\n\t            },\r\n\t            'dash': {\r\n\t                get: function() {\r\n\t                    return dashOb;\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm },\r\n\t            'mn': { value: shape.mn }\r\n\t        });\r\n\t\r\n\t        view.c.setGroupProperty(_propertyGroup);\r\n\t        view.o.setGroupProperty(_propertyGroup);\r\n\t        view.w.setGroupProperty(_propertyGroup);\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function trimInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t\r\n\t        view.s.setGroupProperty(_propertyGroup);\r\n\t        view.e.setGroupProperty(_propertyGroup);\r\n\t        view.o.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(val){\r\n\t            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n\t                return interfaceFunction.end;\r\n\t            }\r\n\t            if(val === shape.s.ix){\r\n\t                return interfaceFunction.start;\r\n\t            }\r\n\t            if(val === shape.o.ix){\r\n\t                return interfaceFunction.offset;\r\n\t            }\r\n\t        }\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'start': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.s, 1 / view.s.mult);\r\n\t                }\r\n\t            },\r\n\t            'end': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.e, 1 / view.e.mult);\r\n\t                }\r\n\t            },\r\n\t            'offset': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(view.o);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function transformInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n\t        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n\t        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n\t        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n\t        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n\t        if(view.transform.mProps.sk){\r\n\t            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n\t            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n\t        }\r\n\t        view.transform.op.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.a.ix === value || value === 'Anchor Point'){\r\n\t                return interfaceFunction.anchorPoint;\r\n\t            }\r\n\t            if(shape.o.ix === value || value === 'Opacity'){\r\n\t                return interfaceFunction.opacity;\r\n\t            }\r\n\t            if(shape.p.ix === value || value === 'Position'){\r\n\t                return interfaceFunction.position;\r\n\t            }\r\n\t            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n\t                return interfaceFunction.rotation;\r\n\t            }\r\n\t            if(shape.s.ix === value || value === 'Scale'){\r\n\t                return interfaceFunction.scale;\r\n\t            }\r\n\t            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n\t                return interfaceFunction.skew;\r\n\t            }\r\n\t            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n\t                return interfaceFunction.skewAxis;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'opacity': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.o, 1/view.transform.mProps.o.mult);\r\n\t                }\r\n\t            },\r\n\t            'position': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.p);\r\n\t                }\r\n\t            },\r\n\t            'anchorPoint': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.a);\r\n\t                }\r\n\t            },\r\n\t            'scale': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.s, 1 / view.transform.mProps.s.mult);\r\n\t                }\r\n\t            },\r\n\t            'rotation': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.r, 1 / view.transform.mProps.r.mult);\r\n\t                }\r\n\t            },\r\n\t            'skew': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.sk);\r\n\t                }\r\n\t            },\r\n\t            'skewAxis': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(view.transform.mProps.sa);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.ty = 'tr';\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n\t        prop.s.setGroupProperty(_propertyGroup);\r\n\t        prop.p.setGroupProperty(_propertyGroup);\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.p.ix === value){\r\n\t                return interfaceFunction.position;\r\n\t            }\r\n\t            if(shape.s.ix === value){\r\n\t                return interfaceFunction.size;\r\n\t            }\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'size': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.s);\r\n\t                }\r\n\t            },\r\n\t            'position': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.p);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function starInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        prop.or.setGroupProperty(_propertyGroup);\r\n\t        prop.os.setGroupProperty(_propertyGroup);\r\n\t        prop.pt.setGroupProperty(_propertyGroup);\r\n\t        prop.p.setGroupProperty(_propertyGroup);\r\n\t        prop.r.setGroupProperty(_propertyGroup);\r\n\t        if(shape.ir){\r\n\t            prop.ir.setGroupProperty(_propertyGroup);\r\n\t            prop.is.setGroupProperty(_propertyGroup);\r\n\t        }\r\n\t\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.p.ix === value){\r\n\t                return interfaceFunction.position;\r\n\t            }\r\n\t            if(shape.r.ix === value){\r\n\t                return interfaceFunction.rotation;\r\n\t            }\r\n\t            if(shape.pt.ix === value){\r\n\t                return interfaceFunction.points;\r\n\t            }\r\n\t            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n\t                return interfaceFunction.outerRadius;\r\n\t            }\r\n\t            if(shape.os.ix === value){\r\n\t                return interfaceFunction.outerRoundness;\r\n\t            }\r\n\t            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n\t                return interfaceFunction.innerRadius;\r\n\t            }\r\n\t            if(shape.is && shape.is.ix === value){\r\n\t                return interfaceFunction.innerRoundness;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'position': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(prop.p);\r\n\t                }\r\n\t            },\r\n\t            'rotation': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(prop.r, 1 / prop.r.mult);\r\n\t                }\r\n\t            },\r\n\t            'points': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(prop.pt);\r\n\t                }\r\n\t            },\r\n\t            'outerRadius': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(prop.or);\r\n\t                }\r\n\t            },\r\n\t            'outerRoundness': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.os);\r\n\t                }\r\n\t            },\r\n\t            'innerRadius': {\r\n\t                get: function(){\r\n\t                    if(!prop.ir){\r\n\t                        return 0;\r\n\t                    }\r\n\t                    return ExpressionValue(prop.ir);\r\n\t                }\r\n\t            },\r\n\t            'innerRoundness': {\r\n\t                get: function(){\r\n\t                    if(!prop.is){\r\n\t                        return 0;\r\n\t                    }\r\n\t                    return ExpressionValue(prop.is, 1 / prop.is.mult);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function rectInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        prop.p.setGroupProperty(_propertyGroup);\r\n\t        prop.s.setGroupProperty(_propertyGroup);\r\n\t        prop.r.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.p.ix === value){\r\n\t                return interfaceFunction.position;\r\n\t            }\r\n\t            if(shape.r.ix === value){\r\n\t                return interfaceFunction.roundness;\r\n\t            }\r\n\t            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n\t                return interfaceFunction.size;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'position': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.p);\r\n\t                }\r\n\t            },\r\n\t            'roundness': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.r);\r\n\t                }\r\n\t            },\r\n\t            'size': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.s);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        var prop = view;\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        prop.rd.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n\t                return interfaceFunction.radius;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'radius': {\r\n\t                get: function() {\r\n\t                    return ExpressionValue(prop.rd);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        var prop = view;\r\n\t        interfaceFunction.propertyIndex = shape.ix;\r\n\t        prop.c.setGroupProperty(_propertyGroup);\r\n\t        prop.o.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(value){\r\n\t            if(shape.c.ix === value || 'Copies' === value){\r\n\t                return interfaceFunction.copies;\r\n\t            } else if(shape.o.ix === value || 'Offset' === value){\r\n\t                return interfaceFunction.offset;\r\n\t            }\r\n\t\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'copies': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.c);\r\n\t                }\r\n\t            },\r\n\t            'offset': {\r\n\t                get: function(){\r\n\t                    return ExpressionValue(prop.o);\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm }\r\n\t        });\r\n\t        interfaceFunction.mn = shape.mn;\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    function pathInterfaceFactory(shape,view,propertyGroup){\r\n\t        var prop = view.sh;\r\n\t        function _propertyGroup(val){\r\n\t            if(val == 1){\r\n\t                return interfaceFunction;\r\n\t            } else {\r\n\t                return propertyGroup(--val);\r\n\t            }\r\n\t        }\r\n\t        prop.setGroupProperty(_propertyGroup);\r\n\t\r\n\t        function interfaceFunction(val){\r\n\t            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n\t                return interfaceFunction.path;\r\n\t            }\r\n\t        }\r\n\t        Object.defineProperties(interfaceFunction, {\r\n\t            'path': {\r\n\t                get: function(){\r\n\t                    if(prop.k){\r\n\t                        prop.getValue();\r\n\t                    }\r\n\t                    return prop;\r\n\t                }\r\n\t            },\r\n\t            'shape': {\r\n\t                get: function(){\r\n\t                    if(prop.k){\r\n\t                        prop.getValue();\r\n\t                    }\r\n\t                    return prop;\r\n\t                }\r\n\t            },\r\n\t            '_name': { value: shape.nm },\r\n\t            'ix': { value: shape.ix },\r\n\t            'mn': { value: shape.mn }\r\n\t        });\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    return function(shapes,view,propertyGroup) {\r\n\t        var interfaces;\r\n\t        function _interfaceFunction(value){\r\n\t            if(typeof value === 'number'){\r\n\t                return interfaces[value-1];\r\n\t            } else {\r\n\t                var i = 0, len = interfaces.length;\r\n\t                while(i<len){\r\n\t                    if(interfaces[i]._name === value){\r\n\t                        return interfaces[i];\r\n\t                    }\r\n\t                    i+=1;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        _interfaceFunction.propertyGroup = propertyGroup;\r\n\t        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n\t        return _interfaceFunction;\r\n\t    };\r\n\t}());\r\n\t\n\tvar TextExpressionInterface = (function(){\r\n\t\treturn function(elem){\r\n\t        var _prevValue, _sourceText;\r\n\t        function _thisLayerFunction(){\r\n\t        }\r\n\t        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n\t            get: function(){\r\n\t                var stringValue = elem.textProperty.currentData.t;\r\n\t                if(stringValue !== _prevValue) {\r\n\t                    elem.textProperty.currentData.t = _prevValue;\r\n\t                    _sourceText = new String(stringValue);\r\n\t                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n\t                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n\t                }\r\n\t                return _sourceText;\r\n\t            }\r\n\t        });\r\n\t        return _thisLayerFunction;\r\n\t    };\r\n\t}());\n\tvar LayerExpressionInterface = (function (){\r\n\t    function toWorld(arr, time){\r\n\t        var toWorldMat = new Matrix();\r\n\t        toWorldMat.reset();\r\n\t        var transformMat;\r\n\t        if(time) {\r\n\t            //Todo implement value at time on transform properties\r\n\t            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n\t            transformMat = this._elem.finalTransform.mProp;\r\n\t        } else {\r\n\t            transformMat = this._elem.finalTransform.mProp;\r\n\t        }\r\n\t        transformMat.applyToMatrix(toWorldMat);\r\n\t        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n\t            var i, len = this._elem.hierarchy.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n\t            }\r\n\t            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n\t        }\r\n\t        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n\t    }\r\n\t    function fromWorld(arr, time){\r\n\t        var toWorldMat = new Matrix();\r\n\t        toWorldMat.reset();\r\n\t        var transformMat;\r\n\t        if(time) {\r\n\t            //Todo implement value at time on transform properties\r\n\t            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n\t            transformMat = this._elem.finalTransform.mProp;\r\n\t        } else {\r\n\t            transformMat = this._elem.finalTransform.mProp;\r\n\t        }\r\n\t        transformMat.applyToMatrix(toWorldMat);\r\n\t        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n\t            var i, len = this._elem.hierarchy.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n\t            }\r\n\t            return toWorldMat.inversePoint(arr);\r\n\t        }\r\n\t        return toWorldMat.inversePoint(arr);\r\n\t    }\r\n\t    function fromComp(arr){\r\n\t        var toWorldMat = new Matrix();\r\n\t        toWorldMat.reset();\r\n\t        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n\t        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n\t            var i, len = this._elem.hierarchy.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n\t            }\r\n\t            return toWorldMat.inversePoint(arr);\r\n\t        }\r\n\t        return toWorldMat.inversePoint(arr);\r\n\t    }\r\n\t\r\n\t    function sampleImage() {\r\n\t        return [1,1,1,1];\r\n\t    }\r\n\t\r\n\t\r\n\t    return function(elem){\r\n\t\r\n\t        var transformInterface;\r\n\t\r\n\t        function _registerMaskInterface(maskManager){\r\n\t            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n\t        }\r\n\t        function _registerEffectsInterface(effects){\r\n\t            _thisLayerFunction.effect = effects;\r\n\t        }\r\n\t\r\n\t        function _thisLayerFunction(name){\r\n\t            switch(name){\r\n\t                case \"ADBE Root Vectors Group\":\r\n\t                case \"Contents\":\r\n\t                case 2:\r\n\t                    return _thisLayerFunction.shapeInterface;\r\n\t                case 1:\r\n\t                case 6:\r\n\t                case \"Transform\":\r\n\t                case \"transform\":\r\n\t                case \"ADBE Transform Group\":\r\n\t                    return transformInterface;\r\n\t                case 4:\r\n\t                case \"ADBE Effect Parade\":\r\n\t                    return _thisLayerFunction.effect;\r\n\t            }\r\n\t        }\r\n\t        _thisLayerFunction.toWorld = toWorld;\r\n\t        _thisLayerFunction.fromWorld = fromWorld;\r\n\t        _thisLayerFunction.toComp = toWorld;\r\n\t        _thisLayerFunction.fromComp = fromComp;\r\n\t        _thisLayerFunction.sampleImage = sampleImage;\r\n\t        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n\t        _thisLayerFunction._elem = elem;\r\n\t        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n\t        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n\t        Object.defineProperties(_thisLayerFunction,{\r\n\t            hasParent: {\r\n\t                get: function(){\r\n\t                    return elem.hierarchy.length;\r\n\t                }\r\n\t            },\r\n\t            parent: {\r\n\t                get: function(){\r\n\t                    return elem.hierarchy[0].layerInterface;\r\n\t                }\r\n\t            },\r\n\t            rotation: getDescriptor(transformInterface, 'rotation'),\r\n\t            scale: getDescriptor(transformInterface, 'scale'),\r\n\t            position: getDescriptor(transformInterface, 'position'),\r\n\t            opacity: getDescriptor(transformInterface, 'opacity'),\r\n\t            anchorPoint: anchorPointDescriptor,\r\n\t            anchor_point: anchorPointDescriptor,\r\n\t            transform: {\r\n\t                get: function () {\r\n\t                    return transformInterface;\r\n\t                }\r\n\t            },\r\n\t            active: {\r\n\t                get: function(){\r\n\t                    return elem.isInRange;\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t\r\n\t        _thisLayerFunction.startTime = elem.data.st;\r\n\t        _thisLayerFunction.index = elem.data.ind;\r\n\t        _thisLayerFunction.source = elem.data.refId;\r\n\t        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n\t        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n\t\r\n\t        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n\t        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n\t        return _thisLayerFunction;\r\n\t    };\r\n\t}());\r\n\t\n\tvar CompExpressionInterface = (function (){\r\n\t    return function(comp){\r\n\t        function _thisLayerFunction(name){\r\n\t            var i=0, len = comp.layers.length;\r\n\t            while(i<len){\r\n\t                if(comp.layers[i].nm === name || comp.layers[i].ind === name){\r\n\t                    return comp.elements[i].layerInterface;\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            return {active:false};\r\n\t        }\r\n\t        Object.defineProperty(_thisLayerFunction, \"_name\", { value:comp.data.nm });\r\n\t        _thisLayerFunction.layer = _thisLayerFunction;\r\n\t        _thisLayerFunction.pixelAspect = 1;\r\n\t        _thisLayerFunction.height = comp.globalData.compSize.h;\r\n\t        _thisLayerFunction.width = comp.globalData.compSize.w;\r\n\t        _thisLayerFunction.pixelAspect = 1;\r\n\t        _thisLayerFunction.frameDuration = 1/comp.globalData.frameRate;\r\n\t        return _thisLayerFunction;\r\n\t    };\r\n\t}());\n\tvar TransformExpressionInterface = (function (){\r\n\t    return function(transform){\r\n\t        function _thisFunction(name){\r\n\t            switch(name){\r\n\t                case \"scale\":\r\n\t                case \"Scale\":\r\n\t                case \"ADBE Scale\":\r\n\t                case 6:\r\n\t                    return _thisFunction.scale;\r\n\t                case \"rotation\":\r\n\t                case \"Rotation\":\r\n\t                case \"ADBE Rotation\":\r\n\t                case \"ADBE Rotate Z\":\r\n\t                case 10:\r\n\t                    return _thisFunction.rotation;\r\n\t                case \"ADBE Rotate X\":\r\n\t                    return _thisFunction.xRotation;\r\n\t                case \"ADBE Rotate Y\":\r\n\t                    return _thisFunction.yRotation;\r\n\t                case \"position\":\r\n\t                case \"Position\":\r\n\t                case \"ADBE Position\":\r\n\t                case 2:\r\n\t                    return _thisFunction.position;\r\n\t                case 'ADBE Position_0':\r\n\t                    return _thisFunction.xPosition;\r\n\t                case 'ADBE Position_1':\r\n\t                    return _thisFunction.yPosition;\r\n\t                case 'ADBE Position_2':\r\n\t                    return _thisFunction.zPosition;\r\n\t                case \"anchorPoint\":\r\n\t                case \"AnchorPoint\":\r\n\t                case \"Anchor Point\":\r\n\t                case \"ADBE AnchorPoint\":\r\n\t                case 1:\r\n\t                    return _thisFunction.anchorPoint;\r\n\t                case \"opacity\":\r\n\t                case \"Opacity\":\r\n\t                case 11:\r\n\t                    return _thisFunction.opacity;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"rotation\", {\r\n\t            get: function(){\r\n\t                if(transform.r) {\r\n\t                    return ExpressionValue(transform.r, 1/degToRads);\r\n\t                } else {\r\n\t                    return ExpressionValue(transform.rz, 1/degToRads);\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n\t            get: function(){\r\n\t                    return ExpressionValue(transform.rx, 1/degToRads);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n\t            get: function(){\r\n\t                    return ExpressionValue(transform.ry, 1/degToRads);\r\n\t            }\r\n\t        });\r\n\t        Object.defineProperty(_thisFunction, \"scale\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.s, 100);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"position\", {\r\n\t            get: function () {\r\n\t                if(transform.p) {\r\n\t                    return ExpressionValue(transform.p);\r\n\t                } else {\r\n\t                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.px);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.py);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.pz);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.a);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"opacity\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.o, 100);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"skew\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.sk);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.sa);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        Object.defineProperty(_thisFunction, \"orientation\", {\r\n\t            get: function () {\r\n\t                return ExpressionValue(transform.or);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        return _thisFunction;\r\n\t    };\r\n\t}());\n\tvar ProjectInterface = (function (){\r\n\t\r\n\t    function registerComposition(comp){\r\n\t        this.compositions.push(comp);\r\n\t    }\r\n\t\r\n\t    return function(){\r\n\t        function _thisProjectFunction(name){\r\n\t            var i = 0, len = this.compositions.length;\r\n\t            while(i<len){\r\n\t                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n\t                    if(this.compositions[i].prepareFrame) {\r\n\t                        this.compositions[i].prepareFrame(this.compositions[i].data.xt ? this.currentFrame : this.compositions[i].renderedFrame);\r\n\t                    }\r\n\t                    return this.compositions[i].compInterface;\r\n\t                }\r\n\t                i+=1;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        _thisProjectFunction.compositions = [];\r\n\t        _thisProjectFunction.currentFrame = 0;\r\n\t\r\n\t        _thisProjectFunction.registerComposition = registerComposition;\r\n\t\r\n\t\r\n\t\r\n\t        return _thisProjectFunction;\r\n\t    };\r\n\t}());\n\tvar EffectsExpressionInterface = (function (){\r\n\t    var ob = {\r\n\t        createEffectsInterface: createEffectsInterface\r\n\t    };\r\n\t\r\n\t    function createEffectsInterface(elem, propertyGroup){\r\n\t        if(elem.effectsManager){\r\n\t\r\n\t            var effectElements = [];\r\n\t            var effectsData = elem.data.ef;\r\n\t            var i, len = elem.effectsManager.effectElements.length;\r\n\t            for(i=0;i<len;i+=1){\r\n\t                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n\t            }\r\n\t\r\n\t            return function(name){\r\n\t                var effects = elem.data.ef || [], i = 0, len = effects.length;\r\n\t                while(i<len) {\r\n\t                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n\t                        return effectElements[i];\r\n\t                    }\r\n\t                    i += 1;\r\n\t                }\r\n\t            };\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function createGroupInterface(data,elements, propertyGroup, elem){\r\n\t        var effectElements = [];\r\n\t        var i, len = data.ef.length;\r\n\t        for(i=0;i<len;i+=1){\r\n\t            if(data.ef[i].ty === 5){\r\n\t                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n\t            } else {\r\n\t                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n\t            }\r\n\t        }\r\n\t\r\n\t        function _propertyGroup(val) {\r\n\t            if(val === 1){\r\n\t               return groupInterface;\r\n\t            } else{\r\n\t               return propertyGroup(val-1);\r\n\t            }\r\n\t        }\r\n\t\r\n\t        var groupInterface = function(name){\r\n\t            var effects = data.ef, i = 0, len = effects.length;\r\n\t            while(i<len) {\r\n\t                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n\t                    if(effects[i].ty === 5){\r\n\t                        return effectElements[i];\r\n\t                    } else {\r\n\t                        return effectElements[i]();\r\n\t                    }\r\n\t                }\r\n\t                i += 1;\r\n\t            }\r\n\t            return effectElements[0]();\r\n\t        };\r\n\t\r\n\t        groupInterface.propertyGroup = _propertyGroup;\r\n\t\r\n\t        if(data.mn === 'ADBE Color Control'){\r\n\t            Object.defineProperty(groupInterface, 'color', {\r\n\t                get: function(){\r\n\t                    return effectElements[0]();\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t        Object.defineProperty(groupInterface, 'numProperties', {\r\n\t            get: function(){\r\n\t                return data.np;\r\n\t            }\r\n\t        });\r\n\t        groupInterface.active = data.en !== 0;\r\n\t        return groupInterface;\r\n\t    }\r\n\t\r\n\t    function createValueInterface(element, type, elem, propertyGroup){\r\n\t        function interfaceFunction(){\r\n\t            if(type === 10){\r\n\t                return elem.comp.compInterface(element.p.v);\r\n\t            }\r\n\t            return ExpressionValue(element.p);\r\n\t        }\r\n\t\r\n\t        if(element.p.setGroupProperty) {\r\n\t            element.p.setGroupProperty(propertyGroup);\r\n\t        }\r\n\t\r\n\t        return interfaceFunction;\r\n\t    }\r\n\t\r\n\t    return ob;\r\n\t\r\n\t}());\n\tvar MaskManagerInterface = (function(){\r\n\t\r\n\t\tfunction MaskInterface(mask, data){\r\n\t\t\tthis._mask = mask;\r\n\t\t\tthis._data = data;\r\n\t\t}\r\n\t\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n\t        get: function(){\r\n\t                if(this._mask.prop.k){\r\n\t                    this._mask.prop.getValue();\r\n\t                }\r\n\t                return this._mask.prop;\r\n\t            }\r\n\t        });\r\n\t\r\n\t\tvar MaskManager = function(maskManager, elem){\r\n\t\t\tvar _maskManager = maskManager;\r\n\t\t\tvar _elem = elem;\r\n\t\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\t\tvar i, len = maskManager.viewData.length;\r\n\t\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t\t}\r\n\t\r\n\t\t\tvar maskFunction = function(name){\r\n\t\t\t\ti = 0;\r\n\t\t\t    while(i<len){\r\n\t\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t\t            return _masksInterfaces[i];\r\n\t\t\t        }\r\n\t\t\t        i += 1;\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\treturn maskFunction;\r\n\t\t};\r\n\t\treturn MaskManager;\r\n\t}());\r\n\t\n\tvar ExpressionValue = (function() {\r\n\t\treturn function(elementProp, mult, type) {\r\n\t        mult = mult || 1;\r\n\t        var expressionValue, arrayValue;\r\n\t\r\n\t\t\tif (elementProp.k) {\r\n\t            elementProp.getValue();\r\n\t        }\r\n\t        var i, len, arrValue, val;\r\n\t        if (type) {\r\n\t        \tif(type === 'color') {\r\n\t        \t\tlen = 4;\r\n\t                expressionValue = createTypedArray('float32', len);\r\n\t                arrValue = createTypedArray('float32', len);\r\n\t\t\t        for (i = 0; i < len; i += 1) {\r\n\t\t\t            expressionValue[i] = arrValue[i] = (i < 3) ? elementProp.v[i] * mult : 1;\r\n\t\t\t        }\r\n\t\t        \texpressionValue.value = arrValue;\r\n\t        \t}\r\n\t        } else if (elementProp.propType === 'unidimensional'){\r\n\t            val = elementProp.v * mult;\r\n\t            expressionValue = new Number(val);\r\n\t            expressionValue.value = val;\r\n\t        } else {\r\n\t        \tlen = elementProp.pv.length;\r\n\t            expressionValue = createTypedArray('float32', len);\r\n\t            arrValue = createTypedArray('float32', len);\r\n\t\t        for (i = 0; i < len; i += 1) {\r\n\t\t            expressionValue[i] = arrValue[i] = elementProp.v[i] * mult;\r\n\t\t        }\r\n\t\t        expressionValue.value = arrValue;\r\n\t        }\r\n\t        \r\n\t        expressionValue.numKeys = elementProp.keyframes ? elementProp.keyframes.length : 0;\r\n\t        expressionValue.key = function(pos) {\r\n\t            if (!expressionValue.numKeys) {\r\n\t                return 0;\r\n\t            } else {\r\n\t                return elementProp.keyframes[pos-1].t;\r\n\t            }\r\n\t        };\r\n\t        expressionValue.valueAtTime = elementProp.getValueAtTime;\r\n\t        expressionValue.speedAtTime = elementProp.getSpeedAtTime;\r\n\t        expressionValue.velocityAtTime = elementProp.getVelocityAtTime;\r\n\t        expressionValue.propertyGroup = elementProp.propertyGroup;\r\n\t        return expressionValue;\r\n\t\t};\r\n\t}());\n\tfunction SliderEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n\t}\r\n\tfunction AngleEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n\t}\r\n\tfunction ColorEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n\t}\r\n\tfunction PointEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n\t}\r\n\tfunction LayerIndexEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n\t}\r\n\tfunction MaskIndexEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n\t}\r\n\tfunction CheckboxEffect(data,elem, container){\r\n\t    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n\t}\r\n\tfunction NoValueEffect(){\r\n\t    this.p = {};\r\n\t}\n\tfunction EffectsManager(data,element){\r\n\t    var effects = data.ef || [];\r\n\t    this.effectElements = [];\r\n\t    var i,len = effects.length;\r\n\t    var effectItem;\r\n\t    for(i=0;i<len;i++) {\r\n\t        effectItem = new GroupEffect(effects[i],element);\r\n\t        this.effectElements.push(effectItem);\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction GroupEffect(data,element){\r\n\t    this.init(data,element);\r\n\t}\r\n\t\r\n\textendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\t\r\n\tGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\t\r\n\tGroupEffect.prototype.init = function(data,element){\r\n\t    this.data = data;\r\n\t    this.effectElements = [];\r\n\t    this.initDynamicPropertyContainer(element);\r\n\t    var i, len = this.data.ef.length;\r\n\t    var eff, effects = this.data.ef;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        eff = null;\r\n\t        switch(effects[i].ty){\r\n\t            case 0:\r\n\t                eff = new SliderEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 1:\r\n\t                eff = new AngleEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 2:\r\n\t                eff = new ColorEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 3:\r\n\t                eff = new PointEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 4:\r\n\t            case 7:\r\n\t                eff = new CheckboxEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 10:\r\n\t                eff = new LayerIndexEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 11:\r\n\t                eff = new MaskIndexEffect(effects[i],element,this);\r\n\t                break;\r\n\t            case 5:\r\n\t                eff = new EffectsManager(effects[i],element,this);\r\n\t                break;\r\n\t            //case 6:\r\n\t            default:\r\n\t                eff = new NoValueEffect(effects[i],element,this);\r\n\t                break;\r\n\t        }\r\n\t        if(eff) {\r\n\t            this.effectElements.push(eff);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t    var lottiejs = {};\r\n\t\r\n\t    function setLocationHref (href) {\r\n\t        locationHref = href;\r\n\t    }\r\n\t    function play(animation){\r\n\t        animationManager.play(animation);\r\n\t    }\r\n\t\r\n\t    function pause(animation) {\r\n\t        animationManager.pause(animation);\r\n\t    }\r\n\t\r\n\t    function togglePause(animation) {\r\n\t        animationManager.togglePause(animation);\r\n\t    }\r\n\t\r\n\t    function setSpeed(value, animation) {\r\n\t        animationManager.setSpeed(value, animation);\r\n\t    }\r\n\t\r\n\t    function setDirection(value, animation) {\r\n\t        animationManager.setDirection(value, animation);\r\n\t    }\r\n\t\r\n\t    function stop(animation) {\r\n\t        animationManager.stop(animation);\r\n\t    }\r\n\t\r\n\t    function searchAnimations() {\r\n\t        if (standalone === true) {\r\n\t            animationManager.searchAnimations(animationData, standalone, renderer);\r\n\t        } else {\r\n\t            animationManager.searchAnimations();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function registerAnimation(elem) {\r\n\t        return animationManager.registerAnimation(elem);\r\n\t    }\r\n\t\r\n\t    function resize() {\r\n\t        animationManager.resize();\r\n\t    }\r\n\t\r\n\t    /*function start() {\r\n\t        animationManager.start();\r\n\t    }*/\r\n\t\r\n\t    function goToAndStop(val, isFrame, animation) {\r\n\t        animationManager.goToAndStop(val, isFrame, animation);\r\n\t    }\r\n\t\r\n\t    function setSubframeRendering(flag) {\r\n\t        subframeEnabled = flag;\r\n\t    }\r\n\t\r\n\t    function loadAnimation(params) {\r\n\t        if (standalone === true) {\r\n\t            params.animationData = JSON.parse(animationData);\r\n\t        }\r\n\t        return animationManager.loadAnimation(params);\r\n\t    }\r\n\t\r\n\t    function destroy(animation) {\r\n\t        return animationManager.destroy(animation);\r\n\t    }\r\n\t\r\n\t    function setQuality(value) {\r\n\t        if (typeof value === 'string') {\r\n\t            switch (value) {\r\n\t                case 'high':\r\n\t                    defaultCurveSegments = 200;\r\n\t                    break;\r\n\t                case 'medium':\r\n\t                    defaultCurveSegments = 50;\r\n\t                    break;\r\n\t                case 'low':\r\n\t                    defaultCurveSegments = 10;\r\n\t                    break;\r\n\t            }\r\n\t        } else if (!isNaN(value) && value > 1) {\r\n\t            defaultCurveSegments = value;\r\n\t        }\r\n\t        if (defaultCurveSegments >= 50) {\r\n\t            roundValues(false);\r\n\t        } else {\r\n\t            roundValues(true);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function inBrowser() {\r\n\t        return typeof navigator !== 'undefined';\r\n\t    }\r\n\t\r\n\t    function installPlugin(type, plugin) {\r\n\t        if (type === 'expressions') {\r\n\t            expressionsPlugin = plugin;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getFactory(name) {\r\n\t        switch (name) {\r\n\t            case \"propertyFactory\":\r\n\t                return PropertyFactory;\r\n\t            case \"shapePropertyFactory\":\r\n\t                return ShapePropertyFactory;\r\n\t            case \"matrix\":\r\n\t                return Matrix;\r\n\t        }\r\n\t    }\r\n\t    lottiejs.play = play;\r\n\t    lottiejs.pause = pause;\r\n\t    lottiejs.setLocationHref = setLocationHref;\r\n\t    lottiejs.togglePause = togglePause;\r\n\t    lottiejs.setSpeed = setSpeed;\r\n\t    lottiejs.setDirection = setDirection;\r\n\t    lottiejs.stop = stop;\r\n\t    lottiejs.searchAnimations = searchAnimations;\r\n\t    lottiejs.registerAnimation = registerAnimation;\r\n\t    lottiejs.loadAnimation = loadAnimation;\r\n\t    lottiejs.setSubframeRendering = setSubframeRendering;\r\n\t    lottiejs.resize = resize;\r\n\t    //lottiejs.start = start;\r\n\t    lottiejs.goToAndStop = goToAndStop;\r\n\t    lottiejs.destroy = destroy;\r\n\t    lottiejs.setQuality = setQuality;\r\n\t    lottiejs.inBrowser = inBrowser;\r\n\t    lottiejs.installPlugin = installPlugin;\r\n\t    lottiejs.__getFactory = getFactory;\r\n\t    lottiejs.version = '5.1.13';\r\n\t\r\n\t    function checkReady() {\r\n\t        if (document.readyState === \"complete\") {\r\n\t            clearInterval(readyStateCheckInterval);\r\n\t            searchAnimations();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function getQueryVariable(variable) {\r\n\t        var vars = queryString.split('&');\r\n\t        for (var i = 0; i < vars.length; i++) {\r\n\t            var pair = vars[i].split('=');\r\n\t            if (decodeURIComponent(pair[0]) == variable) {\r\n\t                return decodeURIComponent(pair[1]);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    var standalone = '__[STANDALONE]__';\r\n\t    var animationData = '__[ANIMATIONDATA]__';\r\n\t    var renderer = '';\r\n\t    if (standalone) {\r\n\t        var scripts = document.getElementsByTagName('script');\r\n\t        var index = scripts.length - 1;\r\n\t        var myScript = scripts[index] || {\r\n\t            src: ''\r\n\t        };\r\n\t        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n\t        renderer = getQueryVariable('renderer');\r\n\t    }\r\n\t    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n\t    return lottiejs;\r\n\t}));\r\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ }),\n\n/***/ 321:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"v\":\"4.9.0\",\"fr\":30,\"ip\":0,\"op\":38,\"w\":315,\"h\":280,\"nm\":\"new\",\"ddd\":0,\"assets\":[],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"bodyband Konturen\",\"parent\":3,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[157.5,129,0]},\"a\":{\"a\":0,\"k\":[157.5,140,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":9,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,52],[14.5,52],[14.5,52.25],[-14.5,52.25]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-41],[14.5,-41],[14.5,52.25],[-14.5,52.25]],\"c\":true}]},{\"t\":19.111328125}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.871,0.702,0.271,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[160.5,184],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"topband Konturen\",\"parent\":4,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[157.5,140,0]},\"a\":{\"a\":0,\"k\":[157.5,140,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":16.777,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-14.5],[14.5,-14.5],[15.036,-14.207],[-13.964,-14.207]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-14.5],[14.5,-14.5],[14.5,14.5],[-14.5,14.5]],\"c\":true}]},{\"t\":23}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.831,0.396,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[160.5,128.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"body Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0],\"e\":[-13]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5.432,\"s\":[-13],\"e\":[17.85]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11.111,\"s\":[17.85],\"e\":[0]},{\"t\":16.2958984375}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":0,\"s\":[162.125,247.599,0],\"e\":[162.125,145.599,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":8.148,\"s\":[162.125,145.599,0],\"e\":[162.125,236.099,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":16.2958984375}]},\"a\":{\"a\":0,\"k\":[162.125,225.099,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":0,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[-3.228,0],[0,0],[-2.75,0.062]],\"o\":[[0,0],[0,0],[4.75,-0.188],[0,0],[3.228,0],[0,0]],\"v\":[[56.25,46.5],[-54.75,46.5],[-55,46.688],[-49.658,46.5],[49.658,46.5],[56,46.688]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[-3.228,0],[0,0],[0,3.21]],\"o\":[[0,0],[0,0],[0,3.21],[0,0],[3.228,0],[0,0]],\"v\":[[55.5,-46.5],[-55.5,-46.5],[-55.5,40.688],[-49.658,46.5],[49.658,46.5],[55.5,40.688]],\"c\":true}]},{\"t\":3.7041015625}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.008,0.588,0.847,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161.5,178.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"top Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3.704,\"s\":[0],\"e\":[100]},{\"t\":4.4443359375}]},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8.148,\"s\":[10],\"e\":[-23]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":14.074,\"s\":[-23],\"e\":[0]},{\"t\":20}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.937,\"y\":0.946},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p937_0p946_0p167_0p167\",\"t\":0,\"s\":[160,177.5,0],\"e\":[150,34.5,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.097,\"y\":0},\"o\":{\"x\":0.084,\"y\":0.101},\"n\":\"0p097_0_0p084_0p101\",\"t\":10.37,\"s\":[150,34.5,0],\"e\":[161,128.5,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":20}]},\"a\":{\"a\":0,\"k\":[161,128.5,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[0,0,100],\"e\":[58.621,58.621,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":10.37,\"s\":[58.621,58.621,100],\"e\":[100,100,100]},{\"t\":20}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.219,0],[0,0],[0,-3.204],[0,0],[-3.219,0],[0,0],[0,3.204],[0,0]],\"o\":[[0,0],[-3.219,0],[0,0],[0,3.204],[0,0],[3.219,0],[0,0],[0,-3.204]],\"v\":[[61.174,-14.5],[-61.174,-14.5],[-67,-8.7],[-67,8.7],[-61.174,14.5],[61.174,14.5],[67,8.7],[67,-8.7]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161,128.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"schleife/new Konturen\",\"parent\":4,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[161,115,0]},\"a\":{\"a\":0,\"k\":[161,115,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.029,0.029,0.833],\"y\":[1.656,1.656,-15.667]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p029_1p656_0p167_0p167\",\"0p029_1p656_0p167_0p167\",\"0p833_-15p667_0p167_16p667\"],\"t\":23,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":34}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[8.059,0],[1.667,-0.428],[-0.598,-1.849],[-1.278,0],[0,-4.797],[4.835,0],[0,0],[-8.693,2.139],[0.541,1.87],[3.006,-6.366],[4.932,3.716],[1.157,-1.595],[-1.586,-3.998],[0,0],[0,4.796],[-4.834,0],[-2.606,-1.934],[-1.272,1.478],[5.256,0],[0,-7.995],[-8.058,0],[0,0],[0,0],[0,7.995]],\"o\":[[-1.91,0],[0.541,1.87],[1.145,-0.282],[4.835,0],[0,4.796],[0,0],[2.097,-5.318],[-0.598,-1.849],[-9.385,2.413],[-2.071,-4.386],[-1.272,1.478],[5.152,3.823],[0,0],[-4.834,0],[0,-4.797],[3.679,0],[1.157,-1.595],[-3.498,-2.637],[-8.058,0],[0,7.995],[0,0],[0,0],[8.059,0],[0,-7.995]],\"v\":[[23.385,-14.5],[18.024,-13.831],[19.756,-8.259],[23.385,-8.7],[32.155,0],[23.385,8.7],[4.075,8.7],[19.756,-8.259],[18.024,-13.831],[0,3.422],[-10.322,-10.065],[-13.987,-5.478],[-4.083,8.7],[-23.385,8.7],[-32.154,0],[-23.385,-8.7],[-13.987,-5.478],[-10.322,-10.065],[-23.385,-14.5],[-38,0],[-23.385,14.5],[0,14.5],[23.385,14.5],[38,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.831,0.396,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161,100.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"shadow Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[162,236,0]},\"a\":{\"a\":0,\"k\":[162,225,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.115,0.115,0.833],\"y\":[1,1,-5.19]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p115_1_0p167_0p167\",\"0p115_1_0p167_0p167\",\"0p833_-5p19_0p167_16p667\"],\"t\":0,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":13}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-53.02,0],[0,-3.313],[53.02,0],[0,3.313]],\"o\":[[53.02,0],[0,3.313],[-53.02,0],[0,-3.313]],\"v\":[[0,-6],[96,0],[0,6],[-96,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945,0.945,0.945,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[162,225],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":4,\"nm\":\"Ebene 12 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":9,\"s\":[262],\"e\":[0]},{\"t\":29}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.359},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p359_0p167_0p167\",\"t\":9,\"s\":[157.5,140,0],\"e\":[95.449,44.997,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":29}]},\"a\":{\"a\":0,\"k\":[95.449,44.997,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":9,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":29}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-2.18,-3.777],[2.178,-3.775],[4.359,0.001],[2.181,3.777],[-2.18,3.775],[-4.359,-0.001]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[95.449,44.997],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Ebene 13 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[-63],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.564},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p564_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[248.067,112.75,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[248.067,112.75,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-1.53,-6.63],[4.974,-4.639],[6.505,1.99],[1.532,6.63],[-4.972,4.64],[-6.505,-1.989]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[248.067,112.75],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Ebene 14 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[-200],\"e\":[0]},{\"t\":20}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.477},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p477_0p167_0p167\",\"t\":0,\"s\":[157.5,140,0],\"e\":[268.728,57.196,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":20}]},\"a\":{\"a\":0,\"k\":[120.728,247.196,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":0,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":20}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[-2.376,-3.394],[2.799,1.018],[-2.799,3.394]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.149,0.784,0.333,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[120.728,247.196],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":10,\"ty\":4,\"nm\":\"Ebene 15 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8,\"s\":[134],\"e\":[0]},{\"t\":28}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.547},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p547_0p167_0p167\",\"t\":8,\"s\":[157.5,140,0],\"e\":[61.63,139.445,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":28}]},\"a\":{\"a\":0,\"k\":[61.63,139.445,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":8,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":28}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[4.37,-5.433],[4.286,5.433],[-4.37,1.022]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.149,0.784,0.333,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[61.63,139.445],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":11,\"ty\":4,\"nm\":\"Ebene 16 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5,\"s\":[74],\"e\":[0]},{\"t\":25}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.387},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p387_0p167_0p167\",\"t\":5,\"s\":[157.5,140,0],\"e\":[183.561,32.661,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":25}]},\"a\":{\"a\":0,\"k\":[183.561,32.661,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":5,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":25}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-2.146,0],[0,-2.147],[2.146,0],[0,2.147]],\"o\":[[2.146,0],[0,2.147],[-2.146,0],[0,-2.147]],\"v\":[[-0.001,-3.888],[3.886,0],[-0.001,3.888],[-3.887,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039,0.314,0.392,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[183.561,32.661],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":12,\"ty\":4,\"nm\":\"Ebene 17 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":12,\"s\":[29],\"e\":[0]},{\"t\":32}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.463},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p463_0p167_0p167\",\"t\":12,\"s\":[157.5,140,0],\"e\":[44.65,36.558,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":32}]},\"a\":{\"a\":0,\"k\":[214.65,244.558,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":12,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":32}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-3.22,0],[0,-3.222],[3.22,0],[0,3.221]],\"o\":[[3.22,0],[0,3.221],[-3.22,0],[0,-3.222]],\"v\":[[0,-5.832],[5.829,0],[0,5.832],[-5.829,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039,0.314,0.392,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[214.65,244.558],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":13,\"ty\":4,\"nm\":\"Ebene 18 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[168],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.243},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p243_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[294.925,112.226,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[62.925,234.226,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.209,0.131],[0,0],[0,0],[0.174,-0.142],[0,0],[0,0],[-0.093,-0.228],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.236],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.012,-0.223],[0,0],[0,0],[-0.238,-0.069],[0,0],[0,0],[-0.135,0.201],[0,0],[0,0],[0.155,0.19],[0,0],[0,0],[0.232,-0.083]],\"v\":[[2.206,-0.077],[1.1,-0.771],[1.036,-2.051],[0.544,-2.269],[-0.45,-1.461],[-1.706,-1.819],[-2.062,-1.431],[-1.568,-0.237],[-2.281,0.82],[-2.008,1.278],[-0.711,1.208],[0.105,2.221],[0.628,2.116],[0.938,0.878],[2.156,0.446]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[62.916,234.223],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":14,\"ty\":4,\"nm\":\"Ebene 19 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8,\"s\":[-209],\"e\":[0]},{\"t\":28}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.25},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p25_0p167_0p167\",\"t\":8,\"s\":[157.5,140,0],\"e\":[35.721,103.978,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":28}]},\"a\":{\"a\":0,\"k\":[35.721,103.978,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":8,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":28}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.209,0.131],[0,0],[0,0],[0.174,-0.141],[0,0],[0,0],[-0.094,-0.227],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.237],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.012,-0.224],[0,0],[0,0],[-0.238,-0.068],[0,0],[0,0],[-0.135,0.2],[0,0],[0,0],[0.155,0.191],[0,0],[0,0],[0.231,-0.083]],\"v\":[[2.206,-0.078],[1.1,-0.771],[1.036,-2.051],[0.544,-2.27],[-0.45,-1.461],[-1.706,-1.82],[-2.062,-1.432],[-1.568,-0.238],[-2.281,0.82],[-2.008,1.278],[-0.711,1.207],[0.105,2.22],[0.628,2.115],[0.938,0.878],[2.156,0.446]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[35.712,103.975],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":15,\"ty\":4,\"nm\":\"Ebene 20 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":7,\"s\":[275],\"e\":[0]},{\"t\":27}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.09},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p09_0p167_0p167\",\"t\":7,\"s\":[157.5,140,0],\"e\":[261.12,26.218,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":27}]},\"a\":{\"a\":0,\"k\":[261.12,26.218,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":7,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":27}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.21,0.131],[0,0],[0,0],[0.174,-0.141],[0,0],[0,0],[-0.093,-0.228],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.236],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.011,-0.223],[0,0],[0,0],[-0.238,-0.068],[0,0],[0,0],[-0.135,0.2],[0,0],[0,0],[0.155,0.19],[0,0],[0,0],[0.232,-0.082]],\"v\":[[2.206,-0.078],[1.099,-0.771],[1.034,-2.052],[0.543,-2.27],[-0.45,-1.461],[-1.707,-1.82],[-2.062,-1.432],[-1.568,-0.238],[-2.281,0.82],[-2.009,1.278],[-0.711,1.207],[0.105,2.22],[0.628,2.115],[0.937,0.878],[2.155,0.445]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[261.111,26.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":16,\"ty\":4,\"nm\":\"Ebene 21 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[132.9],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.326},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p326_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[268.337,196.938,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[252.337,213.938,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.411,0.258],[0,0],[0,0],[0.34,-0.276],[0,0],[0,0],[-0.184,-0.446],[0,0],[0,0],[-0.483,0.027],[0,0],[0,0],[-0.116,0.463],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.022,-0.439],[0,0],[0,0],[-0.466,-0.133],[0,0],[0,0],[-0.265,0.392],[0,0],[0,0],[0.302,0.373],[0,0],[0,0],[0.454,-0.162]],\"v\":[[4.322,-0.152],[2.152,-1.51],[2.027,-4.017],[1.065,-4.447],[-0.882,-2.861],[-3.344,-3.565],[-4.038,-2.804],[-3.072,-0.465],[-4.468,1.607],[-3.935,2.505],[-1.392,2.366],[0.207,4.35],[1.231,4.145],[1.837,1.72],[4.222,0.874]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[252.32,213.932],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":17,\"ty\":4,\"nm\":\"Ebene 22 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":13,\"s\":[-266],\"e\":[0]},{\"t\":33}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.337},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p337_0p167_0p167\",\"t\":13,\"s\":[157.5,140,0],\"e\":[133.395,26.515,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":33}]},\"a\":{\"a\":0,\"k\":[133.395,26.515,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":13,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":33}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.411,0.258],[0,0],[0,0],[0.34,-0.277],[0,0],[0,0],[-0.183,-0.446],[0,0],[0,0],[-0.484,0.026],[0,0],[0,0],[-0.116,0.462],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.022,-0.438],[0,0],[0,0],[-0.466,-0.133],[0,0],[0,0],[-0.264,0.392],[0,0],[0,0],[0.302,0.373],[0,0],[0,0],[0.454,-0.162]],\"v\":[[4.322,-0.152],[2.152,-1.511],[2.027,-4.018],[1.065,-4.446],[-0.882,-2.861],[-3.344,-3.565],[-4.039,-2.804],[-3.072,-0.466],[-4.469,1.607],[-3.935,2.505],[-1.392,2.366],[0.207,4.35],[1.231,4.145],[1.837,1.72],[4.222,0.874]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[133.378,26.508],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":18,\"ty\":4,\"nm\":\"Ebene 23 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5,\"s\":[399],\"e\":[0]},{\"t\":25}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.478},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p478_0p167_0p167\",\"t\":5,\"s\":[157.5,140,0],\"e\":[257.258,159.497,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":25}]},\"a\":{\"a\":0,\"k\":[257.258,159.497,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":5,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":25}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.721,-0.604],[0,0],[0,0],[-0.306,-0.794],[0,0],[0,0],[-0.932,0.071],[0,0],[0,0],[-0.241,0.908],[0,0],[0,0],[0.783,0.491],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.821,-0.221],[0,0],[0,0],[-0.524,0.78],[0,0],[0,0],[0.566,0.723],[0,0],[0,0],[0.869,-0.333],[0,0],[0,0],[-0.027,-0.935]],\"v\":[[2.281,-8.697],[-1.528,-5.509],[-6.23,-6.781],[-7.598,-5.261],[-5.84,-0.719],[-8.615,3.403],[-7.627,5.141],[-2.732,4.758],[0.255,8.578],[2.232,8.133],[3.5,3.356],[8.121,1.595],[8.357,-0.417],[4.245,-2.989],[4.113,-7.897]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[257.231,159.483],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":19,\"ty\":4,\"nm\":\"Ebene 24 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11,\"s\":[-212],\"e\":[0]},{\"t\":31}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.748},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p748_0p167_0p167\",\"t\":11,\"s\":[157.5,140,0],\"e\":[97.064,84.204,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":31}]},\"a\":{\"a\":0,\"k\":[97.064,84.204,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":11,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":31}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.675,-0.565],[0,0],[0,0],[-0.287,-0.743],[0,0],[0,0],[-0.872,0.067],[0,0],[0,0],[-0.226,0.849],[0,0],[0,0],[0.734,0.459],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.77,-0.208],[0,0],[0,0],[-0.491,0.73],[0,0],[0,0],[0.53,0.677],[0,0],[0,0],[0.814,-0.312],[0,0],[0,0],[-0.026,-0.875]],\"v\":[[2.135,-8.142],[-1.43,-5.157],[-5.831,-6.348],[-7.113,-4.926],[-5.467,-0.674],[-8.064,3.186],[-7.141,4.812],[-2.557,4.454],[0.239,8.029],[2.09,7.613],[3.277,3.141],[7.602,1.493],[7.822,-0.391],[3.974,-2.799],[3.851,-7.393]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[97.039,84.191],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":20,\"ty\":4,\"nm\":\"Ebene 25 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[-256],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.718},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p718_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[78.559,168.874,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[78.559,168.874,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.516,-0.432],[0,0],[0,0],[-0.219,-0.569],[0,0],[0,0],[-0.668,0.051],[0,0],[0,0],[-0.173,0.65],[0,0],[0,0],[0.562,0.351],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.588,-0.159],[0,0],[0,0],[-0.376,0.559],[0,0],[0,0],[0.405,0.518],[0,0],[0,0],[0.623,-0.239],[0,0],[0,0],[-0.02,-0.669]],\"v\":[[1.633,-6.229],[-1.096,-3.945],[-4.463,-4.856],[-5.442,-3.768],[-4.183,-0.516],[-6.17,2.436],[-5.463,3.681],[-1.958,3.407],[0.182,6.143],[1.598,5.824],[2.507,2.403],[5.814,1.142],[5.984,-0.299],[3.04,-2.141],[2.945,-5.656]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[78.54,168.865],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":21,\"ty\":4,\"nm\":\"Ebene 26 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":17,\"s\":[50],\"e\":[18]},{\"t\":37}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.897},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p897_0p167_0p167\",\"t\":17,\"s\":[157.5,140,0],\"e\":[155.771,214.44,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":37}]},\"a\":{\"a\":0,\"k\":[155.771,214.44,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.008,1.008,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,15.952]},\"n\":[\"0p042_1p008_0p167_0p167\",\"0p042_1p008_0p167_0p167\",\"0p833_-26p778_0p167_15p952\"],\"t\":17,\"s\":[0,0,100],\"e\":[67,67,100]},{\"t\":37}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[1.312,-0.183],[0,0],[0,0],[0.227,-1.177],[0,0],[0,0],[-1.168,-0.61],[0,0],[0,0],[-0.967,0.904],[0,0],[0,0],[0.57,1.171],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.816,-0.879],[0,0],[0,0],[-1.21,0.541],[0,0],[0,0],[0.137,1.287],[0,0],[0,0],[1.289,0.251],[0,0],[0,0],[0.665,-1.137]],\"v\":[[10.542,-8.02],[3.609,-7.053],[-1.06,-12.084],[-3.829,-11.291],[-5.121,-4.55],[-11.514,-1.696],[-11.632,1.119],[-5.496,4.318],[-4.779,11.114],[-2.084,12.058],[2.999,7.295],[9.835,8.642],[11.62,6.414],[8.627,0.269],[12.136,-5.695]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[155.828,214.455],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":22,\"ty\":4,\"nm\":\"Ebene 27 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11,\"s\":[-239],\"e\":[0]},{\"t\":31}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.5},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p5_0p167_0p167\",\"t\":11,\"s\":[157.5,140,0],\"e\":[219.606,61.933,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":31}]},\"a\":{\"a\":0,\"k\":[219.606,61.933,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":11,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":31}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.946,-0.131],[0,0],[0,0],[0.163,-0.849],[0,0],[0,0],[-0.842,-0.44],[0,0],[0,0],[-0.697,0.652],[0,0],[0,0],[0.411,0.845],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.588,-0.633],[0,0],[0,0],[-0.872,0.39],[0,0],[0,0],[0.099,0.928],[0,0],[0,0],[0.929,0.181],[0,0],[0,0],[0.479,-0.819]],\"v\":[[7.601,-5.783],[2.602,-5.086],[-0.764,-8.713],[-2.76,-8.141],[-3.693,-3.281],[-8.301,-1.223],[-8.387,0.807],[-3.962,3.114],[-3.445,8.013],[-1.503,8.694],[2.163,5.259],[7.09,6.23],[8.378,4.624],[6.219,0.195],[8.749,-4.107]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[219.647,61.944],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0}]}\n\n/***/ }),\n\n/***/ 203:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(5);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(154);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar IndexPage = function (_React$Component) {\n\t  _inherits(IndexPage, _React$Component);\n\t\n\t  function IndexPage(props) {\n\t    _classCallCheck(this, IndexPage);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this._click = function () {\n\t      _this.setState({ show: true });\n\t\n\t      setTimeout(function () {\n\t        return _this.setState({ show: false });\n\t      }, 1500);\n\t    };\n\t\n\t    _this.state = { show: false };\n\t    return _this;\n\t  }\n\t\n\t  IndexPage.prototype.componentDidMount = function componentDidMount() {\n\t    this._lottie = __webpack_require__(322);\n\t  };\n\t\n\t  IndexPage.prototype.componentDidUpdate = function componentDidUpdate() {\n\t    if (this._el) {\n\t      this._animation = this._lottie.loadAnimation({\n\t        container: this._el,\n\t        renderer: 'svg',\n\t        animationData: __webpack_require__(321)\n\t      });\n\t    }\n\t  };\n\t\n\t  IndexPage.prototype.render = function render() {\n\t    var _this2 = this;\n\t\n\t    return _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        _react2.default.createElement(\n\t          'span',\n\t          {\n\t            style: {\n\t              fontWeight: 'bold',\n\t              color: 'purple',\n\t              cursor: 'pointer'\n\t            },\n\t            onClick: this._click },\n\t          'Click me'\n\t        ),\n\t        ' to see miracle'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Now go build something great.'\n\t      ),\n\t      this.state.show && _react2.default.createElement('div', {\n\t        id: 'animation',\n\t        ref: function ref(el) {\n\t          return _this2._el = el;\n\t        },\n\t        style: {\n\t          position: 'absolute',\n\t          width: '100%',\n\t          height: '100%',\n\t          top: 0,\n\t          left: 0\n\t        }\n\t      })\n\t    );\n\t  };\n\t\n\t  return IndexPage;\n\t}(_react2.default.Component);\n\t\n\texports.default = IndexPage;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-index-js-9efe4b04582c1d150418.js","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar _invariant = require('fbjs/lib/invariant');\n\nif (process.env.NODE_ENV !== 'production') {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n\n  var injectedMixins = [];\n\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillMount`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillReceiveProps`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillUpdate`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillUpdate: 'DEFINE_MANY',\n\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n\n  /**\n   * Similar to ReactClassInterface but for static methods.\n   */\n  var ReactClassStaticInterface = {\n    /**\n     * This method is invoked after a component is instantiated and when it\n     * receives new props. Return an object to update state in response to\n     * prop changes. Return null to indicate no change to state.\n     *\n     * If an object is returned, its keys will be merged into the existing state.\n     *\n     * @return {object || null}\n     * @optional\n     */\n    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'\n  };\n\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n  var RESERVED_SPEC_KEYS = {\n    displayName: function(Constructor, displayName) {\n      Constructor.displayName = displayName;\n    },\n    mixins: function(Constructor, mixins) {\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function(Constructor, childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, childContextTypes, 'childContext');\n      }\n      Constructor.childContextTypes = _assign(\n        {},\n        Constructor.childContextTypes,\n        childContextTypes\n      );\n    },\n    contextTypes: function(Constructor, contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, contextTypes, 'context');\n      }\n      Constructor.contextTypes = _assign(\n        {},\n        Constructor.contextTypes,\n        contextTypes\n      );\n    },\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function(Constructor, getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(\n          Constructor.getDefaultProps,\n          getDefaultProps\n        );\n      } else {\n        Constructor.getDefaultProps = getDefaultProps;\n      }\n    },\n    propTypes: function(Constructor, propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, propTypes, 'prop');\n      }\n      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n    },\n    statics: function(Constructor, statics) {\n      mixStaticSpecIntoComponent(Constructor, statics);\n    },\n    autobind: function() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            typeof typeDef[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n              'React.PropTypes.',\n            Constructor.displayName || 'ReactClass',\n            ReactPropTypeLocationNames[location],\n            propName\n          );\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n      ? ReactClassInterface[name]\n      : null;\n\n    // Disallow overriding of base class methods unless explicitly allowed.\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(\n        specPolicy === 'OVERRIDE_BASE',\n        'ReactClassInterface: You are attempting to override ' +\n          '`%s` from your class specification. Ensure that your method names ' +\n          'do not overlap with React methods.',\n        name\n      );\n    }\n\n    // Disallow defining methods more than once unless explicitly allowed.\n    if (isAlreadyDefined) {\n      _invariant(\n        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n        'ReactClassInterface: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be due ' +\n          'to a mixin.',\n        name\n      );\n    }\n  }\n\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            isMixinValid,\n            \"%s: You're attempting to include a mixin that is either null \" +\n              'or not an object. Check the mixins included by the component, ' +\n              'as well as any mixins they include themselves. ' +\n              'Expected object but got %s.',\n            Constructor.displayName || 'ReactClass',\n            spec === null ? null : typeofSpec\n          );\n        }\n      }\n\n      return;\n    }\n\n    _invariant(\n      typeof spec !== 'function',\n      \"ReactClass: You're attempting to \" +\n        'use a component class or function as a mixin. Instead, just use a ' +\n        'regular object.'\n    );\n    _invariant(\n      !isValidElement(spec),\n      \"ReactClass: You're attempting to \" +\n        'use a component as a mixin. Instead, just use a regular object.'\n    );\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs;\n\n    // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind =\n          isFunction &&\n          !isReactClassMethod &&\n          !isAlreadyDefined &&\n          spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name];\n\n            // These cases should already be caught by validateMethodOverride.\n            _invariant(\n              isReactClassMethod &&\n                (specPolicy === 'DEFINE_MANY_MERGED' ||\n                  specPolicy === 'DEFINE_MANY'),\n              'ReactClass: Unexpected spec policy %s for key %s ' +\n                'when mixing in component specs.',\n              specPolicy,\n              name\n            );\n\n            // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n\n    for (var name in statics) {\n      var property = statics[name];\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n      _invariant(\n        !isReserved,\n        'ReactClass: You are attempting to define a reserved ' +\n          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n          'as an instance property instead; it will still be accessible on the ' +\n          'constructor.',\n        name\n      );\n\n      var isAlreadyDefined = name in Constructor;\n      if (isAlreadyDefined) {\n        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)\n          ? ReactClassStaticInterface[name]\n          : null;\n\n        _invariant(\n          specPolicy === 'DEFINE_MANY_MERGED',\n          'ReactClass: You are attempting to define ' +\n            '`%s` on your component more than once. This conflict may be ' +\n            'due to a mixin.',\n          name\n        );\n\n        Constructor[name] = createMergedResultFunction(Constructor[name], property);\n\n        return;\n      }\n\n      Constructor[name] = property;\n    }\n  }\n\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(\n      one && two && typeof one === 'object' && typeof two === 'object',\n      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n    );\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(\n          one[key] === undefined,\n          'mergeIntoWithNoDuplicateKeys(): ' +\n            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n            'may be due to a mixin; in particular, this may be caused by two ' +\n            'getInitialState() or getDefaultProps() methods returning objects ' +\n            'with clashing keys.',\n          key\n        );\n        one[key] = two[key];\n      }\n    }\n    return one;\n  }\n\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n      boundMethod.bind = function(newThis) {\n        for (\n          var _len = arguments.length,\n            args = Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n        if (newThis !== component && newThis !== null) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): React component methods may only be bound to the ' +\n                'component instance. See %s',\n              componentName\n            );\n          }\n        } else if (!args.length) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): You are binding a component method to the component. ' +\n                'React does this for you automatically in a high-performance ' +\n                'way, so you can safely remove this call. See %s',\n              componentName\n            );\n          }\n          return boundMethod;\n        }\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n    return boundMethod;\n  }\n\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function() {\n      this.__isMounted = true;\n    }\n  };\n\n  var IsMountedPostMixin = {\n    componentWillUnmount: function() {\n      this.__isMounted = false;\n    }\n  };\n\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function() {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this.__didWarnIsMounted,\n          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n            'subscriptions and pending requests in componentWillUnmount to ' +\n            'prevent memory leaks.',\n          (this.constructor && this.constructor.displayName) ||\n            this.name ||\n            'Component'\n        );\n        this.__didWarnIsMounted = true;\n      }\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function() {};\n  _assign(\n    ReactClassComponent.prototype,\n    ReactComponent.prototype,\n    ReactClassMixin\n  );\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function(props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n            'JSX instead. See: https://fb.me/react-legacyfactory'\n        );\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (\n          initialState === undefined &&\n          this.getInitialState._isMockFunction\n        ) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      _invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      );\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    );\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.componentWillRecieveProps,\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.UNSAFE_componentWillRecieveProps,\n        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +\n          'Did you mean UNSAFE_componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/create-react-class/factory.js\n// module id = 97\n// module chunks = 35783957827783 162898551421021 231608221292675","/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.hoistNonReactStatics = factory());\n}(this, (function () {\n    'use strict';\n    \n    var REACT_STATICS = {\n        childContextTypes: true,\n        contextTypes: true,\n        defaultProps: true,\n        displayName: true,\n        getDefaultProps: true,\n        getDerivedStateFromProps: true,\n        mixins: true,\n        propTypes: true,\n        type: true\n    };\n    \n    var KNOWN_STATICS = {\n        name: true,\n        length: true,\n        prototype: true,\n        caller: true,\n        callee: true,\n        arguments: true,\n        arity: true\n    };\n    \n    var defineProperty = Object.defineProperty;\n    var getOwnPropertyNames = Object.getOwnPropertyNames;\n    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var getPrototypeOf = Object.getPrototypeOf;\n    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n    \n    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n            \n            if (objectPrototype) {\n                var inheritedComponent = getPrototypeOf(sourceComponent);\n                if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n                }\n            }\n            \n            var keys = getOwnPropertyNames(sourceComponent);\n            \n            if (getOwnPropertySymbols) {\n                keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n            }\n            \n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                    try { // Avoid failures from read-only properties\n                        defineProperty(targetComponent, key, descriptor);\n                    } catch (e) {}\n                }\n            }\n            \n            return targetComponent;\n        }\n        \n        return targetComponent;\n    };\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hoist-non-react-statics/index.js\n// module id = 158\n// module chunks = 35783957827783 231608221292675","(typeof navigator !== \"undefined\") && (function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\nfunction DynamicPropertyContainer(){};\r\nDynamicPropertyContainer.prototype = {\r\n\taddDynamicProperty: function(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    \tthis._isAnimated = true;\r\n\t    }\r\n\t},\r\n\titerateDynamicProperties: function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t},\r\n\tinitDynamicPropertyContainer: function(container){\r\n\t    this.container = container;\r\n\t    this.dynamicProperties = [];\r\n\t    this._mdf = false;\r\n\t    this._isAnimated = false;\r\n\t}\r\n}\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        var _p = this.props;\r\n        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function roundMatrixProperty(val) {\r\n        var v = 10000;\r\n        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n            return _rnd(val * v) / v;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var props = this.props;\r\n        var _a = roundMatrixProperty(props[0]);\r\n        var _b = roundMatrixProperty(props[1]);\r\n        var _c = roundMatrixProperty(props[4]);\r\n        var _d = roundMatrixProperty(props[5]);\r\n        var _e = roundMatrixProperty(props[12]);\r\n        var _f = roundMatrixProperty(props[13]);\r\n        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n            var curveSegments = defaultCurveSegments;\r\n            var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for (k = 0; k < curveSegments; k += 1) {\r\n                point = createSizedArray(len);\r\n                perc = k / (curveSegments - 1);\r\n                ptDistance = 0;\r\n                for (i = 0; i < len; i += 1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n                ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance, point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3;\r\n        var t0t0u0_3 = t0*t0*u0*3;\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        //tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.setAttribute('font-family', fontData.fFamily);\r\n        tHelper.setAttribute('font-style', fontData.fStyle);\r\n        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n        return tHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = createTag('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                var l = createTag('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                document.body.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                var sc = createTag('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            fontArr[i].cache = {};\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        //On some cases the font even if it is loaded, it won't load correctly when measuring text on canvas.\r\n        //Adding this timeout seems to fix it\r\n       setTimeout(function() {\r\n            checkLoadedFonts.bind(this)();\r\n        }.bind(this), 100);\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size) {\r\n        var fontData = this.getFontByName(fontName);\r\n        var index = char.charCodeAt(0);\r\n        if(!fontData.cache[index + 1]) {\r\n            var tHelper = fontData.helper;\r\n            //Canvas version\r\n            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n            //SVG version\r\n            //console.log(tHelper.getBBox().width)\r\n            /*tHelper.textContent = '|' + char + '|';\r\n            var doubleSize = tHelper.getComputedTextLength();\r\n            tHelper.textContent = '||';\r\n            var singleSize = tHelper.getComputedTextLength();\r\n            fontData.cache[index + 1] = (doubleSize - singleSize)/100;*/\r\n           \r\n            tHelper.textContent = char;\r\n            fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n        }\r\n        return fontData.cache[index + 1] * size;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return this.fonts[0];\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n    var math_abs = Math.abs;\r\n\r\n    function interpolateValue(frameNum, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            if(this.sh && keyData.h !== 1) {\r\n                if(frameNum >= nextKeyData.t-offsetTime){\r\n                    newValue[0] = keyData.e[0];\r\n                    newValue[1] = keyData.e[1];\r\n                    newValue[2] = keyData.e[2];\r\n                }else if(frameNum <= keyData.t-offsetTime){\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                }else{\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(keyData.e);\r\n                    var time = (frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime));\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i=0;i<len;i+=1){\r\n                    if(keyData.h !== 1){\r\n                        if(frameNum >= nextKeyData.t-offsetTime){\r\n                            perc = 1;\r\n                        }else if(frameNum < keyData.t-offsetTime){\r\n                            perc = 0;\r\n                        }else{\r\n                            if(keyData.o.x.constructor === Array){\r\n                                if(!keyData.__fnct){\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                    outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                    inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                    inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                    fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else{\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                        }\r\n                    }\r\n\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n\r\n                    if(len === 1){\r\n                        newValue = keyValue;\r\n                    }else{\r\n                        newValue[i] = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            this._caching.lastIndex = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }        \r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult, container);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult, container);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult, container);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult, container);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var _mdf = this._mdf;\r\n        this.iterateDynamicProperties();\r\n        this._mdf = this._mdf || _mdf;\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        if(this._isDirty) {\r\n            this.precalculateMatrix();\r\n            this._isDirty = false;\r\n        }\r\n\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.cloneFromProps(this.pre.props);\r\n            if (this.appliedTransformations < 1) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.appliedTransformations < 2) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk && this.appliedTransformations < 3) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r && this.appliedTransformations < 4) {\r\n                this.v.rotate(-this.r.v);\r\n            } else if (!this.r && this.appliedTransformations < 4){\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                var v1,v2;\r\n                if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                    v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                    v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                } else {\r\n                    v1 = this.p.pv;\r\n                    v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function precalculateMatrix() {\r\n        if(!this.a.k) {\r\n            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            this.appliedTransformations = 1;\r\n        } else {\r\n            return;\r\n        }\r\n        if(!this.s.effectsSequence.length) {\r\n            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            this.appliedTransformations = 2;\r\n        } else {\r\n            return;\r\n        }\r\n        if(this.sk) {\r\n            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n            this.appliedTransformations = 3;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.r) {\r\n            if(!this.r.effectsSequence.length) {\r\n                this.pre.rotate(-this.r.v);\r\n                this.appliedTransformations = 4;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            this.appliedTransformations = 4;\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function addDynamicProperty(prop) {\r\n        this._addDynamicProperty(prop);\r\n        this.elem.addDynamicProperty(prop);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        //Precalculated matrix with non animated properties\r\n        this.pre = new Matrix();\r\n        this.appliedTransformations = 0;\r\n        this.initDynamicPropertyContainer(container || elem);\r\n        if(data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n        }\r\n        if(data.r) {\r\n            this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\r\n        } else if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        if(data.a) {\r\n            this.a = PropertyFactory.getProp(elem,data.a,1,0,this);\r\n        }\r\n        if(data.s) {\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this);\r\n        }\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        this._isDirty = true;\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        getValue: processKeys,\r\n        precalculateMatrix: precalculateMatrix,\r\n        autoOrient: autoOrient\r\n    }\r\n\r\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        var kf = this.keyframes;\r\n        if(frameNum < kf[0].t-this.offsetTime){\r\n            keyPropS = kf[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n            if(kf[kf.length - 2].h === 1){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = kf[i];\r\n                nextKeyData = kf[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.lock || this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this.frameId = this.elem.globalData.frameId;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        if(!shapesEqual(this.v, finalValue)) {\r\n            this.v = shape_pool.clone(finalValue);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n        this.lock = false;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            reset: resetShape\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n        if(this._isAnimated) {\r\n            data.setAsAnimated();\r\n        }\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = this.s.v + o;\r\n        e = this.e.v + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        s = Math.round(s*1000)/1000;\r\n        e = Math.round(e*1000)/1000;\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            if (shapeData.shape.v.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n    this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = !!this.dynamicProperties.length;\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.frameId = -1;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\nfunction DashProperty(elem, data, renderer) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    this.initDynamicPropertyContainer(elem);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k || this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || forceRender;\r\n    if (this._mdf) {\r\n        var i = 0, len = this.dataProps.length;\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\nfunction GradientProperty(elem,data){\r\n    this.data = data;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.k = this.prop.k;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\nvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\tif(length === 0) {\r\n            return '';\r\n        }\r\n        var _o = pathNodes.o;\r\n        var _i = pathNodes.i;\r\n        var _v = pathNodes.v;\r\n        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n        for(i = 1; i < length; i += 1) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n}\nvar ImagePreloader = (function(){\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = createTag('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.destroy = destroy;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n    };\r\n}());\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n    this.initDynamicPropertyContainer(elem);\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = false;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n    this.comp = this.elem.comp;\r\n\tthis.keysIndex = -1;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n    this.effectsSequence = [];\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: this.defaultBoxWidth,\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:null,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0,\r\n        __test: true\r\n\r\n\t};\r\n    this.copyFromDocumentData(this.data.d.k[0].s);\r\n    \r\n    if(!this.searchProperty()) {\r\n        this.completeTextData(this.currentData);\r\n        this.keysIndex = 0;\r\n    }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\r\nTextProperty.prototype.copyFromDocumentData = function(data) {\r\n    for(var s in data) {\r\n        this.currentData[s] = data[s];\r\n    }\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data, currentTextValue){\r\n        if(this.currentData !== data) {\r\n            if(!data.__complete) {\r\n                this.completeTextData(data);\r\n            }\r\n            this.copyFromDocumentData(data);\r\n            this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n            this.currentData.fillColorAnim = data.fillColorAnim || this.currentData.fillColorAnim;\r\n            this.currentData.strokeColorAnim = data.strokeColorAnim || this.currentData.strokeColorAnim;\r\n            this.currentData.strokeWidthAnim = data.strokeWidthAnim || this.currentData.strokeWidthAnim;\r\n            this._mdf = true;\r\n        } else if(currentTextValue !== this.currentData.t) {\r\n            this._mdf = true;\r\n            this.completeTextData(data);\r\n        }\r\n\t\t/*var currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.sz = data.sz;\r\n        currentData.ps = data.ps;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.finalSize = data.finalSize;\r\n        currentData.finalLineHeight = data.finalLineHeight;\r\n        currentData.finalText = data.finalText;*/\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n    return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function() {\r\n    this.kf = this.data.d.k.length > 1;\r\n    if(this.kf) {\r\n        this.addEffect(this.getKeyframeValue.bind(this));\r\n    }\r\n    return this.kf;\r\n}\r\n\r\nTextProperty.prototype.addEffect = function(effectFunction) {\r\n\tthis.effectsSequence.push(effectFunction);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_finalValue) {\r\n    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n        return;\r\n    }\r\n    var currentTextValue = this.currentData.t;        \r\n    if(this.lock) {\r\n        this.setCurrentData(this.currentData, currentTextValue);\r\n        return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var multipliedValue;\r\n    var i, len = this.effectsSequence.length;\r\n    var finalValue = _finalValue || this.currentData;\r\n    for(i = 0; i < len; i += 1) {\r\n        finalValue = this.effectsSequence[i](finalValue);\r\n    }\r\n    this.setCurrentData(finalValue, currentTextValue);\r\n    this.pv = this.v = this.currentData;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n}\r\n\r\nTextProperty.prototype.getKeyframeValue = function(currentValue) {\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n        currentValue = textDocumentData;\r\n        this.keysIndex = i;\r\n    }\r\n    return currentValue;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(finalText[i].charCodeAt(0) === 13){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined \r\n    ? this.keysIndex === -1 \r\n        ? 0 \r\n        : this.keysIndex \r\n    : index;\r\n    var dData = this.data.d.k[index].s;\r\n    for(var s in newData) {\r\n        dData[s] = newData[s];\r\n    }\r\n    this.recalculate(index);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = this.kf ? -1 : 0;\r\n    this._isFirstFrame = true;\r\n    this.getValue(dData);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._currentTextLength = -1;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.initDynamicPropertyContainer(elem);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        getMult: function(ind) {\r\n            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n                this.getValue();\r\n            }\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<0.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this.iterateDynamicProperties();\r\n            this._mdf = newCharsFlag || this._mdf;\r\n            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = this._currentTextLength;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / this._currentTextLength;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        frameId: 0,\r\n        compSize: {w:0,h:0},\r\n        renderConfig: this.renderConfig,\r\n        fontManager: new FontManager()\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize.w = animData.w;\r\n    this.globalData.compSize.h = animData.h;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path,\r\n                lastPath: ''\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = 'fi_'+randomString(10);\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n    if (this.viewData.length) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n    var finalMat = this.element.finalTransform.mat;\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n        //list of animated components\r\n        this.renderableComponents = [];\r\n    },\r\n    addRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) === -1) {\r\n            this.renderableComponents.push(component);\r\n        }\r\n    },\r\n    removeRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) !== -1) {\r\n            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n        }\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        var i, len = this.renderableComponents.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n        }\r\n        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.addMasks();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = false;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n    //TODO find if there are some cases where _isAnimated can be false. \r\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n    this._isAnimated = !!shape.k;\r\n    // TODO: commenting this for now since all shapes are animated\r\n    var i = 0, len = transformers.length;\r\n    while(i < len) {\r\n    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n    \t\tthis._isAnimated = true;\r\n    \t\tbreak;\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function() {\r\n    this._isAnimated = true;\r\n}\nfunction SVGTransformData(mProps, op, container) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op,\r\n\t\tcontainer: container\r\n\t};\r\n\tthis.elements = [];\r\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.getValue = this.iterateDynamicProperties;\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n    this.g = new GradientProperty(elem,data.g,this);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n    this.initGradientData(elem, data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\nvar SVGElementsRenderer = (function() {\r\n\tvar _identityMatrix = new Matrix();\r\n\tvar _matrixHelper = new Matrix();\r\n\r\n\tvar ob = {\r\n\t\tcreateRenderFunction: createRenderFunction\r\n\t}\r\n\r\n\tfunction createRenderFunction(data) {\r\n\t    var ty = data.ty;\r\n\t    switch(data.ty) {\r\n\t        case 'fl':\r\n\t        return renderFill;\r\n\t        case 'gf':\r\n\t        return renderGradient;\r\n\t        case 'gs':\r\n\t        return renderGradientStroke;\r\n\t        case 'st':\r\n\t        return renderStroke;\r\n\t        case 'sh':\r\n\t        case 'el':\r\n\t        case 'rc':\r\n\t        case 'sr':\r\n\t        return renderPath;\r\n\t        case 'tr':\r\n\t        return renderContentTransform;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t    }\r\n\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = _matrixHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(!redraw && iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t            if(redraw) {\r\n\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t                k = itemData.transformers.length-1;\r\n\t                while(iterations > 0) {\r\n\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                    iterations --;\r\n\t                    k --;\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            mat = _identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t    var styleElem = itemData.style;\r\n\r\n\t    if(itemData.c._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t}\r\n\r\n\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n\treturn ob;\r\n}())\nfunction BaseElement(){\r\n}\r\n\r\nBaseElement.prototype = {\r\n    checkMasks: function(){\r\n        if(!this.data.hasMask){\r\n            return false;\r\n        }\r\n        var i = 0, len = this.data.masksProperties.length;\r\n        while(i<len) {\r\n            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n                return true;\r\n            }\r\n            i += 1;\r\n        }\r\n        return false;\r\n    },\r\n    initExpressions: function(){\r\n        this.layerInterface = LayerExpressionInterface(this);\r\n        if(this.data.hasMask && this.maskManager) {\r\n            this.layerInterface.registerMaskInterface(this.maskManager);\r\n        }\r\n        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n        if(this.data.ty === 0 || this.data.xt){\r\n            this.compInterface = CompExpressionInterface(this);\r\n        } else if(this.data.ty === 4){\r\n            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n        } else if(this.data.ty === 5){\r\n            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n            this.layerInterface.text = this.layerInterface.textInterface;\r\n        }\r\n    },\r\n    blendModeEnums: {\r\n        1:'multiply',\r\n        2:'screen',\r\n        3:'overlay',\r\n        4:'darken',\r\n        5:'lighten',\r\n        6:'color-dodge',\r\n        7:'color-burn',\r\n        8:'hard-light',\r\n        9:'soft-light',\r\n        10:'difference',\r\n        11:'exclusion',\r\n        12:'hue',\r\n        13:'saturation',\r\n        14:'color',\r\n        15:'luminosity'\r\n    },\r\n    getBlendMode: function(){\r\n        return this.blendModeEnums[this.data.bm] || '';\r\n    },\r\n    setBlendMode: function(){\r\n        var blendModeValue = this.getBlendMode();\r\n        var elem = this.baseElement || this.layerElement;\r\n\r\n        elem.style['mix-blend-mode'] = blendModeValue;\r\n    },\r\n    initBaseData: function(data, globalData, comp){\r\n        this.globalData = globalData;\r\n        this.comp = comp;\r\n        this.data = data;\r\n        this.layerId = 'ly_'+randomString(10);\r\n        \r\n        //Stretch factor for old animations missing this property.\r\n        if(!this.data.sr){\r\n            this.data.sr = 1;\r\n        }\r\n        // effects manager\r\n        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        \r\n    },\r\n    getType: function(){\r\n        return this.type;\r\n    }\r\n}\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = randomString(10);\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = randomString(10);\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);\r\n\r\n                ////\r\n                /*var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);*/\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    addMasks: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    isShapeInAnimatedModifiers: function(data) {\r\n        var i = 0, len = this.shapeModifiers.length;\r\n        while(i < len) {\r\n            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].sh.reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'butt'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var elements = this.processedElements;\r\n        var i = 0, len = elements.length;\r\n        while(i < len){\r\n            if(elements[i].elem === elem){\r\n                return elements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var elements = this.processedElements;\r\n        var i = elements.length;\r\n        while(i){\r\n            i -= 1;\r\n            if(elements[i].elem === elem){\r\n                elements[i].pos = pos;\r\n                return;\r\n            }\r\n        }\r\n        elements.push(new ProcessedElement(elem, pos));\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    }\r\n};\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n        this.textProperty._mdf = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n    var i, len = this.shapes.length, shape;\r\n    var j, jLen = this.stylesList.length;\r\n    var style, count = 0;\r\n    var tempShapes = [];\r\n    var areAnimated = false;\r\n    for(j = 0; j < jLen; j += 1) {\r\n        style = this.stylesList[j];\r\n        areAnimated = false;\r\n        tempShapes.length = 0;\r\n        for(i = 0; i < len; i += 1) {\r\n            shape = this.shapes[i];\r\n            if(shape.styles.indexOf(style) !== -1) {\r\n                tempShapes.push(shape);\r\n                areAnimated = shape._isAnimated || areAnimated;\r\n            }\r\n        }\r\n        if(tempShapes.length > 1 && areAnimated) {\r\n            this.setShapesAsAnimated(tempShapes);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n    var i, len = shapes.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        shapes[i].setAsAnimated();\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n    var i = 0, len = this.animatedContents.length;\r\n    while(i < len) {\r\n        if(this.animatedContents[i].element === element) {\r\n            return;\r\n        }\r\n        i += 1;\r\n    }\r\n    this.animatedContents.push({\r\n        fn: SVGElementsRenderer.createRenderFunction(data),\r\n        element: element,\r\n        data: data\r\n    });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], container);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape();\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function() {\r\n    var i, len = this.animatedContents.length;\r\n    var animatedContent;\r\n    for(i = 0; i < len; i += 1) {\r\n        animatedContent = this.animatedContents[i];\r\n        if(this._isFirstFrame || animatedContent.element._isAnimated) {\r\n            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n};\r\n\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\nvar _svgMatteSymbols = [];\r\nvar _svgMatteMaskCounter = 0;\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = 'matte_' + randomString(5) + '_' + _svgMatteMaskCounter++;\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while (i < len) {\r\n    \tif (this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n    if (this.filters.length) {\r\n        elem.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    /*function start(){\r\n        window.requestAnimationFrame(first);\r\n    }*/\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    //setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    this.assetsPath = params.assetsPath;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(-1);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(!this.renderer){\r\n        return;\r\n    }\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    };\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n};\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                this.trigger('loopComplete');\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset){\r\n    if(this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || !this.renderer){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\nfunction EffectsManager(){}\nfunction CanvasRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.renderConfig = {\r\n        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n        context: (config && config.context) || null,\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n    if (this.animationItem.wrapper) {\r\n        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n    }\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1,\r\n        _mdf: false,\r\n        renderConfig: this.renderConfig,\r\n        currentGlobalAlpha: -1\r\n    };\r\n    var i, len = 15;\r\n    this.contextData = new CVContextData();\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.transformMat = new Matrix();\r\n    this.completeLayers = false;\r\n}\r\nextendPrototype([BaseRenderer],CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n    return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n    return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n    return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n    return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n    return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function(props){\r\n    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n        return;\r\n    }\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n        return;\r\n    }\r\n    this.transformMat.cloneFromProps(props);\r\n    var cProps = this.contextData.cTr.props;\r\n    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n    var trProps = this.contextData.cTr.props;\r\n    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function(op){\r\n    /*if(op === 1){\r\n        return;\r\n    }*/\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n        return;\r\n    }\r\n    this.contextData.cO *= op < 0 ? 0 : op;\r\n    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n        this.canvasContext.globalAlpha = this.contextData.cO;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function(){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.save();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.save();\r\n    }\r\n    var props = this.contextData.cTr.props;\r\n    if(this.contextData._length <= this.contextData.cArrPos) {\r\n        this.contextData.duplicate();\r\n    }\r\n    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n    for (i = 0; i < 16; i += 1) {\r\n        arr[i] = props[i];\r\n    }\r\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n    this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.restore();\r\n        this.globalData.blendMode = 'source-over';\r\n    }\r\n    this.contextData.cArrPos -= 1;\r\n    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n    var i,arr = this.contextData.cTr.props;\r\n    for(i=0;i<16;i+=1){\r\n        arr[i] = popped[i];\r\n    }\r\n    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n    this.contextData.cO = popped;\r\n    if(this.globalData.currentGlobalAlpha !== popped) {\r\n        this.canvasContext.globalAlpha = popped;\r\n        this.globalData.currentGlobalAlpha = popped;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function(animData){\r\n    if(this.animationItem.wrapper){\r\n        this.animationItem.container = createTag('canvas');\r\n        this.animationItem.container.style.width = '100%';\r\n        this.animationItem.container.style.height = '100%';\r\n        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n        this.canvasContext = this.animationItem.container.getContext('2d');\r\n        if(this.renderConfig.className) {\r\n            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n        }\r\n    }else{\r\n        this.canvasContext = this.renderConfig.context;\r\n    }\r\n    this.data = animData;\r\n    this.globalData.canvasContext = this.canvasContext;\r\n    this.globalData.renderer = this;\r\n    this.globalData.isDashed = false;\r\n    this.globalData.totalFrames = Math.floor(animData.tf);\r\n    this.globalData.compWidth = animData.w;\r\n    this.globalData.compHeight = animData.h;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    };\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.layers = animData.layers;\r\n    this.transformCanvas = {\r\n        w: animData.w,\r\n        h:animData.h,\r\n        sx:0,\r\n        sy:0,\r\n        tx:0,\r\n        ty:0\r\n    };\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,document.body);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem);\r\n    this.globalData.addPendingElement = this.animationItem.addPendingElement.bind(this.animationItem);\r\n    this.globalData.transformCanvas = this.transformCanvas;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n\r\n    this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n    this.reset();\r\n    var elementWidth,elementHeight;\r\n    if(this.animationItem.wrapper && this.animationItem.container){\r\n        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n    }else{\r\n        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n    }\r\n    var elementRel,animationRel;\r\n    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n        var fillType = par[1] || 'meet';\r\n        var pos = par[0] || 'xMidYMid';\r\n        var xPos = pos.substr(0,4);\r\n        var yPos = pos.substr(4);\r\n        elementRel = elementWidth/elementHeight;\r\n        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        }else{\r\n            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n        }\r\n\r\n        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.tx = 0;\r\n        }\r\n        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.ty = 0;\r\n        }\r\n\r\n    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }else{\r\n        this.transformCanvas.sx = this.renderConfig.dpr;\r\n        this.transformCanvas.sy = this.renderConfig.dpr;\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }\r\n    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\r\n    this.ctxTransform(this.transformCanvas.props);\r\n    this.canvasContext.beginPath();\r\n    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n    this.canvasContext.closePath();\r\n    this.canvasContext.clip();\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n    if(this.renderConfig.clearCanvas) {\r\n        this.animationItem.wrapper.innerHTML = '';\r\n    }\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = len - 1; i >= 0; i-=1) {\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.globalData.canvasContext = null;\r\n    this.animationItem.container = null;\r\n    this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function(num){\r\n    if((this.renderedFrame == num && this.renderConfig.clearCanvas === true) || this.destroyed || num === -1){\r\n        return;\r\n    }\r\n    this.renderedFrame = num;\r\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n    this.globalData.frameId += 1;\r\n    this.globalData._mdf = false;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n\r\n     // console.log('--------');\r\n     // console.log('NEW: ',num);\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        if(this.renderConfig.clearCanvas === true){\r\n            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n        }else{\r\n            this.save();\r\n        }\r\n        for (i = len - 1; i >= 0; i-=1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n        if(this.renderConfig.clearCanvas !== true){\r\n            this.restore();\r\n        }\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n    elements[pos] = element;\r\n    element.initExpressions();\r\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function(){\r\n    this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function(){\r\n    this.animationItem.container.style.display = 'block';\r\n};\r\n\nfunction HybridRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.renderConfig = {\r\n        className: (config && config.className) || '',\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.pendingElements = [];\r\n    this.elements = [];\r\n    this.threeDElements = [];\r\n    this.destroyed = false;\r\n    this.camera = null;\r\n    this.supports3d = true;\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newDOMElement = element.getBaseElement();\r\n    if(!newDOMElement){\r\n        return;\r\n    }\r\n    var layer = this.layers[pos];\r\n    if(!layer.ddd || !this.supports3d){\r\n        if(this.threeDElements) {\r\n            this.addTo3dContainer(newDOMElement,pos);\r\n        } else {\r\n            var i = 0;\r\n            var nextDOMElement, nextLayer, tmpDOMElement;\r\n            while(i<pos){\r\n                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n                    nextLayer = this.elements[i];\r\n                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n                    nextDOMElement = tmpDOMElement || nextDOMElement;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(nextDOMElement){\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n                }\r\n            } else {\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.appendChild(newDOMElement);\r\n                }\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        this.addTo3dContainer(newDOMElement,pos);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGShapeElement(data, this.globalData, this);\r\n    }\r\n    return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGTextElement(data, this.globalData, this);\r\n    }\r\n    return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n    this.camera = new HCameraElement(data, this.globalData, this);\r\n    return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n    if(!this.supports3d){\r\n        return new IImageElement(data, this.globalData, this);\r\n    }\r\n    return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGCompElement(data, this.globalData, this);\r\n    }\r\n    return new HCompElement(data, this.globalData, this);\r\n\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n    if(!this.supports3d){\r\n        return new ISolidElement(data, this.globalData, this);\r\n    }\r\n    return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len) {\r\n        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n            return this.threeDElements[i].perspectiveElem;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function(pos, type){\r\n    var perspectiveElem = createTag('div');\r\n    styleDiv(perspectiveElem);\r\n    var container = createTag('div');\r\n    styleDiv(container);\r\n    if(type === '3d') {\r\n        perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n        perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    }\r\n    \r\n    perspectiveElem.appendChild(container);\r\n    //this.resizerElem.appendChild(perspectiveElem);\r\n    var threeDContainerData = {\r\n        container:container,\r\n        perspectiveElem:perspectiveElem,\r\n        startPos: pos,\r\n        endPos: pos,\r\n        type: type\r\n    };\r\n    this.threeDElements.push(threeDContainerData);\r\n    return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function(){\r\n    var i, len = this.layers.length;\r\n    var lastThreeDContainerData;\r\n    var currentContainer = '';\r\n    for(i=0;i<len;i+=1){\r\n        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n            if(currentContainer !== '3d'){\r\n                currentContainer = '3d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'3d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        } else {\r\n            if(currentContainer !== '2d'){\r\n                currentContainer = '2d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'2d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        }\r\n    }\r\n    len = this.threeDElements.length;\r\n    for(i = len - 1; i >= 0; i --) {\r\n        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len){\r\n        if(pos <= this.threeDElements[i].endPos){\r\n            var j = this.threeDElements[i].startPos;\r\n            var nextElement;\r\n            while(j<pos){\r\n                if(this.elements[j] && this.elements[j].getBaseElement){\r\n                    nextElement = this.elements[j].getBaseElement();\r\n                }\r\n                j += 1;\r\n            }\r\n            if(nextElement){\r\n                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n            } else {\r\n                this.threeDElements[i].container.appendChild(elem);\r\n            }\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function(animData){\r\n    var resizerElem = createTag('div');\r\n    var wrapper = this.animationItem.wrapper;\r\n    resizerElem.style.width = animData.w+'px';\r\n    resizerElem.style.height = animData.h+'px';\r\n    this.resizerElem = resizerElem;\r\n    styleDiv(resizerElem);\r\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n    if(this.renderConfig.className) {\r\n      resizerElem.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    wrapper.appendChild(resizerElem);\r\n\r\n    resizerElem.style.overflow = 'hidden';\r\n    var svg = createNS('svg');\r\n    svg.setAttribute('width','1');\r\n    svg.setAttribute('height','1');\r\n    styleDiv(svg);\r\n    this.resizerElem.appendChild(svg);\r\n    var defs = createNS('defs');\r\n    svg.appendChild(defs);\r\n    this.globalData.defs = defs;\r\n    this.data = animData;\r\n    //Mask animation\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem);\r\n    this.globalData.frameId = 0;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    };\r\n    this.globalData.frameRate = animData.fr;\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,svg);\r\n    this.layerElement = this.resizerElem;\r\n    this.build3dContainers();\r\n    this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.animationItem.container = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        this.elements[i].destroy();\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    var elementRel = elementWidth/elementHeight;\r\n    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n    var sx,sy,tx,ty;\r\n    if(animationRel>elementRel){\r\n        sx = elementWidth/(this.globalData.compSize.w);\r\n        sy = elementWidth/(this.globalData.compSize.w);\r\n        tx = 0;\r\n        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n    }else{\r\n        sx = elementHeight/(this.globalData.compSize.h);\r\n        sy = elementHeight/(this.globalData.compSize.h);\r\n        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n        ty = 0;\r\n    }\r\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function(){\r\n    this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function(){\r\n    this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function(){\r\n    this.buildAllItems();\r\n    if(this.camera){\r\n        this.camera.setup();\r\n    } else {\r\n        var cWidth = this.globalData.compSize.w;\r\n        var cHeight = this.globalData.compSize.h;\r\n        var i, len = this.threeDElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = createTag('div');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\nfunction CVShapeData(element, data) {\r\n    this.nodes = [];\r\n    this.trNodes = [];\r\n    this.tr = [0,0,0,0,0,0];\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);\r\n    this.st = false;\r\n    this.fl = false;\r\n}\r\n\r\nCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\nfunction CVContextData() {\r\n\tthis.saved = [];\r\n    this.cArrPos = 0;\r\n    this.cTr = new Matrix();\r\n    this.cO = 1;\r\n    var i, len = 15;\r\n    this.savedOp = createTypedArray('float32', len);\r\n    for(i=0;i<len;i+=1){\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function() {\r\n\tvar newLength = this._length * 2;\r\n\tvar currentSavedOp = this.savedOp;\r\n    this.savedOp = createTypedArray('float32', newLength);\r\n    this.savedOp.set(currentSavedOp);\r\n    var i = 0;\r\n    for(i = this._length; i < newLength; i += 1) {\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function() {\r\n\tthis.cArrPos = 0;\r\n\tthis.cTr.reset();\r\n    this.cO = 1;\r\n};\nfunction CVBaseElement(){\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n    createElements: function(){},\r\n    initRendererElement: function(){},\r\n    createContainerElements: function(){\r\n        this.canvasContext = this.globalData.canvasContext;\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n    },\r\n    createContent: function(){},\r\n    setBlendMode: function(){\r\n        var globalData = this.globalData;\r\n        if(globalData.blendMode !== this.data.bm) {\r\n            globalData.blendMode = this.data.bm;\r\n            var blendModeValue = this.getBlendMode();\r\n            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n        }\r\n    },\r\n    addMasks: function(){\r\n        this.maskManager = new CVMaskElement(this.data, this);\r\n    },\r\n    hideElement: function(){\r\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n            this.hidden = true;\r\n        }\r\n    },\r\n    showElement: function(){\r\n        if (this.isInRange && !this.isTransparent){\r\n            this.hidden = false;\r\n            this._isFirstFrame = true;\r\n            this.maskManager._isFirstFrame = true;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        if (this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.setBlendMode();\r\n        this.globalData.renderer.save();\r\n        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n        this.renderInnerContent();\r\n        this.globalData.renderer.restore();\r\n        if(this.maskManager.hasMasks) {\r\n            this.globalData.renderer.restore(true);\r\n        }\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.canvasContext = null;\r\n        this.data = null;\r\n        this.globalData = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\nfunction CVImageElement(data, globalData, comp){\r\n    this.failed = false;\r\n    this.img = new Image();\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.globalData.addPendingElement();\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.imageLoaded = function() {\r\n    this.globalData.elementLoaded();\r\n    if(this.assetData.w !== this.img.width || this.assetData.h !== this.img.height){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = this.assetData.w;\r\n        canvas.height = this.assetData.h;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imgW = this.img.width;\r\n        var imgH = this.img.height;\r\n        var imgRel = imgW / imgH;\r\n        var canvasRel = this.assetData.w/this.assetData.h;\r\n        var widthCrop, heightCrop;\r\n        if(imgRel>canvasRel){\r\n            heightCrop = imgH;\r\n            widthCrop = heightCrop*canvasRel;\r\n        } else {\r\n            widthCrop = imgW;\r\n            heightCrop = widthCrop/canvasRel;\r\n        }\r\n        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n        this.img = canvas;\r\n    }\r\n};\r\n\r\nCVImageElement.prototype.imageFailed = function() {\r\n    this.failed = true;\r\n    this.globalData.elementLoaded();\r\n};\r\n\r\nCVImageElement.prototype.createContent = function(){\r\n    var img = this.img;\r\n    img.addEventListener('load', this.imageLoaded.bind(this), false);\r\n    img.addEventListener('error', this.imageFailed.bind(this), false);\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    img.src = assetPath;\r\n\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n    if (this.failed) {\r\n        return;\r\n    }\r\n    this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function(){\r\n    this.img = null;\r\n};\nfunction CVCompElement(data, globalData, comp) {\r\n    this.completeLayers = false;\r\n    this.layers = data.layers;\r\n    this.pendingElements = [];\r\n    this.elements = createSizedArray(this.layers.length);\r\n    this.initElement(data, globalData, comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.layers = null;\r\n    this.elements = null;\r\n};\n\r\nfunction CVMaskElement(data,element){\r\n    this.data = data;\r\n    this.element = element;\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.viewData = createSizedArray(this.masksProperties.length);\r\n    var i, len = this.masksProperties.length, hasMasks = false;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            hasMasks = true;\r\n        }\r\n        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n    }\r\n    this.hasMasks = hasMasks;\r\n    if(hasMasks) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function () {\r\n    if(!this.hasMasks){\r\n        return;\r\n    }\r\n    var transform = this.element.finalTransform.mat;\r\n    var ctx = this.element.canvasContext;\r\n    var i, len = this.masksProperties.length;\r\n    var pt,pts,data;\r\n    ctx.beginPath();\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if (this.masksProperties[i].inv) {\r\n                ctx.moveTo(0, 0);\r\n                ctx.lineTo(this.element.globalData.compWidth, 0);\r\n                ctx.lineTo(this.element.globalData.compWidth, this.element.globalData.compHeight);\r\n                ctx.lineTo(0, this.element.globalData.compHeight);\r\n                ctx.lineTo(0, 0);\r\n            }\r\n            data = this.viewData[i].v;\r\n            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n            ctx.moveTo(pt[0], pt[1]);\r\n            var j, jLen = data._length;\r\n            for (j = 1; j < jLen; j++) {\r\n                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n            }\r\n            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n        }\r\n    }\r\n    this.element.globalData.renderer.save(true);\r\n    ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n};\nfunction CVShapeElement(data, globalData, comp) {\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = {opacity:1,mat:new Matrix(),_matMdf:false,_opMdf:false};\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function(data){\r\n    var styleElem = {\r\n        data: data,\r\n        type: data.ty,\r\n        elements: []\r\n    };\r\n    var elementData = {};\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n        if(!elementData.c.k){\r\n            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n        }\r\n    }\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n    if(data.ty == 'st') {\r\n        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n        if(data.lj == 1) {\r\n            styleElem.ml = data.ml;\r\n        }\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n        if(!elementData.w.k){\r\n            styleElem.wi = elementData.w.v;\r\n        }\r\n        if(data.d){\r\n            var d = new DashProperty(this,data.d,'canvas');\r\n            elementData.d = d;\r\n            if(!elementData.d.k){\r\n                styleElem.da = elementData.d.dashArray;\r\n                styleElem.do = elementData.d.dashoffset[0];\r\n            }\r\n        }\r\n\r\n    } else {\r\n\r\n        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n    }\r\n    this.stylesList.push(styleElem);\r\n    elementData.style = styleElem;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function(data) {\r\n    var elementData = {\r\n        transform : {\r\n            mat: new Matrix(),\r\n            opacity: 1,\r\n            _matMdf:false,\r\n            _opMdf:false,\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n        },\r\n        elements: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function(data) {\r\n    var elementData = new CVShapeData(this, data);\r\n    \r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    var j, jLen = this.stylesList.length;\r\n    var hasStrokes = false, hasFills = false;\r\n    for(j=0;j<jLen;j+=1){\r\n        if(!this.stylesList[j].closed){\r\n            this.stylesList[j].elements.push(elementData);\r\n            if(this.stylesList[j].type === 'st'){\r\n                hasStrokes = true;\r\n            }else{\r\n                hasFills = true;\r\n            }\r\n        }\r\n    }\r\n    elementData.st = hasStrokes;\r\n    elementData.fl = hasFills;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true);\r\n    len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, render){\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownArrays = [], ownModifiers = [], processedPos, modifier;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i]);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            \r\n            ownArrays.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, render);\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i]);\r\n            }\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i]);\r\n            }\r\n            \r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        } else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownArrays.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownArrays[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function() {\r\n\r\n    this.transformHelper.mat.reset();\r\n    this.transformHelper.opacity = 1;\r\n    this.transformHelper._matMdf = false;\r\n    this.transformHelper._opMdf = false;\r\n    this.renderModifiers();\r\n    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n    var props, groupMatrix;\r\n    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n        groupTransform.opacity = parentTransform.opacity;\r\n        groupTransform.opacity *= groupTransform.op.v;\r\n        groupTransform._opMdf = true;\r\n    }\r\n    if(parentTransform._matMdf || groupTransform.mProps._mdf || this._isFirstFrame) {\r\n        groupMatrix = groupTransform.mat;\r\n        groupMatrix.cloneFromProps(groupTransform.mProps.v.props);\r\n        groupTransform._matMdf = true;\r\n        props = parentTransform.mat.props;\r\n        groupMatrix.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function() {\r\n    var i, len = this.stylesList.length;\r\n    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n    for(i=0;i<len;i+=1){\r\n        currentStyle = this.stylesList[i];\r\n        type = currentStyle.type;\r\n        if((type === 'st' && currentStyle.wi === 0) || !currentStyle.data._render || currentStyle.coOp === 0){\r\n            continue;\r\n        }\r\n        renderer.save();\r\n        elems = currentStyle.elements;\r\n        if(type === 'st'){\r\n            ctx.strokeStyle = currentStyle.co;\r\n            ctx.lineWidth = currentStyle.wi;\r\n            ctx.lineCap = currentStyle.lc;\r\n            ctx.lineJoin = currentStyle.lj;\r\n            ctx.miterLimit = currentStyle.ml || 0;\r\n        }else{\r\n            ctx.fillStyle = currentStyle.co;\r\n        }\r\n        renderer.ctxOpacity(currentStyle.coOp);\r\n        if(this.globalData.currentGlobalAlpha !== 0) {\r\n            if(type !== 'st'){\r\n                ctx.beginPath();\r\n            }\r\n            jLen = elems.length;\r\n            for(j=0;j<jLen;j+=1){\r\n                if(type === 'st'){\r\n                    ctx.beginPath();\r\n                    if(currentStyle.da){\r\n                        ctx.setLineDash(currentStyle.da);\r\n                        ctx.lineDashOffset = currentStyle.do;\r\n                        this.globalData.isDashed = true;\r\n                    }else if(this.globalData.isDashed){\r\n                        ctx.setLineDash(this.dashResetter);\r\n                        this.globalData.isDashed = false;\r\n                    }\r\n                }\r\n                nodes = elems[j].trNodes;\r\n                kLen = nodes.length;\r\n\r\n                for(k=0;k<kLen;k+=1){\r\n                    if(nodes[k].t == 'm'){\r\n                        ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n                    }else if(nodes[k].t == 'c'){\r\n                        ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n                    }else{\r\n                        ctx.closePath();\r\n                    }\r\n                }\r\n                if(type === 'st'){\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n            if(type !== 'st'){\r\n                ctx.fill(currentStyle.r);\r\n            }\r\n            \r\n        }\r\n        renderer.restore();\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n    var i, len = items.length - 1;\r\n    var groupTransform;\r\n    groupTransform = parentTransform;\r\n    for(i=len;i>=0;i-=1){\r\n        if(items[i].ty == 'tr'){\r\n            groupTransform = data[i].transform;\r\n            this.renderShapeTransform(parentTransform, groupTransform);\r\n        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n            this.renderPath(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'fl'){\r\n            this.renderFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'st'){\r\n            this.renderStroke(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gr'){\r\n            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n        }else if(items[i].ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n    if(isMain){\r\n        this.drawLayer();\r\n    }\r\n    \r\n};\r\nCVShapeElement.prototype.renderPath = function(pathData,itemData,groupTransform){\r\n    var len, i, j,jLen;\r\n    var redraw = groupTransform._matMdf || itemData.sh._mdf || this._isFirstFrame;\r\n    if(redraw) {\r\n        var paths = itemData.sh.paths, groupTransformMat = groupTransform.mat;\r\n        jLen = pathData._render === false ? 0 : paths._length;\r\n        var pathStringTransformed = itemData.trNodes;\r\n        pathStringTransformed.length = 0;\r\n        for(j=0;j<jLen;j+=1){\r\n            var pathNodes = paths.shapes[j];\r\n            if(pathNodes && pathNodes.v){\r\n                len = pathNodes._length;\r\n                for (i = 1; i < len; i += 1) {\r\n                    if (i == 1) {\r\n                        pathStringTransformed.push({\r\n                            t: 'm',\r\n                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                        });\r\n                    }\r\n                    pathStringTransformed.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n                    });\r\n                }\r\n                if (len == 1) {\r\n                    pathStringTransformed.push({\r\n                        t: 'm',\r\n                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                    });\r\n                }\r\n                if (pathNodes.c && len) {\r\n                    pathStringTransformed.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n                    });\r\n                    pathStringTransformed.push({\r\n                        t: 'z'\r\n                    });\r\n                }\r\n                itemData.lStr = pathStringTransformed;\r\n            }\r\n\r\n        }\r\n\r\n        if (itemData.st) {\r\n            for (i = 0; i < 16; i += 1) {\r\n                itemData.tr[i] = groupTransform.mat.props[i];\r\n            }\r\n        }\r\n        itemData.trNodes = pathStringTransformed;\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if(d && (d._mdf  || this._isFirstFrame)){\r\n        styleElem.da = d.dashArray;\r\n        styleElem.do = d.dashoffset[0];\r\n    }\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.wi = itemData.w.v;\r\n    }\r\n};\r\n\r\n\r\nCVShapeElement.prototype.destroy = function(){\r\n    this.shapesData = null;\r\n    this.globalData = null;\r\n    this.canvasContext = null;\r\n    this.stylesList.length = 0;\r\n    this.itemsData.length = 0;\r\n};\r\n\r\n\nfunction CVSolidElement(data, globalData, comp) {\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.fillStyle = this.data.sc;\r\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n    //\r\n};\nfunction CVTextElement(data, globalData, comp){\r\n    this.textSpans = [];\r\n    this.yOffset = 0;\r\n    this.fillColorAnim = false;\r\n    this.strokeColorAnim = false;\r\n    this.strokeWidthAnim = false;\r\n    this.stroke = false;\r\n    this.fill = false;\r\n    this.justifyOffset = 0;\r\n    this.currentRender = null;\r\n    this.renderType = 'canvas';\r\n    this.values = {\r\n        fill: 'rgba(0,0,0,0)',\r\n        stroke: 'rgba(0,0,0,0)',\r\n        sWidth: 0,\r\n        fValue: ''\r\n    };\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n    var hasFill = false;\r\n    if(documentData.fc) {\r\n        hasFill = true;\r\n        this.values.fill = this.buildColor(documentData.fc);\r\n    }else{\r\n        this.values.fill = 'rgba(0,0,0,0)';\r\n    }\r\n    this.fill = hasFill;\r\n    var hasStroke = false;\r\n    if(documentData.sc){\r\n        hasStroke = true;\r\n        this.values.stroke = this.buildColor(documentData.sc);\r\n        this.values.sWidth = documentData.sw;\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    var matrixHelper = this.mHelper;\r\n    this.stroke = hasStroke;\r\n    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n    len = documentData.finalText.length;\r\n    //this.tHelper.font = this.values.fValue;\r\n    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var cnt = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = charData && charData.data || {};\r\n        matrixHelper.reset();\r\n        if(singleShape && letters[i].n) {\r\n            xPos = -trackingOffset;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            firstLine = false;\r\n        }\r\n\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        jLen = shapes.length;\r\n        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n        if(singleShape){\r\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        }\r\n        commands = createSizedArray(jLen);\r\n        for(j=0;j<jLen;j+=1){\r\n            kLen = shapes[j].ks.k.i.length;\r\n            pathNodes = shapes[j].ks.k;\r\n            pathArr = [];\r\n            for(k=1;k<kLen;k+=1){\r\n                if(k==1){\r\n                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n                }\r\n                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n            }\r\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n            commands[j] = pathArr;\r\n        }\r\n        if(singleShape){\r\n            xPos += letters[i].l;\r\n            xPos += trackingOffset;\r\n        }\r\n        if(this.textSpans[cnt]){\r\n            this.textSpans[cnt].elem = commands;\r\n        } else {\r\n            this.textSpans[cnt] = {elem: commands};\r\n        }\r\n        cnt +=1;\r\n    }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function(){\r\n    var ctx = this.canvasContext;\r\n    var finalMat = this.finalTransform.mat.props;\r\n    ctx.font = this.values.fValue;\r\n    ctx.lineCap = 'butt';\r\n    ctx.lineJoin = 'miter';\r\n    ctx.miterLimit = 4;\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    }\r\n\r\n    var  i,len, j, jLen, k, kLen;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter;\r\n    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            continue;\r\n        }\r\n        renderedLetter = renderedLetters[i];\r\n        if(renderedLetter){\r\n            this.globalData.renderer.save();\r\n            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n        }\r\n        if(this.fill){\r\n            if(renderedLetter && renderedLetter.fc){\r\n                if(lastFill !== renderedLetter.fc){\r\n                    lastFill = renderedLetter.fc;\r\n                    ctx.fillStyle = renderedLetter.fc;\r\n                }\r\n            }else if(lastFill !== this.values.fill){\r\n                lastFill = this.values.fill;\r\n                ctx.fillStyle = this.values.fill;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.fill();\r\n            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n        }\r\n        if(this.stroke){\r\n            if(renderedLetter && renderedLetter.sw){\r\n                if(lastStrokeW !== renderedLetter.sw){\r\n                    lastStrokeW = renderedLetter.sw;\r\n                    ctx.lineWidth = renderedLetter.sw;\r\n                }\r\n            }else if(lastStrokeW !== this.values.sWidth){\r\n                lastStrokeW = this.values.sWidth;\r\n                ctx.lineWidth = this.values.sWidth;\r\n            }\r\n            if(renderedLetter && renderedLetter.sc){\r\n                if(lastStroke !== renderedLetter.sc){\r\n                    lastStroke = renderedLetter.sc;\r\n                    ctx.strokeStyle = renderedLetter.sc;\r\n                }\r\n            }else if(lastStroke !== this.values.stroke){\r\n                lastStroke = this.values.stroke;\r\n                ctx.strokeStyle = this.values.stroke;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.stroke();\r\n            ///ctx.strokeText(letters[i].val,0,0);\r\n        }\r\n        if(renderedLetter) {\r\n            this.globalData.renderer.restore();\r\n        }\r\n    }\r\n    /*if(this.data.hasMask){\r\n     this.globalData.renderer.restore(true);\r\n     }*/\r\n};\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function(){};\nfunction HBaseElement(data,globalData,comp){}\r\nHBaseElement.prototype = {\r\n    checkBlendMode: function(){},\r\n    initRendererElement: function(){\r\n        this.baseElement = createTag(this.data.tg || 'div');\r\n        if(this.data.hasMask) {\r\n            this.svgElement = createNS('svg');\r\n            this.layerElement = createNS('g');\r\n            this.maskedElement = this.layerElement;\r\n            this.svgElement.appendChild(this.layerElement);\r\n            this.baseElement.appendChild(this.svgElement);\r\n        } else {\r\n            this.layerElement = this.baseElement;\r\n        }\r\n        styleDiv(this.baseElement);\r\n    },\r\n    createContainerElements: function(){\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n        this.transformedElement = this.baseElement;\r\n        this.maskedElement = this.layerElement;\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n    },\r\n    renderElement: function() {\r\n        if(this.finalTransform._matMdf){\r\n            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n        }\r\n        if(this.finalTransform._opMdf){\r\n            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        //If it is exported as hidden (data.hd === true) no need to render\r\n        //If it is not visible no need to render\r\n        if (this.data.hd || this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.renderElement();\r\n        this.renderInnerContent();\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.layerElement = null;\r\n        this.transformedElement = null;\r\n        if(this.matteElement) {\r\n            this.matteElement = null;\r\n        }\r\n        if(this.maskManager) {\r\n            this.maskManager.destroy();\r\n            this.maskManager = null;\r\n        }\r\n    },\r\n    addMasks: function(){\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    setMatte: function(){}\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\nfunction HSolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function(){\r\n    var rect;\r\n    if(this.data.hasMask){\r\n        rect = createNS('rect');\r\n        rect.setAttribute('width',this.data.sw);\r\n        rect.setAttribute('height',this.data.sh);\r\n        rect.setAttribute('fill',this.data.sc);\r\n        this.svgElement.setAttribute('width',this.data.sw);\r\n        this.svgElement.setAttribute('height',this.data.sh);\r\n    } else {\r\n        rect = createTag('div');\r\n        rect.style.width = this.data.sw + 'px';\r\n        rect.style.height = this.data.sh + 'px';\r\n        rect.style.backgroundColor = this.data.sc;\r\n    }\r\n    this.layerElement.appendChild(rect);\r\n};\r\n\nfunction HCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = !data.hasMask;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function(){\r\n    this._createBaseContainerElements();\r\n    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n    if(this.data.hasMask){\r\n        this.svgElement.setAttribute('width',this.data.w);\r\n        this.svgElement.setAttribute('height',this.data.h);\r\n        this.transformedElement = this.baseElement;\r\n    } else {\r\n        this.transformedElement = this.layerElement;\r\n    }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n    var j = 0;\r\n    var nextElement;\r\n    while(j<pos){\r\n        if(this.elements[j] && this.elements[j].getBaseElement){\r\n            nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(elem, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(elem);\r\n    }\r\n}\r\n\nfunction HShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.shapesContainer = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n}\r\nextendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function(){\r\n    var cont;\r\n    this.baseElement.style.fontSize = 0;\r\n    if (this.data.hasMask) {\r\n        this.layerElement.appendChild(this.shapesContainer);\r\n        cont = this.svgElement;\r\n    } else {\r\n        cont = createNS('svg');\r\n        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n        cont.setAttribute('width',size.w);\r\n        cont.setAttribute('height',size.h);\r\n        cont.appendChild(this.shapesContainer);\r\n        this.layerElement.appendChild(cont);\r\n    }\r\n\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n    this.filterUniqueShapes();\r\n    this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n    var i, len = transformers.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n    }\r\n    return point;\r\n}\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n    var shape = item.sh.v;\r\n    var transformers = item.transformers;\r\n    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n    if (len <= 1) {\r\n        return;\r\n    }\r\n    for (i = 0; i < len - 1; i += 1) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n    if(shape.c) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n    var bounds = this.shapeBoundingBox;\r\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n}\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n    left:0,\r\n    right:0,\r\n    top:0,\r\n    bottom:0,\r\n}\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n    x:0,\r\n    xMax:0,\r\n    y:0,\r\n    yMax:0,\r\n    width:0,\r\n    height:0\r\n}\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\r\n    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\r\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\r\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n      c = 3 * p1[i] - 3 * p0[i];\r\n\r\n      b = b | 0;\r\n      a = a | 0;\r\n      c = c | 0;\r\n\r\n      if (a === 0) {\r\n\r\n        if (b === 0) {\r\n          continue;\r\n        }\r\n\r\n        t = -c / b;\r\n\r\n        if (0 < t && t < 1) {\r\n          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n        }\r\n        continue;\r\n      }\r\n\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n\r\n      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\r\n      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\r\n    }\r\n\r\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n  };\r\n\r\n  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n    return bm_pow(1-t, 3) * p0[i]\r\n        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n        + bm_pow(t, 3) * p3[i];\r\n  }\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n    var i, len = itemsData.length, path;\r\n    for(i = 0; i < len; i += 1) {\r\n        if(itemsData[i] && itemsData[i].sh) {\r\n            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n        } else if(itemsData[i] && itemsData[i].it) {\r\n            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n        }\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.currentBoxContains = function(box) {\r\n    return this.currentBBox.x <= box.x \r\n    && this.currentBBox.y <= box.y \r\n    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height\r\n}\r\n\r\nHShapeElement.prototype.renderInnerContent = function() {\r\n    this._renderShapeFrame();\r\n\r\n    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n        var tempBoundingBox = this.tempBoundingBox;\r\n        var max = 999999;\r\n        tempBoundingBox.x = max;\r\n        tempBoundingBox.xMax = -max;\r\n        tempBoundingBox.y = max;\r\n        tempBoundingBox.yMax = -max;\r\n        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n        //var tempBoundingBox = this.shapeCont.getBBox();\r\n        if(this.currentBoxContains(tempBoundingBox)) {\r\n            return;\r\n        }\r\n        var changed = false;\r\n        if(this.currentBBox.w !== tempBoundingBox.width){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n            changed = true;\r\n        }\r\n        if(this.currentBBox.h !== tempBoundingBox.height){\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n            changed = true;\r\n        }\r\n        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.currentBBox.x = tempBoundingBox.x;\r\n            this.currentBBox.y = tempBoundingBox.y;\r\n\r\n            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n\r\n};\nfunction HTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.textPaths = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n    this.renderType = 'svg';\r\n    this.isMasked = false;\r\n    this.initElement(data,globalData,comp);\r\n\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function(){\r\n    this.isMasked = this.checkMasks();\r\n    if(this.isMasked){\r\n        this.renderType = 'svg';\r\n        this.compW = this.comp.data.w;\r\n        this.compH = this.comp.data.h;\r\n        this.svgElement.setAttribute('width',this.compW);\r\n        this.svgElement.setAttribute('height',this.compH);\r\n        var g = createNS('g');\r\n        this.maskedElement.appendChild(g);\r\n        this.innerElem = g;\r\n    } else {\r\n        this.renderType = 'html';\r\n        this.innerElem = this.layerElement;\r\n    }\r\n\r\n    this.checkParenting();\r\n\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n    var innerElemStyle = this.innerElem.style;\r\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n    if(documentData.sc){\r\n        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(!this.globalData.fontManager.chars){\r\n        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n        if(fontData.fClass){\r\n            this.innerElem.className = fontData.fClass;\r\n        } else {\r\n            innerElemStyle.fontFamily = fontData.fFamily;\r\n            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n            innerElemStyle.fontStyle = fStyle;\r\n            innerElemStyle.fontWeight = fWeight;\r\n        }\r\n    }\r\n    var i, len;\r\n\r\n    var letters = documentData.l;\r\n    len = letters.length;\r\n    var tSpan,tParent,tCont;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '';\r\n    var cnt = 0;\r\n    for (i = 0;i < len ;i += 1) {\r\n        if(this.globalData.fontManager.chars){\r\n            if(!this.textPaths[cnt]){\r\n                tSpan = createNS('path');\r\n                tSpan.setAttribute('stroke-linecap', 'butt');\r\n                tSpan.setAttribute('stroke-linejoin','round');\r\n                tSpan.setAttribute('stroke-miterlimit','4');\r\n            } else {\r\n                tSpan = this.textPaths[cnt];\r\n            }\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tCont = tParent.children[0];\r\n                } else {\r\n\r\n                    tParent = createTag('div');\r\n                    tCont = createNS('svg');\r\n                    tCont.appendChild(tSpan);\r\n                    styleDiv(tParent);\r\n                }\r\n            }\r\n        }else{\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tSpan = this.textPaths[cnt];\r\n                } else {\r\n                    tParent = createTag('span');\r\n                    styleDiv(tParent);\r\n                    tSpan = createTag('span');\r\n                    styleDiv(tSpan);\r\n                    tParent.appendChild(tSpan);\r\n                }\r\n            } else {\r\n                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n            }\r\n        }\r\n        //tSpan.setAttribute('visibility', 'hidden');\r\n        if(this.globalData.fontManager.chars){\r\n            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n            var shapeData;\r\n            if(charData){\r\n                shapeData = charData.data;\r\n            } else {\r\n                shapeData = null;\r\n            }\r\n            matrixHelper.reset();\r\n            if(shapeData && shapeData.shapes){\r\n                shapes = shapeData.shapes[0].it;\r\n                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n                tSpan.setAttribute('d',shapeStr);\r\n            }\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                if(shapeData && shapeData.shapes){\r\n\r\n                    //document.body.appendChild is needed to get exact measure of shape\r\n                    document.body.appendChild(tCont);\r\n                    var boundingBox = tCont.getBBox();\r\n                    tCont.setAttribute('width',boundingBox.width + 2);\r\n                    tCont.setAttribute('height',boundingBox.height + 2);\r\n                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\r\n                    letters[i].yOffset = boundingBox.y-1;\r\n\r\n                } else{\r\n                    tCont.setAttribute('width',1);\r\n                    tCont.setAttribute('height',1);\r\n                }\r\n                    tParent.appendChild(tCont);\r\n            }else{\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }else{\r\n            tSpan.textContent = letters[i].val;\r\n            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                //\r\n                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n            } else {\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }\r\n        //\r\n        if(!this.isMasked){\r\n            this.textSpans[cnt] = tParent;\r\n        }else{\r\n            this.textSpans[cnt] = tSpan;\r\n        }\r\n        this.textSpans[cnt].style.display = 'block';\r\n        this.textPaths[cnt] = tSpan;\r\n        cnt += 1;\r\n    }\r\n    while(cnt < this.textSpans.length){\r\n        this.textSpans[cnt].style.display = 'none';\r\n        cnt += 1;\r\n    }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function() {\r\n\r\n    if(this.data.singleShape){\r\n        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n            return;\r\n        } else {\r\n            // Todo Benchmark if using this is better than getBBox\r\n             if(this.isMasked && this.finalTransform._matMdf){\r\n                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n             }\r\n        }\r\n    }\r\n\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n        return;\r\n    }\r\n    var  i,len, count = 0;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter, textSpan, textPath;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            count += 1;\r\n            continue;\r\n        }\r\n        textSpan = this.textSpans[i];\r\n        textPath = this.textPaths[i];\r\n        renderedLetter = renderedLetters[count];\r\n        count += 1;\r\n        if(renderedLetter._mdf.m) {\r\n            if(!this.isMasked){\r\n                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n            }else{\r\n                textSpan.setAttribute('transform',renderedLetter.m);\r\n            }\r\n        }\r\n        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n        textSpan.style.opacity = renderedLetter.o;\r\n        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n        }\r\n        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n            textPath.setAttribute('stroke',renderedLetter.sc);\r\n        }\r\n        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n            textPath.setAttribute('fill',renderedLetter.fc);\r\n            textPath.style.color = renderedLetter.fc;\r\n        }\r\n    }\r\n\r\n    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n        var boundingBox = this.innerElem.getBBox();\r\n\r\n        if(this.currentBBox.w !== boundingBox.width){\r\n            this.currentBBox.w = boundingBox.width;\r\n            this.svgElement.setAttribute('width',boundingBox.width);\r\n        }\r\n        if(this.currentBBox.h !== boundingBox.height){\r\n            this.currentBBox.h = boundingBox.height;\r\n            this.svgElement.setAttribute('height',boundingBox.height);\r\n        }\r\n\r\n        var margin = 1;\r\n        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n            this.currentBBox.w = boundingBox.width + margin*2;\r\n            this.currentBBox.h = boundingBox.height + margin*2;\r\n            this.currentBBox.x = boundingBox.x - margin;\r\n            this.currentBBox.y = boundingBox.y - margin;\r\n\r\n            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n};\nfunction HImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\r\n\r\nHImageElement.prototype.createContent = function(){\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    var img = new Image();\r\n\r\n    if(this.data.hasMask){\r\n        this.imageElem = createNS('image');\r\n        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n        this.layerElement.appendChild(this.imageElem);\r\n        this.baseElement.setAttribute('width',this.assetData.w);\r\n        this.baseElement.setAttribute('height',this.assetData.h);\r\n    } else {\r\n        this.layerElement.appendChild(img);\r\n    }\r\n    img.src = assetPath;\r\n    if(this.data.ln){\r\n        this.baseElement.setAttribute('id',this.data.ln);\r\n    }\r\n};\nfunction HCameraElement(data,globalData,comp){\r\n    this.initFrame();\r\n    this.initBaseData(data,globalData,comp);\r\n    this.initHierarchy();\r\n    var getProp = PropertyFactory.getProp;\r\n    this.pe = getProp(this,data.pe,0,0,this);\r\n    if(data.ks.p.s){\r\n        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n    }else{\r\n        this.p = getProp(this,data.ks.p,1,0,this);\r\n    }\r\n    if(data.ks.a){\r\n        this.a = getProp(this,data.ks.a,1,0,this);\r\n    }\r\n    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n        var i,len = data.ks.or.k.length;\r\n        for(i=0;i<len;i+=1){\r\n            data.ks.or.k[i].to = null;\r\n            data.ks.or.k[i].ti = null;\r\n        }\r\n    }\r\n    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n    this.or.sh = true;\r\n    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n    this.mat = new Matrix();\r\n    this._prevMat = new Matrix();\r\n    this._isFirstFrame = true;\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function() {\r\n    var i, len = this.comp.threeDElements.length, comp;\r\n    for(i=0;i<len;i+=1){\r\n        //[perspectiveElem,container]\r\n        comp = this.comp.threeDElements[i];\r\n        if(comp.type === '3d') {\r\n            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n        }\r\n    }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function(){\r\n};\r\n\r\nHCameraElement.prototype.hide = function(){\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function(){\r\n    var _mdf = this._isFirstFrame;\r\n    var i, len;\r\n    if(this.hierarchy){\r\n        len = this.hierarchy.length;\r\n        for(i=0;i<len;i+=1){\r\n            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n        }\r\n    }\r\n    if(_mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n        this.mat.reset();\r\n\r\n        if(this.hierarchy){\r\n            var mat;\r\n            len = this.hierarchy.length - 1;\r\n            for (i = len; i >= 0; i -= 1) {\r\n                /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                console.log(mat)\r\n                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n                console.log(this.mat.props)*/\r\n                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n            }\r\n        }\r\n\r\n        if(this.p){\r\n            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n        }else{\r\n            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n        }\r\n        if(this.a){\r\n            var diffVector = [this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];\r\n            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\r\n        }\r\n        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n        this.mat.translate(0,0,this.pe.v);\r\n\r\n\r\n        \r\n\r\n\r\n        if(!this._prevMat.equals(this.mat) && this.comp.threeDElements) {\r\n            len = this.comp.threeDElements.length;\r\n            var comp;\r\n            for(i=0;i<len;i+=1){\r\n                comp = this.comp.threeDElements[i];\r\n                if(comp.type === '3d') {\r\n                    comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n                }\r\n            }\r\n            this.mat.clone(this._prevMat);\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function(){\r\n};\r\nHCameraElement.prototype.initExpressions = function(){};\r\nHCameraElement.prototype.getBaseElement = function(){return null;};\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function(){};\nvar Expressions = (function(){\r\n    var ob = {};\r\n    ob.initExpressions = initExpressions;\r\n\r\n\r\n    function initExpressions(animation){\r\n        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n    }\r\n   return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\nvar ExpressionManager = (function(){\r\n    'use strict';\r\n    var ob = {};\r\n    var Math = BMMath;\r\n    var window = null;\r\n    var document = null;\r\n\r\n    function duplicatePropertyValue(value, mult) {\r\n        mult = mult || 1;\r\n\r\n        if (typeof value === 'number'  || value instanceof Number) {\r\n            return value * mult;\r\n        } else if(value.i) {\r\n            return shape_pool.clone(value);\r\n        } else {\r\n            var arr = createTypedArray('float32', value.length);\r\n            var i, len = value.length;\r\n            for (i = 0; i < len; i += 1) {\r\n                arr[i] = value[i] * mult;\r\n            }\r\n            return arr;\r\n        }\r\n    }\r\n\r\n    function isTypeOfArray(arr) {\r\n        return arr.constructor === Array || arr.constructor === Float32Array;\r\n    }\r\n\r\n    function isNumerable(tOfV, v) {\r\n        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n    }\r\n\r\n    function $bm_neg(a){\r\n        var tOfA = typeof a;\r\n        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n            return -a;\r\n        }\r\n        if(isTypeOfArray(a)){\r\n            var i, lenA = a.length;\r\n            var retArr = [];\r\n            for(i=0;i<lenA;i+=1){\r\n                retArr[i] = -a[i];\r\n            }\r\n            return retArr;\r\n        }\r\n    }\r\n\r\n    function sum(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(tOfA === 'string' || tOfB === 'string'){\r\n            return a + b;\r\n        }\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a + b;\r\n        }\r\n        if(isTypeOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] + b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) && isTypeOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a + b[0];\r\n            return b;\r\n        }\r\n        if(isTypeOfArray(a) && isTypeOfArray(b)){\r\n            \r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] + b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n    var add = sum;\r\n\r\n    function sub(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            if(tOfA === 'string') {\r\n                a = parseInt(a);\r\n            }\r\n            if(tOfB === 'string') {\r\n                b = parseInt(b);\r\n            }\r\n            return a - b;\r\n        }\r\n        if( isTypeOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] - b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) &&  isTypeOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a - b[0];\r\n            return b;\r\n        }\r\n        if(isTypeOfArray(a) && isTypeOfArray(b)){\r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] - b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function mul(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a * b;\r\n        }\r\n\r\n        var i, len;\r\n        if(isTypeOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] * b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && isTypeOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a * b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function div(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a / b;\r\n        }\r\n        var i, len;\r\n        if(isTypeOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] / b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && isTypeOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a / b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n    function mod(a,b) {\r\n        if(typeof a === 'string') {\r\n            a = parseInt(a);\r\n        }\r\n        if(typeof b === 'string') {\r\n            b = parseInt(b);\r\n        }\r\n        return a % b;\r\n    }\r\n\r\n    function clamp(num, min, max) {\r\n        if(min > max){\r\n            var mm = max;\r\n            max = min;\r\n            min = mm;\r\n        }\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n\r\n    function radiansToDegrees(val) {\r\n        return val/degToRads;\r\n    }\r\n    var radians_to_degrees = radiansToDegrees;\r\n\r\n    function degreesToRadians(val) {\r\n        return val*degToRads;\r\n    }\r\n    var degrees_to_radians = radiansToDegrees;\r\n\r\n    var helperLengthArray = [0,0,0,0,0,0];\r\n\r\n    function length(arr1, arr2) {\r\n        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n            arr2 = arr2 || 0;\r\n            return Math.abs(arr1 - arr2);\r\n        }\r\n        if(!arr2) {\r\n            arr2 = helperLengthArray;\r\n        }\r\n        var i, len = Math.min(arr1.length, arr2.length);\r\n        var addedLength = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n        }\r\n        return Math.sqrt(addedLength);\r\n    }\r\n\r\n    function normalize(vec) {\r\n        return div(vec, length(vec));\r\n    }\r\n\r\n    function rgbToHsl(val) {\r\n        var r = val[0]; var g = val[1]; var b = val[2];\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min){\r\n            h = s = 0; // achromatic\r\n        }else{\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max){\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l,val[3]];\r\n    }\r\n\r\n    function hue2rgb(p, q, t){\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    function hslToRgb(val){\r\n        var h = val[0];\r\n        var s = val[1];\r\n        var l = val[2];\r\n\r\n        var r, g, b;\r\n\r\n        if(s === 0){\r\n            r = g = b = l; // achromatic\r\n        }else{\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return [r, g , b, val[3]];\r\n    }\r\n\r\n    function linear(t, tMin, tMax, value1, value2){\r\n        if(value1 === undefined || value2 === undefined){\r\n            return linear(t,0,1,tMin,tMax);\r\n        }\r\n        if(t <= tMin) {\r\n            return value1;\r\n        }else if(t >= tMax){\r\n            return value2;\r\n        }\r\n        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n        if(!value1.length){\r\n            return value1 + (value2-value1)*perc;\r\n        }\r\n        var i, len = value1.length;\r\n        var arr = createTypedArray('float32', len);\r\n        for(i=0;i<len;i+=1){\r\n            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n        }\r\n        return arr;\r\n    }\r\n    function random(min,max){\r\n        if(max === undefined){\r\n            if(min === undefined){\r\n                min = 0;\r\n                max = 1;\r\n            } else {\r\n                max = min;\r\n                min = undefined;\r\n            }\r\n        }\r\n        if(max.length){\r\n            var i, len = max.length;\r\n            if(!min){\r\n                min = createTypedArray('float32', len);\r\n            }\r\n            var arr = createTypedArray('float32', len);\r\n            var rnd = BMMath.random();\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        if(min === undefined){\r\n            min = 0;\r\n        }\r\n        var rndm = BMMath.random();\r\n        return min + rndm*(max-min);\r\n    }\r\n\r\n    function createPath(points, inTangents, outTangents, closed) {\r\n        var i, len = points.length;\r\n        var path = shape_pool.newElement();\r\n        path.setPathData(!!closed, len);\r\n        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n        for(i = 0; i < len; i += 1) {\r\n            inVertexPoint = inTangents ? inTangents[i] : arrPlaceholder;\r\n            outVertexPoint = outTangents ? outTangents[i] : arrPlaceholder;\r\n            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function initiateExpression(elem,data,property){\r\n        var val = data.x;\r\n        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n        var _needsRandom = val.indexOf('random') !== -1;\r\n        var elemType = elem.data.ty;\r\n        var transform,content,effect;\r\n        var thisProperty = property;\r\n        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        var width = elem.data.sw ? elem.data.sw : 0;\r\n        var height = elem.data.sh ? elem.data.sh : 0;\r\n        var loopIn, loop_in, loopOut, loop_out;\r\n        var toWorld,fromWorld,fromComp,fromCompToSurface,anchorPoint,thisLayer,thisComp,mask,valueAtTime,velocityAtTime;\r\n        var __expression_functions = [];\r\n        if(data.xf) {\r\n            var i, len = data.xf.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\r\n            }\r\n        }\r\n\r\n        var scoped_bm_rt;\r\n        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n        var numKeys = property.kf ? data.k.length : 0;\r\n\r\n        var wiggle = function wiggle(freq,amp){\r\n            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n            var addedAmps = createTypedArray('float32', len);\r\n            freq = 5;\r\n            var iterations = Math.floor(time*freq);\r\n            i = 0;\r\n            j = 0;\r\n            while(i<iterations){\r\n                //var rnd = BMMath.random();\r\n                for(j=0;j<len;j+=1){\r\n                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n                    //addedAmps[j] += -amp + amp*2*rnd;\r\n                }\r\n                i += 1;\r\n            }\r\n            //var rnd2 = BMMath.random();\r\n            var periods = time*freq;\r\n            var perc = periods - Math.floor(periods);\r\n            var arr = createTypedArray('float32', len);\r\n            if(len>1){\r\n                for(j=0;j<len;j+=1){\r\n                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n                }\r\n                return arr;\r\n            } else {\r\n                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n            }\r\n        }.bind(this);\r\n\r\n        if(thisProperty.loopIn) {\r\n            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n            loop_in = loopIn;\r\n        }\r\n\r\n        if(thisProperty.loopOut) {\r\n            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n            loop_out = loopOut;\r\n        }\r\n\r\n        function loopInDuration(type,duration){\r\n            return loopIn(type,duration,true);\r\n        }\r\n\r\n        function loopOutDuration(type,duration){\r\n            return loopOut(type,duration,true);\r\n        }\r\n\r\n        if(this.getValueAtTime) {\r\n            valueAtTime = this.getValueAtTime.bind(this);\r\n        }\r\n\r\n        if(this.getVelocityAtTime) {\r\n            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n        }\r\n\r\n        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n        function lookAt(elem1,elem2){\r\n            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n            return [yaw,pitch,0];\r\n        }\r\n\r\n        function easeOut(t, tMin, tMax, val1, val2){\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            return -(val2-val1) * t*(t-2) + val1;\r\n        }\r\n\r\n        function easeIn(t, tMin, tMax, val1, val2){\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            return (val2-val1)*t*t + val1;\r\n        }\r\n\r\n        function nearestKey(time){\r\n            var i, len = data.k.length,index,keyTime;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                index = 0;\r\n                keyTime = 0;\r\n            } else {\r\n                index = -1;\r\n                time *= elem.comp.globalData.frameRate;\r\n                if (time < data.k[0].t) {\r\n                    index = 1;\r\n                    keyTime = data.k[0].t;\r\n                } else {\r\n                    for(i=0;i<len-1;i+=1){\r\n                        if(time === data.k[i].t){\r\n                            index = i + 1;\r\n                            keyTime = data.k[i].t;\r\n                            break;\r\n                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n                                index = i + 2;\r\n                                keyTime = data.k[i+1].t;\r\n                            } else {\r\n                                index = i + 1;\r\n                                keyTime = data.k[i].t;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(index === -1){\r\n                        index = i + 1;\r\n                        keyTime = data.k[i].t;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            var ob = {};\r\n            ob.index = index;\r\n            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n            return ob;\r\n        }\r\n\r\n        function key(ind){\r\n            var ob, i, len;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                throw new Error('The property has no keyframe at index ' + ind);\r\n            }\r\n            ind -= 1;\r\n            ob = {\r\n                time: data.k[ind].t/elem.comp.globalData.frameRate\r\n            };\r\n            var arr;\r\n            if(ind === data.k.length - 1 && !data.k[ind].h){\r\n                arr = data.k[ind-1].e;\r\n            }else{\r\n                arr = data.k[ind].s;\r\n            }\r\n            len = arr.length;\r\n            for(i=0;i<len;i+=1){\r\n                ob[i] = arr[i];\r\n            }\r\n            return ob;\r\n        }\r\n\r\n        function framesToTime(frames, fps) { \r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return frames / fps;\r\n        }\r\n\r\n        function timeToFrames(t, fps) {\r\n            if (!t && t !== 0) {\r\n                t = time;\r\n            }\r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return t * fps;\r\n        }\r\n\r\n        function seedRandom(seed){\r\n            BMMath.seedrandom(randSeed + seed);\r\n        }\r\n\r\n        function sourceRectAtTime() {\r\n            return elem.sourceRectAtTime();\r\n        }\r\n\r\n        var time, velocity, value, textIndex, textTotal, selectorValue;\r\n        var index = elem.data.ind;\r\n        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n        var parent;\r\n        var randSeed = Math.floor(Math.random()*1000000);\r\n        function executeExpression(_value) {\r\n            value = _value;\r\n            if (_needsRandom) {\r\n                seedRandom(randSeed);\r\n            }\r\n            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n                return value;\r\n            }\r\n            if(this.propType === 'textSelector'){\r\n                textIndex = this.textIndex;\r\n                textTotal = this.textTotal;\r\n                selectorValue = this.selectorValue;\r\n            }\r\n            if (!thisLayer) {\r\n                thisLayer = elem.layerInterface;\r\n                thisComp = elem.comp.compInterface;\r\n                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n                fromCompToSurface = fromComp;\r\n            }\r\n            if (!transform) {\r\n                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n                anchorPoint = transform.anchorPoint;\r\n            }\r\n            \r\n            if (elemType === 4 && !content) {\r\n                content = thisLayer(\"ADBE Root Vectors Group\");\r\n            }\r\n            if (!effect) {\r\n                effect = thisLayer(4);\r\n            }\r\n            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n            if (hasParent && !parent) {\r\n                parent = elem.hierarchy[0].layerInterface;\r\n            }\r\n            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n            if (needsVelocity) {\r\n                velocity = velocityAtTime(time);\r\n            }\r\n            expression_function();\r\n            this.frameExpressionId = elem.globalData.frameId;\r\n\r\n            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n            if (scoped_bm_rt.propType === \"shape\") {\r\n                scoped_bm_rt = shape_pool.clone(scoped_bm_rt.v);\r\n            }\r\n            return scoped_bm_rt;\r\n        }\r\n        return executeExpression;\r\n    }\r\n\r\n    ob.initiateExpression = initiateExpression;\r\n    return ob;\r\n}());\n(function addPropertyDecorator() {\r\n\r\n    function getStaticValueAtTime() {\r\n        return this.pv;\r\n    }\r\n\r\n    function loopOut(type,duration,durationFlag){\r\n        if(!this.k || !this.keyframes){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n        if(currentFrame<=lastKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, firstKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n                } else {\r\n                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n                }\r\n                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(iterations % 2 !== 0){\r\n                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n                    }\r\n                    return ret;\r\n                }\r\n                return (endV-initV)*repeats + current;\r\n            } else if(type === 'continue'){\r\n                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(lastValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n            }\r\n            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function loopIn(type,duration, durationFlag) {\r\n        if(!this.k){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var firstKeyFrame = keyframes[0].t;\r\n        if(currentFrame>=firstKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, lastKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                lastKeyFrame = keyframes[duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n                } else {\r\n                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n                }\r\n                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n                if(iterations % 2 === 0){\r\n                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return current-(endV-initV)*repeats;\r\n            } else if(type === 'continue'){\r\n                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(firstValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n            }\r\n            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            frameNum *= this.elem.globalData.frameRate;\r\n            frameNum -= this.offsetTime;\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getSpeedAtTime(frameNum) {\r\n        var delta = -0.01;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var speed = 0;\r\n        if(v1.length){\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                speed += Math.pow(v2[i] - v1[i], 2);\r\n            }\r\n            speed = Math.sqrt(speed) * 100;\r\n        } else {\r\n            speed = 0;\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    function getVelocityAtTime(frameNum) {\r\n        if(this.vel !== undefined){\r\n            return this.vel;\r\n        }\r\n        var delta = -0.001;\r\n        //frameNum += this.elem.data.st;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var velocity;\r\n        if(v1.length){\r\n            velocity = createTypedArray('float32', v1.length);\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                //removing frameRate\r\n                //if needed, don't add it here\r\n                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n                velocity[i] = (v2[i] - v1[i])/delta;\r\n            }\r\n        } else {\r\n            velocity = (v2 - v1)/delta;\r\n        }\r\n        return velocity;\r\n    }\r\n\r\n    function setGroupProperty(propertyGroup){\r\n        this.propertyGroup = propertyGroup;\r\n    }\r\n\r\n    function searchExpressions(elem,data,prop){\r\n        if(data.x){\r\n            prop.k = true;\r\n            prop.x = true;\r\n            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n        }\r\n    }\r\n\r\n    function getTransformValueAtTime(time) {\r\n        console.warn('Transform at time not supported');\r\n    }\r\n\r\n    function getTransformStaticValueAtTime(time) {\r\n\r\n    }\r\n\r\n    var TextExpressionSelectorProp = (function(){\r\n\r\n        function getValueProxy(index,total){\r\n            this.textIndex = index+1;\r\n            this.textTotal = total;\r\n            this.getValue();\r\n            return this.v;\r\n        }\r\n\r\n        return function TextExpressionSelectorProp(elem,data){\r\n            this.pv = 1;\r\n            this.comp = elem.comp;\r\n            this.elem = elem;\r\n            this.mult = 0.01;\r\n            this.propType = 'textSelector';\r\n            this.textTotal = data.totalChars;\r\n            this.selectorValue = 100;\r\n            this.lastValue = [1,1,1];\r\n            searchExpressions.bind(this)(elem,data,this);\r\n            this.getMult = getValueProxy;\r\n            this.getVelocityAtTime = getVelocityAtTime;\r\n            if(this.kf){\r\n                this.getValueAtTime = getValueAtTime.bind(this);\r\n            } else {\r\n                this.getValueAtTime = getStaticValueAtTime.bind(this);\r\n            }\r\n            this.setGroupProperty = setGroupProperty;\r\n        };\r\n    }());\r\n\r\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n        var prop = getTransformProperty(elem, data, container);\r\n        if(prop.dynamicProperties.length) {\r\n            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = setGroupProperty;\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetProp = PropertyFactory.getProp;\r\n    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n        var prop = propertyGetProp(elem,data,type, mult, container);\r\n        //prop.getVelocityAtTime = getVelocityAtTime;\r\n        //prop.loopOut = loopOut;\r\n        //prop.loopIn = loopIn;\r\n        if(prop.kf){\r\n            prop.getValueAtTime = getValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = setGroupProperty;\r\n        prop.loopOut = loopOut;\r\n        prop.loopIn = loopIn;\r\n        prop.getVelocityAtTime = getVelocityAtTime.bind(prop);\r\n        prop.getSpeedAtTime = getSpeedAtTime.bind(prop);\r\n        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n        prop.propertyIndex = data.ix;\r\n        var value = 0;\r\n        if(type !== 0) {\r\n            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n        }\r\n        prop._cachingAtTime = {\r\n            lastFrame: initialDefaultFrame,\r\n            lastIndex: 0,\r\n            value: value\r\n        };\r\n        searchExpressions(elem,data,prop);\r\n        if(prop.k){\r\n            container.addDynamicProperty(prop);\r\n        }\r\n\r\n        return prop;\r\n    };\r\n\r\n    function getShapeValueAtTime(frameNum) {\r\n        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n        if (!this._cachingAtTime) {\r\n            this._cachingAtTime = {\r\n                shapeValue: shape_pool.clone(this.pv),\r\n                lastIndex: 0,\r\n                lastTime: initialDefaultFrame\r\n            };\r\n        }\r\n        if(frameNum !== this._cachingAtTime.lastTime) {\r\n            this._cachingAtTime.lastTime = frameNum;\r\n            frameNum *= this.elem.globalData.frameRate;\r\n            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n        }\r\n        return this._cachingAtTime.shapeValue;\r\n    }\r\n\r\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n    function ShapeExpressions(){}\r\n    ShapeExpressions.prototype = {\r\n        vertices: function(prop, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            var i, len = shapePath._length;\r\n            var vertices = shapePath[prop];\r\n            var points = shapePath.v;\r\n            var arr = createSizedArray(len);\r\n            for(i = 0; i < len; i += 1) {\r\n                if(prop === 'i' || prop === 'o') {\r\n                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n                } else {\r\n                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n                }\r\n                \r\n            }\r\n            return arr;\r\n        },\r\n        points: function(time){\r\n            return this.vertices('v', time);\r\n        },\r\n        inTangents: function(time){\r\n            return this.vertices('i', time);\r\n        },\r\n        outTangents: function(time){\r\n            return this.vertices('o', time);\r\n        },\r\n        isClosed: function(){\r\n            return this.v.c;\r\n        },\r\n        pointOnPath: function(perc, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            if(!this._segmentsLength) {\r\n                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n            }\r\n\r\n            var segmentsLength = this._segmentsLength;\r\n            var lengths = segmentsLength.lengths;\r\n            var lengthPos = segmentsLength.totalLength * perc;\r\n            var i = 0, len = lengths.length;\r\n            var j = 0, jLen;\r\n            var accumulatedLength = 0, pt;\r\n            while(i < len) {\r\n                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n                    var initIndex = i;\r\n                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n                    break;\r\n                } else {\r\n                    accumulatedLength += lengths[i].addedLength;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(!pt){\r\n                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n            }\r\n            return pt;\r\n        },\r\n        vectorOnPath: function(perc, time, vectorType){\r\n            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n            var pt1 = this.pointOnPath(perc, time);\r\n            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n            var xLength = pt2[0] - pt1[0];\r\n            var yLength = pt2[1] - pt1[1];\r\n            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n            return unitVector;\r\n        },\r\n        tangentOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'tangent');\r\n        },\r\n        normalOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'normal');\r\n        },\r\n        setGroupProperty: setGroupProperty,\r\n        getValueAtTime: getStaticValueAtTime\r\n    };\r\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n        prop.propertyIndex = data.ix;\r\n        prop.lock = false;\r\n        if(type === 3){\r\n            searchExpressions(elem,data.pt,prop);\r\n        } else if(type === 4){\r\n            searchExpressions(elem,data.ks,prop);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n    TextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n        if(data.t === 1){\r\n            return new TextExpressionSelectorProp(elem, data,arr);\r\n        } else {\r\n            return propertyGetTextProp(elem,data,arr);\r\n        }\r\n    };\r\n}());\n(function addDecorator() {\r\n\r\n    function searchExpressions(){\r\n        if(this.data.d.x){\r\n            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n            this.addEffect(this.getExpressionValue.bind(this));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    TextProperty.prototype.getExpressionValue = function(currentValue) {\r\n        var newValue = this.calculateExpression(currentValue.t);\r\n        currentValue.t = newValue;\r\n        return currentValue;\r\n    }\r\n\r\n    TextProperty.prototype.searchProperty = function(){\r\n\r\n        var isKeyframed = this.searchKeyframes();\r\n        var hasExpressions = this.searchExpressions();\r\n        this.kf = isKeyframed || hasExpressions;\r\n        return this.kf;\r\n    };\r\n\r\n    TextProperty.prototype.searchExpressions = searchExpressions;\r\n    \r\n}());\nvar ShapeExpressionInterface = (function(){\r\n\r\n    function iterateElements(shapes,view, propertyGroup){\r\n        var arr = [];\r\n        var i, len = shapes ? shapes.length : 0;\r\n        for(i=0;i<len;i+=1){\r\n            if(shapes[i].ty == 'gr'){\r\n                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'fl'){\r\n                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'st'){\r\n                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tm'){\r\n                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tr'){\r\n                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'el'){\r\n                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'sr'){\r\n                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'sh'){\r\n                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rc'){\r\n                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rd'){\r\n                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rp'){\r\n                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n       var interfaces;\r\n       var interfaceFunction = function _interfaceFunction(value){\r\n           var i = 0, len = interfaces.length;\r\n            while(i<len){\r\n                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n                   return interfaces[i];\r\n                }\r\n                i+=1;\r\n            }\r\n            if(typeof value === 'number'){\r\n               return interfaces[value-1];\r\n            }\r\n       };\r\n       interfaceFunction.propertyGroup = function(val){\r\n           if(val === 1){\r\n               return interfaceFunction;\r\n           } else{\r\n               return propertyGroup(val-1);\r\n           }\r\n       };\r\n       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n       interfaceFunction.numProperties = interfaces.length;\r\n       interfaceFunction.propertyIndex = shape.cix;\r\n       interfaceFunction._name = shape.nm;\r\n\r\n       return interfaceFunction;\r\n   }\r\n\r\n    function groupInterfaceFactory(shape,view, propertyGroup){\r\n        var interfaceFunction = function _interfaceFunction(value){\r\n            switch(value){\r\n                case 'ADBE Vectors Group':\r\n                case 'Contents':\r\n                case 2:\r\n                    return interfaceFunction.content;\r\n                //Not necessary for now. Keeping them here in case a new case appears\r\n                //case 'ADBE Vector Transform Group':\r\n                //case 3:\r\n                default:\r\n                    return interfaceFunction.transform;\r\n            }\r\n        };\r\n        interfaceFunction.propertyGroup = function(val){\r\n            if(val === 1){\r\n                return interfaceFunction;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        };\r\n        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n        interfaceFunction.content = content;\r\n        interfaceFunction.transform = transformInterface;\r\n        Object.defineProperty(interfaceFunction, '_name', {\r\n            get: function(){\r\n                return shape.nm;\r\n            }\r\n        });\r\n        //interfaceFunction.content = interfaceFunction;\r\n        interfaceFunction.numProperties = shape.np;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.nm = shape.nm;\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function fillInterfaceFactory(shape,view,propertyGroup){\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: function() {\r\n                    return ExpressionValue(view.c, 1 / view.c.mult, 'color');\r\n                }\r\n            },\r\n            'opacity': {\r\n                get: function() {\r\n                    return ExpressionValue(view.o, 100);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(propertyGroup);\r\n        view.o.setGroupProperty(propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val === 1){\r\n                return ob;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        }\r\n        function _dashPropertyGroup(val){\r\n            if(val === 1){\r\n                return dashOb;\r\n            } else{\r\n                return _propertyGroup(val-1);\r\n            }\r\n        }\r\n        function addPropertyToDashOb(i) {\r\n            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n                get: function(){\r\n                    return ExpressionValue(view.d.dataProps[i].p);\r\n                }\r\n            });\r\n        }\r\n        var i, len = shape.d ? shape.d.length : 0;\r\n        var dashOb = {};\r\n        for (i = 0; i < len; i += 1) {\r\n            addPropertyToDashOb(i);\r\n            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n                return interfaceFunction.strokeWidth;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: function() {\r\n                    return ExpressionValue(view.c, 1 / view.c.mult, 'color');\r\n                }\r\n            },\r\n            'opacity': {\r\n                get: function() {\r\n                    return ExpressionValue(view.o, 100);\r\n                }\r\n            },\r\n            'strokeWidth': {\r\n                get: function() {\r\n                    return ExpressionValue(view.w);\r\n                }\r\n            },\r\n            'dash': {\r\n                get: function() {\r\n                    return dashOb;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n        view.w.setGroupProperty(_propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function trimInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        view.s.setGroupProperty(_propertyGroup);\r\n        view.e.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n                return interfaceFunction.end;\r\n            }\r\n            if(val === shape.s.ix){\r\n                return interfaceFunction.start;\r\n            }\r\n            if(val === shape.o.ix){\r\n                return interfaceFunction.offset;\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'start': {\r\n                get: function() {\r\n                    return ExpressionValue(view.s, 1 / view.s.mult);\r\n                }\r\n            },\r\n            'end': {\r\n                get: function() {\r\n                    return ExpressionValue(view.e, 1 / view.e.mult);\r\n                }\r\n            },\r\n            'offset': {\r\n                get: function() {\r\n                    return ExpressionValue(view.o);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function transformInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n        if(view.transform.mProps.sk){\r\n            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n        }\r\n        view.transform.op.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.a.ix === value || value === 'Anchor Point'){\r\n                return interfaceFunction.anchorPoint;\r\n            }\r\n            if(shape.o.ix === value || value === 'Opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n            if(shape.p.ix === value || value === 'Position'){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.s.ix === value || value === 'Scale'){\r\n                return interfaceFunction.scale;\r\n            }\r\n            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n                return interfaceFunction.skew;\r\n            }\r\n            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n                return interfaceFunction.skewAxis;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'opacity': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.o, 1/view.transform.mProps.o.mult);\r\n                }\r\n            },\r\n            'position': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.p);\r\n                }\r\n            },\r\n            'anchorPoint': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.a);\r\n                }\r\n            },\r\n            'scale': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.s, 1 / view.transform.mProps.s.mult);\r\n                }\r\n            },\r\n            'rotation': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.r, 1 / view.transform.mProps.r.mult);\r\n                }\r\n            },\r\n            'skew': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.sk);\r\n                }\r\n            },\r\n            'skewAxis': {\r\n                get: function(){\r\n                    return ExpressionValue(view.transform.mProps.sa);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.ty = 'tr';\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.s.ix === value){\r\n                return interfaceFunction.size;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'size': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.s);\r\n                }\r\n            },\r\n            'position': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.p);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function starInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.or.setGroupProperty(_propertyGroup);\r\n        prop.os.setGroupProperty(_propertyGroup);\r\n        prop.pt.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n        if(shape.ir){\r\n            prop.ir.setGroupProperty(_propertyGroup);\r\n            prop.is.setGroupProperty(_propertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.pt.ix === value){\r\n                return interfaceFunction.points;\r\n            }\r\n            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n                return interfaceFunction.outerRadius;\r\n            }\r\n            if(shape.os.ix === value){\r\n                return interfaceFunction.outerRoundness;\r\n            }\r\n            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n                return interfaceFunction.innerRadius;\r\n            }\r\n            if(shape.is && shape.is.ix === value){\r\n                return interfaceFunction.innerRoundness;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: function() {\r\n                    return ExpressionValue(prop.p);\r\n                }\r\n            },\r\n            'rotation': {\r\n                get: function() {\r\n                    return ExpressionValue(prop.r, 1 / prop.r.mult);\r\n                }\r\n            },\r\n            'points': {\r\n                get: function() {\r\n                    return ExpressionValue(prop.pt);\r\n                }\r\n            },\r\n            'outerRadius': {\r\n                get: function() {\r\n                    return ExpressionValue(prop.or);\r\n                }\r\n            },\r\n            'outerRoundness': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.os);\r\n                }\r\n            },\r\n            'innerRadius': {\r\n                get: function(){\r\n                    if(!prop.ir){\r\n                        return 0;\r\n                    }\r\n                    return ExpressionValue(prop.ir);\r\n                }\r\n            },\r\n            'innerRoundness': {\r\n                get: function(){\r\n                    if(!prop.is){\r\n                        return 0;\r\n                    }\r\n                    return ExpressionValue(prop.is, 1 / prop.is.mult);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function rectInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.roundness;\r\n            }\r\n            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n                return interfaceFunction.size;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.p);\r\n                }\r\n            },\r\n            'roundness': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.r);\r\n                }\r\n            },\r\n            'size': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.s);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.rd.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n                return interfaceFunction.radius;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'radius': {\r\n                get: function() {\r\n                    return ExpressionValue(prop.rd);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.c.setGroupProperty(_propertyGroup);\r\n        prop.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.c.ix === value || 'Copies' === value){\r\n                return interfaceFunction.copies;\r\n            } else if(shape.o.ix === value || 'Offset' === value){\r\n                return interfaceFunction.offset;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'copies': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.c);\r\n                }\r\n            },\r\n            'offset': {\r\n                get: function(){\r\n                    return ExpressionValue(prop.o);\r\n                }\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function pathInterfaceFactory(shape,view,propertyGroup){\r\n        var prop = view.sh;\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        prop.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n                return interfaceFunction.path;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'path': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            'shape': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'ix': { value: shape.ix },\r\n            'mn': { value: shape.mn }\r\n        });\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return function(shapes,view,propertyGroup) {\r\n        var interfaces;\r\n        function _interfaceFunction(value){\r\n            if(typeof value === 'number'){\r\n                return interfaces[value-1];\r\n            } else {\r\n                var i = 0, len = interfaces.length;\r\n                while(i<len){\r\n                    if(interfaces[i]._name === value){\r\n                        return interfaces[i];\r\n                    }\r\n                    i+=1;\r\n                }\r\n            }\r\n        }\r\n        _interfaceFunction.propertyGroup = propertyGroup;\r\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n        return _interfaceFunction;\r\n    };\r\n}());\r\n\nvar TextExpressionInterface = (function(){\r\n\treturn function(elem){\r\n        var _prevValue, _sourceText;\r\n        function _thisLayerFunction(){\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n            get: function(){\r\n                var stringValue = elem.textProperty.currentData.t;\r\n                if(stringValue !== _prevValue) {\r\n                    elem.textProperty.currentData.t = _prevValue;\r\n                    _sourceText = new String(stringValue);\r\n                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n                }\r\n                return _sourceText;\r\n            }\r\n        });\r\n        return _thisLayerFunction;\r\n    };\r\n}());\nvar LayerExpressionInterface = (function (){\r\n    function toWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n        }\r\n        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n    }\r\n    function fromWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n    function fromComp(arr){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n\r\n    function sampleImage() {\r\n        return [1,1,1,1];\r\n    }\r\n\r\n\r\n    return function(elem){\r\n\r\n        var transformInterface;\r\n\r\n        function _registerMaskInterface(maskManager){\r\n            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n        }\r\n        function _registerEffectsInterface(effects){\r\n            _thisLayerFunction.effect = effects;\r\n        }\r\n\r\n        function _thisLayerFunction(name){\r\n            switch(name){\r\n                case \"ADBE Root Vectors Group\":\r\n                case \"Contents\":\r\n                case 2:\r\n                    return _thisLayerFunction.shapeInterface;\r\n                case 1:\r\n                case 6:\r\n                case \"Transform\":\r\n                case \"transform\":\r\n                case \"ADBE Transform Group\":\r\n                    return transformInterface;\r\n                case 4:\r\n                case \"ADBE Effect Parade\":\r\n                    return _thisLayerFunction.effect;\r\n            }\r\n        }\r\n        _thisLayerFunction.toWorld = toWorld;\r\n        _thisLayerFunction.fromWorld = fromWorld;\r\n        _thisLayerFunction.toComp = toWorld;\r\n        _thisLayerFunction.fromComp = fromComp;\r\n        _thisLayerFunction.sampleImage = sampleImage;\r\n        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n        _thisLayerFunction._elem = elem;\r\n        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n        Object.defineProperties(_thisLayerFunction,{\r\n            hasParent: {\r\n                get: function(){\r\n                    return elem.hierarchy.length;\r\n                }\r\n            },\r\n            parent: {\r\n                get: function(){\r\n                    return elem.hierarchy[0].layerInterface;\r\n                }\r\n            },\r\n            rotation: getDescriptor(transformInterface, 'rotation'),\r\n            scale: getDescriptor(transformInterface, 'scale'),\r\n            position: getDescriptor(transformInterface, 'position'),\r\n            opacity: getDescriptor(transformInterface, 'opacity'),\r\n            anchorPoint: anchorPointDescriptor,\r\n            anchor_point: anchorPointDescriptor,\r\n            transform: {\r\n                get: function () {\r\n                    return transformInterface;\r\n                }\r\n            },\r\n            active: {\r\n                get: function(){\r\n                    return elem.isInRange;\r\n                }\r\n            }\r\n        });\r\n\r\n        _thisLayerFunction.startTime = elem.data.st;\r\n        _thisLayerFunction.index = elem.data.ind;\r\n        _thisLayerFunction.source = elem.data.refId;\r\n        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n\r\n        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\n\nvar CompExpressionInterface = (function (){\r\n    return function(comp){\r\n        function _thisLayerFunction(name){\r\n            var i=0, len = comp.layers.length;\r\n            while(i<len){\r\n                if(comp.layers[i].nm === name || comp.layers[i].ind === name){\r\n                    return comp.elements[i].layerInterface;\r\n                }\r\n                i += 1;\r\n            }\r\n            return {active:false};\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"_name\", { value:comp.data.nm });\r\n        _thisLayerFunction.layer = _thisLayerFunction;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.height = comp.globalData.compSize.h;\r\n        _thisLayerFunction.width = comp.globalData.compSize.w;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.frameDuration = 1/comp.globalData.frameRate;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\nvar TransformExpressionInterface = (function (){\r\n    return function(transform){\r\n        function _thisFunction(name){\r\n            switch(name){\r\n                case \"scale\":\r\n                case \"Scale\":\r\n                case \"ADBE Scale\":\r\n                case 6:\r\n                    return _thisFunction.scale;\r\n                case \"rotation\":\r\n                case \"Rotation\":\r\n                case \"ADBE Rotation\":\r\n                case \"ADBE Rotate Z\":\r\n                case 10:\r\n                    return _thisFunction.rotation;\r\n                case \"ADBE Rotate X\":\r\n                    return _thisFunction.xRotation;\r\n                case \"ADBE Rotate Y\":\r\n                    return _thisFunction.yRotation;\r\n                case \"position\":\r\n                case \"Position\":\r\n                case \"ADBE Position\":\r\n                case 2:\r\n                    return _thisFunction.position;\r\n                case 'ADBE Position_0':\r\n                    return _thisFunction.xPosition;\r\n                case 'ADBE Position_1':\r\n                    return _thisFunction.yPosition;\r\n                case 'ADBE Position_2':\r\n                    return _thisFunction.zPosition;\r\n                case \"anchorPoint\":\r\n                case \"AnchorPoint\":\r\n                case \"Anchor Point\":\r\n                case \"ADBE AnchorPoint\":\r\n                case 1:\r\n                    return _thisFunction.anchorPoint;\r\n                case \"opacity\":\r\n                case \"Opacity\":\r\n                case 11:\r\n                    return _thisFunction.opacity;\r\n            }\r\n        }\r\n\r\n        Object.defineProperty(_thisFunction, \"rotation\", {\r\n            get: function(){\r\n                if(transform.r) {\r\n                    return ExpressionValue(transform.r, 1/degToRads);\r\n                } else {\r\n                    return ExpressionValue(transform.rz, 1/degToRads);\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n            get: function(){\r\n                    return ExpressionValue(transform.rx, 1/degToRads);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n            get: function(){\r\n                    return ExpressionValue(transform.ry, 1/degToRads);\r\n            }\r\n        });\r\n        Object.defineProperty(_thisFunction, \"scale\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.s, 100);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"position\", {\r\n            get: function () {\r\n                if(transform.p) {\r\n                    return ExpressionValue(transform.p);\r\n                } else {\r\n                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.px);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.py);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.pz);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.a);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"opacity\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.o, 100);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skew\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.sk);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.sa);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"orientation\", {\r\n            get: function () {\r\n                return ExpressionValue(transform.or);\r\n            }\r\n        });\r\n\r\n        return _thisFunction;\r\n    };\r\n}());\nvar ProjectInterface = (function (){\r\n\r\n    function registerComposition(comp){\r\n        this.compositions.push(comp);\r\n    }\r\n\r\n    return function(){\r\n        function _thisProjectFunction(name){\r\n            var i = 0, len = this.compositions.length;\r\n            while(i<len){\r\n                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n                    if(this.compositions[i].prepareFrame) {\r\n                        this.compositions[i].prepareFrame(this.compositions[i].data.xt ? this.currentFrame : this.compositions[i].renderedFrame);\r\n                    }\r\n                    return this.compositions[i].compInterface;\r\n                }\r\n                i+=1;\r\n            }\r\n        }\r\n\r\n        _thisProjectFunction.compositions = [];\r\n        _thisProjectFunction.currentFrame = 0;\r\n\r\n        _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n\r\n\r\n        return _thisProjectFunction;\r\n    };\r\n}());\nvar EffectsExpressionInterface = (function (){\r\n    var ob = {\r\n        createEffectsInterface: createEffectsInterface\r\n    };\r\n\r\n    function createEffectsInterface(elem, propertyGroup){\r\n        if(elem.effectsManager){\r\n\r\n            var effectElements = [];\r\n            var effectsData = elem.data.ef;\r\n            var i, len = elem.effectsManager.effectElements.length;\r\n            for(i=0;i<len;i+=1){\r\n                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n            }\r\n\r\n            return function(name){\r\n                var effects = elem.data.ef || [], i = 0, len = effects.length;\r\n                while(i<len) {\r\n                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                        return effectElements[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    function createGroupInterface(data,elements, propertyGroup, elem){\r\n        var effectElements = [];\r\n        var i, len = data.ef.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(data.ef[i].ty === 5){\r\n                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n            } else {\r\n                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n            }\r\n        }\r\n\r\n        function _propertyGroup(val) {\r\n            if(val === 1){\r\n               return groupInterface;\r\n            } else{\r\n               return propertyGroup(val-1);\r\n            }\r\n        }\r\n\r\n        var groupInterface = function(name){\r\n            var effects = data.ef, i = 0, len = effects.length;\r\n            while(i<len) {\r\n                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                    if(effects[i].ty === 5){\r\n                        return effectElements[i];\r\n                    } else {\r\n                        return effectElements[i]();\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return effectElements[0]();\r\n        };\r\n\r\n        groupInterface.propertyGroup = _propertyGroup;\r\n\r\n        if(data.mn === 'ADBE Color Control'){\r\n            Object.defineProperty(groupInterface, 'color', {\r\n                get: function(){\r\n                    return effectElements[0]();\r\n                }\r\n            });\r\n        }\r\n        Object.defineProperty(groupInterface, 'numProperties', {\r\n            get: function(){\r\n                return data.np;\r\n            }\r\n        });\r\n        groupInterface.active = data.en !== 0;\r\n        return groupInterface;\r\n    }\r\n\r\n    function createValueInterface(element, type, elem, propertyGroup){\r\n        function interfaceFunction(){\r\n            if(type === 10){\r\n                return elem.comp.compInterface(element.p.v);\r\n            }\r\n            return ExpressionValue(element.p);\r\n        }\r\n\r\n        if(element.p.setGroupProperty) {\r\n            element.p.setGroupProperty(propertyGroup);\r\n        }\r\n\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return ob;\r\n\r\n}());\nvar MaskManagerInterface = (function(){\r\n\r\n\tfunction MaskInterface(mask, data){\r\n\t\tthis._mask = mask;\r\n\t\tthis._data = data;\r\n\t}\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n        get: function(){\r\n                if(this._mask.prop.k){\r\n                    this._mask.prop.getValue();\r\n                }\r\n                return this._mask.prop;\r\n            }\r\n        });\r\n\r\n\tvar MaskManager = function(maskManager, elem){\r\n\t\tvar _maskManager = maskManager;\r\n\t\tvar _elem = elem;\r\n\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\tvar i, len = maskManager.viewData.length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t}\r\n\r\n\t\tvar maskFunction = function(name){\r\n\t\t\ti = 0;\r\n\t\t    while(i<len){\r\n\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t            return _masksInterfaces[i];\r\n\t\t        }\r\n\t\t        i += 1;\r\n\t\t    }\r\n\t\t};\r\n\t\treturn maskFunction;\r\n\t};\r\n\treturn MaskManager;\r\n}());\r\n\nvar ExpressionValue = (function() {\r\n\treturn function(elementProp, mult, type) {\r\n        mult = mult || 1;\r\n        var expressionValue, arrayValue;\r\n\r\n\t\tif (elementProp.k) {\r\n            elementProp.getValue();\r\n        }\r\n        var i, len, arrValue, val;\r\n        if (type) {\r\n        \tif(type === 'color') {\r\n        \t\tlen = 4;\r\n                expressionValue = createTypedArray('float32', len);\r\n                arrValue = createTypedArray('float32', len);\r\n\t\t        for (i = 0; i < len; i += 1) {\r\n\t\t            expressionValue[i] = arrValue[i] = (i < 3) ? elementProp.v[i] * mult : 1;\r\n\t\t        }\r\n\t        \texpressionValue.value = arrValue;\r\n        \t}\r\n        } else if (elementProp.propType === 'unidimensional'){\r\n            val = elementProp.v * mult;\r\n            expressionValue = new Number(val);\r\n            expressionValue.value = val;\r\n        } else {\r\n        \tlen = elementProp.pv.length;\r\n            expressionValue = createTypedArray('float32', len);\r\n            arrValue = createTypedArray('float32', len);\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            expressionValue[i] = arrValue[i] = elementProp.v[i] * mult;\r\n\t        }\r\n\t        expressionValue.value = arrValue;\r\n        }\r\n        \r\n        expressionValue.numKeys = elementProp.keyframes ? elementProp.keyframes.length : 0;\r\n        expressionValue.key = function(pos) {\r\n            if (!expressionValue.numKeys) {\r\n                return 0;\r\n            } else {\r\n                return elementProp.keyframes[pos-1].t;\r\n            }\r\n        };\r\n        expressionValue.valueAtTime = elementProp.getValueAtTime;\r\n        expressionValue.speedAtTime = elementProp.getSpeedAtTime;\r\n        expressionValue.velocityAtTime = elementProp.getVelocityAtTime;\r\n        expressionValue.propertyGroup = elementProp.propertyGroup;\r\n        return expressionValue;\r\n\t};\r\n}());\nfunction SliderEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction AngleEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction ColorEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction PointEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction LayerIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction MaskIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction CheckboxEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction NoValueEffect(){\r\n    this.p = {};\r\n}\nfunction EffectsManager(data,element){\r\n    var effects = data.ef || [];\r\n    this.effectElements = [];\r\n    var i,len = effects.length;\r\n    var effectItem;\r\n    for(i=0;i<len;i++) {\r\n        effectItem = new GroupEffect(effects[i],element);\r\n        this.effectElements.push(effectItem);\r\n    }\r\n}\r\n\r\nfunction GroupEffect(data,element){\r\n    this.init(data,element);\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\r\nGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\r\nGroupEffect.prototype.init = function(data,element){\r\n    this.data = data;\r\n    this.effectElements = [];\r\n    this.initDynamicPropertyContainer(element);\r\n    var i, len = this.data.ef.length;\r\n    var eff, effects = this.data.ef;\r\n    for(i=0;i<len;i+=1){\r\n        eff = null;\r\n        switch(effects[i].ty){\r\n            case 0:\r\n                eff = new SliderEffect(effects[i],element,this);\r\n                break;\r\n            case 1:\r\n                eff = new AngleEffect(effects[i],element,this);\r\n                break;\r\n            case 2:\r\n                eff = new ColorEffect(effects[i],element,this);\r\n                break;\r\n            case 3:\r\n                eff = new PointEffect(effects[i],element,this);\r\n                break;\r\n            case 4:\r\n            case 7:\r\n                eff = new CheckboxEffect(effects[i],element,this);\r\n                break;\r\n            case 10:\r\n                eff = new LayerIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 11:\r\n                eff = new MaskIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 5:\r\n                eff = new EffectsManager(effects[i],element,this);\r\n                break;\r\n            //case 6:\r\n            default:\r\n                eff = new NoValueEffect(effects[i],element,this);\r\n                break;\r\n        }\r\n        if(eff) {\r\n            this.effectElements.push(eff);\r\n        }\r\n    }\r\n};\r\n    var lottiejs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    /*function start() {\r\n        animationManager.start();\r\n    }*/\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    lottiejs.play = play;\r\n    lottiejs.pause = pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = togglePause;\r\n    lottiejs.setSpeed = setSpeed;\r\n    lottiejs.setDirection = setDirection;\r\n    lottiejs.stop = stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = goToAndStop;\r\n    lottiejs.destroy = destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.1.13';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lottie-web/build/player/lottie.js\n// module id = 322\n// module chunks = 35783957827783","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 4\n// module chunks = 35783957827783 162898551421021 231608221292675","module.exports = {\"v\":\"4.9.0\",\"fr\":30,\"ip\":0,\"op\":38,\"w\":315,\"h\":280,\"nm\":\"new\",\"ddd\":0,\"assets\":[],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"bodyband Konturen\",\"parent\":3,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[157.5,129,0]},\"a\":{\"a\":0,\"k\":[157.5,140,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":9,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,52],[14.5,52],[14.5,52.25],[-14.5,52.25]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-41],[14.5,-41],[14.5,52.25],[-14.5,52.25]],\"c\":true}]},{\"t\":19.111328125}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.871,0.702,0.271,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[160.5,184],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"topband Konturen\",\"parent\":4,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[157.5,140,0]},\"a\":{\"a\":0,\"k\":[157.5,140,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":16.777,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-14.5],[14.5,-14.5],[15.036,-14.207],[-13.964,-14.207]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-14.5,-14.5],[14.5,-14.5],[14.5,14.5],[-14.5,14.5]],\"c\":true}]},{\"t\":23}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.831,0.396,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[160.5,128.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"body Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0],\"e\":[-13]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5.432,\"s\":[-13],\"e\":[17.85]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11.111,\"s\":[17.85],\"e\":[0]},{\"t\":16.2958984375}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":0,\"s\":[162.125,247.599,0],\"e\":[162.125,145.599,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":8.148,\"s\":[162.125,145.599,0],\"e\":[162.125,236.099,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":16.2958984375}]},\"a\":{\"a\":0,\"k\":[162.125,225.099,0]},\"s\":{\"a\":0,\"k\":[100,100,100]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":0,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[-3.228,0],[0,0],[-2.75,0.062]],\"o\":[[0,0],[0,0],[4.75,-0.188],[0,0],[3.228,0],[0,0]],\"v\":[[56.25,46.5],[-54.75,46.5],[-55,46.688],[-49.658,46.5],[49.658,46.5],[56,46.688]],\"c\":true}],\"e\":[{\"i\":[[0,0],[0,0],[0,0],[-3.228,0],[0,0],[0,3.21]],\"o\":[[0,0],[0,0],[0,3.21],[0,0],[3.228,0],[0,0]],\"v\":[[55.5,-46.5],[-55.5,-46.5],[-55.5,40.688],[-49.658,46.5],[49.658,46.5],[55.5,40.688]],\"c\":true}]},{\"t\":3.7041015625}]},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.008,0.588,0.847,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161.5,178.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"top Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3.704,\"s\":[0],\"e\":[100]},{\"t\":4.4443359375}]},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8.148,\"s\":[10],\"e\":[-23]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":14.074,\"s\":[-23],\"e\":[0]},{\"t\":20}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.937,\"y\":0.946},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p937_0p946_0p167_0p167\",\"t\":0,\"s\":[160,177.5,0],\"e\":[150,34.5,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.097,\"y\":0},\"o\":{\"x\":0.084,\"y\":0.101},\"n\":\"0p097_0_0p084_0p101\",\"t\":10.37,\"s\":[150,34.5,0],\"e\":[161,128.5,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":20}]},\"a\":{\"a\":0,\"k\":[161,128.5,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":0,\"s\":[0,0,100],\"e\":[58.621,58.621,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":10.37,\"s\":[58.621,58.621,100],\"e\":[100,100,100]},{\"t\":20}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.219,0],[0,0],[0,-3.204],[0,0],[-3.219,0],[0,0],[0,3.204],[0,0]],\"o\":[[0,0],[-3.219,0],[0,0],[0,3.204],[0,0],[3.219,0],[0,0],[0,-3.204]],\"v\":[[61.174,-14.5],[-61.174,-14.5],[-67,-8.7],[-67,8.7],[-61.174,14.5],[61.174,14.5],[67,8.7],[67,-8.7]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161,128.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"schleife/new Konturen\",\"parent\":4,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[161,115,0]},\"a\":{\"a\":0,\"k\":[161,115,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.029,0.029,0.833],\"y\":[1.656,1.656,-15.667]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p029_1p656_0p167_0p167\",\"0p029_1p656_0p167_0p167\",\"0p833_-15p667_0p167_16p667\"],\"t\":23,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":34}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[8.059,0],[1.667,-0.428],[-0.598,-1.849],[-1.278,0],[0,-4.797],[4.835,0],[0,0],[-8.693,2.139],[0.541,1.87],[3.006,-6.366],[4.932,3.716],[1.157,-1.595],[-1.586,-3.998],[0,0],[0,4.796],[-4.834,0],[-2.606,-1.934],[-1.272,1.478],[5.256,0],[0,-7.995],[-8.058,0],[0,0],[0,0],[0,7.995]],\"o\":[[-1.91,0],[0.541,1.87],[1.145,-0.282],[4.835,0],[0,4.796],[0,0],[2.097,-5.318],[-0.598,-1.849],[-9.385,2.413],[-2.071,-4.386],[-1.272,1.478],[5.152,3.823],[0,0],[-4.834,0],[0,-4.797],[3.679,0],[1.157,-1.595],[-3.498,-2.637],[-8.058,0],[0,7.995],[0,0],[0,0],[8.059,0],[0,-7.995]],\"v\":[[23.385,-14.5],[18.024,-13.831],[19.756,-8.259],[23.385,-8.7],[32.155,0],[23.385,8.7],[4.075,8.7],[19.756,-8.259],[18.024,-13.831],[0,3.422],[-10.322,-10.065],[-13.987,-5.478],[-4.083,8.7],[-23.385,8.7],[-32.154,0],[-23.385,-8.7],[-13.987,-5.478],[-10.322,-10.065],[-23.385,-14.5],[-38,0],[-23.385,14.5],[0,14.5],[23.385,14.5],[38,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.831,0.396,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[161,100.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"shadow Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":0,\"k\":0},\"p\":{\"a\":0,\"k\":[162,236,0]},\"a\":{\"a\":0,\"k\":[162,225,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.115,0.115,0.833],\"y\":[1,1,-5.19]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p115_1_0p167_0p167\",\"0p115_1_0p167_0p167\",\"0p833_-5p19_0p167_16p667\"],\"t\":0,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":13}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-53.02,0],[0,-3.313],[53.02,0],[0,3.313]],\"o\":[[53.02,0],[0,3.313],[-53.02,0],[0,-3.313]],\"v\":[[0,-6],[96,0],[0,6],[-96,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945,0.945,0.945,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[162,225],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":4,\"nm\":\"Ebene 12 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":9,\"s\":[262],\"e\":[0]},{\"t\":29}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.359},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p359_0p167_0p167\",\"t\":9,\"s\":[157.5,140,0],\"e\":[95.449,44.997,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":29}]},\"a\":{\"a\":0,\"k\":[95.449,44.997,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":9,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":29}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-2.18,-3.777],[2.178,-3.775],[4.359,0.001],[2.181,3.777],[-2.18,3.775],[-4.359,-0.001]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[95.449,44.997],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Ebene 13 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[-63],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.564},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p564_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[248.067,112.75,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[248.067,112.75,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-1.53,-6.63],[4.974,-4.639],[6.505,1.99],[1.532,6.63],[-4.972,4.64],[-6.505,-1.989]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.012,0.663,0.957,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[248.067,112.75],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Ebene 14 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[-200],\"e\":[0]},{\"t\":20}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.477},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p477_0p167_0p167\",\"t\":0,\"s\":[157.5,140,0],\"e\":[268.728,57.196,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":20}]},\"a\":{\"a\":0,\"k\":[120.728,247.196,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":0,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":20}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[-2.376,-3.394],[2.799,1.018],[-2.799,3.394]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.149,0.784,0.333,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[120.728,247.196],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":10,\"ty\":4,\"nm\":\"Ebene 15 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8,\"s\":[134],\"e\":[0]},{\"t\":28}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.547},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p547_0p167_0p167\",\"t\":8,\"s\":[157.5,140,0],\"e\":[61.63,139.445,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":28}]},\"a\":{\"a\":0,\"k\":[61.63,139.445,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":8,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":28}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[4.37,-5.433],[4.286,5.433],[-4.37,1.022]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.149,0.784,0.333,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[61.63,139.445],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":11,\"ty\":4,\"nm\":\"Ebene 16 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5,\"s\":[74],\"e\":[0]},{\"t\":25}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.387},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p387_0p167_0p167\",\"t\":5,\"s\":[157.5,140,0],\"e\":[183.561,32.661,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":25}]},\"a\":{\"a\":0,\"k\":[183.561,32.661,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":5,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":25}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-2.146,0],[0,-2.147],[2.146,0],[0,2.147]],\"o\":[[2.146,0],[0,2.147],[-2.146,0],[0,-2.147]],\"v\":[[-0.001,-3.888],[3.886,0],[-0.001,3.888],[-3.887,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039,0.314,0.392,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[183.561,32.661],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":12,\"ty\":4,\"nm\":\"Ebene 17 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":12,\"s\":[29],\"e\":[0]},{\"t\":32}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.463},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p463_0p167_0p167\",\"t\":12,\"s\":[157.5,140,0],\"e\":[44.65,36.558,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":32}]},\"a\":{\"a\":0,\"k\":[214.65,244.558,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":12,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":32}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-3.22,0],[0,-3.222],[3.22,0],[0,3.221]],\"o\":[[3.22,0],[0,3.221],[-3.22,0],[0,-3.222]],\"v\":[[0,-5.832],[5.829,0],[0,5.832],[-5.829,0]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039,0.314,0.392,1]},\"o\":{\"a\":0,\"k\":100},\"w\":{\"a\":0,\"k\":1},\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Kontur 1\",\"mn\":\"ADBE Vector Graphic - Stroke\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[214.65,244.558],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":13,\"ty\":4,\"nm\":\"Ebene 18 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[168],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.243},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p243_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[294.925,112.226,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[62.925,234.226,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.209,0.131],[0,0],[0,0],[0.174,-0.142],[0,0],[0,0],[-0.093,-0.228],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.236],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.012,-0.223],[0,0],[0,0],[-0.238,-0.069],[0,0],[0,0],[-0.135,0.201],[0,0],[0,0],[0.155,0.19],[0,0],[0,0],[0.232,-0.083]],\"v\":[[2.206,-0.077],[1.1,-0.771],[1.036,-2.051],[0.544,-2.269],[-0.45,-1.461],[-1.706,-1.819],[-2.062,-1.431],[-1.568,-0.237],[-2.281,0.82],[-2.008,1.278],[-0.711,1.208],[0.105,2.221],[0.628,2.116],[0.938,0.878],[2.156,0.446]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[62.916,234.223],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":14,\"ty\":4,\"nm\":\"Ebene 19 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":8,\"s\":[-209],\"e\":[0]},{\"t\":28}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.25},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p25_0p167_0p167\",\"t\":8,\"s\":[157.5,140,0],\"e\":[35.721,103.978,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":28}]},\"a\":{\"a\":0,\"k\":[35.721,103.978,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":8,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":28}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.209,0.131],[0,0],[0,0],[0.174,-0.141],[0,0],[0,0],[-0.094,-0.227],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.237],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.012,-0.224],[0,0],[0,0],[-0.238,-0.068],[0,0],[0,0],[-0.135,0.2],[0,0],[0,0],[0.155,0.191],[0,0],[0,0],[0.231,-0.083]],\"v\":[[2.206,-0.078],[1.1,-0.771],[1.036,-2.051],[0.544,-2.27],[-0.45,-1.461],[-1.706,-1.82],[-2.062,-1.432],[-1.568,-0.238],[-2.281,0.82],[-2.008,1.278],[-0.711,1.207],[0.105,2.22],[0.628,2.115],[0.938,0.878],[2.156,0.446]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[35.712,103.975],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":15,\"ty\":4,\"nm\":\"Ebene 20 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":7,\"s\":[275],\"e\":[0]},{\"t\":27}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.09},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p09_0p167_0p167\",\"t\":7,\"s\":[157.5,140,0],\"e\":[261.12,26.218,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":27}]},\"a\":{\"a\":0,\"k\":[261.12,26.218,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":7,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":27}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.21,0.131],[0,0],[0,0],[0.174,-0.141],[0,0],[0,0],[-0.093,-0.228],[0,0],[0,0],[-0.247,0.014],[0,0],[0,0],[-0.059,0.236],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.011,-0.223],[0,0],[0,0],[-0.238,-0.068],[0,0],[0,0],[-0.135,0.2],[0,0],[0,0],[0.155,0.19],[0,0],[0,0],[0.232,-0.082]],\"v\":[[2.206,-0.078],[1.099,-0.771],[1.034,-2.052],[0.543,-2.27],[-0.45,-1.461],[-1.707,-1.82],[-2.062,-1.432],[-1.568,-0.238],[-2.281,0.82],[-2.009,1.278],[-0.711,1.207],[0.105,2.22],[0.628,2.115],[0.937,0.878],[2.155,0.445]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[261.111,26.215],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":16,\"ty\":4,\"nm\":\"Ebene 21 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[132.9],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.326},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p326_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[268.337,196.938,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[252.337,213.938,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.411,0.258],[0,0],[0,0],[0.34,-0.276],[0,0],[0,0],[-0.184,-0.446],[0,0],[0,0],[-0.483,0.027],[0,0],[0,0],[-0.116,0.463],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.022,-0.439],[0,0],[0,0],[-0.466,-0.133],[0,0],[0,0],[-0.265,0.392],[0,0],[0,0],[0.302,0.373],[0,0],[0,0],[0.454,-0.162]],\"v\":[[4.322,-0.152],[2.152,-1.51],[2.027,-4.017],[1.065,-4.447],[-0.882,-2.861],[-3.344,-3.565],[-4.038,-2.804],[-3.072,-0.465],[-4.468,1.607],[-3.935,2.505],[-1.392,2.366],[0.207,4.35],[1.231,4.145],[1.837,1.72],[4.222,0.874]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[252.32,213.932],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":17,\"ty\":4,\"nm\":\"Ebene 22 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":13,\"s\":[-266],\"e\":[0]},{\"t\":33}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.337},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p337_0p167_0p167\",\"t\":13,\"s\":[157.5,140,0],\"e\":[133.395,26.515,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":33}]},\"a\":{\"a\":0,\"k\":[133.395,26.515,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":13,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":33}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.411,0.258],[0,0],[0,0],[0.34,-0.277],[0,0],[0,0],[-0.183,-0.446],[0,0],[0,0],[-0.484,0.026],[0,0],[0,0],[-0.116,0.462],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.022,-0.438],[0,0],[0,0],[-0.466,-0.133],[0,0],[0,0],[-0.264,0.392],[0,0],[0,0],[0.302,0.373],[0,0],[0,0],[0.454,-0.162]],\"v\":[[4.322,-0.152],[2.152,-1.511],[2.027,-4.018],[1.065,-4.446],[-0.882,-2.861],[-3.344,-3.565],[-4.039,-2.804],[-3.072,-0.466],[-4.469,1.607],[-3.935,2.505],[-1.392,2.366],[0.207,4.35],[1.231,4.145],[1.837,1.72],[4.222,0.874]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[133.378,26.508],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":18,\"ty\":4,\"nm\":\"Ebene 23 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5,\"s\":[399],\"e\":[0]},{\"t\":25}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.478},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p478_0p167_0p167\",\"t\":5,\"s\":[157.5,140,0],\"e\":[257.258,159.497,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":25}]},\"a\":{\"a\":0,\"k\":[257.258,159.497,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":5,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":25}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.721,-0.604],[0,0],[0,0],[-0.306,-0.794],[0,0],[0,0],[-0.932,0.071],[0,0],[0,0],[-0.241,0.908],[0,0],[0,0],[0.783,0.491],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.821,-0.221],[0,0],[0,0],[-0.524,0.78],[0,0],[0,0],[0.566,0.723],[0,0],[0,0],[0.869,-0.333],[0,0],[0,0],[-0.027,-0.935]],\"v\":[[2.281,-8.697],[-1.528,-5.509],[-6.23,-6.781],[-7.598,-5.261],[-5.84,-0.719],[-8.615,3.403],[-7.627,5.141],[-2.732,4.758],[0.255,8.578],[2.232,8.133],[3.5,3.356],[8.121,1.595],[8.357,-0.417],[4.245,-2.989],[4.113,-7.897]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[257.231,159.483],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":19,\"ty\":4,\"nm\":\"Ebene 24 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11,\"s\":[-212],\"e\":[0]},{\"t\":31}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.748},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p748_0p167_0p167\",\"t\":11,\"s\":[157.5,140,0],\"e\":[97.064,84.204,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":31}]},\"a\":{\"a\":0,\"k\":[97.064,84.204,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":11,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":31}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.675,-0.565],[0,0],[0,0],[-0.287,-0.743],[0,0],[0,0],[-0.872,0.067],[0,0],[0,0],[-0.226,0.849],[0,0],[0,0],[0.734,0.459],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.77,-0.208],[0,0],[0,0],[-0.491,0.73],[0,0],[0,0],[0.53,0.677],[0,0],[0,0],[0.814,-0.312],[0,0],[0,0],[-0.026,-0.875]],\"v\":[[2.135,-8.142],[-1.43,-5.157],[-5.831,-6.348],[-7.113,-4.926],[-5.467,-0.674],[-8.064,3.186],[-7.141,4.812],[-2.557,4.454],[0.239,8.029],[2.09,7.613],[3.277,3.141],[7.602,1.493],[7.822,-0.391],[3.974,-2.799],[3.851,-7.393]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[97.039,84.191],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":20,\"ty\":4,\"nm\":\"Ebene 25 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":3,\"s\":[-256],\"e\":[0]},{\"t\":23}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.718},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p718_0p167_0p167\",\"t\":3,\"s\":[157.5,140,0],\"e\":[78.559,168.874,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":23}]},\"a\":{\"a\":0,\"k\":[78.559,168.874,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":3,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":23}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.516,-0.432],[0,0],[0,0],[-0.219,-0.569],[0,0],[0,0],[-0.668,0.051],[0,0],[0,0],[-0.173,0.65],[0,0],[0,0],[0.562,0.351],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.588,-0.159],[0,0],[0,0],[-0.376,0.559],[0,0],[0,0],[0.405,0.518],[0,0],[0,0],[0.623,-0.239],[0,0],[0,0],[-0.02,-0.669]],\"v\":[[1.633,-6.229],[-1.096,-3.945],[-4.463,-4.856],[-5.442,-3.768],[-4.183,-0.516],[-6.17,2.436],[-5.463,3.681],[-1.958,3.407],[0.182,6.143],[1.598,5.824],[2.507,2.403],[5.814,1.142],[5.984,-0.299],[3.04,-2.141],[2.945,-5.656]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[78.54,168.865],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":21,\"ty\":4,\"nm\":\"Ebene 26 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":17,\"s\":[50],\"e\":[18]},{\"t\":37}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.897},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p897_0p167_0p167\",\"t\":17,\"s\":[157.5,140,0],\"e\":[155.771,214.44,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":37}]},\"a\":{\"a\":0,\"k\":[155.771,214.44,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.008,1.008,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,15.952]},\"n\":[\"0p042_1p008_0p167_0p167\",\"0p042_1p008_0p167_0p167\",\"0p833_-26p778_0p167_15p952\"],\"t\":17,\"s\":[0,0,100],\"e\":[67,67,100]},{\"t\":37}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[1.312,-0.183],[0,0],[0,0],[0.227,-1.177],[0,0],[0,0],[-1.168,-0.61],[0,0],[0,0],[-0.967,0.904],[0,0],[0,0],[0.57,1.171],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.816,-0.879],[0,0],[0,0],[-1.21,0.541],[0,0],[0,0],[0.137,1.287],[0,0],[0,0],[1.289,0.251],[0,0],[0,0],[0.665,-1.137]],\"v\":[[10.542,-8.02],[3.609,-7.053],[-1.06,-12.084],[-3.829,-11.291],[-5.121,-4.55],[-11.514,-1.696],[-11.632,1.119],[-5.496,4.318],[-4.779,11.114],[-2.084,12.058],[2.999,7.295],[9.835,8.642],[11.62,6.414],[8.627,0.269],[12.136,-5.695]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[155.828,214.455],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":22,\"ty\":4,\"nm\":\"Ebene 27 Konturen\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":11,\"s\":[-239],\"e\":[0]},{\"t\":31}]},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0,\"y\":0.5},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0_0p5_0p167_0p167\",\"t\":11,\"s\":[157.5,140,0],\"e\":[219.606,61.933,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":31}]},\"a\":{\"a\":0,\"k\":[219.606,61.933,0]},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.042,0.042,0.833],\"y\":[1.006,1.006,-26.778]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,16.667]},\"n\":[\"0p042_1p006_0p167_0p167\",\"0p042_1p006_0p167_0p167\",\"0p833_-26p778_0p167_16p667\"],\"t\":11,\"s\":[0,0,100],\"e\":[100,100,100]},{\"t\":31}]}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.946,-0.131],[0,0],[0,0],[0.163,-0.849],[0,0],[0,0],[-0.842,-0.44],[0,0],[0,0],[-0.697,0.652],[0,0],[0,0],[0.411,0.845],[0,0],[0,0]],\"o\":[[0,0],[0,0],[-0.588,-0.633],[0,0],[0,0],[-0.872,0.39],[0,0],[0,0],[0.099,0.928],[0,0],[0,0],[0.929,0.181],[0,0],[0,0],[0.479,-0.819]],\"v\":[[7.601,-5.783],[2.602,-5.086],[-0.764,-8.713],[-2.76,-8.141],[-3.693,-3.281],[-8.301,-1.223],[-8.387,0.807],[-3.962,3.114],[-3.445,8.013],[-1.503,8.694],[2.163,5.259],[7.09,6.23],[8.378,4.624],[6.219,0.195],[8.749,-4.107]],\"c\":true}},\"nm\":\"Pfad 1\",\"mn\":\"ADBE Vector Shape - Group\"},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,0.729,0.031,1]},\"o\":{\"a\":0,\"k\":100},\"r\":1,\"nm\":\"Fläche 1\",\"mn\":\"ADBE Vector Graphic - Fill\"},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[219.647,61.944],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transformieren\"}],\"nm\":\"Gruppe 1\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\"}],\"ip\":0,\"op\":150,\"st\":0,\"bm\":0}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/data/animation.json\n// module id = 321\n// module chunks = 35783957827783","import React from 'react'\nimport Link from 'gatsby-link'\n\nclass IndexPage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {show: false}\n  }\n\n  componentDidMount() {\n    this._lottie = require('lottie-web')\n  }\n\n  componentDidUpdate() {\n    if (this._el) {\n      this._animation = this._lottie.loadAnimation({\n        container: this._el,\n        renderer: 'svg',\n        animationData: require('../data/animation.json'),\n      })\n    }\n  }\n\n  _click = () => {\n    this.setState({show: true})\n\n    setTimeout(() => this.setState({show: false}), 1500)\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          <span\n            style={{\n              fontWeight: 'bold',\n              color: 'purple',\n              cursor: 'pointer',\n            }}\n            onClick={this._click}>\n            Click me\n          </span>\n          {' to see miracle'}\n        </p>\n        <p>Now go build something great.</p>\n        {this.state.show && (\n          <div\n            id=\"animation\"\n            ref={(el) => (this._el = el)}\n            style={{\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              top: 0,\n              left: 0,\n            }}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default IndexPage\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/index.js"],"sourceRoot":""}